###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       21/May/2019  17:01:28
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\GNSS\Software\rJ105\USBStack\SRC\usbd_core_cdc.c
#    Command line =  
#        C:\GNSS\Software\rJ105\USBStack\SRC\usbd_core_cdc.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_B -lCN
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        -lA
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List\usbd_core_cdc.lst
#    Object file  =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj\usbd_core_cdc.o
#
###############################################################################

C:\GNSS\Software\rJ105\USBStack\SRC\usbd_core_cdc.c
      1          /* CMSIS-DAP Interface Firmware
      2           * Copyright (c) 2009-2013 ARM Limited
      3           *
      4           * Licensed under the Apache License, Version 2.0 (the "License");
      5           * you may not use this file except in compliance with the License.
      6           * You may obtain a copy of the License at
      7           *
      8           *     http://www.apache.org/licenses/LICENSE-2.0
      9           *
     10           * Unless required by applicable law or agreed to in writing, software
     11           * distributed under the License is distributed on an "AS IS" BASIS,
     12           * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     13           * See the License for the specific language governing permissions and
     14           * limitations under the License.
     15           */
     16          #include <RTL.h>
     17          #include <rl_usb.h>
     18          #include <string.h>
     19          #include "usb_for_lib.h"
     20          
     21          
     22          /*
     23           *  USB Device Endpoint 0 Event Callback - CDC specific handling (Setup Request To Interface)
     24           *    Parameters:      none
     25           *    Return Value:    TRUE - Setup class request ok, FALSE - Setup class request not supported
     26           */
     27          

   \                                 In section .text, align 4
     28          __weak BOOL USBD_EndPoint0_Setup_CDC_ReqToIF (void) {
   \                     USBD_EndPoint0_Setup_CDC_ReqToIF: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     29            if ((USBD_SetupPacket.wIndexL == usbd_cdc_acm_cif_num)  || /* IF number correct? */
     30                (USBD_SetupPacket.wIndexL == usbd_cdc_acm_dif_num)) {
   \   00000002   0x4846             LDR      R0,??USBD_EndPoint0_Setup_CDC_ReqToIF_0
   \   00000004   0x7900             LDRB     R0,[R0, #+4]
   \   00000006   0x4946             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0x4
   \   00000008   0x7809             LDRB     R1,[R1, #+0]
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xD005             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_1
   \   0000000E   0x4843             LDR      R0,??USBD_EndPoint0_Setup_CDC_ReqToIF_0
   \   00000010   0x7900             LDRB     R0,[R0, #+4]
   \   00000012   0x4944             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0x8
   \   00000014   0x7809             LDRB     R1,[R1, #+0]
   \   00000016   0x4288             CMP      R0,R1
   \   00000018   0xD17D             BNE      ??USBD_EndPoint0_Setup_CDC_ReqToIF_2
     31              switch (USBD_SetupPacket.bRequest) {
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_1: (+1)
   \   0000001A   0x4840             LDR      R0,??USBD_EndPoint0_Setup_CDC_ReqToIF_0
   \   0000001C   0x7840             LDRB     R0,[R0, #+1]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD010             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_3
   \   00000022   0x2801             CMP      R0,#+1
   \   00000024   0xD013             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_4
   \   00000026   0x2802             CMP      R0,#+2
   \   00000028   0xD01D             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_5
   \   0000002A   0x2803             CMP      R0,#+3
   \   0000002C   0xD020             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_6
   \   0000002E   0x2804             CMP      R0,#+4
   \   00000030   0xD031             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_7
   \   00000032   0x2820             CMP      R0,#+32
   \   00000034   0xD03F             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_8
   \   00000036   0x2821             CMP      R0,#+33
   \   00000038   0xD042             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_9
   \   0000003A   0x2822             CMP      R0,#+34
   \   0000003C   0xD04C             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_10
   \   0000003E   0x2823             CMP      R0,#+35
   \   00000040   0xD05A             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_11
   \   00000042   0xE068             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_2
     32                case CDC_SEND_ENCAPSULATED_COMMAND:
     33                  USBD_EP0Data.pData = USBD_EP0Buf;                    /* data to be received, see USBD_EVT_OUT */
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_3: (+1)
   \   00000044   0x4838             LDR      R0,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0xC
   \   00000046   0x4939             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0x10
   \   00000048   0x6008             STR      R0,[R1, #+0]
     34                  return (__TRUE);
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0xE064             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_12
     35                case CDC_GET_ENCAPSULATED_RESPONSE:
     36                  if (USBD_CDC_ACM_GetEncapsulatedResponse()) {
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_4: (+1)
   \   0000004E   0x.... 0x....      BL       USBD_CDC_ACM_GetEncapsulatedResponse
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD006             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_13
     37                    USBD_EP0Data.pData = USBD_EP0Buf;                  /* point to data to be sent */
   \   00000056   0x4834             LDR      R0,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0xC
   \   00000058   0x4934             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0x10
   \   0000005A   0x6008             STR      R0,[R1, #+0]
     38                    USBD_DataInStage();                                /* send requested data */
   \   0000005C   0x.... 0x....      BL       USBD_DataInStage
     39                    return (__TRUE);
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0xE059             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_12
     40                  }
     41                  break;
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_13: (+1)
   \   00000064   0xE057             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_2
     42                case CDC_SET_COMM_FEATURE:
     43                  USBD_EP0Data.pData = USBD_EP0Buf;                    /* data to be received, see USBD_EVT_OUT */
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_5: (+1)
   \   00000066   0x4830             LDR      R0,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0xC
   \   00000068   0x4930             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0x10
   \   0000006A   0x6008             STR      R0,[R1, #+0]
     44                  return (__TRUE);
   \   0000006C   0x2001             MOVS     R0,#+1
   \   0000006E   0xE053             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_12
     45                case CDC_GET_COMM_FEATURE:
     46                  if (USBD_CDC_ACM_GetCommFeature(USBD_SetupPacket.wValue)) {
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_6: (+1)
   \   00000070   0x492A             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0
   \   00000072   0x7888             LDRB     R0,[R1, #+2]
   \   00000074   0x78CA             LDRB     R2,[R1, #+3]
   \   00000076   0x0612             LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+16
   \   00000078   0x0C12             LSRS     R2,R2,#+16
   \   0000007A   0x4310             ORRS     R0,R0,R2
   \   0000007C   0xB280             UXTH     R0,R0
   \   0000007E   0x.... 0x....      BL       USBD_CDC_ACM_GetCommFeature
   \   00000082   0x2800             CMP      R0,#+0
   \   00000084   0xD006             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_14
     47                    USBD_EP0Data.pData = USBD_EP0Buf;                  /* point to data to be sent */
   \   00000086   0x4828             LDR      R0,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0xC
   \   00000088   0x4928             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0x10
   \   0000008A   0x6008             STR      R0,[R1, #+0]
     48                    USBD_DataInStage();                                /* send requested data */
   \   0000008C   0x.... 0x....      BL       USBD_DataInStage
     49                    return (__TRUE);
   \   00000090   0x2001             MOVS     R0,#+1
   \   00000092   0xE041             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_12
     50                  }
     51                  break;
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_14: (+1)
   \   00000094   0xE03F             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_2
     52                case CDC_CLEAR_COMM_FEATURE:
     53                  if (USBD_CDC_ACM_ClearCommFeature(USBD_SetupPacket.wValue)) {
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_7: (+1)
   \   00000096   0x4921             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0
   \   00000098   0x7888             LDRB     R0,[R1, #+2]
   \   0000009A   0x78CA             LDRB     R2,[R1, #+3]
   \   0000009C   0x0612             LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+16
   \   0000009E   0x0C12             LSRS     R2,R2,#+16
   \   000000A0   0x4310             ORRS     R0,R0,R2
   \   000000A2   0xB280             UXTH     R0,R0
   \   000000A4   0x.... 0x....      BL       USBD_CDC_ACM_ClearCommFeature
   \   000000A8   0x2800             CMP      R0,#+0
   \   000000AA   0xD003             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_15
     54                    USBD_StatusInStage();                              /* send Acknowledge */
   \   000000AC   0x.... 0x....      BL       USBD_StatusInStage
     55                    return (__TRUE);
   \   000000B0   0x2001             MOVS     R0,#+1
   \   000000B2   0xE031             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_12
     56                  }
     57                  break;
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_15: (+1)
   \   000000B4   0xE02F             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_2
     58                case CDC_SET_LINE_CODING:
     59                  USBD_EP0Data.pData = USBD_EP0Buf;                    /* data to be received, see USBD_EVT_OUT */
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_8: (+1)
   \   000000B6   0x481C             LDR      R0,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0xC
   \   000000B8   0x491C             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0x10
   \   000000BA   0x6008             STR      R0,[R1, #+0]
     60                  return (__TRUE);
   \   000000BC   0x2001             MOVS     R0,#+1
   \   000000BE   0xE02B             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_12
     61                case CDC_GET_LINE_CODING:
     62                  if (USBD_CDC_ACM_GetLineCoding()) {
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_9: (+1)
   \   000000C0   0x.... 0x....      BL       USBD_CDC_ACM_GetLineCoding
   \   000000C4   0x2800             CMP      R0,#+0
   \   000000C6   0xD006             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_16
     63                    USBD_EP0Data.pData = USBD_EP0Buf;                  /* point to data to be sent */
   \   000000C8   0x4817             LDR      R0,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0xC
   \   000000CA   0x4918             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0+0x10
   \   000000CC   0x6008             STR      R0,[R1, #+0]
     64                    USBD_DataInStage();                                /* send requested data */
   \   000000CE   0x.... 0x....      BL       USBD_DataInStage
     65                    return (__TRUE);
   \   000000D2   0x2001             MOVS     R0,#+1
   \   000000D4   0xE020             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_12
     66                  }
     67                  break;
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_16: (+1)
   \   000000D6   0xE01E             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_2
     68                case CDC_SET_CONTROL_LINE_STATE:
     69                  if (USBD_CDC_ACM_SetControlLineState(USBD_SetupPacket.wValue)) {
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_10: (+1)
   \   000000D8   0x4910             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0
   \   000000DA   0x7888             LDRB     R0,[R1, #+2]
   \   000000DC   0x78CA             LDRB     R2,[R1, #+3]
   \   000000DE   0x0612             LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+16
   \   000000E0   0x0C12             LSRS     R2,R2,#+16
   \   000000E2   0x4310             ORRS     R0,R0,R2
   \   000000E4   0xB280             UXTH     R0,R0
   \   000000E6   0x.... 0x....      BL       USBD_CDC_ACM_SetControlLineState
   \   000000EA   0x2800             CMP      R0,#+0
   \   000000EC   0xD003             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_17
     70                    USBD_StatusInStage();                              /* send Acknowledge */
   \   000000EE   0x.... 0x....      BL       USBD_StatusInStage
     71                    return (__TRUE);
   \   000000F2   0x2001             MOVS     R0,#+1
   \   000000F4   0xE010             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_12
     72                  }
     73                  break;
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_17: (+1)
   \   000000F6   0xE00E             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_2
     74                case CDC_SEND_BREAK:
     75                  if (USBD_CDC_ACM_SendBreak(USBD_SetupPacket.wValue)) {
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_11: (+1)
   \   000000F8   0x4908             LDR      R1,??USBD_EndPoint0_Setup_CDC_ReqToIF_0
   \   000000FA   0x7888             LDRB     R0,[R1, #+2]
   \   000000FC   0x78CA             LDRB     R2,[R1, #+3]
   \   000000FE   0x0612             LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+16
   \   00000100   0x0C12             LSRS     R2,R2,#+16
   \   00000102   0x4310             ORRS     R0,R0,R2
   \   00000104   0xB280             UXTH     R0,R0
   \   00000106   0x.... 0x....      BL       USBD_CDC_ACM_SendBreak
   \   0000010A   0x2800             CMP      R0,#+0
   \   0000010C   0xD003             BEQ      ??USBD_EndPoint0_Setup_CDC_ReqToIF_18
     76                    USBD_StatusInStage();                              /* send Acknowledge */
   \   0000010E   0x.... 0x....      BL       USBD_StatusInStage
     77                    return (__TRUE);
   \   00000112   0x2001             MOVS     R0,#+1
   \   00000114   0xE000             B        ??USBD_EndPoint0_Setup_CDC_ReqToIF_12
     78                  }
     79                  break;
     80              }
     81            }
     82            return (__FALSE);
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_18: (+1)
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_2: (+1)
   \   00000116   0x2000             MOVS     R0,#+0
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_12: (+1)
   \   00000118   0xBD02             POP      {R1,PC}          ;; return
   \   0000011A   0xBF00             Nop      
   \                     ??USBD_EndPoint0_Setup_CDC_ReqToIF_0:
   \   0000011C   0x........         DC32     USBD_SetupPacket
   \   00000120   0x........         DC32     usbd_cdc_acm_cif_num
   \   00000124   0x........         DC32     usbd_cdc_acm_dif_num
   \   00000128   0x........         DC32     USBD_EP0Buf
   \   0000012C   0x........         DC32     USBD_EP0Data
     83          }
     84          
     85          
     86          /*
     87           *  USB Device Endpoint 0 Event Callback - CDC specific handling (Out Request To Interface)
     88           *    Parameters:      none
     89           *    Return Value:    TRUE - Out class request ok, FALSE - Out class request not supported
     90           */
     91          

   \                                 In section .text, align 4
     92          __weak BOOL USBD_EndPoint0_Out_CDC_ReqToIF (void) {
   \                     USBD_EndPoint0_Out_CDC_ReqToIF: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     93            if ((USBD_SetupPacket.wIndexL == usbd_cdc_acm_cif_num) || /* IF number correct? */
     94                (USBD_SetupPacket.wIndexL == usbd_cdc_acm_dif_num)) {
   \   00000002   0x481C             LDR      R0,??USBD_EndPoint0_Out_CDC_ReqToIF_0
   \   00000004   0x7900             LDRB     R0,[R0, #+4]
   \   00000006   0x491C             LDR      R1,??USBD_EndPoint0_Out_CDC_ReqToIF_0+0x4
   \   00000008   0x7809             LDRB     R1,[R1, #+0]
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xD005             BEQ      ??USBD_EndPoint0_Out_CDC_ReqToIF_1
   \   0000000E   0x4819             LDR      R0,??USBD_EndPoint0_Out_CDC_ReqToIF_0
   \   00000010   0x7900             LDRB     R0,[R0, #+4]
   \   00000012   0x491A             LDR      R1,??USBD_EndPoint0_Out_CDC_ReqToIF_0+0x8
   \   00000014   0x7809             LDRB     R1,[R1, #+0]
   \   00000016   0x4288             CMP      R0,R1
   \   00000018   0xD129             BNE      ??USBD_EndPoint0_Out_CDC_ReqToIF_2
     95              switch (USBD_SetupPacket.bRequest) {
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_1: (+1)
   \   0000001A   0x4816             LDR      R0,??USBD_EndPoint0_Out_CDC_ReqToIF_0
   \   0000001C   0x7840             LDRB     R0,[R0, #+1]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD004             BEQ      ??USBD_EndPoint0_Out_CDC_ReqToIF_3
   \   00000022   0x2802             CMP      R0,#+2
   \   00000024   0xD00B             BEQ      ??USBD_EndPoint0_Out_CDC_ReqToIF_4
   \   00000026   0x2820             CMP      R0,#+32
   \   00000028   0xD019             BEQ      ??USBD_EndPoint0_Out_CDC_ReqToIF_5
   \   0000002A   0xE020             B        ??USBD_EndPoint0_Out_CDC_ReqToIF_2
     96                case CDC_SEND_ENCAPSULATED_COMMAND:
     97                  if (USBD_CDC_ACM_SendEncapsulatedCommand()) {
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_3: (+1)
   \   0000002C   0x.... 0x....      BL       USBD_CDC_ACM_SendEncapsulatedCommand
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD003             BEQ      ??USBD_EndPoint0_Out_CDC_ReqToIF_6
     98                    USBD_StatusInStage();                        /* send Acknowledge */
   \   00000034   0x.... 0x....      BL       USBD_StatusInStage
     99                    return (__TRUE);
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0xE019             B        ??USBD_EndPoint0_Out_CDC_ReqToIF_7
    100                  }
    101                  break;
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_6: (+1)
   \   0000003C   0xE017             B        ??USBD_EndPoint0_Out_CDC_ReqToIF_2
    102                case CDC_SET_COMM_FEATURE:
    103                  if (USBD_CDC_ACM_SetCommFeature(USBD_SetupPacket.wValue)) {
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_4: (+1)
   \   0000003E   0x490D             LDR      R1,??USBD_EndPoint0_Out_CDC_ReqToIF_0
   \   00000040   0x7888             LDRB     R0,[R1, #+2]
   \   00000042   0x78CA             LDRB     R2,[R1, #+3]
   \   00000044   0x0612             LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+16
   \   00000046   0x0C12             LSRS     R2,R2,#+16
   \   00000048   0x4310             ORRS     R0,R0,R2
   \   0000004A   0xB280             UXTH     R0,R0
   \   0000004C   0x.... 0x....      BL       USBD_CDC_ACM_SetCommFeature
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD003             BEQ      ??USBD_EndPoint0_Out_CDC_ReqToIF_8
    104                    USBD_StatusInStage();                        /* send Acknowledge */
   \   00000054   0x.... 0x....      BL       USBD_StatusInStage
    105                    return (__TRUE);
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0xE009             B        ??USBD_EndPoint0_Out_CDC_ReqToIF_7
    106                  }
    107                  break;
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_8: (+1)
   \   0000005C   0xE007             B        ??USBD_EndPoint0_Out_CDC_ReqToIF_2
    108                case CDC_SET_LINE_CODING:
    109                  if (USBD_CDC_ACM_SetLineCoding()) {
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_5: (+1)
   \   0000005E   0x.... 0x....      BL       USBD_CDC_ACM_SetLineCoding
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD003             BEQ      ??USBD_EndPoint0_Out_CDC_ReqToIF_9
    110                    USBD_StatusInStage();                        /* send Acknowledge */
   \   00000066   0x.... 0x....      BL       USBD_StatusInStage
    111                    return (__TRUE);
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0xE000             B        ??USBD_EndPoint0_Out_CDC_ReqToIF_7
    112                  }
    113                  break;
    114              }
    115            }
    116            return (__FALSE);
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_9: (+1)
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_2: (+1)
   \   0000006E   0x2000             MOVS     R0,#+0
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_7: (+1)
   \   00000070   0xBD02             POP      {R1,PC}          ;; return
   \   00000072   0xBF00             Nop      
   \                     ??USBD_EndPoint0_Out_CDC_ReqToIF_0:
   \   00000074   0x........         DC32     USBD_SetupPacket
   \   00000078   0x........         DC32     usbd_cdc_acm_cif_num
   \   0000007C   0x........         DC32     usbd_cdc_acm_dif_num
    117          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   USBD_EndPoint0_Out_CDC_ReqToIF
         8   -> USBD_CDC_ACM_SendEncapsulatedCommand
         8   -> USBD_CDC_ACM_SetCommFeature
         8   -> USBD_CDC_ACM_SetLineCoding
         8   -> USBD_StatusInStage
       8   USBD_EndPoint0_Setup_CDC_ReqToIF
         8   -> USBD_CDC_ACM_ClearCommFeature
         8   -> USBD_CDC_ACM_GetCommFeature
         8   -> USBD_CDC_ACM_GetEncapsulatedResponse
         8   -> USBD_CDC_ACM_GetLineCoding
         8   -> USBD_CDC_ACM_SendBreak
         8   -> USBD_CDC_ACM_SetControlLineState
         8   -> USBD_DataInStage
         8   -> USBD_StatusInStage


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     128  USBD_EndPoint0_Out_CDC_ReqToIF
     304  USBD_EndPoint0_Setup_CDC_ReqToIF

 
 432 bytes in section .text
 
 0 bytes of CODE memory (+ 432 bytes shared)

Errors: none
Warnings: none
