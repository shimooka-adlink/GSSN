###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       21/May/2019  17:01:21
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\GNSS\Software\rJ105\source\GNSS_GW\apl\man_data.c
#    Command line =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\apl\man_data.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_B -lCN
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        -lA
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List\man_data.lst
#    Object file  =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj\man_data.o
#
###############################################################################

C:\GNSS\Software\rJ105\source\GNSS_GW\apl\man_data.c
      1          
      2          /**
      3            ******************************************************************************
      4            * @file    man_data.c
      5            * @author  コア
      6            * @version V1.0
      7            * @date    2017.10.2
      8            * @brief   データを管理する
      9            ******************************************************************************
     10            $Id: man_data.c 258 2018-08-02 06:14:12Z shitaoka $
     11            * @attention
     12            *
     13            *****************************************************************************
     14          */
     15          
     16          #include <string.h>
     17          #include <stdio.h>
     18          #include <stdlib.h>
     19          
     20          #include "board.h"
     21          #include "system_manager.h"
     22          #include "gnss_gw_common.h"
     23          #include "drv_flash.h"
     24          #include "man_data.h"
     25          #include "man_version.h"
     26          #include "man_press.h"
     27          #include "man_battery.h"
     28          #include "man_charge.h"
     29          #include "man_gps.h"
     30          #include "man_rtc.h"
     31          #include "man_http.h"
     32          #include "man_lte.h"
     33          #include "man_msg.h"
     34          #include "man_ope.h"
     35          #include "man_memory.h"
     36          #include "man_usb.h"
     37          #include "man_timer.h"
     38          
     39          #pragma section = "APL_PRG_BLOCK"
     40          
     41          /************************************************************************/
     42          /* declaration of structure                                             */
     43          /************************************************************************/
     44          
     45          
     46          // プログラム格納領域
     47          #define	MAN_DATA_MAGIC_A_ADDR_TOP	0x0003F000UL			// A面識別コード先頭アドレス
     48          #define	MAN_DATA_MAGIC_B_ADDR_TOP	0x0006F000UL			// B面識別コード先頭アドレス
     49          
     50          
     51          // 設定値格納領域
     52          #define	MAN_DATA_SETTING_ADDR_TOP	0x00070000UL		// 設定値 先頭アドレス
     53          #define	MAN_DATA_BANK_MAX			16					// 16バンク
     54          #define	MAN_DATA_MAGIC_NUMBER_SIZE	16					// 16文字
     55          
     56          #define	MAN_DATA_BUFF_MAX			4096
     57          #define	MAM_DADA_MAGIC_NUMBER		16
     58          
     59          
     60          #define	MAN_DATA_MSG_CHECK_WAIT		70					// 起動後70秒間はMSGのチェックを行わない
     61          
     62          // LTE接続設定(gprs)情報
     63          // 例) gprs,[cid],cmnet,www.example.co.jp.biz,60010,60010,usernm,passwd#
     64          
     65          #define	MAN_DATA_APN_MAX			31		// Simcard apn. MAX:31 byte
     66          #define	MAN_DATA_IP_MAX				64		// Server ip. Domain MAX: 64 byte. IP MAX:15 byte
     67          #define	MAN_DATA_TCP_PORT_MAX		5		// TCP port. MAX:65535
     68          #define	MAN_DATA_UDP_PORT_MAX		5		// UDP port. MAX:65535
     69          #define	MAN_DATA_USER_NAME_MAX		32		// Simcard username. MAX:32 byte
     70          #define	MAN_DATA_PASSWORD_MAX		32		// Simcard password. MAX:32 byte
     71          
     72          
     73          // 要求
     74          #define	MAN_DATA_REQ_CMD_NON			0		// 要求待ち
     75          #define	MAN_DATA_REQ_CMD_ERASE_SECTOR	1		// ERASE SECTOR
     76          
     77          
     78          // データ管理シーケンス
     79          typedef enum {
     80          	MAN_DATA_SEQ_READY,					// 00 : 要求待ち
     81          
     82          	MAN_DATA_SEQ_ERASE_REQ,				// 01 : erase sector要求
     83          	MAN_DATA_SEQ_ERASE_WAIT,			// 02 : erase sector完了待ち
     84          } man_data_seq_def;
     85          
     86          
     87          
     88          // 設定データ(FLASHに保存)
     89          typedef struct _man_data_flash_t {
     90          	uint8_t				magic_number[MAM_DADA_MAGIC_NUMBER];	// 16 : マジックナンバー
     91          	man_data_setting_t	setting_info;
     92          } man_data_flash_t;
     93          
     94          // メッセージ情報
     95          typedef struct _man_data_msg_t {
     96          	int32_t					counter;
     97          	int32_t					nmea_msg;			// NMEA系メッセージ出力状態
     98          	int32_t					accel_msg;			// 加速度系メッセージ出力状態
     99          	int32_t					temp_msg;			// 温度系メッセージ出力状態
    100          	int32_t					charge0_msg;		// バッテリ残量0メッセージ出力状態
    101          	int32_t					low_volt_msg;		// 低電圧メッセージ出力状態
    102          } man_data_msg_t;
    103          
    104          // 要求
    105          typedef struct _man_data_req_info_t{
    106          	int32_t						req_cmd;
    107          
    108          	uint32_t					top_addr;			// 先頭アドレス
    109          	int32_t						sector_num;			// セクタ数
    110          
    111          	int32_t						id;
    112          	func_man_data				callback;
    113          } man_data_req_info_t;
    114          
    115          // 作業用
    116          typedef struct _man_data_tmp_info_t{
    117          	int32_t						counter;
    118          	uint32_t					start_time;
    119          } man_data_tmp_info_t;
    120          
    121          
    122          // 設定データ管理ワーク
    123          typedef struct _man_data_work_t {
    124          	int32_t					prg_side;
    125          	int32_t					set_bank;
    126          	int32_t					bank;			// 使用するFLASHのバンク
    127          //	man_data_data_t			data;			// 設定データ
    128          
    129          	uint8_t					write[MAN_DATA_BUFF_MAX];		// FLASH 書き込み用ワークエリア
    130          	uint8_t					read[MAN_DATA_BUFF_MAX];		// FLASH 読み込み用ワークエリア
    131          	
    132          	man_data_flash_t		setting;		// FLASH 設定データ
    133          	man_data_flash_t		buffer;			// FLASH 設定データ(バッファ)
    134          
    135          
    136          	man_data_temp_t			temp_info;		// 一時保管情報
    137          	man_data_get_other_t	other_info;		// その他の情報
    138          	man_data_fixed_t		fixed_info;		// 固定値情報
    139          	man_data_setting_t		setting_info;	// 数字に変換後の設定データ
    140          	man_data_get_sensor_t	sensor_info;	// センサ情報
    141          	man_data_msg_t			msg_info;
    142          
    143          	man_data_seq_def		sequense;			// シーケンス
    144          	man_data_req_info_t		request;			// 要求
    145          	man_data_tmp_info_t		tmp;				// 作業用
    146          
    147          } man_data_work_t;
    148          
    149          
    150          /************************************************************************/
    151          /* definition of variables                                              */
    152          /************************************************************************/
    153          

   \                                 In section .bss, align 4
    154          man_data_work_t	man_data_work;
   \                     man_data_work:
   \   00000000                      DS8 14508
    155          
    156          
    157          // 出荷時設定

   \                                 In section .rodata, align 4
    158          static const man_data_setting_t factory_tbl = {
   \                     factory_tbl:
   \   00000000   0x6D 0x6D          DC8 "mm9.gnss.ultina"
   \              0x39 0x2E    
   \              0x67 0x6E    
   \              0x73 0x73    
   \              0x2E 0x75    
   \              0x6C 0x74    
   \              0x69 0x6E    
   \              0x61 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x31 0x30          DC8 "10.0.0.11"
   \              0x2E 0x30    
   \              0x2E 0x30    
   \              0x2E 0x31    
   \              0x31 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000003A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000004A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000061   0x38 0x31          DC8 "81"
   \              0x00         
   \   00000064   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   \   00000067   0x33 0x35          DC8 "3528"
   \              0x32 0x38    
   \              0x00         
   \   0000006C   0x00               DC8 0
   \   0000006D   0x71 0x7A          DC8 "qzss@mm9.gnss.ultina"
   \              0x73 0x73    
   \              0x40 0x6D    
   \              0x6D 0x39    
   \              0x2E 0x67    
   \              0x6E 0x73    
   \              0x73 0x2E    
   \              0x75 0x6C    
   \              0x74 0x69    
   \              0x6E 0x61    
   \              0x00         
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000008E   0x39 0x7A          DC8 "9zss4SB"
   \              0x73 0x73    
   \              0x34 0x53    
   \              0x42 0x00    
   \   00000096   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B0   0x00000005         DC32 5, 60, 10, 10, 20, 127, 50, 20, 60, 30, 0
   \              0x0000003C   
   \              0x0000000A   
   \              0x0000000A   
   \              0x00000014   
   \              0x0000007F   
   \              0x00000032   
   \              0x00000014   
   \              0x0000003C   
   \              0x0000001E   
   \              0x00000000   
   \   000000DC   0x00 0x09          DC8 0, 9, 0, 0
   \              0x00 0x00    
   \   000000E0   0x00000000         DC32 0
   \   000000E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000FB   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000112   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000129   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000140   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000157   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000016E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000185   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000019C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001B3   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001CA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    159          	// apn              ip               tcp_port   udp_port    username                 password
    160          	{"mm9.gnss.ultina",	"10.0.0.11",	"81",		"3528",		"qzss@mm9.gnss.ultina",	 "9zss4SB"},  // gprs
    161          
    162          	// park_interval	run_interval	duration_time	duration_time_num
    163          	{5,					60,			10,				10},	// gpssleeptime
    164          
    165          	// alarm_bat_num
    166          	{20},										// batalarm
    167          
    168          	// threshold_num
    169          	{127},									// sensor
    170          
    171          	// time_num
    172          	{50},										// alarmtime
    173          
    174          	// batt_low_error_num   temperature_high_num    alarm_transfer_time
    175          	{20,					60,     30, {0, 0, MAN_LTE_RETRY_OTA_OFF}},
    176                  {0,{0,0,0,0,0,0,0,0,0,0,0,0}},
    177                  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    178                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    179                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    180                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    181                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    182                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    183                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    184                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    185                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    186                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    187                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    188                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    189                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    190                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    191                   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
    192          
    193          
    194          };
    195          
    196          
    197          // その他の初期化情報

   \                                 In section .rodata, align 4
    198          static const man_data_get_other_t other_tbl = {
   \                     other_tbl:
   \   00000000   0x30 0x30          DC8 "000000000000000"
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x00    
   \   00000010   0x30 0x30          DC8 "00000000"
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   \   0000001C   0x00000014         DC32 20
   \   00000020   0x56 0x31          DC8 "V1.0"
   \              0x2E 0x30    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000035   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000045   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000051   0x30 0x30          DC8 "00000"
   \              0x30 0x30    
   \              0x30 0x00    
   \   00000057   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000067   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    199          	"000000000000000",			// IMEI
    200          	"00000000",					// CID
    201          	20,							// バッテリー残量警告しきい値[20%]
    202          	"V1.0",						// 端末ファームウェアバージョン
    203          	"00000"						// GPSチップファームウェアバージョン
    204          };
    205          
    206          
    207          // 固定値の初期化情報

   \                                 In section .rodata, align 4
    208          static const man_data_fixed_t fixed_tbl = {
   \                     fixed_tbl:
   \   00000000   0x0000000A         DC32 10, 10, 5, 5, 5, 20, 10
   \              0x0000000A   
   \              0x00000005   
   \              0x00000005   
   \              0x00000005   
   \              0x00000014   
   \              0x0000000A   
    209          	10,							// battery_zero    :: 内部バッテリゼロ閾値[10%]
    210          	10,							// battery_low_war :: 内部バッテリ低電圧警告閾値[10%]
    211          	5,							// ext_off_time    :: 外部電源喪失後の測位時間[5分]
    212          	5,							// alarm_time      :: 定刻起動時の測位時間[5分]
    213          	5,							// park_max_time   :: バッテリ残量０状態でのpark_intervalの最長時間[5分]
    214          	20,							// bat_led_flash_num::LED動作におけるの点灯と点滅の閾値[20%]
    215          	10							// bat_led_off_num ::LED動作におけるの点灯と点滅の閾値[10%]
    216          };
    217          
    218          // マジックナンバー

   \                                 In section .rodata, align 4
    219          static const uint8_t magic_number_prg_tbl[MAN_DATA_MAGIC_NUMBER_SIZE] = "GNSS Gateway PRG";
   \                     magic_number_prg_tbl:
   \   00000000   0x47 0x4E          DC8 47H, 4EH, 53H, 53H, 20H, 47H, 61H, 74H
   \              0x53 0x53    
   \              0x20 0x47    
   \              0x61 0x74    
   \   00000008   0x65 0x77          DC8 65H, 77H, 61H, 79H, 20H, 50H, 52H, 47H
   \              0x61 0x79    
   \              0x20 0x50    
   \              0x52 0x47    

   \                                 In section .rodata, align 4
    220          static const uint8_t magic_number_set_tbl[MAN_DATA_MAGIC_NUMBER_SIZE] = "GNSS Gateway SET";
   \                     magic_number_set_tbl:
   \   00000000   0x47 0x4E          DC8 47H, 4EH, 53H, 53H, 20H, 47H, 61H, 74H
   \              0x53 0x53    
   \              0x20 0x47    
   \              0x61 0x74    
   \   00000008   0x65 0x77          DC8 65H, 77H, 61H, 79H, 20H, 53H, 45H, 54H
   \              0x61 0x79    
   \              0x20 0x53    
   \              0x45 0x54    
    221          
    222          /********************************************************************/
    223          /*	callback関数                                                    */
    224          /********************************************************************/
    225          
    226          
    227          /********************************************************************/
    228          /*	static関数                                                      */
    229          /********************************************************************/
    230          
    231          /********************************************************************/
    232          /*!
    233           * \name	man_data_return_callback
    234           * \brief	callback応答を返す処理
    235           * \param	status : 通知するステータス
    236           * \return  なし
    237           * \note	
    238           */
    239          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    240          static void man_data_return_callback( int32_t status )
    241          {
   \                     man_data_return_callback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    242          	// callback関数で終了通知
    243          	if (man_data_work.request.callback != NULL) {
   \   00000002   0x....             LDR      R1,??DataTable6
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD008             BEQ      ??man_data_return_callback_0
    244          		man_data_work.request.callback(man_data_work.request.id, status);
   \   0000000A   0x0001             MOVS     R1,R0
   \   0000000C   0x....             LDR      R0,??DataTable6_1
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x....             LDR      R2,??DataTable6
   \   00000012   0x6812             LDR      R2,[R2, #+0]
   \   00000014   0x4790             BLX      R2
    245          		man_data_work.request.callback = NULL;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR      R1,??DataTable6
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    246          	}
    247          	man_data_work.sequense = MAN_DATA_SEQ_READY;
   \                     ??man_data_return_callback_0: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR      R1,??DataTable6_2
   \   00000020   0x7008             STRB     R0,[R1, #+0]
    248          	man_data_work.request.req_cmd = MAN_DATA_REQ_CMD_NON;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable14
   \   00000026   0x6008             STR      R0,[R1, #+0]
    249          }
   \   00000028   0xBD01             POP      {R0,PC}          ;; return
    250          
    251          /********************************************************************/
    252          /*!
    253           * \name	man_data_program_get_flash
    254           * \brief	プログラムの動作面を取得する処理
    255           * \param	
    256           * \return  0  : A面
    257           *          1  : B面
    258          *          16 : 出荷時(A面)
    259           * \note	必要時に呼ばれること
    260           */
    261          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    262          static int32_t man_data_program_chk_flash( void  )
    263          {
   \                     man_data_program_chk_flash: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    264          	int32_t		ret=MAN_DATA_PRG_F_SIDE;
   \   00000002   0x2410             MOVS     R4,#+16
    265          
    266          	// A面 チェック
    267          	if (memcmp((void const *)MAN_DATA_MAGIC_A_ADDR_TOP, &magic_number_prg_tbl[0], MAN_DATA_MAGIC_NUMBER_SIZE) == 0) {
   \   00000004   0x2210             MOVS     R2,#+16
   \   00000006   0x....             LDR      R1,??DataTable15
   \   00000008   0x20FC             MOVS     R0,#+252
   \   0000000A   0x0280             LSLS     R0,R0,#+10       ;; #+258048
   \   0000000C   0x.... 0x....      BL       memcmp
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD101             BNE      ??man_data_program_chk_flash_0
    268          		ret=MAN_DATA_PRG_A_SIDE;
   \   00000014   0x2400             MOVS     R4,#+0
   \   00000016   0xE008             B        ??man_data_program_chk_flash_1
    269          	}
    270          
    271          	// B面 チェック
    272          	else if (memcmp((void const *)MAN_DATA_MAGIC_B_ADDR_TOP, &magic_number_prg_tbl[0], MAN_DATA_MAGIC_NUMBER_SIZE) == 0) {
   \                     ??man_data_program_chk_flash_0: (+1)
   \   00000018   0x2210             MOVS     R2,#+16
   \   0000001A   0x....             LDR      R1,??DataTable15
   \   0000001C   0x20DE             MOVS     R0,#+222
   \   0000001E   0x02C0             LSLS     R0,R0,#+11       ;; #+454656
   \   00000020   0x.... 0x....      BL       memcmp
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD100             BNE      ??man_data_program_chk_flash_1
    273          		ret=MAN_DATA_PRG_B_SIDE;
   \   00000028   0x2401             MOVS     R4,#+1
    274          	}
    275          	return ret;
   \                     ??man_data_program_chk_flash_1: (+1)
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xBD10             POP      {R4,PC}          ;; return
    276          }
    277          
    278          
    279          
    280          
    281          
    282          /********************************************************************/
    283          /*!
    284           * \name	man_data_setting_set_flash
    285           * \brief	設定データをFLASHに登録する処理
    286           * \param	bank  ; 現在使用しているバンク
    287           * \return  なし
    288           * \note	必要時に呼ばれること
    289           */
    290          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    291          static int32_t man_data_setting_set_flash( int32_t  *bank )
    292          {
   \                     man_data_setting_set_flash: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
    293          	int32_t			next = *bank;
   \   00000004   0x6835             LDR      R5,[R6, #+0]
    294          	uint32_t		flash_top;
    295          	int32_t			ret;
    296          
    297          	// FLASH書き込みフォーマット作成
    298          	memcpy(&man_data_work.setting.magic_number[0], magic_number_set_tbl, MAN_DATA_MAGIC_NUMBER_SIZE);
   \   00000006   0x2210             MOVS     R2,#+16
   \   00000008   0x....             LDR      R1,??DataTable9
   \   0000000A   0x....             LDR      R4,??DataTable20
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy
    299          	memcpy(&man_data_work.setting.setting_info, &man_data_work.setting_info, sizeof(man_data_work.setting.setting_info));
   \   00000012   0x22F0             MOVS     R2,#+240
   \   00000014   0x0052             LSLS     R2,R2,#+1        ;; #+480
   \   00000016   0x....             LDR      R1,??DataTable10
   \   00000018   0x....             LDR      R4,??DataTable10_1
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy
    300          
    301          	next++;
   \   00000020   0x1C6D             ADDS     R5,R5,#+1
    302          	if (next >= MAN_DATA_BANK_MAX) next=0;
   \   00000022   0x2D10             CMP      R5,#+16
   \   00000024   0xDB00             BLT      ??man_data_setting_set_flash_0
   \   00000026   0x2500             MOVS     R5,#+0
    303          
    304          	// FLASH消去
    305          	flash_top = MAN_DATA_SETTING_ADDR_TOP + next * MAN_DATA_FLASH_SIZE;
   \                     ??man_data_setting_set_flash_0: (+1)
   \   00000028   0x2080             MOVS     R0,#+128
   \   0000002A   0x0140             LSLS     R0,R0,#+5        ;; #+4096
   \   0000002C   0x4368             MULS     R0,R5,R0
   \   0000002E   0x21E0             MOVS     R1,#+224
   \   00000030   0x02C9             LSLS     R1,R1,#+11       ;; #+458752
   \   00000032   0x1847             ADDS     R7,R0,R1
    306          	ret = flash_erase_sector(flash_top);
   \   00000034   0x0038             MOVS     R0,R7
   \   00000036   0x.... 0x....      BL       flash_erase_sector
   \   0000003A   0x0004             MOVS     R4,R0
    307          
    308          	// FLASH書き込み
    309          	if (ret >= 0) {
   \   0000003C   0x2C00             CMP      R4,#+0
   \   0000003E   0xD406             BMI      ??man_data_setting_set_flash_1
    310          		ret = flash_write(flash_top, &man_data_work.setting, sizeof(man_data_flash_t));
   \   00000040   0x22F8             MOVS     R2,#+248
   \   00000042   0x0052             LSLS     R2,R2,#+1        ;; #+496
   \   00000044   0x....             LDR      R1,??DataTable20
   \   00000046   0x0038             MOVS     R0,R7
   \   00000048   0x.... 0x....      BL       flash_write
   \   0000004C   0x0004             MOVS     R4,R0
    311          	}
    312          
    313          	// FLASH読み込み
    314          	if (ret >= 0) {
   \                     ??man_data_setting_set_flash_1: (+1)
   \   0000004E   0x2C00             CMP      R4,#+0
   \   00000050   0xD405             BMI      ??man_data_setting_set_flash_2
    315          		flash_read(flash_top, (uint8_t *)&man_data_work.buffer, sizeof(man_data_flash_t));
   \   00000052   0x22F8             MOVS     R2,#+248
   \   00000054   0x0052             LSLS     R2,R2,#+1        ;; #+496
   \   00000056   0x....             LDR      R1,??DataTable14_1
   \   00000058   0x0038             MOVS     R0,R7
   \   0000005A   0x.... 0x....      BL       flash_read
    316          	}
    317          	
    318          	// 比較
    319          	if (ret >= 0) {
   \                     ??man_data_setting_set_flash_2: (+1)
   \   0000005E   0x2C00             CMP      R4,#+0
   \   00000060   0xD409             BMI      ??man_data_setting_set_flash_3
    320          		if (memcmp(&man_data_work.setting, &man_data_work.buffer, sizeof(man_data_flash_t)) != 0) {
   \   00000062   0x22F8             MOVS     R2,#+248
   \   00000064   0x0052             LSLS     R2,R2,#+1        ;; #+496
   \   00000066   0x....             LDR      R1,??DataTable14_1
   \   00000068   0x....             LDR      R0,??DataTable20
   \   0000006A   0x.... 0x....      BL       memcmp
   \   0000006E   0x2800             CMP      R0,#+0
   \   00000070   0xD001             BEQ      ??man_data_setting_set_flash_3
    321          			ret = -1;
   \   00000072   0x2400             MOVS     R4,#+0
   \   00000074   0x43E4             MVNS     R4,R4            ;; #-1
    322          		}
    323          	}
    324          
    325          	// 旧データ消去
    326          	if (ret >= 0) {
   \                     ??man_data_setting_set_flash_3: (+1)
   \   00000076   0x2C00             CMP      R4,#+0
   \   00000078   0xD40E             BMI      ??man_data_setting_set_flash_4
    327          		if (*bank < MAN_DATA_BANK_MAX) {
   \   0000007A   0x6830             LDR      R0,[R6, #+0]
   \   0000007C   0x2810             CMP      R0,#+16
   \   0000007E   0xDA0A             BGE      ??man_data_setting_set_flash_5
    328          			flash_top = MAN_DATA_SETTING_ADDR_TOP + *bank * MAN_DATA_FLASH_SIZE;
   \   00000080   0x6830             LDR      R0,[R6, #+0]
   \   00000082   0x2180             MOVS     R1,#+128
   \   00000084   0x0149             LSLS     R1,R1,#+5        ;; #+4096
   \   00000086   0x4348             MULS     R0,R1,R0
   \   00000088   0x21E0             MOVS     R1,#+224
   \   0000008A   0x02C9             LSLS     R1,R1,#+11       ;; #+458752
   \   0000008C   0x1847             ADDS     R7,R0,R1
    329          			ret = flash_erase_sector(flash_top);
   \   0000008E   0x0038             MOVS     R0,R7
   \   00000090   0x.... 0x....      BL       flash_erase_sector
   \   00000094   0x0004             MOVS     R4,R0
    330          		}
    331          		*bank = next;
   \                     ??man_data_setting_set_flash_5: (+1)
   \   00000096   0x6035             STR      R5,[R6, #+0]
    332          	}
    333          
    334          	return ret;
   \                     ??man_data_setting_set_flash_4: (+1)
   \   00000098   0x0020             MOVS     R0,R4
   \   0000009A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    335          }
    336          
    337          /********************************************************************/
    338          /*!
    339           * \name	man_data_setting_get_flash
    340           * \brief	設定データをFLASHから取得する処理
    341           * \param	bank  ; 0-15 : FLASH上のバンク
    342           *                : 16   : 出荷時設定
    343           * \return  なし
    344           * \note	必要時に呼ばれること
    345           */
    346          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    347          static int32_t man_data_setting_get_flash( int32_t  *bank )
    348          {
   \                     man_data_setting_get_flash: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0007             MOVS     R7,R0
    349          	int32_t		ret=-1;
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0x43F6             MVNS     R6,R6            ;; #-1
    350          	int32_t		bank_work=-1;
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x43E4             MVNS     R4,R4            ;; #-1
    351          	int32_t		i;
    352          	uint32_t	flash_top;
    353          
    354          	for (i=0; i<MAN_DATA_BANK_MAX; i++) {
   \   0000000C   0x2500             MOVS     R5,#+0
   \   0000000E   0xE000             B        ??man_data_setting_get_flash_0
   \                     ??man_data_setting_get_flash_1: (+1)
   \   00000010   0x1C6D             ADDS     R5,R5,#+1
   \                     ??man_data_setting_get_flash_0: (+1)
   \   00000012   0x2D10             CMP      R5,#+16
   \   00000014   0xDA1A             BGE      ??man_data_setting_get_flash_2
    355          
    356          		// FLASH読み込み
    357          		flash_top = MAN_DATA_SETTING_ADDR_TOP + i * MAN_DATA_FLASH_SIZE;
   \   00000016   0x2080             MOVS     R0,#+128
   \   00000018   0x0140             LSLS     R0,R0,#+5        ;; #+4096
   \   0000001A   0x4368             MULS     R0,R5,R0
   \   0000001C   0x21E0             MOVS     R1,#+224
   \   0000001E   0x02C9             LSLS     R1,R1,#+11       ;; #+458752
   \   00000020   0x1840             ADDS     R0,R0,R1
    358          		flash_read(flash_top, (uint8_t *)&man_data_work.buffer, sizeof(man_data_flash_t));
   \   00000022   0x22F8             MOVS     R2,#+248
   \   00000024   0x0052             LSLS     R2,R2,#+1        ;; #+496
   \   00000026   0x....             LDR      R1,??DataTable14_1
   \   00000028   0x.... 0x....      BL       flash_read
    359          		if (memcmp(&man_data_work.buffer.magic_number[0], &magic_number_set_tbl[0], MAN_DATA_MAGIC_NUMBER_SIZE) == 0) {
   \   0000002C   0x2210             MOVS     R2,#+16
   \   0000002E   0x....             LDR      R1,??DataTable9
   \   00000030   0x....             LDR      R0,??DataTable14_1
   \   00000032   0x.... 0x....      BL       memcmp
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD1EA             BNE      ??man_data_setting_get_flash_1
    360          			memcpy(&man_data_work.setting_info, &man_data_work.buffer.setting_info, sizeof(man_data_work.setting_info));
   \   0000003A   0x22F0             MOVS     R2,#+240
   \   0000003C   0x0052             LSLS     R2,R2,#+1        ;; #+480
   \   0000003E   0x....             LDR      R1,??DataTable25
   \   00000040   0x....             LDR      R4,??DataTable10
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0x.... 0x....      BL       __aeabi_memcpy
    361          			bank_work = i;
   \   00000048   0x002C             MOVS     R4,R5
    362          			ret = 0;
   \   0000004A   0x2600             MOVS     R6,#+0
    363          			break;
    364          		}
    365          	}
    366          
    367          	// 登録されていない場合
    368          	if (bank_work < 0) {
   \                     ??man_data_setting_get_flash_2: (+1)
   \   0000004C   0x2C00             CMP      R4,#+0
   \   0000004E   0xD508             BPL      ??man_data_setting_get_flash_3
    369          		memcpy(&man_data_work.setting_info, &factory_tbl, sizeof(man_data_work.setting_info));
   \   00000050   0x22F0             MOVS     R2,#+240
   \   00000052   0x0052             LSLS     R2,R2,#+1        ;; #+480
   \   00000054   0x....             LDR      R1,??DataTable27
   \   00000056   0x....             LDR      R4,??DataTable10
   \   00000058   0x0020             MOVS     R0,R4
   \   0000005A   0x.... 0x....      BL       __aeabi_memcpy
    370          		bank_work = MAN_DATA_BANK_MAX;
   \   0000005E   0x2410             MOVS     R4,#+16
    371          		ret = 0;
   \   00000060   0x2600             MOVS     R6,#+0
    372          	}
    373          
    374          	*bank = bank_work;
   \                     ??man_data_setting_get_flash_3: (+1)
   \   00000062   0x603C             STR      R4,[R7, #+0]
    375          	return ret;
   \   00000064   0x0030             MOVS     R0,R6
   \   00000066   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    376          
    377          }
    378          
    379          
    380          
    381          /********************************************************************/
    382          /*	extern関数                                                      */
    383          /********************************************************************/
    384          
    385          /********************************************************************/
    386          /*!
    387           * \name	man_data_init
    388           * \brief	設定データ管理の初期化処理
    389           * \param	なし
    390           * \return  なし
    391           * \note	起動時に、呼ばれること
    392           */
    393          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    394          void man_data_init(void)
    395          {
   \                     man_data_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    396          	int32_t	bank;
    397          	int32_t	i;
    398          	
    399          
    400          	// 内部変数を初期化する
    401          	memset(&man_data_work, 0, sizeof(man_data_work_t));
   \   00000004   0x....             LDR      R1,??DataTable27_1  ;; 0x38ac
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x....             LDR      R4,??DataTable27_2
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       __aeabi_memset
    402          	man_data_work.msg_info.nmea_msg = MAN_MSG_TYPE_INVALID;
   \   00000010   0x202B             MOVS     R0,#+43
   \   00000012   0x....             LDR      R1,??DataTable27_3
   \   00000014   0x6008             STR      R0,[R1, #+0]
    403          
    404          
    405          	// flash driver使用開始
    406          	flash_start();
   \   00000016   0x.... 0x....      BL       flash_start
    407          
    408          	// プログラムの動作面取得
    409          	man_data_work.prg_side = man_data_program_chk_flash();
   \   0000001A   0x.... 0x....      BL       man_data_program_chk_flash
   \   0000001E   0x....             LDR      R1,??DataTable27_2
   \   00000020   0x6008             STR      R0,[R1, #+0]
    410          
    411          	// 出荷時の設定になっていればA面にする
    412          //	if (man_data_work.prg_side == MAN_DATA_PRG_F_SIDE) {
    413          //		man_data_program_mrg_set_flash(MAN_DATA_PRG_A_SIDE);
    414          //		man_data_work.prg_side = MAN_DATA_PRG_A_SIDE;
    415          //	}
    416          #if 0
    417          	// A面(16KB)をB面にコピーする
    418          	for (i=0; i<4; i++) {
    419          		memcpy(&man_data_work.write[0], (void const *)(MAN_DATA_PRG_A_ADDR_TOP + i * MAN_DATA_FLASH_SIZE), MAN_DATA_FLASH_SIZE);
    420          		man_data_data_write_flash((MAN_DATA_PRG_B_ADDR_TOP + i * MAN_DATA_FLASH_SIZE), &man_data_work.write[0], MAN_DATA_FLASH_SIZE);
    421          	}
    422          	man_data_program_mrg_set_flash(MAN_DATA_PRG_B_SIDE);
    423          	man_data_work.prg_side = MAN_DATA_PRG_A_SIDE;
    424          #endif
    425          //  強制的にA面に切り替える
    426          //	man_data_program_mrg_set_flash(MAN_DATA_PRG_A_SIDE);
    427          
    428          	// 設定データFLASHから取り出す
    429          	man_data_setting_get_flash(&bank);
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x.... 0x....      BL       man_data_setting_get_flash
    430          
    431          	// 設定値バンク情報を保存
    432          	man_data_work.set_bank = bank;
   \   00000028   0x9800             LDR      R0,[SP, #+0]
   \   0000002A   0x....             LDR      R1,??DataTable27_2
   \   0000002C   0x6048             STR      R0,[R1, #+4]
    433          
    434          	// 未登録の場合は登録する
    435          	if (man_data_work.set_bank == MAN_DATA_BANK_MAX) {
   \   0000002E   0x....             LDR      R0,??DataTable27_2
   \   00000030   0x6840             LDR      R0,[R0, #+4]
   \   00000032   0x2810             CMP      R0,#+16
   \   00000034   0xD102             BNE      ??man_data_init_0
    436          		man_data_setting_set_flash(&man_data_work.set_bank);
   \   00000036   0x....             LDR      R0,??DataTable28
   \   00000038   0x.... 0x....      BL       man_data_setting_set_flash
    437          	}
    438          
    439          	// flash driver使用終了
    440          	flash_end();
   \                     ??man_data_init_0: (+1)
   \   0000003C   0x.... 0x....      BL       flash_end
    441          
    442          	// その他情報を初期化する
    443          	memcpy(&man_data_work.other_info, &other_tbl, sizeof(man_data_work.other_info));
   \   00000040   0x2278             MOVS     R2,#+120
   \   00000042   0x....             LDR      R1,??DataTable29
   \   00000044   0x....             LDR      R4,??DataTable29_1
   \   00000046   0x0020             MOVS     R0,R4
   \   00000048   0x.... 0x....      BL       __aeabi_memcpy
    444          
    445          	// 固定値情報を初期化する
    446          	memcpy(&man_data_work.fixed_info, &fixed_tbl, sizeof(man_data_work.fixed_info));
   \   0000004C   0x221C             MOVS     R2,#+28
   \   0000004E   0x....             LDR      R1,??DataTable30
   \   00000050   0x....             LDR      R4,??DataTable30_1
   \   00000052   0x0020             MOVS     R0,R4
   \   00000054   0x.... 0x....      BL       __aeabi_memcpy
    447          
    448          	// 端末バージョン情報を更新する
    449          	man_version_get_data(&man_data_work.other_info.term_version[0]);
   \   00000058   0x....             LDR      R0,??DataTable35
   \   0000005A   0x.... 0x....      BL       man_version_get_data
    450          
    451          }
   \   0000005E   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    452          
    453          /********************************************************************/
    454          /*!
    455           * \name	man_data_1000ms_main
    456           * \brief	1000ms毎に行う処理
    457           * \param	なし
    458           * \return  なし
    459           * \note	1000ms毎に、呼ばれること
    460           */
    461          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    462          void man_data_1000ms_main( void )
    463          {
   \                     man_data_1000ms_main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    464          	man_data_collect_sensor();
   \   00000002   0x.... 0x....      BL       man_data_collect_sensor
    465          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    466          
    467          
    468          /********************************************************************/
    469          /*!
    470           * \name	man_data_chk_program
    471           * \brief	プログラムの動作面取得処理
    472           * \param	なし
    473           * \return  MAN_DATA_PRG_A_SIDE
    474           *          MAN_DATA_PRG_B_SIDE
    475           * \note	必要時に呼ばれること
    476           */
    477          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    478          int32_t man_data_chk_program( void )
    479          {
    480          	return man_data_work.prg_side;
   \                     man_data_chk_program: (+1)
   \   00000000   0x....             LDR      R0,??DataTable27_2
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    481          }
    482          
    483          
    484          
    485          /********************************************************************/
    486          /*!
    487           * \name	man_data_program_write_flash
    488           * \brief	programをFLASHに書き込む処理
    489           * \param	top      ; 書き込み位置
    490           *          buff     : 書き込むデータ
    491           *          length   : データ長 (最大はMAN_DATA_FLASH_SIZE)
    492           *          callback : 完了を通知するcallback関数
    493           * \return  0  : 成功
    494           *          -1 : 失敗
    495           * \note	FLASH WRITEに30秒程度かかるため分割して書き込む
    496           */
    497          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    498          int32_t man_data_program_write_flash( uint32_t top, uint8_t *buff, uint32_t  length, func_man_data callback  )
    499          {
    500          	int32_t			ret=0;
   \                     man_data_program_write_flash: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
    501          
    502          	return ret;
   \   00000002   0x4770             BX       LR               ;; return
    503          }
    504          
    505          /********************************************************************/
    506          /*!
    507           * \name	man_data_data_write_flash
    508           * \brief	データをFLASHに書き込む処理
    509           * \param	top    ; 書き込み位置
    510           *          buff   : 書き込むデータ
    511           *          length : データ長 (最大はMAN_DATA_FLASH_SIZE)
    512           * \return  0  : 成功
    513           *          -1 : 失敗
    514           * \note	
    515           */
    516          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    517          int32_t man_data_data_write_flash( uint32_t top, uint8_t *buff, uint32_t  length  )
    518          {
   \                     man_data_data_write_flash: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0017             MOVS     R7,R2
    519          	int32_t			ret=-1;
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x43E4             MVNS     R4,R4            ;; #-1
    520          
    521          	if ( (buff != NULL) && (length <= MAN_DATA_FLASH_SIZE) ) {
   \   0000000C   0x2D00             CMP      R5,#+0
   \   0000000E   0xD024             BEQ      ??man_data_data_write_flash_0
   \   00000010   0x....             LDR      R0,??DataTable33  ;; 0x1001
   \   00000012   0x4287             CMP      R7,R0
   \   00000014   0xD221             BCS      ??man_data_data_write_flash_0
    522          
    523          		// flash driver使用開始
    524          		flash_start();
   \   00000016   0x.... 0x....      BL       flash_start
    525          
    526          		// FLASH消去
    527          		ret = flash_erase_sector(top);
   \   0000001A   0x0030             MOVS     R0,R6
   \   0000001C   0x.... 0x....      BL       flash_erase_sector
   \   00000020   0x0004             MOVS     R4,R0
    528          
    529          		// FLASH書き込み
    530          		if (ret >= 0) {
   \   00000022   0x2C00             CMP      R4,#+0
   \   00000024   0xD405             BMI      ??man_data_data_write_flash_1
    531          			ret = flash_write(top, buff, length);
   \   00000026   0x003A             MOVS     R2,R7
   \   00000028   0x0029             MOVS     R1,R5
   \   0000002A   0x0030             MOVS     R0,R6
   \   0000002C   0x.... 0x....      BL       flash_write
   \   00000030   0x0004             MOVS     R4,R0
    532          		}
    533          
    534          		// FLASH読み込み
    535          		if (ret >= 0) {
   \                     ??man_data_data_write_flash_1: (+1)
   \   00000032   0x2C00             CMP      R4,#+0
   \   00000034   0xD404             BMI      ??man_data_data_write_flash_2
    536          			flash_read(top, &man_data_work.read[0], length);
   \   00000036   0x003A             MOVS     R2,R7
   \   00000038   0x....             LDR      R1,??DataTable41
   \   0000003A   0x0030             MOVS     R0,R6
   \   0000003C   0x.... 0x....      BL       flash_read
    537          		}
    538          	
    539          		// 比較
    540          		if (ret >= 0) {
   \                     ??man_data_data_write_flash_2: (+1)
   \   00000040   0x2C00             CMP      R4,#+0
   \   00000042   0xD408             BMI      ??man_data_data_write_flash_3
    541          			if (memcmp(&man_data_work.read[0], buff, length) != 0) {
   \   00000044   0x003A             MOVS     R2,R7
   \   00000046   0x0029             MOVS     R1,R5
   \   00000048   0x....             LDR      R0,??DataTable41
   \   0000004A   0x.... 0x....      BL       memcmp
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD001             BEQ      ??man_data_data_write_flash_3
    542          				ret = -1;
   \   00000052   0x2400             MOVS     R4,#+0
   \   00000054   0x43E4             MVNS     R4,R4            ;; #-1
    543          			}
    544          		}
    545          
    546          		// flash driver使用終了
    547          		flash_end();
   \                     ??man_data_data_write_flash_3: (+1)
   \   00000056   0x.... 0x....      BL       flash_end
    548          
    549          	}
    550          
    551          
    552          	return ret;
   \                     ??man_data_data_write_flash_0: (+1)
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    553          }
    554          
    555          
    556          /********************************************************************/
    557          /*!
    558           * \name	man_data_program_mrg_set_flash
    559           * \brief	プログラムの動作面を設定する処理
    560           * \param	side  ; MAN_DATA_PRG_A_SIDE    : A面
    561           *                : MAN_DATA_PRG_B_SIDE    : B面
    562           * \return  0  : 成功
    563           *          -1 : 失敗
    564           * \note	
    565           */
    566          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    567          int32_t man_data_program_mrg_set_flash( int32_t side  )
    568          {
   \                     man_data_program_mrg_set_flash: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    569          	uint32_t		write_top;
    570          	uint32_t		erase_top;
    571          	int32_t			ret;
    572          
    573          	if (side != MAN_DATA_PRG_B_SIDE) {
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xD004             BEQ      ??man_data_program_mrg_set_flash_0
    574          		write_top = MAN_DATA_MAGIC_A_ADDR_TOP;
   \   00000006   0x25FC             MOVS     R5,#+252
   \   00000008   0x02AD             LSLS     R5,R5,#+10       ;; #+258048
    575          		erase_top = MAN_DATA_MAGIC_B_ADDR_TOP;
   \   0000000A   0x26DE             MOVS     R6,#+222
   \   0000000C   0x02F6             LSLS     R6,R6,#+11       ;; #+454656
   \   0000000E   0xE003             B        ??man_data_program_mrg_set_flash_1
    576          	}
    577          	else {
    578          		write_top = MAN_DATA_MAGIC_B_ADDR_TOP;
   \                     ??man_data_program_mrg_set_flash_0: (+1)
   \   00000010   0x25DE             MOVS     R5,#+222
   \   00000012   0x02ED             LSLS     R5,R5,#+11       ;; #+454656
    579          		erase_top = MAN_DATA_MAGIC_A_ADDR_TOP;
   \   00000014   0x26FC             MOVS     R6,#+252
   \   00000016   0x02B6             LSLS     R6,R6,#+10       ;; #+258048
    580          	}
    581          
    582          	// flash driver使用開始
    583          	flash_start();
   \                     ??man_data_program_mrg_set_flash_1: (+1)
   \   00000018   0x.... 0x....      BL       flash_start
    584          
    585          	memcpy(&man_data_work.write[0], &magic_number_prg_tbl[0], MAN_DATA_MAGIC_NUMBER_SIZE);
   \   0000001C   0x2210             MOVS     R2,#+16
   \   0000001E   0x....             LDR      R1,??DataTable15
   \   00000020   0x....             LDR      R4,??DataTable41_1
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy
    586          
    587          	// 書き込み面 FLASH消去
    588          	ret = flash_erase_sector(write_top);
   \   00000028   0x0028             MOVS     R0,R5
   \   0000002A   0x.... 0x....      BL       flash_erase_sector
   \   0000002E   0x0004             MOVS     R4,R0
    589          
    590          	// 書き込み面 FLASH書き込み
    591          	if (ret >= 0) {
   \   00000030   0x2C00             CMP      R4,#+0
   \   00000032   0xD405             BMI      ??man_data_program_mrg_set_flash_2
    592          		ret = flash_write(write_top, &man_data_work.write[0], MAN_DATA_MAGIC_NUMBER_SIZE);
   \   00000034   0x2210             MOVS     R2,#+16
   \   00000036   0x....             LDR      R1,??DataTable41_1
   \   00000038   0x0028             MOVS     R0,R5
   \   0000003A   0x.... 0x....      BL       flash_write
   \   0000003E   0x0004             MOVS     R4,R0
    593          	}
    594          
    595          	// FLASH読み込み
    596          	if (ret >= 0) {
   \                     ??man_data_program_mrg_set_flash_2: (+1)
   \   00000040   0x2C00             CMP      R4,#+0
   \   00000042   0xD404             BMI      ??man_data_program_mrg_set_flash_3
    597          		flash_read(write_top, &man_data_work.read[0], MAN_DATA_MAGIC_NUMBER_SIZE);
   \   00000044   0x2210             MOVS     R2,#+16
   \   00000046   0x....             LDR      R1,??DataTable41
   \   00000048   0x0028             MOVS     R0,R5
   \   0000004A   0x.... 0x....      BL       flash_read
    598          	}
    599          	
    600          	// 比較
    601          	if (ret >= 0) {
   \                     ??man_data_program_mrg_set_flash_3: (+1)
   \   0000004E   0x2C00             CMP      R4,#+0
   \   00000050   0xD408             BMI      ??man_data_program_mrg_set_flash_4
    602          		if (memcmp(&man_data_work.read[0], &man_data_work.write[0], MAN_DATA_MAGIC_NUMBER_SIZE) != 0) {
   \   00000052   0x2210             MOVS     R2,#+16
   \   00000054   0x....             LDR      R1,??DataTable41_1
   \   00000056   0x....             LDR      R0,??DataTable41
   \   00000058   0x.... 0x....      BL       memcmp
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD001             BEQ      ??man_data_program_mrg_set_flash_4
    603          			ret = -1;
   \   00000060   0x2400             MOVS     R4,#+0
   \   00000062   0x43E4             MVNS     R4,R4            ;; #-1
    604          		}
    605          	}
    606          
    607          	// 旧データ消去
    608          	if (ret >= 0) {
   \                     ??man_data_program_mrg_set_flash_4: (+1)
   \   00000064   0x2C00             CMP      R4,#+0
   \   00000066   0xD403             BMI      ??man_data_program_mrg_set_flash_5
    609          		ret = flash_erase_sector(erase_top);
   \   00000068   0x0030             MOVS     R0,R6
   \   0000006A   0x.... 0x....      BL       flash_erase_sector
   \   0000006E   0x0004             MOVS     R4,R0
    610          	}
    611          
    612          	// flash driver使用終了
    613          	flash_end();
   \                     ??man_data_program_mrg_set_flash_5: (+1)
   \   00000070   0x.... 0x....      BL       flash_end
    614          
    615          	return ret;
   \   00000074   0x0020             MOVS     R0,R4
   \   00000076   0xBD70             POP      {R4-R6,PC}       ;; return
    616          }
    617          
    618          
    619          
    620          
    621          /********************************************************************/
    622          /*!
    623           * \name	man_data_write_flash
    624           * \brief	設定データをFLASHに書き込む処理
    625           * \param	なし
    626           * \return  なし
    627           * \note	必要時に呼ばれること
    628           */
    629          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    630          void man_data_write_flash( void )
    631          {
   \                     man_data_write_flash: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    632          	// flash driver使用開始
    633          	flash_start();
   \   00000002   0x.... 0x....      BL       flash_start
    634          
    635          	// FLASHに保存する
    636          	man_data_setting_set_flash(&man_data_work.set_bank);
   \   00000006   0x....             LDR      R0,??DataTable28
   \   00000008   0x.... 0x....      BL       man_data_setting_set_flash
    637          
    638          	// flash driver使用終了
    639          	flash_end();
   \   0000000C   0x.... 0x....      BL       flash_end
    640          }
   \   00000010   0xBD01             POP      {R0,PC}          ;; return
    641          
    642          /********************************************************************/
    643          /*!
    644           * \name	man_data_req_factory_reset
    645           * \brief	設定データを出荷時状態にリセットする処理
    646           * \param	なし
    647           * \return  なし
    648           * \note	必要時に呼ばれること
    649           */
    650          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    651          void man_data_req_factory_reset( void )
    652          {
   \                     man_data_req_factory_reset: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    653          	// 出荷時設定
    654          	memcpy(&man_data_work.setting_info, &factory_tbl, sizeof(man_data_work.setting_info));
   \   00000002   0x22F0             MOVS     R2,#+240
   \   00000004   0x0052             LSLS     R2,R2,#+1        ;; #+480
   \   00000006   0x....             LDR      R1,??DataTable27
   \   00000008   0x....             LDR      R4,??DataTable10
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy
    655          	// 設定データをFLASHに書き込む
    656          	man_data_write_flash();
   \   00000010   0x.... 0x....      BL       man_data_write_flash
    657          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    658          
    659          
    660          /********************************************************************/
    661          /*!
    662           * \name	man_data_set_setting_gprs
    663           * \brief	LTE接続設定情報を設定する処理
    664           * \param	gprs  : LTE接続設定情報
    665           * \return  なし
    666           * \note	必要時に呼ばれること
    667           */
    668          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    669          void man_data_set_setting_gprs(man_data_num_gprs_t gprs)
    670          {
   \                     man_data_set_setting_gprs: (+1)
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB580             PUSH     {R7,LR}
    671          	man_data_work.setting_info.gprs_num = gprs;
   \   00000004   0x....             LDR      R0,??DataTable10
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x22AF             MOVS     R2,#+175
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
    672          }
   \   0000000E   0x9801             LDR      R0,[SP, #+4]
   \   00000010   0xB006             ADD      SP,SP,#+24
   \   00000012   0x4700             BX       R0               ;; return
    673          
    674          /********************************************************************/
    675          /*!
    676           * \name	man_data_get_setting_gprs
    677           * \brief	LTE接続設定情報を取得する処理
    678           * \param	なし
    679           * \return  LTE接続設定情報へのポインタ
    680           * \note	必要時に呼ばれること
    681           */
    682          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    683          man_data_num_gprs_t * man_data_get_setting_gprs( void )
    684          {
    685          	return &man_data_work.setting_info.gprs_num;
   \                     man_data_get_setting_gprs: (+1)
   \   00000000   0x....             LDR      R0,??DataTable43
   \   00000002   0x4770             BX       LR               ;; return
    686          }
    687          
    688          /********************************************************************/
    689          /*!
    690           * \name	man_data_set_setting_gpssleeptime
    691           * \brief	GPS測位結果出力サイクル設定情報を設定する処理
    692           * \param	gpssleeptime : GPS測位結果出力サイクル設定情報
    693           * \return  なし
    694           * \note	必要時に呼ばれること
    695           */
    696          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    697          void man_data_set_setting_gpssleeptime(man_data_num_gpssleeptime_t gpssleeptime)
    698          {
   \                     man_data_set_setting_gpssleeptime: (+1)
   \   00000000   0xB50F             PUSH     {R0-R3,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
    699          	man_data_work.setting_info.gpssleeptime_num = gpssleeptime;
   \   00000004   0x....             LDR      R0,??DataTable43_1
   \   00000006   0xA901             ADD      R1,SP,#+4
   \   00000008   0x2210             MOVS     R2,#+16
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
    700          }
   \   0000000E   0xB005             ADD      SP,SP,#+20
   \   00000010   0xBD00             POP      {PC}             ;; return
    701          
    702          /********************************************************************/
    703          /*!
    704           * \name	man_data_get_setting_gpssleeptime
    705           * \brief	GPS測位結果出力サイクル設定情報を取得する処理
    706           * \param	なし
    707           * \return  GPS測位結果出力サイクル設定情報へのポインタ
    708           * \note	必要時に呼ばれること
    709           */
    710          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    711          man_data_num_gpssleeptime_t * man_data_get_setting_gpssleeptime( void )
    712          {
    713          	return &man_data_work.setting_info.gpssleeptime_num;
   \                     man_data_get_setting_gpssleeptime: (+1)
   \   00000000   0x....             LDR      R0,??DataTable43_1
   \   00000002   0x4770             BX       LR               ;; return
    714          }
    715          
    716          
    717          /********************************************************************/
    718          /*!
    719           * \name	man_data_set_setting_batalarm
    720           * \brief	バッテリ残量警告閾値設定情報を設定する処理
    721           * \param	batalarm : バッテリ残量警告閾値設定情報
    722           * \return  なし
    723           * \note	必要時に呼ばれること
    724           */
    725          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    726          void man_data_set_setting_batalarm(man_data_num_batalarm_t batalarm)
    727          {
   \                     man_data_set_setting_batalarm: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    728          	man_data_work.setting_info.batalarm_num = batalarm;
   \   00000004   0x....             LDR      R0,??DataTable43_2
   \   00000006   0x6004             STR      R4,[R0, #+0]
    729          	man_data_work.setting_info.other_num.batt_low_error_num = batalarm.alarm_bat_num - (batalarm.alarm_bat_num % 10);
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x210A             MOVS     R1,#+10
   \   0000000C   0x.... 0x....      BL       __aeabi_uidivmod
   \   00000010   0x1A60             SUBS     R0,R4,R1
   \   00000012   0x....             LDR      R1,??DataTable43_3
   \   00000014   0x6008             STR      R0,[R1, #+0]
    730          }
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
    731          
    732          /********************************************************************/
    733          /*!
    734           * \name	man_data_get_setting_batalarm
    735           * \brief	バッテリ残量警告閾値設定情報を取得する処理
    736           * \param	なし
    737           * \return  バッテリ残量警告閾値設定情報へのポインタ
    738           * \note	必要時に呼ばれること
    739           */
    740          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    741          man_data_num_batalarm_t * man_data_get_setting_batalarm( void )
    742          {
    743          	return &man_data_work.setting_info.batalarm_num;
   \                     man_data_get_setting_batalarm: (+1)
   \   00000000   0x....             LDR      R0,??DataTable43_2
   \   00000002   0x4770             BX       LR               ;; return
    744          }
    745          
    746          /********************************************************************/
    747          /*!
    748           * \name	man_data_set_setting_sensor
    749           * \brief	加速度センサー閾値設定情報を設定する処理
    750           * \param	sensor : 加速度センサー閾値設定情報
    751           * \return  なし
    752           * \note	必要時に呼ばれること
    753           */
    754          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    755          void man_data_set_setting_sensor(man_data_num_sensor_t sensor)
    756          {
    757          	man_data_work.setting_info.sensor_num = sensor;
   \                     man_data_set_setting_sensor: (+1)
   \   00000000   0x....             LDR      R1,??DataTable43_4
   \   00000002   0x6008             STR      R0,[R1, #+0]
    758          }
   \   00000004   0x4770             BX       LR               ;; return
    759          
    760          /********************************************************************/
    761          /*!
    762           * \name	man_data_get_setting_sensor
    763           * \brief	加速度センサー閾値設定情報を取得する処理
    764           * \param	なし
    765           * \return  加速度センサー閾値設定情報へのポインタ
    766           * \note	必要時に呼ばれること
    767           */
    768          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    769          man_data_num_sensor_t * man_data_get_setting_sensor( void )
    770          {
    771          	return &man_data_work.setting_info.sensor_num;
   \                     man_data_get_setting_sensor: (+1)
   \   00000000   0x....             LDR      R0,??DataTable43_4
   \   00000002   0x4770             BX       LR               ;; return
    772          }
    773          
    774          
    775          /********************************************************************/
    776          /*!
    777           * \name	man_data_set_setting_alarmtime
    778           * \brief	定刻測位時間帯設定情報を設定する処理
    779           * \param	alarmtime : 定刻測位時間帯設定情報
    780           * \return  なし
    781           * \note	必要時に呼ばれること
    782           */
    783          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    784          void man_data_set_setting_alarmtime(man_data_num_alarmtime_t alarmtime)
    785          {
    786              man_data_work.setting_info.alarmtime_num = alarmtime;
   \                     man_data_set_setting_alarmtime: (+1)
   \   00000000   0x....             LDR      R1,??DataTable43_5
   \   00000002   0x6008             STR      R0,[R1, #+0]
    787          }
   \   00000004   0x4770             BX       LR               ;; return
    788          
    789          /********************************************************************/
    790          /*!
    791           * \name	man_data_set_setting_alarmtime2
    792           * \brief	定刻測位時間帯設定情報を設定する処理
    793           * \param	alarmtime : 定刻測位時間帯設定情報
    794           * \return  なし
    795           * \note	必要時に呼ばれること
    796           */
    797          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    798          void man_data_set_setting_almtrtime(man_data_num_alarmtime_t alarmtime, int32_t alarm_transfer_time)
    799          {
    800            //man_data_work.setting_info.alarmtime_num = alarmtime;
    801            man_data_work.setting_info.other_num.alarm_transfer_time = alarm_transfer_time;
   \                     man_data_set_setting_almtrtime: (+1)
   \   00000000   0x....             LDR      R0,??DataTable43_6
   \   00000002   0x6001             STR      R1,[R0, #+0]
    802          }
   \   00000004   0x4770             BX       LR               ;; return
    803          
    804          /********************************************************************/
    805          /*!
    806           * \name	man_data_get_setting_alarmtime
    807           * \brief	定刻測位時間帯設定情報を取得する処理
    808           * \param	なし
    809           * \return  定刻測位時間帯設定情報へのポインタ
    810           * \note	必要時に呼ばれること
    811           */
    812          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    813          man_data_num_alarmtime_t * man_data_get_setting_alarmtime( void )
    814          {
    815          	return &man_data_work.setting_info.alarmtime_num;
   \                     man_data_get_setting_alarmtime: (+1)
   \   00000000   0x....             LDR      R0,??DataTable43_5
   \   00000002   0x4770             BX       LR               ;; return
    816          }
    817          
    818          
    819          /********************************************************************/
    820          /*!
    821           * \name	man_data_set_setting_other
    822           * \brief	その他の設定情報を設定する処理
    823           * \param	other : その他の設定情報
    824           * \return  なし
    825           * \note	必要時に呼ばれること
    826           */
    827          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    828          void man_data_set_setting_other(man_data_num_other_t other)
    829          {
   \                     man_data_set_setting_other: (+1)
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB580             PUSH     {R7,LR}
    830          	man_data_work.setting_info.other_num = other;
   \   00000004   0x....             LDR      R0,??DataTable43_3
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x2214             MOVS     R2,#+20
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
    831          }
   \   0000000E   0x9801             LDR      R0,[SP, #+4]
   \   00000010   0xB006             ADD      SP,SP,#+24
   \   00000012   0x4700             BX       R0               ;; return
    832          
    833          /********************************************************************/
    834          /*!
    835           * \name	man_data_get_setting_other
    836           * \brief	その他の設定情報を取得する処理
    837           * \param	なし
    838           * \return  その他の設定情報へのポインタ
    839           * \note	必要時に呼ばれること
    840           */
    841          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    842          man_data_num_other_t * man_data_get_setting_other( void )
    843          {
    844          	return &man_data_work.setting_info.other_num;
   \                     man_data_get_setting_other: (+1)
   \   00000000   0x....             LDR      R0,??DataTable43_3
   \   00000002   0x4770             BX       LR               ;; return
    845          }
    846          
    847          
    848          /********************************************************************/
    849          /*!
    850           * \name	man_data_set_imei
    851           * \brief	IMEI設定情報を設定する処理
    852           * \param	imei  : 設定するIMEI
    853           * \return  なし
    854           * \note	必要時に呼ばれること
    855           */
    856          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    857          void man_data_set_imei( uint8_t *imei )
    858          {
   \                     man_data_set_imei: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    859          	memcpy(&man_data_work.other_info.imei[0], imei, MAN_DATA_IMEI_LENGTH);
   \   00000002   0x220F             MOVS     R2,#+15
   \   00000004   0x....             LDR      R4,??DataTable29_1
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
    860          }
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
    861          
    862          /********************************************************************/
    863          /*!
    864           * \name	man_data_set_revision
    865           * \brief	revision情報を設定する処理
    866           * \param	revision  : 設定するrevision
    867           * \return  なし
    868           * \note	必要時に呼ばれること
    869           */
    870          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    871          void man_data_set_revision( uint8_t *revision )
    872          {
   \                     man_data_set_revision: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    873          	memcpy(&man_data_work.other_info.revision[0], revision, MAN_DATA_REVISION_LENGTH);
   \   00000002   0x2210             MOVS     R2,#+16
   \   00000004   0x....             LDR      R4,??DataTable44
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
    874          }
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
    875          
    876          /********************************************************************/
    877          /*!
    878           * \name	man_data_set_ipaddr
    879           * \brief	ip address情報を設定する処理
    880           * \param	ipaddr  : 設定するip address
    881           * \return  なし
    882           * \note	必要時に呼ばれること
    883           */
    884          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    885          void man_data_set_ipaddr( uint8_t *ipaddr )
    886          {
   \                     man_data_set_ipaddr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    887          	memcpy(&man_data_work.other_info.ipaddr[0], ipaddr, MAN_DATA_IP_LENGTH);
   \   00000002   0x220F             MOVS     R2,#+15
   \   00000004   0x....             LDR      R4,??DataTable44_1
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
    888          }
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
    889          
    890          /********************************************************************/
    891          /*!
    892           * \name	man_data_set_cid
    893           * \brief	CID設定情報を設定する処理
    894           * \param	cid  : 設定するCID
    895           * \return  なし
    896           * \note	必要時に呼ばれること
    897           */
    898          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    899          void man_data_set_cid( uint8_t *cid )
    900          {
   \                     man_data_set_cid: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    901          	memcpy(&man_data_work.other_info.cid[0], cid, MAN_DATA_CID_LENGTH);
   \   00000002   0x2208             MOVS     R2,#+8
   \   00000004   0x....             LDR      R4,??DataTable44_2
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
    902          }
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
    903          
    904          /********************************************************************/
    905          /*!
    906           * \name	man_data_set_battery_alarm
    907           * \brief	CID設定情報を設定する処理
    908           * \param	battery_alarm  : バッテリー残量警告しきい値[0%-100%]
    909           * \return  なし
    910           * \note	必要時に呼ばれること
    911           */
    912          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    913          void man_data_set_battery_alarm( uint32_t battery_alarm )
    914          {
    915          	man_data_work.other_info.battery_alarm = battery_alarm;
   \                     man_data_set_battery_alarm: (+1)
   \   00000000   0x....             LDR      R1,??DataTable44_3
   \   00000002   0x6008             STR      R0,[R1, #+0]
    916          }
   \   00000004   0x4770             BX       LR               ;; return
    917          
    918          
    919          /********************************************************************/
    920          /*!
    921           * \name	man_data_set_term_version
    922           * \brief	端末バージョン情報を設定する処理
    923           * \param	data  : 端末バージョン情報
    924           * \return  なし
    925           * \note	必要時に呼ばれること
    926           */
    927          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    928          void man_data_set_term_version( uint8_t *data, int32_t length )
    929          {
   \                     man_data_set_term_version: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
    930          	if (length <= MAN_DATA_TERM_VER_LENGTH) {
   \   00000004   0x2C31             CMP      R4,#+49
   \   00000006   0xDA0A             BGE      ??man_data_set_term_version_0
    931          		memcpy(&man_data_work.other_info.term_version, data, length);
   \   00000008   0x....             LDR      R5,??DataTable35
   \   0000000A   0x0022             MOVS     R2,R4
   \   0000000C   0x0001             MOVS     R1,R0
   \   0000000E   0x0028             MOVS     R0,R5
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy
    932          		man_data_work.other_info.term_version[length] = NULL;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR      R1,??DataTable44_4
   \   00000018   0x1909             ADDS     R1,R1,R4
   \   0000001A   0x....             LDR      R2,??DataTable44_5  ;; 0x2a3c
   \   0000001C   0x5488             STRB     R0,[R1, R2]
    933          	}
    934          }
   \                     ??man_data_set_term_version_0: (+1)
   \   0000001E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    935          
    936          
    937          /********************************************************************/
    938          /*!
    939           * \name	man_data_set_gps_version
    940           * \brief	GPSバージョン情報を設定する処理
    941           * \param	data  : 端末バージョン情報
    942           * \return  なし
    943           * \note	必要時に呼ばれること
    944           */
    945          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    946          void man_data_set_gps_version( uint8_t *data, int32_t length )
    947          {
   \                     man_data_set_gps_version: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
    948          	if (length <= MAN_DATA_GPS_VER_LENGTH) {
   \   00000004   0x2C06             CMP      R4,#+6
   \   00000006   0xDA0A             BGE      ??man_data_set_gps_version_0
    949          		memcpy(&man_data_work.other_info.gps_version, data, length);
   \   00000008   0x....             LDR      R5,??DataTable44_6
   \   0000000A   0x0022             MOVS     R2,R4
   \   0000000C   0x0001             MOVS     R1,R0
   \   0000000E   0x0028             MOVS     R0,R5
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy
    950          		man_data_work.other_info.gps_version[length] = NULL;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR      R1,??DataTable44_4
   \   00000018   0x1909             ADDS     R1,R1,R4
   \   0000001A   0x....             LDR      R2,??DataTable44_7  ;; 0x2a6d
   \   0000001C   0x5488             STRB     R0,[R1, R2]
    951          	}
    952          }
   \                     ??man_data_set_gps_version_0: (+1)
   \   0000001E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    953          
    954          /********************************************************************/
    955          /*!
    956           * \name	man_data_set_setting_otastart
    957           * \brief	otastart情報を設定する処理
    958           * \param	otastart  : otastart情報
    959           * \return  なし
    960           * \note	必要時に呼ばれること
    961           */
    962          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    963          void man_data_set_setting_otastart(man_data_num_otastart_t otastart)
    964          {
   \                     man_data_set_setting_otastart: (+1)
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB580             PUSH     {R7,LR}
    965          	man_data_work.temp_info.otastart_num = otastart;
   \   00000004   0x....             LDR      R0,??DataTable44_8
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x22FF             MOVS     R2,#+255
   \   0000000A   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy
    966          }
   \   00000010   0x9801             LDR      R0,[SP, #+4]
   \   00000012   0xB006             ADD      SP,SP,#+24
   \   00000014   0x4700             BX       R0               ;; return
    967          
    968          /********************************************************************/
    969          /*!
    970           * \name	man_data_get_setting_otastart
    971           * \brief	otastart情報を取得する処理
    972           * \param	なし
    973           * \return  otastart情報へのポインタ
    974           * \note	必要時に呼ばれること
    975           */
    976          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    977          man_data_num_otastart_t * man_data_get_setting_otastart( void )
    978          {
    979          	return &man_data_work.temp_info.otastart_num;
   \                     man_data_get_setting_otastart: (+1)
   \   00000000   0x....             LDR      R0,??DataTable44_8
   \   00000002   0x4770             BX       LR               ;; return
    980          }
    981          
    982          /********************************************************************/
    983          /*!
    984           * \name	man_data_set_setting_gpsota
    985           * \brief	gpsota情報を設定する処理
    986           * \param	gpsota  : gpsota情報
    987           * \return  なし
    988           * \note	必要時に呼ばれること
    989           */
    990          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    991          void man_data_set_setting_gpsota(man_data_num_gpsota_t gpsota)
    992          {
   \                     man_data_set_setting_gpsota: (+1)
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB580             PUSH     {R7,LR}
    993          	man_data_work.temp_info.gpsota_num = gpsota;
   \   00000004   0x....             LDR      R0,??DataTable44_9
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x....             LDR      R2,??DataTable44_10  ;; 0x20f
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
    994          }
   \   0000000E   0x9801             LDR      R0,[SP, #+4]
   \   00000010   0xB006             ADD      SP,SP,#+24
   \   00000012   0x4700             BX       R0               ;; return
    995          
    996          /********************************************************************/
    997          /*!
    998           * \name	man_data_get_setting_gpsota
    999           * \brief	gpsota情報を取得する処理
   1000           * \param	なし
   1001           * \return  gpsota情報へのポインタ
   1002           * \note	必要時に呼ばれること
   1003           */
   1004          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1005          man_data_num_gpsota_t * man_data_get_setting_gpsota( void )
   1006          {
   1007          	return &man_data_work.temp_info.gpsota_num;
   \                     man_data_get_setting_gpsota: (+1)
   \   00000000   0x....             LDR      R0,??DataTable44_9
   \   00000002   0x4770             BX       LR               ;; return
   1008          }
   1009          
   1010          /********************************************************************/
   1011          /*!
   1012           * \name	man_data_set_setting_usbota
   1013           * \brief	usbota情報を設定する処理
   1014           * \param	usbota  : usbota情報
   1015           * \return  なし
   1016           * \note	必要時に呼ばれること
   1017           */
   1018          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1019          void man_data_set_setting_usbota(man_data_num_usbota_t usbota)
   1020          {
   \                     man_data_set_setting_usbota: (+1)
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB580             PUSH     {R7,LR}
   1021          	man_data_work.temp_info.usbota_num = usbota;
   \   00000004   0x....             LDR      R0,??DataTable44_11
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x2282             MOVS     R2,#+130
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
   1022          }
   \   0000000E   0x9801             LDR      R0,[SP, #+4]
   \   00000010   0xB006             ADD      SP,SP,#+24
   \   00000012   0x4700             BX       R0               ;; return
   1023          
   1024          /********************************************************************/
   1025          /*!
   1026           * \name	man_data_get_setting_usbota
   1027           * \brief	usbota情報を取得する処理
   1028           * \param	なし
   1029           * \return  usbota情報へのポインタ
   1030           * \note	必要時に呼ばれること
   1031           */
   1032          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1033          man_data_num_usbota_t * man_data_get_setting_usbota( void )
   1034          {
   1035          	return &man_data_work.temp_info.usbota_num;
   \                     man_data_get_setting_usbota: (+1)
   \   00000000   0x....             LDR      R0,??DataTable44_11
   \   00000002   0x4770             BX       LR               ;; return
   1036          }
   1037          
   1038          /********************************************************************/
   1039          /*!
   1040           * \name	man_data_set_setting_usbgpsota
   1041           * \brief	usbgpsota情報を設定する処理
   1042           * \param	usbgpsota  : usbgpsota情報
   1043           * \return  なし
   1044           * \note	必要時に呼ばれること
   1045           */
   1046          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1047          void man_data_set_setting_usbgpsota(man_data_num_usbgpsota_t usbgpsota)
   1048          {
   \                     man_data_set_setting_usbgpsota: (+1)
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB580             PUSH     {R7,LR}
   1049          	man_data_work.temp_info.usbgpsota_num = usbgpsota;
   \   00000004   0x....             LDR      R0,??DataTable44_12
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x22C3             MOVS     R2,#+195
   \   0000000A   0x0052             LSLS     R2,R2,#+1        ;; #+390
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy
   1050          }
   \   00000010   0x9801             LDR      R0,[SP, #+4]
   \   00000012   0xB006             ADD      SP,SP,#+24
   \   00000014   0x4700             BX       R0               ;; return
   1051          
   1052          /********************************************************************/
   1053          /*!
   1054           * \name	man_data_get_setting_usbgpsota
   1055           * \brief	usbgpsota情報を取得する処理
   1056           * \param	なし
   1057           * \return  usbgpsota情報へのポインタ
   1058           * \note	必要時に呼ばれること
   1059           */
   1060          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1061          man_data_num_usbgpsota_t * man_data_get_setting_usbgpsota( void )
   1062          {
   1063          	return &man_data_work.temp_info.usbgpsota_num;
   \                     man_data_get_setting_usbgpsota: (+1)
   \   00000000   0x....             LDR      R0,??DataTable44_12
   \   00000002   0x4770             BX       LR               ;; return
   1064          }
   1065          
   1066          /********************************************************************/
   1067          /*!
   1068           * \name	man_data_set_ftp_info
   1069           * \brief	FTP情報を設定する処理
   1070           * \param	ftp_info  : FTP情報
   1071           * \return  なし
   1072           * \note	必要時に呼ばれること
   1073           */
   1074          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1075          void man_data_set_ftp_info(man_data_num_ftp_t ftp_info)
   1076          {
   \                     man_data_set_ftp_info: (+1)
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB580             PUSH     {R7,LR}
   1077          	man_data_work.temp_info.ftp_info = ftp_info;
   \   00000004   0x....             LDR      R0,??DataTable44_13
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x22FF             MOVS     R2,#+255
   \   0000000A   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy
   1078          }
   \   00000010   0x9801             LDR      R0,[SP, #+4]
   \   00000012   0xB006             ADD      SP,SP,#+24
   \   00000014   0x4700             BX       R0               ;; return
   1079          
   1080          /********************************************************************/
   1081          /*!
   1082           * \name	man_data_get_ftp_info
   1083           * \brief	FTP情報を取得する処理
   1084           * \param	なし
   1085           * \return  FTP情報へのポインタ
   1086           * \note	必要時に呼ばれること
   1087           */
   1088          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1089          man_data_num_ftp_t * man_data_get_ftp_info( void )
   1090          {
   1091          	return &man_data_work.temp_info.ftp_info;
   \                     man_data_get_ftp_info: (+1)
   \   00000000   0x....             LDR      R0,??DataTable44_13
   \   00000002   0x4770             BX       LR               ;; return
   1092          }
   1093          
   1094          /********************************************************************/
   1095          /*!
   1096           * \name	man_data_get_other
   1097           * \brief	その他情報を取得する処理
   1098           * \param	なし
   1099           * \return  その他情報へのポインタ
   1100           * \note	必要時に呼ばれること
   1101           */
   1102          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1103          man_data_get_other_t * man_data_get_other( void )
   1104          {
   1105          	return &man_data_work.other_info;
   \                     man_data_get_other: (+1)
   \   00000000   0x....             LDR      R0,??DataTable44_14
   \   00000002   0x4770             BX       LR               ;; return
   1106          }
   1107          
   1108          /********************************************************************/
   1109          /*!
   1110           * \name	man_data_get_fixed
   1111           * \brief	固定情報を取得する処理
   1112           * \param	なし
   1113           * \return  固定情報へのポインタ
   1114           * \note	必要時に呼ばれること
   1115           */
   1116          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1117          man_data_fixed_t * man_data_get_fixed( void )
   1118          {
   1119          	return &man_data_work.fixed_info;
   \                     man_data_get_fixed: (+1)
   \   00000000   0x....             LDR      R0,??DataTable44_15
   \   00000002   0x4770             BX       LR               ;; return
   1120          }
   1121          
   1122          
   1123          
   1124          /********************************************************************/
   1125          /*!
   1126           * \name	man_data_flash_erase_sector
   1127           * \brief	内蔵FLASHのSECTOR消去を実施する処理
   1128           * \param	top_addr    : 消去する先頭アドレス
   1129           *          sector_num  : 消去するセクタ数
   1130           *          id          : ユニーク番号
   1131           *          callback    : 完了を通知するcallback関数
   1132           * \return   0: 成功
   1133           *          -1:失敗
   1134           * \note	必要時に、呼ばれる
   1135           *          全消去完了後にcallback関数が呼ばれます
   1136           */
   1137          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1138          int32_t  man_data_flash_erase_sector(uint32_t top_addr, int32_t sector_num, int32_t id, func_man_data callback)
   1139          {
   \                     man_data_flash_erase_sector: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1140          	int32_t	ret = -1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1141          
   1142          	// 要求を保存する
   1143          	if (sector_num != 0) {
   \   00000008   0x2900             CMP      R1,#+0
   \   0000000A   0xD00B             BEQ      ??man_data_flash_erase_sector_0
   1144          		man_data_work.request.req_cmd = MAN_DATA_REQ_CMD_ERASE_SECTOR;
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x....             LDR      R5,??DataTable44_16
   \   00000010   0x6028             STR      R0,[R5, #+0]
   1145          		man_data_work.request.top_addr = top_addr;
   \   00000012   0x....             LDR      R0,??DataTable44_17
   \   00000014   0x6004             STR      R4,[R0, #+0]
   1146          		man_data_work.request.sector_num = sector_num;
   \   00000016   0x....             LDR      R0,??DataTable44_18
   \   00000018   0x6001             STR      R1,[R0, #+0]
   1147          		man_data_work.request.id = id;
   \   0000001A   0x....             LDR      R0,??DataTable44_19
   \   0000001C   0x6002             STR      R2,[R0, #+0]
   1148          		man_data_work.request.callback = callback;
   \   0000001E   0x....             LDR      R0,??DataTable44_20
   \   00000020   0x6003             STR      R3,[R0, #+0]
   1149          		ret = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   1150          	}
   1151          
   1152          	return ret;
   \                     ??man_data_flash_erase_sector_0: (+1)
   \   00000024   0xBD30             POP      {R4,R5,PC}       ;; return
   1153          }
   1154          
   1155          
   1156          /********************************************************************/
   1157          /*!
   1158           * \name	man_data_flash_write_sector
   1159           * \brief	内蔵FLASHのSECTOR書き込みを実施する処理
   1160           * \param	top_addr    : 書き込む先頭アドレス
   1161           *          data        : 書き込むデータ
   1162           *          length      : 書き込むサイズ(最大値はMAN_DATA_FLASH_SIZE)
   1163           * \return   0: 成功
   1164           *          -1:失敗
   1165           * \note	man_data_flash_erase_sector()実施後に呼ばれること
   1166           */
   1167          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1168          int32_t  man_data_flash_write_sector(uint32_t top_addr, uint8_t *data, int32_t length)
   1169          {
   \                     man_data_flash_write_sector: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0017             MOVS     R7,R2
   1170          	int32_t			ret=-1;
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x43E4             MVNS     R4,R4            ;; #-1
   1171          
   1172          
   1173          	if ( (data != NULL) && (length <= MAN_DATA_FLASH_SIZE) ) {
   \   0000000C   0x2D00             CMP      R5,#+0
   \   0000000E   0xD01E             BEQ      ??man_data_flash_write_sector_0
   \   00000010   0x....             LDR      R0,??DataTable44_21  ;; 0x1001
   \   00000012   0x4287             CMP      R7,R0
   \   00000014   0xDA1B             BGE      ??man_data_flash_write_sector_0
   1174          
   1175          		// flash driver使用開始
   1176          		flash_start();
   \   00000016   0x.... 0x....      BL       flash_start
   1177          
   1178          		// FLASH書き込み
   1179          		ret = flash_write(top_addr, data, length);
   \   0000001A   0x003A             MOVS     R2,R7
   \   0000001C   0x0029             MOVS     R1,R5
   \   0000001E   0x0030             MOVS     R0,R6
   \   00000020   0x.... 0x....      BL       flash_write
   \   00000024   0x0004             MOVS     R4,R0
   1180          
   1181          		// FLASH読み込み
   1182          		if (ret >= 0) {
   \   00000026   0x2C00             CMP      R4,#+0
   \   00000028   0xD404             BMI      ??man_data_flash_write_sector_1
   1183          			flash_read(top_addr, &man_data_work.read[0], length);
   \   0000002A   0x003A             MOVS     R2,R7
   \   0000002C   0x....             LDR      R1,??DataTable45
   \   0000002E   0x0030             MOVS     R0,R6
   \   00000030   0x.... 0x....      BL       flash_read
   1184          		}
   1185          
   1186          		// 比較
   1187          		if (ret >= 0) {
   \                     ??man_data_flash_write_sector_1: (+1)
   \   00000034   0x2C00             CMP      R4,#+0
   \   00000036   0xD408             BMI      ??man_data_flash_write_sector_2
   1188          			if (memcmp(&man_data_work.read[0], data, length) != 0) {
   \   00000038   0x003A             MOVS     R2,R7
   \   0000003A   0x0029             MOVS     R1,R5
   \   0000003C   0x....             LDR      R0,??DataTable45
   \   0000003E   0x.... 0x....      BL       memcmp
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD001             BEQ      ??man_data_flash_write_sector_2
   1189          				ret = -1;
   \   00000046   0x2400             MOVS     R4,#+0
   \   00000048   0x43E4             MVNS     R4,R4            ;; #-1
   1190          			}
   1191          		}
   1192          
   1193          		// flash driver使用終了
   1194          		flash_end();
   \                     ??man_data_flash_write_sector_2: (+1)
   \   0000004A   0x.... 0x....      BL       flash_end
   1195          	}
   1196          	
   1197          	return ret;
   \                     ??man_data_flash_write_sector_0: (+1)
   \   0000004E   0x0020             MOVS     R0,R4
   \   00000050   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   1198          }
   1199          
   1200          
   1201          /********************************************************************/
   1202          /*!
   1203           * \name	man_data_main
   1204           * \brief	データ管理のメイン処理
   1205           * \param	なし
   1206           * \return  なし
   1207           * \note	毎回、呼ばれること
   1208           */
   1209          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1210          void man_data_main( void )
   1211          {
   \                     man_data_main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1212          	int32_t		ret;
   1213          	uint32_t	delay;
   1214          	uint32_t	top_addr;
   1215          
   1216          
   1217          	// ******************************
   1218          	//    要求処理
   1219          	// ******************************
   1220          	switch (man_data_work.request.req_cmd) {
   \   00000002   0x....             LDR      R0,??DataTable44_16
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD002             BEQ      ??man_data_main_0
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD001             BEQ      ??man_data_main_1
   \   0000000E   0xE00A             B        ??man_data_main_2
   1221          	case MAN_DATA_REQ_CMD_NON:
   1222          		break;
   \                     ??man_data_main_0: (+1)
   \   00000010   0xE009             B        ??man_data_main_2
   1223          	case MAN_DATA_REQ_CMD_ERASE_SECTOR:
   1224          		if (man_data_work.sequense == MAN_DATA_SEQ_READY) {
   \                     ??man_data_main_1: (+1)
   \   00000012   0x....             LDR      R0,??DataTable47
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD105             BNE      ??man_data_main_3
   1225          			man_data_work.sequense = MAN_DATA_SEQ_ERASE_REQ;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x....             LDR      R1,??DataTable47
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
   1226          			man_data_work.tmp.counter = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x....             LDR      R1,??DataTable46
   \   00000024   0x6008             STR      R0,[R1, #+0]
   1227          		}
   1228          		break;
   1229          	}
   1230          
   1231          
   1232          
   1233          	// ******************************
   1234          	//    シーケンス処理
   1235          	// ******************************
   1236          	switch (man_data_work.sequense) {
   \                     ??man_data_main_3: (+1)
   \                     ??man_data_main_2: (+1)
   \   00000026   0x....             LDR      R0,??DataTable47
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD003             BEQ      ??man_data_main_4
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD030             BEQ      ??man_data_main_5
   \   00000032   0xD301             BCC      ??man_data_main_6
   \   00000034   0xE03A             B        ??man_data_main_7
   1237          	case MAN_DATA_SEQ_READY:
   1238          		break;
   \                     ??man_data_main_4: (+1)
   \   00000036   0xE039             B        ??man_data_main_7
   1239          	case MAN_DATA_SEQ_ERASE_REQ:
   1240          		top_addr = man_data_work.request.top_addr + MAN_DATA_FLASH_SIZE * man_data_work.tmp.counter;
   \                     ??man_data_main_6: (+1)
   \   00000038   0x....             LDR      R0,??DataTable44_17
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x....             LDR      R1,??DataTable46
   \   0000003E   0x6809             LDR      R1,[R1, #+0]
   \   00000040   0x2280             MOVS     R2,#+128
   \   00000042   0x0152             LSLS     R2,R2,#+5        ;; #+4096
   \   00000044   0x4351             MULS     R1,R2,R1
   \   00000046   0x1844             ADDS     R4,R0,R1
   1241          		// flash driver使用開始
   1242          		flash_start();
   \   00000048   0x.... 0x....      BL       flash_start
   1243          		// FLASH消去
   1244          		ret = flash_erase_sector(top_addr);
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0x.... 0x....      BL       flash_erase_sector
   \   00000052   0x0004             MOVS     R4,R0
   1245          		// flash driver使用終了
   1246          		flash_end();
   \   00000054   0x.... 0x....      BL       flash_end
   1247          		
   1248          		// FLASH消去成功時
   1249          		if (ret >= 0) {
   \   00000058   0x2C00             CMP      R4,#+0
   \   0000005A   0xD416             BMI      ??man_data_main_8
   1250          			man_data_work.tmp.counter++;
   \   0000005C   0x....             LDR      R0,??DataTable46
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x1C40             ADDS     R0,R0,#+1
   \   00000062   0x....             LDR      R1,??DataTable46
   \   00000064   0x6008             STR      R0,[R1, #+0]
   1251          			if (man_data_work.request.sector_num <= man_data_work.tmp.counter) {
   \   00000066   0x....             LDR      R0,??DataTable46
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0x....             LDR      R1,??DataTable44_18
   \   0000006C   0x6809             LDR      R1,[R1, #+0]
   \   0000006E   0x4288             CMP      R0,R1
   \   00000070   0xDB03             BLT      ??man_data_main_9
   1252          				// 完了を通知する
   1253          				man_data_return_callback(MAN_DATA_STATUS_OK);
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       man_data_return_callback
   \   00000078   0xE00B             B        ??man_data_main_10
   1254          			}
   1255          			else {
   1256          				man_data_work.sequense = MAN_DATA_SEQ_ERASE_WAIT;
   \                     ??man_data_main_9: (+1)
   \   0000007A   0x2002             MOVS     R0,#+2
   \   0000007C   0x....             LDR      R1,??DataTable47
   \   0000007E   0x7008             STRB     R0,[R1, #+0]
   1257          				man_data_work.tmp.start_time = man_timer_get_1ms_count();
   \   00000080   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00000084   0x....             LDR      R1,??DataTable46_1
   \   00000086   0x6008             STR      R0,[R1, #+0]
   \   00000088   0xE003             B        ??man_data_main_10
   1258          			}
   1259          		}
   1260          		
   1261          		// FLASH消去失敗時
   1262          		else {
   1263          			// 失敗を通知する
   1264          			man_data_return_callback(MAN_DATA_STATUS_NG);
   \                     ??man_data_main_8: (+1)
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000008E   0x.... 0x....      BL       man_data_return_callback
   1265          		}
   1266          		break;
   \                     ??man_data_main_10: (+1)
   \   00000092   0xE00B             B        ??man_data_main_7
   1267          	case MAN_DATA_SEQ_ERASE_WAIT:
   1268          		delay = man_timer_get_elapsed_time(man_data_work.tmp.start_time, man_timer_get_1ms_count());
   \                     ??man_data_main_5: (+1)
   \   00000094   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00000098   0x0001             MOVS     R1,R0
   \   0000009A   0x....             LDR      R0,??DataTable46_1
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x.... 0x....      BL       man_timer_get_elapsed_time
   1269          		if (delay >= 100) {
   \   000000A2   0x2864             CMP      R0,#+100
   \   000000A4   0xD302             BCC      ??man_data_main_11
   1270          			man_data_work.sequense = MAN_DATA_SEQ_ERASE_REQ;
   \   000000A6   0x2001             MOVS     R0,#+1
   \   000000A8   0x....             LDR      R1,??DataTable47
   \   000000AA   0x7008             STRB     R0,[R1, #+0]
   1271          		}
   1272          		break;
   1273          	}
   1274          }
   \                     ??man_data_main_11: (+1)
   \                     ??man_data_main_7: (+1)
   \   000000AC   0xBD10             POP      {R4,PC}          ;; return
   1275          
   1276          
   1277          
   1278          
   1279          

   \                                 In section .data, align 4
   1280          int32_t	tmp_tbl[] = {-20, -4, 42, 44, 46, 48, 60, 70, 80};
   \                     tmp_tbl:
   \   00000000   0xFFFFFFEC         DC32 -20, -4, 42, 44, 46, 48, 60, 70, 80
   \              0xFFFFFFFC   
   \              0x0000002A   
   \              0x0000002C   
   \              0x0000002E   
   \              0x00000030   
   \              0x0000003C   
   \              0x00000046   
   \              0x00000050   
   1281          
   1282          
   1283          /********************************************************************/
   1284          /*!
   1285           * \name	man_data_collect_sensor
   1286           * \brief	センサ情報を収集する処理
   1287           * \param	なし
   1288           * \return  なし
   1289           * \note	1000ms毎に更新する
   1290           */
   1291          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1292          void man_data_collect_sensor( void )
   1293          {
   \                     man_data_collect_sensor: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB093             SUB      SP,SP,#+76
   1294          	man_data_get_sensor_t	*sensor_info = &man_data_work.sensor_info;
   \   00000004   0x....             LDR      R4,??DataTable49
   1295          	man_data_num_sensor_t	*num_sensor = man_data_get_setting_sensor();
   \   00000006   0x.... 0x....      BL       man_data_get_setting_sensor
   \   0000000A   0x0006             MOVS     R6,R0
   1296          	man_data_num_other_t	*num_other = man_data_get_setting_other();
   \   0000000C   0x.... 0x....      BL       man_data_get_setting_other
   \   00000010   0x0007             MOVS     R7,R0
   1297          	man_data_fixed_t		*fixed = man_data_get_fixed();
   \   00000012   0x.... 0x....      BL       man_data_get_fixed
   \   00000016   0x0005             MOVS     R5,R0
   1298          	
   1299          	int32_t					accel_threshold;	// 単位 : uG
   1300          	man_gyro_data_t			gyro;				// 角速度・加速度データ
   1301          	int32_t					i;
   1302          	int32_t					temperature;
   1303          
   1304          
   1305          	// 角速度・加速度取得
   1306          	man_gyro_get_data(&sensor_info->gyro);
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x300C             ADDS     R0,R0,#+12
   \   0000001C   0x.... 0x....      BL       man_gyro_get_data
   1307          
   1308          	// 気圧・高度・温度取得
   1309          	man_press_get_data(&sensor_info->temperature, &sensor_info->pressure, &sensor_info->altitude);
   \   00000020   0x0022             MOVS     R2,R4
   \   00000022   0x3260             ADDS     R2,R2,#+96
   \   00000024   0x0021             MOVS     R1,R4
   \   00000026   0x315C             ADDS     R1,R1,#+92
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0x3054             ADDS     R0,R0,#+84
   \   0000002C   0x.... 0x....      BL       man_press_get_data
   1310          
   1311          	temperature = sensor_info->temperature;
   \   00000030   0x6D60             LDR      R0,[R4, #+84]
   1312          	// 端末の内部温度を示すコードに変換
   1313          	for (i=0; i<9; i++) {
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0xE000             B        ??man_data_collect_sensor_0
   \                     ??man_data_collect_sensor_1: (+1)
   \   00000036   0x1C49             ADDS     R1,R1,#+1
   \                     ??man_data_collect_sensor_0: (+1)
   \   00000038   0x2909             CMP      R1,#+9
   \   0000003A   0xDA05             BGE      ??man_data_collect_sensor_2
   1314          		if (temperature < tmp_tbl[i]) {
   \   0000003C   0x....             LDR      R2,??DataTable51
   \   0000003E   0x2304             MOVS     R3,#+4
   \   00000040   0x434B             MULS     R3,R1,R3
   \   00000042   0x58D2             LDR      R2,[R2, R3]
   \   00000044   0x4290             CMP      R0,R2
   \   00000046   0xDAF6             BGE      ??man_data_collect_sensor_1
   1315          			break;
   1316          		}
   1317          	}
   1318          	if (temperature <= -30) {
   \                     ??man_data_collect_sensor_2: (+1)
   \   00000048   0x221C             MOVS     R2,#+28
   \   0000004A   0x43D2             MVNS     R2,R2            ;; #-29
   \   0000004C   0x4290             CMP      R0,R2
   \   0000004E   0xDA00             BGE      ??man_data_collect_sensor_3
   1319          		i=9;
   \   00000050   0x2109             MOVS     R1,#+9
   1320          	}
   1321          	sensor_info->type_num = i;
   \                     ??man_data_collect_sensor_3: (+1)
   \   00000052   0x65A1             STR      R1,[R4, #+88]
   1322          
   1323          	// 電波状況を取得
   1324          	man_http_get_rsrp(&sensor_info->rsrp, &sensor_info->rssi);
   \   00000054   0x20BE             MOVS     R0,#+190
   \   00000056   0x0100             LSLS     R0,R0,#+4        ;; #+3040
   \   00000058   0x1821             ADDS     R1,R4,R0
   \   0000005A   0x....             LDR      R0,??DataTable51_1  ;; 0xbdc
   \   0000005C   0x1820             ADDS     R0,R4,R0
   \   0000005E   0x.... 0x....      BL       man_http_get_rsrp
   1325          
   1326          	// NMEAの状態取得
   1327          	man_gps_get_nmea_status(&sensor_info->nmea_status, &sensor_info->nmea_select);
   \   00000062   0x....             LDR      R0,??DataTable53  ;; 0xbcc
   \   00000064   0x1821             ADDS     R1,R4,R0
   \   00000066   0x....             LDR      R0,??DataTable54  ;; 0xbc8
   \   00000068   0x1820             ADDS     R0,R4,R0
   \   0000006A   0x.... 0x....      BL       man_gps_get_nmea_status
   1328          
   1329          	// バッテリー情報取得
   1330          	man_battery_get_data(&sensor_info->voltage, &sensor_info->charge);
   \   0000006E   0x0021             MOVS     R1,R4
   \   00000070   0x3168             ADDS     R1,R1,#+104
   \   00000072   0x0020             MOVS     R0,R4
   \   00000074   0x3064             ADDS     R0,R0,#+100
   \   00000076   0x.... 0x....      BL       man_battery_get_data
   1331          
   1332          	// 充電情報取得
   1333          	man_charge_get_data(&sensor_info->charge_state, &sensor_info->ext_state);
   \   0000007A   0x0021             MOVS     R1,R4
   \   0000007C   0x3170             ADDS     R1,R1,#+112
   \   0000007E   0x0020             MOVS     R0,R4
   \   00000080   0x306C             ADDS     R0,R0,#+108
   \   00000082   0x.... 0x....      BL       man_charge_get_data
   1334          
   1335          	// 現在時刻取得
   1336          	man_rtc_get_clock(&sensor_info->clock);
   \   00000086   0x0020             MOVS     R0,R4
   \   00000088   0x.... 0x....      BL       man_rtc_get_clock
   1337          
   1338          	// LTE状態取得
   1339          	man_let_get_data(&sensor_info->net_mode);
   \   0000008C   0x20BD             MOVS     R0,#+189
   \   0000008E   0x0100             LSLS     R0,R0,#+4        ;; #+3024
   \   00000090   0x1820             ADDS     R0,R4,R0
   \   00000092   0x.... 0x....      BL       man_let_get_data
   1340          	
   1341          	// 通信中状態取得
   1342          	man_rpt_get_data(&sensor_info->trans_mode);
   \   00000096   0x....             LDR      R0,??DataTable54_1  ;; 0xbd4
   \   00000098   0x1820             ADDS     R0,R4,R0
   \   0000009A   0x.... 0x....      BL       man_rpt_get_data
   1343          	
   1344          	// OTA状態取得
   1345          	man_ota_get_data(&sensor_info->ota_mode);
   \   0000009E   0x....             LDR      R0,??DataTable55  ;; 0xbd9
   \   000000A0   0x1820             ADDS     R0,R4,R0
   \   000000A2   0x.... 0x....      BL       man_ota_get_data
   1346          
   1347          
   1348          	// 起動後70秒間 or NET OPENまではセンサー値が安定していないため、メッセージの判定は行わない
   1349          	if ( (man_data_work.msg_info.counter >= MAN_DATA_MSG_CHECK_WAIT) || (sensor_info->net_mode == MAN_LTE_MODE_OPEN) )  {
   \   000000A6   0x....             LDR      R0,??DataTable57
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x2846             CMP      R0,#+70
   \   000000AC   0xDA04             BGE      ??man_data_collect_sensor_4
   \   000000AE   0x20BD             MOVS     R0,#+189
   \   000000B0   0x0100             LSLS     R0,R0,#+4        ;; #+3024
   \   000000B2   0x5C20             LDRB     R0,[R4, R0]
   \   000000B4   0x2801             CMP      R0,#+1
   \   000000B6   0xD179             BNE      ??man_data_collect_sensor_5
   1350          	
   1351          		// 加速度系のメッセージ出力処理
   1352          		accel_threshold = (num_sensor->threshold_num * (int32_t)MAV_DATA_SENSOR_UNIT_UG) / 1000;	// [mG]
   \                     ??man_data_collect_sensor_4: (+1)
   \   000000B8   0x6830             LDR      R0,[R6, #+0]
   \   000000BA   0x....             LDR      R1,??DataTable56  ;; 0xf424
   \   000000BC   0x4348             MULS     R0,R1,R0
   \   000000BE   0x21FA             MOVS     R1,#+250
   \   000000C0   0x0089             LSLS     R1,R1,#+2        ;; #+1000
   \   000000C2   0x.... 0x....      BL       __aeabi_uidiv
   \   000000C6   0x0006             MOVS     R6,R0
   1353          		gyro.accel_x = abs(sensor_info->nmea_sensor.gyro.accel_x);		// [mG]
   \   000000C8   0x20BA             MOVS     R0,#+186
   \   000000CA   0x0100             LSLS     R0,R0,#+4        ;; #+2976
   \   000000CC   0x5820             LDR      R0,[R4, R0]
   \   000000CE   0x.... 0x....      BL       abs
   \   000000D2   0x900C             STR      R0,[SP, #+48]
   1354          		gyro.accel_y = abs(sensor_info->nmea_sensor.gyro.accel_y);		// [mG]
   \   000000D4   0x....             LDR      R0,??DataTable56_1  ;; 0xba4
   \   000000D6   0x5820             LDR      R0,[R4, R0]
   \   000000D8   0x.... 0x....      BL       abs
   \   000000DC   0x900D             STR      R0,[SP, #+52]
   1355          		gyro.accel_z = abs(sensor_info->nmea_sensor.gyro.accel_z);		// [mG]
   \   000000DE   0x....             LDR      R0,??DataTable56_2  ;; 0xba8
   \   000000E0   0x5820             LDR      R0,[R4, R0]
   \   000000E2   0x.... 0x....      BL       abs
   \   000000E6   0x900E             STR      R0,[SP, #+56]
   1356          
   1357          #ifdef ADLINK_DEBUG  //Matsushita
   1358                           sprintf(print_buf," sensor_info->nmea_sensor.gyro.accel x:%d y:%d z:%d\r\n",
   1359                                                            gyro.accel_x,
   1360                                                            gyro.accel_y,
   1361                                                            gyro.accel_z);
   1362                           sysmgr_log(print_buf,strlen(print_buf));
   1363          #endif
   1364          		if ( (accel_threshold <= gyro.accel_x) || (accel_threshold <= gyro.accel_y) || (accel_threshold <= gyro.accel_z) ) {
   \   000000E8   0x980C             LDR      R0,[SP, #+48]
   \   000000EA   0x42B0             CMP      R0,R6
   \   000000EC   0xDA05             BGE      ??man_data_collect_sensor_6
   \   000000EE   0x980D             LDR      R0,[SP, #+52]
   \   000000F0   0x42B0             CMP      R0,R6
   \   000000F2   0xDA02             BGE      ??man_data_collect_sensor_6
   \   000000F4   0x980E             LDR      R0,[SP, #+56]
   \   000000F6   0x42B0             CMP      R0,R6
   \   000000F8   0xDB0E             BLT      ??man_data_collect_sensor_7
   1365          			if (man_data_work.msg_info.accel_msg != MAN_MSG_TYPE_SHOCK) {
   \                     ??man_data_collect_sensor_6: (+1)
   \   000000FA   0x....             LDR      R0,??DataTable56_3
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x282E             CMP      R0,#+46
   \   00000100   0xD00D             BEQ      ??man_data_collect_sensor_8
   1366          				man_data_work.msg_info.accel_msg = MAN_MSG_TYPE_SHOCK;
   \   00000102   0x202E             MOVS     R0,#+46
   \   00000104   0x....             LDR      R1,??DataTable56_3
   \   00000106   0x6008             STR      R0,[R1, #+0]
   1367          				// 有効位置が取得できている場合のみ登録する。
   1368          				if (sensor_info->nmea_status == MAN_GPS_NMEA_STATUS_EFFECTIVE) {
   \   00000108   0x....             LDR      R0,??DataTable54  ;; 0xbc8
   \   0000010A   0x5820             LDR      R0,[R4, R0]
   \   0000010C   0x2802             CMP      R0,#+2
   \   0000010E   0xD106             BNE      ??man_data_collect_sensor_8
   1369          					man_msg_set_type(MAN_MSG_TYPE_SHOCK);
   \   00000110   0x202E             MOVS     R0,#+46
   \   00000112   0x.... 0x....      BL       man_msg_set_type
   \   00000116   0xE002             B        ??man_data_collect_sensor_8
   1370          #ifdef ADLINK_DEBUG
   1371                                                  sprintf(print_buf," Sending Message 46\r\n");
   1372                                                  sysmgr_log(print_buf,strlen(print_buf));
   1373          #endif
   1374          				}
   1375          			}
   1376          		}
   1377          		else {
   1378          			man_data_work.msg_info.accel_msg = MAN_MSG_TYPE_NON;
   \                     ??man_data_collect_sensor_7: (+1)
   \   00000118   0x2000             MOVS     R0,#+0
   \   0000011A   0x....             LDR      R1,??DataTable56_3
   \   0000011C   0x6008             STR      R0,[R1, #+0]
   1379          		}
   1380          
   1381          		// 温度系のメッセージ出力処理
   1382          //		if (sensor_info->temperature >= num_other->temperature_high_num) {
   1383          		if (
   1384                              (( sensor_info->temperature > MAN_DATA_TEMP_BAT_MAX) && (man_ope_get_switch_pos() == MAN_OPE_SWITCH_BATTERY))
   1385                           || (( sensor_info->temperature > MAN_DATA_TEMP_EXT_MAX) && (man_ope_get_switch_pos() != MAN_OPE_SWITCH_BATTERY))
   1386                          )
   \                     ??man_data_collect_sensor_8: (+1)
   \   0000011E   0x6D60             LDR      R0,[R4, #+84]
   \   00000120   0x283D             CMP      R0,#+61
   \   00000122   0xDB03             BLT      ??man_data_collect_sensor_9
   \   00000124   0x.... 0x....      BL       man_ope_get_switch_pos
   \   00000128   0x2805             CMP      R0,#+5
   \   0000012A   0xD006             BEQ      ??man_data_collect_sensor_10
   \                     ??man_data_collect_sensor_9: (+1)
   \   0000012C   0x6D60             LDR      R0,[R4, #+84]
   \   0000012E   0x2847             CMP      R0,#+71
   \   00000130   0xDB0E             BLT      ??man_data_collect_sensor_11
   \   00000132   0x.... 0x....      BL       man_ope_get_switch_pos
   \   00000136   0x2805             CMP      R0,#+5
   \   00000138   0xD00A             BEQ      ??man_data_collect_sensor_11
   1387                          {
   1388           			if (man_data_work.msg_info.temp_msg != MAN_MSG_TYPE_TMP_H) {
   \                     ??man_data_collect_sensor_10: (+1)
   \   0000013A   0x....             LDR      R0,??DataTable57_1
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0x2830             CMP      R0,#+48
   \   00000140   0xD009             BEQ      ??man_data_collect_sensor_12
   1389          				man_data_work.msg_info.temp_msg = MAN_MSG_TYPE_TMP_H;
   \   00000142   0x2030             MOVS     R0,#+48
   \   00000144   0x....             LDR      R1,??DataTable57_1
   \   00000146   0x6008             STR      R0,[R1, #+0]
   1390          				man_msg_set_type(MAN_MSG_TYPE_TMP_H);
   \   00000148   0x2030             MOVS     R0,#+48
   \   0000014A   0x.... 0x....      BL       man_msg_set_type
   \   0000014E   0xE002             B        ??man_data_collect_sensor_12
   1391          #if 0 //ADLINK
   1392                                          sysmgr_set_error( SYSTEM_ERROR_TEMP_OVER_TEMP );
   1393          #endif
   1394          			}
   1395          		}
   1396          		else {
   1397          			man_data_work.msg_info.temp_msg = MAN_MSG_TYPE_NON;
   \                     ??man_data_collect_sensor_11: (+1)
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0x....             LDR      R1,??DataTable57_1
   \   00000154   0x6008             STR      R0,[R1, #+0]
   1398          		}
   1399          
   1400          		// 低電圧系のメッセージ出力処理
   1401          		if ( sensor_info->charge < num_other->batt_low_error_num) {
   \                     ??man_data_collect_sensor_12: (+1)
   \   00000156   0x6EA0             LDR      R0,[R4, #+104]
   \   00000158   0x6839             LDR      R1,[R7, #+0]
   \   0000015A   0x4288             CMP      R0,R1
   \   0000015C   0xD20A             BCS      ??man_data_collect_sensor_13
   1402          			if (man_data_work.msg_info.low_volt_msg != MAN_MSG_TYPE_BATALARM) {
   \   0000015E   0x....             LDR      R0,??DataTable57_2
   \   00000160   0x6800             LDR      R0,[R0, #+0]
   \   00000162   0x281E             CMP      R0,#+30
   \   00000164   0xD009             BEQ      ??man_data_collect_sensor_14
   1403          				man_data_work.msg_info.low_volt_msg = MAN_MSG_TYPE_BATALARM;
   \   00000166   0x201E             MOVS     R0,#+30
   \   00000168   0x....             LDR      R1,??DataTable57_2
   \   0000016A   0x6008             STR      R0,[R1, #+0]
   1404          				man_msg_set_type(MAN_MSG_TYPE_BATALARM);
   \   0000016C   0x201E             MOVS     R0,#+30
   \   0000016E   0x.... 0x....      BL       man_msg_set_type
   \   00000172   0xE002             B        ??man_data_collect_sensor_14
   1405          			}
   1406          		}
   1407          		else {
   1408          			man_data_work.msg_info.low_volt_msg = MAN_MSG_TYPE_NON;
   \                     ??man_data_collect_sensor_13: (+1)
   \   00000174   0x2000             MOVS     R0,#+0
   \   00000176   0x....             LDR      R1,??DataTable57_2
   \   00000178   0x6008             STR      R0,[R1, #+0]
   1409          		}
   1410          
   1411          		// バッテリ残量が0系のメッセージ出力処理
   1412          		// バッテリ残量が内部バッテリ低電圧警告閾値以下の場合
   1413          		if (sensor_info->charge < fixed->battery_low_war) {
   \                     ??man_data_collect_sensor_14: (+1)
   \   0000017A   0x6EA0             LDR      R0,[R4, #+104]
   \   0000017C   0x6869             LDR      R1,[R5, #+4]
   \   0000017E   0x4288             CMP      R0,R1
   \   00000180   0xD20E             BCS      ??man_data_collect_sensor_15
   1414          			if (man_data_work.msg_info.charge0_msg != MAN_MSG_TYPE_0_BATT) {
   \   00000182   0x....             LDR      R0,??DataTable57_3
   \   00000184   0x6800             LDR      R0,[R0, #+0]
   \   00000186   0x2818             CMP      R0,#+24
   \   00000188   0xD015             BEQ      ??man_data_collect_sensor_16
   1415          				man_data_work.msg_info.charge0_msg = MAN_MSG_TYPE_0_BATT;
   \   0000018A   0x2018             MOVS     R0,#+24
   \   0000018C   0x....             LDR      R1,??DataTable57_3
   \   0000018E   0x6008             STR      R0,[R1, #+0]
   1416          				man_msg_set_type(MAN_MSG_TYPE_0_BATT);
   \   00000190   0x2018             MOVS     R0,#+24
   \   00000192   0x.... 0x....      BL       man_msg_set_type
   1417          				sensor_info->charge0_mode = 1;			// 0V状態
   \   00000196   0x2001             MOVS     R0,#+1
   \   00000198   0x6760             STR      R0,[R4, #+116]
   1418          				// park_interval測位開始
   1419          				man_rpt_req_park_interval();
   \   0000019A   0x.... 0x....      BL       man_rpt_req_park_interval
   \   0000019E   0xE00A             B        ??man_data_collect_sensor_16
   1420          			}
   1421          		}
   1422          		else {
   1423          			man_data_work.msg_info.charge0_msg = MAN_MSG_TYPE_NON;
   \                     ??man_data_collect_sensor_15: (+1)
   \   000001A0   0x2000             MOVS     R0,#+0
   \   000001A2   0x....             LDR      R1,??DataTable57_3
   \   000001A4   0x6008             STR      R0,[R1, #+0]
   1424          			sensor_info->charge0_mode = 0;
   \   000001A6   0x2000             MOVS     R0,#+0
   \   000001A8   0x6760             STR      R0,[R4, #+116]
   \   000001AA   0xE004             B        ??man_data_collect_sensor_16
   1425          		}
   1426          
   1427          	}
   1428          	else {
   1429          		man_data_work.msg_info.counter++;
   \                     ??man_data_collect_sensor_5: (+1)
   \   000001AC   0x....             LDR      R0,??DataTable57
   \   000001AE   0x6800             LDR      R0,[R0, #+0]
   \   000001B0   0x1C40             ADDS     R0,R0,#+1
   \   000001B2   0x....             LDR      R1,??DataTable57
   \   000001B4   0x6008             STR      R0,[R1, #+0]
   1430          	}
   1431          }
   \                     ??man_data_collect_sensor_16: (+1)
   \   000001B6   0xB013             ADD      SP,SP,#+76
   \   000001B8   0xBDF0             POP      {R4-R7,PC}       ;; return
   1432          
   1433          
   1434          
   1435          /********************************************************************/
   1436          /*!
   1437           * \name	man_data_set_nmea
   1438           * \brief	nmea情報を設定する処理
   1439           * \param	data   : 設定するNMEAデータ
   1440           *          length : NMEAデータ長
   1441           * \return  なし
   1442           * \note	必要時に呼ばれること
   1443           */
   1444          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1445          void man_data_set_nmea( uint8_t *data, int32_t length )
   1446          { 
   \                     man_data_set_nmea: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
   1447          	if (length < GPS_NMEA_DATA_MAX) {
   \   00000004   0x21AF             MOVS     R1,#+175
   \   00000006   0x00C9             LSLS     R1,R1,#+3        ;; #+1400
   \   00000008   0x428C             CMP      R4,R1
   \   0000000A   0xDA07             BGE      ??man_data_set_nmea_0
   1448          		memcpy(&man_data_work.sensor_info.nmea[0], data, length);
   \   0000000C   0x....             LDR      R5,??DataTable57_4
   \   0000000E   0x0022             MOVS     R2,R4
   \   00000010   0x0001             MOVS     R1,R0
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0x.... 0x....      BL       __aeabi_memcpy
   1449          		man_data_work.sensor_info.nmea_len = length;
   \   00000018   0x....             LDR      R0,??DataTable57_5
   \   0000001A   0x6004             STR      R4,[R0, #+0]
   1450          	}
   1451          }
   \                     ??man_data_set_nmea_0: (+1)
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1452          
   1453          /********************************************************************/
   1454          /*!
   1455           * \name	man_data_set_nmea_fix
   1456           * \brief	fixしたnmea情報を設定する処理
   1457           * \param	data   : 設定するfixしたNMEAデータ
   1458           *          length : NMEAデータ長
   1459           * \return  なし
   1460           * \note	必要時に呼ばれること
   1461           */
   1462          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1463          void man_data_set_nmea_fix( uint8_t *data, int32_t length )
   1464          { 
   \                     man_data_set_nmea_fix: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
   1465          	if (length < GPS_NMEA_DATA_MAX) {
   \   00000004   0x21AF             MOVS     R1,#+175
   \   00000006   0x00C9             LSLS     R1,R1,#+3        ;; #+1400
   \   00000008   0x428C             CMP      R4,R1
   \   0000000A   0xDA1C             BGE      ??man_data_set_nmea_fix_0
   1466          		memcpy(&man_data_work.sensor_info.nmea_fix[0], data, length);
   \   0000000C   0x....             LDR      R5,??DataTable57_6
   \   0000000E   0x0022             MOVS     R2,R4
   \   00000010   0x0001             MOVS     R1,R0
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0x.... 0x....      BL       __aeabi_memcpy
   1467          		man_data_work.sensor_info.nmea_fix_len = length;
   \   00000018   0x....             LDR      R0,??DataTable57_7
   \   0000001A   0x6004             STR      R4,[R0, #+0]
   1468          		
   1469          		// NMEAと関連するセンサ情報を保存する
   1470          		man_data_work.sensor_info.nmea_sensor.gyro		 = man_data_work.sensor_info.gyro;
   \   0000001C   0x....             LDR      R0,??DataTable57_8
   \   0000001E   0x....             LDR      R1,??DataTable57_9
   \   00000020   0x2248             MOVS     R2,#+72
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   1471          		man_data_work.sensor_info.nmea_sensor.pressure	 = man_data_work.sensor_info.pressure;
   \   00000026   0x....             LDR      R0,??DataTable57_10
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x....             LDR      R1,??DataTable57_11
   \   0000002C   0x6008             STR      R0,[R1, #+0]
   1472          		man_data_work.sensor_info.nmea_sensor.altitude	 = man_data_work.sensor_info.altitude;
   \   0000002E   0x....             LDR      R0,??DataTable57_12
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x....             LDR      R1,??DataTable57_13
   \   00000034   0x6008             STR      R0,[R1, #+0]
   1473          		man_data_work.sensor_info.nmea_sensor.rsrp		 = man_data_work.sensor_info.rsrp;
   \   00000036   0x....             LDR      R0,??DataTable57_14
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x....             LDR      R1,??DataTable57_15
   \   0000003C   0x6008             STR      R0,[R1, #+0]
   1474          		man_data_work.sensor_info.nmea_sensor.rssi		 = man_data_work.sensor_info.rssi;
   \   0000003E   0x....             LDR      R0,??DataTable57_16
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x....             LDR      R1,??DataTable57_17
   \   00000044   0x6008             STR      R0,[R1, #+0]
   1475          	}
   1476          }
   \                     ??man_data_set_nmea_fix_0: (+1)
   \   00000046   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1477          
   1478          /********************************************************************/
   1479          /*!
   1480           * \name	man_data_set_SIM7500_cfotaswitch
   1481           * \brief	SIM7500　at+cfotaswitch発行有無を設定する処理
   1482          * \param	flag : 0-コマンド発行　1-コマンド発行しない　"AT"を発行
   1483           * \return  なし
   1484           * \note	必要時に呼ばれること
   1485           */
   1486          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1487          void man_data_set_SIM7500_cfotaswitch(int8_t flag, int8_t retry)
   1488          {
   1489            man_data_work.setting_info.other_num.SIM7500_config.cfotaswitch_flag  = flag;
   \                     man_data_set_SIM7500_cfotaswitch: (+1)
   \   00000000   0x....             LDR      R2,??DataTable57_18
   \   00000002   0x7010             STRB     R0,[R2, #+0]
   1490            man_data_work.setting_info.other_num.SIM7500_config.cfotaswitch_retry = retry;
   \   00000004   0x....             LDR      R0,??DataTable57_19
   \   00000006   0x7001             STRB     R1,[R0, #+0]
   1491          }
   \   00000008   0x4770             BX       LR               ;; return
   1492          
   1493          /********************************************************************/
   1494          /*!
   1495           * \name	man_data_set_SIM7500_cfotaswitch
   1496           * \brief	SIM7500　at+cfotaswitch発行有無設定を取得する処理
   1497          * \param	flag : 0-コマンド発行　1-コマンド発行しない　"AT"を発行
   1498           * \return  なし
   1499           * \note	必要時に呼ばれること
   1500           */
   1501          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1502          void man_data_get_SIM7500_cfotaswitch(int8_t *flag, int8_t *retry)
   1503          {
   1504            *flag = man_data_work.setting_info.other_num.SIM7500_config.cfotaswitch_flag;
   \                     man_data_get_SIM7500_cfotaswitch: (+1)
   \   00000000   0x....             LDR      R2,??DataTable57_18
   \   00000002   0x7812             LDRB     R2,[R2, #+0]
   \   00000004   0x7002             STRB     R2,[R0, #+0]
   1505            *retry = man_data_work.setting_info.other_num.SIM7500_config.cfotaswitch_retry;
   \   00000006   0x....             LDR      R0,??DataTable57_19
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
   1506          }
   \   0000000C   0x4770             BX       LR               ;; return
   1507          
   1508          /********************************************************************/
   1509          /*!
   1510           * \name	man_data_set_SIM7500_cfotaswitch
   1511           * \brief	SIM7500　at+cfotaswitch発行有無設定を取得する処理
   1512          * \param	flag : 0-コマンド発行　1-コマンド発行しない　"AT"を発行
   1513           * \return  なし
   1514           * \note	必要時に呼ばれること
   1515           */
   1516          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1517          void man_data_set_SIM7500_debug_flag(uint32_t flag)
   1518          {
   1519           man_data_work.setting_info.other_num.SIM7500_config.debug_flag=flag;
   \                     man_data_set_SIM7500_debug_flag: (+1)
   \   00000000   0x....             LDR      R1,??DataTable57_20
   \   00000002   0x6008             STR      R0,[R1, #+0]
   1520          }
   \   00000004   0x4770             BX       LR               ;; return
   1521          
   1522          /********************************************************************/
   1523          /*!
   1524           * \name	man_data_get_SIM7500_cfotaswitch
   1525           * \brief	SIM7500　at+cfotaswitch発行有無設定を取得する処理
   1526          * \param	flag : 0-コマンド発行　1-コマンド発行しない　"AT"を発行
   1527           * \return  なし
   1528           * \note	必要時に呼ばれること
   1529           */
   1530          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1531          uint32_t man_data_get_SIM7500_debug_flag()
   1532          {
   1533            return man_data_work.setting_info.other_num.SIM7500_config.debug_flag;
   \                     man_data_get_SIM7500_debug_flag: (+1)
   \   00000000   0x....             LDR      R0,??DataTable57_20
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
   1534          }
   1535          
   1536          /********************************************************************/
   1537          /*!
   1538           * \name	man_data_config_update
   1539          * \brief	rJ103でフラッシュ領域上の設定領域で拡張された部分を初期化するコマンド
   1540          * \param	なし
   1541           * \return  なし
   1542           * \note	必要時に呼ばれること
   1543           */
   1544          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1545          void man_data_set_default_vals_to_extended_area()
   1546          {
   \                     man_data_set_default_vals_to_extended_area: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1547            man_data_work.setting_info.other_num.alarm_transfer_time  = factory_tbl.other_num.alarm_transfer_time;
   \   00000002   0x....             LDR      R0,??DataTable57_21
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR      R1,??DataTable57_22
   \   00000008   0x6008             STR      R0,[R1, #+0]
   1548            memset(&man_data_work.setting_info.other_num.SIM7500_config,0,sizeof(man_data_SIM7500_config_t));
   \   0000000A   0x2108             MOVS     R1,#+8
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x....             LDR      R4,??DataTable57_20
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       __aeabi_memset
   1549            memset(&man_data_work.setting_info.debug_num,0,sizeof(man_data_num_debug_t));
   \   00000016   0x2110             MOVS     R1,#+16
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x....             LDR      R4,??DataTable57_23
   \   0000001C   0x0020             MOVS     R0,R4
   \   0000001E   0x.... 0x....      BL       __aeabi_memset
   1550            memset(man_data_work.setting_info.reserved,0,MAN_DATA_SETTING_T_RESERVED_SIZE);
   \   00000022   0x21F0             MOVS     R1,#+240
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x....             LDR      R4,??DataTable57_24
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0x.... 0x....      BL       __aeabi_memset
   1551          }
   \   0000002E   0xBD10             POP      {R4,PC}          ;; return
   1552          
   1553          /********************************************************************/
   1554          /*!
   1555           * \name	man_data_set_gnss_no_fix_wait_time
   1556           * \brief	GNSSがFIXしていないときの待機時間設定処理
   1557          * \param	時間
   1558           * \return  なし
   1559           * \note	必要時に呼ばれること
   1560           */
   1561          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1562          void man_data_set_gnss_no_fix_pos_time(uint32_t time)
   1563          {
   1564           man_data_work.setting_info.debug_num.gnss_no_fix_post_time=time;
   \                     man_data_set_gnss_no_fix_pos_time: (+1)
   \   00000000   0x....             LDR      R1,??DataTable57_23
   \   00000002   0x6008             STR      R0,[R1, #+0]
   1565          }
   \   00000004   0x4770             BX       LR               ;; return
   1566          
   1567          /********************************************************************/
   1568          /*!
   1569           * \name	man_data_set_gnss_no_fix_wait_time
   1570           * \brief	GNSSがFIXしていないときの待機時間を取得する処理
   1571          * \param	なし
   1572           * \return  時間
   1573           * \note	必要時に呼ばれること
   1574           */
   1575          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1576          uint32_t man_data_get_gnss_no_fix_pos_time()
   1577          {
   1578            return man_data_work.setting_info.debug_num.gnss_no_fix_post_time;
   \                     man_data_get_gnss_no_fix_pos_time: (+1)
   \   00000000   0x....             LDR      R0,??DataTable57_23
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
   1579          }
   1580          
   1581          
   1582          /********************************************************************/
   1583          /*!
   1584           * \name	man_data_set_rssi_sts
   1585           * \brief	電波状況(圏内/圏外)を設定する処理
   1586           * \param	rssi_sts   : 電波状況(圏内/圏外)
   1587           * \return  なし
   1588           * \note	必要時に呼ばれること
   1589           */
   1590          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1591          void man_data_set_rssi_sts( man_data_rssi_sts_def rssi_sts )
   1592          {
   \                     man_data_set_rssi_sts: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1593          	if (man_data_work.sensor_info.rssi_sts != rssi_sts) {
   \   00000002   0x....             LDR      R1,??DataTable57_25
   \   00000004   0x7809             LDRB     R1,[R1, #+0]
   \   00000006   0x0002             MOVS     R2,R0
   \   00000008   0xB2D2             UXTB     R2,R2
   \   0000000A   0x4291             CMP      R1,R2
   \   0000000C   0xD005             BEQ      ??man_data_set_rssi_sts_0
   1594          		man_data_work.sensor_info.rssi_sts = rssi_sts;
   \   0000000E   0x....             LDR      R1,??DataTable57_25
   \   00000010   0x7008             STRB     R0,[R1, #+0]
   1595          
   1596          		// 電波状況を更新する
   1597          		man_http_get_rsrp(&man_data_work.sensor_info.rsrp, &man_data_work.sensor_info.rssi);
   \   00000012   0x....             LDR      R1,??DataTable57_16
   \   00000014   0x....             LDR      R0,??DataTable57_14
   \   00000016   0x.... 0x....      BL       man_http_get_rsrp
   1598          	}
   1599          }
   \                     ??man_data_set_rssi_sts_0: (+1)
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
   1600          
   1601          /********************************************************************/
   1602          /*!
   1603           * \name	man_data_get_sensor
   1604           * \brief	センサ情報のポインタを返す処理
   1605           * \param	なし
   1606           * \return  なし
   1607           * \note	読み出し専用で使用すること
   1608           */
   1609          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1610          man_data_get_sensor_t *man_data_get_sensor( void )
   1611          {
   1612          	return &man_data_work.sensor_info;
   \                     man_data_get_sensor: (+1)
   \   00000000   0x....             LDR      R0,??DataTable57_26
   \   00000002   0x4770             BX       LR               ;; return
   1613          }
   1614          
   1615          
   1616          /********************************************************************/
   1617          /*!
   1618           * \name	man_data_disp_info
   1619           * \brief	データ管理情報を表示する処理
   1620           * \param	なし
   1621           * \return  なし
   1622           * \note	必要時に、呼ばれること
   1623           */
   1624          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1625          void man_data_disp_info( void )
   1626          {
   \                     man_data_disp_info: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   1627          	int32_t					length;
   1628          	man_data_get_other_t	*other = man_data_get_other();
   \   00000004   0x.... 0x....      BL       man_data_get_other
   \   00000008   0x0005             MOVS     R5,R0
   1629          	man_data_get_sensor_t	*sensor = man_data_get_sensor();
   \   0000000A   0x.... 0x....      BL       man_data_get_sensor
   \   0000000E   0x0004             MOVS     R4,R0
   1630          	uint8_t					*usb_buff = man_memory_alloc();
   \   00000010   0x.... 0x....      BL       man_memory_alloc
   \   00000014   0x0006             MOVS     R6,R0
   1631          	
   1632          	sprintf((char *)&usb_buff[0], "DATA INFO :: ip addr=%s, lte ver=%s\n", &other->ipaddr[0], &other->revision[0]);
   \   00000016   0x002B             MOVS     R3,R5
   \   00000018   0x3357             ADDS     R3,R3,#+87
   \   0000001A   0x002A             MOVS     R2,R5
   \   0000001C   0x3268             ADDS     R2,R2,#+104
   \   0000001E   0x....             LDR      R1,??DataTable57_27
   \   00000020   0x0030             MOVS     R0,R6
   \   00000022   0x.... 0x....      BL       sprintf
   1633          	length = strlen((char const *)&usb_buff[0]);
   \   00000026   0x0030             MOVS     R0,R6
   \   00000028   0x.... 0x....      BL       strlen
   1634          	man_usb_data_send(&usb_buff[0], length);
   \   0000002C   0x0001             MOVS     R1,R0
   \   0000002E   0x0030             MOVS     R0,R6
   \   00000030   0x.... 0x....      BL       man_usb_data_send
   1635          
   1636          	sprintf((char *)&usb_buff[0], "SENSOR INFO :: rssi=%d, net=%d, nmea=%d\n", sensor->rssi_sts, sensor->net_mode, sensor->nmea_status);
   \   00000034   0x....             LDR      R0,??DataTable57_28  ;; 0xbc8
   \   00000036   0x5820             LDR      R0,[R4, R0]
   \   00000038   0x9000             STR      R0,[SP, #+0]
   \   0000003A   0x20BD             MOVS     R0,#+189
   \   0000003C   0x0100             LSLS     R0,R0,#+4        ;; #+3024
   \   0000003E   0x5C23             LDRB     R3,[R4, R0]
   \   00000040   0x....             LDR      R0,??DataTable57_29  ;; 0xbd8
   \   00000042   0x5C22             LDRB     R2,[R4, R0]
   \   00000044   0x....             LDR      R1,??DataTable57_30
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0x.... 0x....      BL       sprintf
   1637          	length = strlen((char const *)&usb_buff[0]);
   \   0000004C   0x0030             MOVS     R0,R6
   \   0000004E   0x.... 0x....      BL       strlen
   1638          	man_usb_data_send(&usb_buff[0], length);
   \   00000052   0x0001             MOVS     R1,R0
   \   00000054   0x0030             MOVS     R0,R6
   \   00000056   0x.... 0x....      BL       man_usb_data_send
   1639          	
   1640          
   1641          
   1642          }
   \   0000005A   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     man_data_work+0x38A0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     man_data_work+0x389C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     man_data_work+0x388C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     magic_number_set_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     man_data_work+0x2AB0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     man_data_work+0x201C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     man_data_work+0x3890

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x........         DC32     man_data_work+0x21FC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x........         DC32     magic_number_prg_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   0x........         DC32     man_data_work+0x200C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   0x........         DC32     man_data_work+0x220C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x........         DC32     factory_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \   00000000   0x000038AC         DC32     0x38ac

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_2:
   \   00000000   0x........         DC32     man_data_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_3:
   \   00000000   0x........         DC32     man_data_work+0x3878

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x........         DC32     man_data_work+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x........         DC32     other_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_1:
   \   00000000   0x........         DC32     man_data_work+0x2A1C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   0x........         DC32     fixed_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_1:
   \   00000000   0x........         DC32     man_data_work+0x2A94

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   0x00001001         DC32     0x1001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   0x........         DC32     man_data_work+0x2A3C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   0x........         DC32     man_data_work+0x100C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_1:
   \   00000000   0x........         DC32     man_data_work+0xC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43:
   \   00000000   0x........         DC32     man_data_work+0x2AB0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_1:
   \   00000000   0x........         DC32     man_data_work+0x2B60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_2:
   \   00000000   0x........         DC32     man_data_work+0x2B70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_3:
   \   00000000   0x........         DC32     man_data_work+0x2B7C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_4:
   \   00000000   0x........         DC32     man_data_work+0x2B74

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_5:
   \   00000000   0x........         DC32     man_data_work+0x2B78

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_6:
   \   00000000   0x........         DC32     man_data_work+0x2B84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44:
   \   00000000   0x........         DC32     man_data_work+0x2A73

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_1:
   \   00000000   0x........         DC32     man_data_work+0x2A84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_2:
   \   00000000   0x........         DC32     man_data_work+0x2A2C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_3:
   \   00000000   0x........         DC32     man_data_work+0x2A38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_4:
   \   00000000   0x........         DC32     man_data_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_5:
   \   00000000   0x00002A3C         DC32     0x2a3c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_6:
   \   00000000   0x........         DC32     man_data_work+0x2A6D

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_7:
   \   00000000   0x00002A6D         DC32     0x2a6d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_8:
   \   00000000   0x........         DC32     man_data_work+0x23EC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_9:
   \   00000000   0x........         DC32     man_data_work+0x24F7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_10:
   \   00000000   0x0000020F         DC32     0x20f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_11:
   \   00000000   0x........         DC32     man_data_work+0x2706

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_12:
   \   00000000   0x........         DC32     man_data_work+0x2788

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_13:
   \   00000000   0x........         DC32     man_data_work+0x290E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_14:
   \   00000000   0x........         DC32     man_data_work+0x2A1C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_15:
   \   00000000   0x........         DC32     man_data_work+0x2A94

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_16:
   \   00000000   0x........         DC32     man_data_work+0x3890

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_17:
   \   00000000   0x........         DC32     man_data_work+0x3894

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_18:
   \   00000000   0x........         DC32     man_data_work+0x3898

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_19:
   \   00000000   0x........         DC32     man_data_work+0x389C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_20:
   \   00000000   0x........         DC32     man_data_work+0x38A0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_21:
   \   00000000   0x00001001         DC32     0x1001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45:
   \   00000000   0x........         DC32     man_data_work+0x100C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   0x........         DC32     man_data_work+0x38A4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_1:
   \   00000000   0x........         DC32     man_data_work+0x38A8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable47:
   \   00000000   0x........         DC32     man_data_work+0x388C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49:
   \   00000000   0x........         DC32     man_data_work+0x2C90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   0x........         DC32     tmp_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_1:
   \   00000000   0x00000BDC         DC32     0xbdc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53:
   \   00000000   0x00000BCC         DC32     0xbcc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54:
   \   00000000   0x00000BC8         DC32     0xbc8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_1:
   \   00000000   0x00000BD4         DC32     0xbd4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55:
   \   00000000   0x00000BD9         DC32     0xbd9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56:
   \   00000000   0x0000F424         DC32     0xf424

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_1:
   \   00000000   0x00000BA4         DC32     0xba4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_2:
   \   00000000   0x00000BA8         DC32     0xba8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_3:
   \   00000000   0x........         DC32     man_data_work+0x387C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57:
   \   00000000   0x........         DC32     man_data_work+0x3874

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_1:
   \   00000000   0x........         DC32     man_data_work+0x3880

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_2:
   \   00000000   0x........         DC32     man_data_work+0x3888

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_3:
   \   00000000   0x........         DC32     man_data_work+0x3884

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_4:
   \   00000000   0x........         DC32     man_data_work+0x2D08

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_5:
   \   00000000   0x........         DC32     man_data_work+0x3280

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_6:
   \   00000000   0x........         DC32     man_data_work+0x3284

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_7:
   \   00000000   0x........         DC32     man_data_work+0x37FC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_8:
   \   00000000   0x........         DC32     man_data_work+0x3800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_9:
   \   00000000   0x........         DC32     man_data_work+0x2C9C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_10:
   \   00000000   0x........         DC32     man_data_work+0x2CEC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_11:
   \   00000000   0x........         DC32     man_data_work+0x3848

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_12:
   \   00000000   0x........         DC32     man_data_work+0x2CF0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_13:
   \   00000000   0x........         DC32     man_data_work+0x384C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_14:
   \   00000000   0x........         DC32     man_data_work+0x386C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_15:
   \   00000000   0x........         DC32     man_data_work+0x3850

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_16:
   \   00000000   0x........         DC32     man_data_work+0x3870

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_17:
   \   00000000   0x........         DC32     man_data_work+0x3854

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_18:
   \   00000000   0x........         DC32     man_data_work+0x2B8C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_19:
   \   00000000   0x........         DC32     man_data_work+0x2B8D

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_20:
   \   00000000   0x........         DC32     man_data_work+0x2B88

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_21:
   \   00000000   0x........         DC32     factory_tbl+0xD4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_22:
   \   00000000   0x........         DC32     man_data_work+0x2B84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_23:
   \   00000000   0x........         DC32     man_data_work+0x2B90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_24:
   \   00000000   0x........         DC32     man_data_work+0x2BA0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_25:
   \   00000000   0x........         DC32     man_data_work+0x3868

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_26:
   \   00000000   0x........         DC32     man_data_work+0x2C90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_27:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_28:
   \   00000000   0x00000BC8         DC32     0xbc8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_29:
   \   00000000   0x00000BD8         DC32     0xbd8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_30:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x44 0x41          DC8 "DATA INFO :: ip addr=%s, lte ver=%s\012"
   \              0x54 0x41    
   \              0x20 0x49    
   \              0x4E 0x46    
   \              0x4F 0x20    
   \              0x3A 0x3A    
   \              0x20 0x69    
   \              0x70 0x20    
   \              0x61 0x64    
   \              0x64 0x72    
   \              0x3D 0x25    
   \              0x73 0x2C    
   \              0x20 0x6C    
   \              0x74 0x65    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x3D 0x25    
   \              0x73 0x0A    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x53 0x45          DC8 "SENSOR INFO :: rssi=%d, net=%d, nmea=%d\012"
   \              0x4E 0x53    
   \              0x4F 0x52    
   \              0x20 0x49    
   \              0x4E 0x46    
   \              0x4F 0x20    
   \              0x3A 0x3A    
   \              0x20 0x72    
   \              0x73 0x73    
   \              0x69 0x3D    
   \              0x25 0x64    
   \              0x2C 0x20    
   \              0x6E 0x65    
   \              0x74 0x3D    
   \              0x25 0x64    
   \              0x2C 0x20    
   \              0x6E 0x6D    
   \              0x65 0x61    
   \              0x3D 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   man_data_1000ms_main
         8   -> man_data_collect_sensor
       0   man_data_chk_program
      96   man_data_collect_sensor
        96   -> abs
        96   -> man_battery_get_data
        96   -> man_charge_get_data
        96   -> man_data_get_fixed
        96   -> man_data_get_setting_other
        96   -> man_data_get_setting_sensor
        96   -> man_gps_get_nmea_status
        96   -> man_gyro_get_data
        96   -> man_http_get_rsrp
        96   -> man_let_get_data
        96   -> man_msg_set_type
        96   -> man_ope_get_switch_pos
        96   -> man_ota_get_data
        96   -> man_press_get_data
        96   -> man_rpt_get_data
        96   -> man_rpt_req_park_interval
        96   -> man_rtc_get_clock
        96 __aeabi_uidiv
      24   man_data_data_write_flash
        24   -> flash_end
        24   -> flash_erase_sector
        24   -> flash_read
        24   -> flash_start
        24   -> flash_write
        24   -> memcmp
      24   man_data_disp_info
        24   -> man_data_get_other
        24   -> man_data_get_sensor
        24   -> man_memory_alloc
        24   -> man_usb_data_send
        24   -> sprintf
        24   -> strlen
      12   man_data_flash_erase_sector
      24   man_data_flash_write_sector
        24   -> flash_end
        24   -> flash_read
        24   -> flash_start
        24   -> flash_write
        24   -> memcmp
       0   man_data_get_SIM7500_cfotaswitch
       0   man_data_get_SIM7500_debug_flag
       0   man_data_get_fixed
       0   man_data_get_ftp_info
       0   man_data_get_gnss_no_fix_pos_time
       0   man_data_get_other
       0   man_data_get_sensor
       0   man_data_get_setting_alarmtime
       0   man_data_get_setting_batalarm
       0   man_data_get_setting_gprs
       0   man_data_get_setting_gpsota
       0   man_data_get_setting_gpssleeptime
       0   man_data_get_setting_otastart
       0   man_data_get_setting_other
       0   man_data_get_setting_sensor
       0   man_data_get_setting_usbgpsota
       0   man_data_get_setting_usbota
      16   man_data_init
        16   -> __aeabi_memcpy
        16   -> __aeabi_memset
        16   -> flash_end
        16   -> flash_start
        16   -> man_data_program_chk_flash
        16   -> man_data_setting_get_flash
        16   -> man_data_setting_set_flash
        16   -> man_version_get_data
       8   man_data_main
         8   -> flash_end
         8   -> flash_erase_sector
         8   -> flash_start
         8   -> man_data_return_callback
         8   -> man_timer_get_1ms_count
         8   -> man_timer_get_elapsed_time
       8   man_data_program_chk_flash
         8   -> memcmp
      16   man_data_program_mrg_set_flash
        16   -> __aeabi_memcpy
        16   -> flash_end
        16   -> flash_erase_sector
        16   -> flash_read
        16   -> flash_start
        16   -> flash_write
        16   -> memcmp
       0   man_data_program_write_flash
       8   man_data_req_factory_reset
         8   -> __aeabi_memcpy
         8   -> man_data_write_flash
       8   man_data_return_callback
         8   -- Indirect call
       0   man_data_set_SIM7500_cfotaswitch
       0   man_data_set_SIM7500_debug_flag
       0   man_data_set_battery_alarm
       8   man_data_set_cid
         8   -> __aeabi_memcpy
       8   man_data_set_default_vals_to_extended_area
         8   -> __aeabi_memset
      24   man_data_set_ftp_info
        24   -> __aeabi_memcpy
       0   man_data_set_gnss_no_fix_pos_time
      16   man_data_set_gps_version
        16   -> __aeabi_memcpy
       8   man_data_set_imei
         8   -> __aeabi_memcpy
       8   man_data_set_ipaddr
         8   -> __aeabi_memcpy
      16   man_data_set_nmea
        16   -> __aeabi_memcpy
      16   man_data_set_nmea_fix
        16   -> __aeabi_memcpy
        16   -> __aeabi_memcpy4
       8   man_data_set_revision
         8   -> __aeabi_memcpy
       8   man_data_set_rssi_sts
         8   -> man_http_get_rsrp
       0   man_data_set_setting_alarmtime
       0   man_data_set_setting_almtrtime
       8   man_data_set_setting_batalarm
         8 __aeabi_uidivmod
      24   man_data_set_setting_gprs
        24   -> __aeabi_memcpy
      24   man_data_set_setting_gpsota
        24   -> __aeabi_memcpy
      24   man_data_set_setting_gpssleeptime
        24   -> __aeabi_memcpy4
      24   man_data_set_setting_otastart
        24   -> __aeabi_memcpy
      24   man_data_set_setting_other
        24   -> __aeabi_memcpy4
       0   man_data_set_setting_sensor
      24   man_data_set_setting_usbgpsota
        24   -> __aeabi_memcpy
      24   man_data_set_setting_usbota
        24   -> __aeabi_memcpy
      16   man_data_set_term_version
        16   -> __aeabi_memcpy
      24   man_data_setting_get_flash
        24   -> __aeabi_memcpy
        24   -> flash_read
        24   -> memcmp
      24   man_data_setting_set_flash
        24   -> __aeabi_memcpy
        24   -> flash_erase_sector
        24   -> flash_read
        24   -> flash_write
        24   -> memcmp
       8   man_data_write_flash
         8   -> flash_end
         8   -> flash_start
         8   -> man_data_setting_set_flash


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable15
       4  ??DataTable20
       4  ??DataTable25
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_2
       4  ??DataTable27_3
       4  ??DataTable28
       4  ??DataTable29
       4  ??DataTable29_1
       4  ??DataTable30
       4  ??DataTable30_1
       4  ??DataTable33
       4  ??DataTable35
       4  ??DataTable41
       4  ??DataTable41_1
       4  ??DataTable43
       4  ??DataTable43_1
       4  ??DataTable43_2
       4  ??DataTable43_3
       4  ??DataTable43_4
       4  ??DataTable43_5
       4  ??DataTable43_6
       4  ??DataTable44
       4  ??DataTable44_1
       4  ??DataTable44_10
       4  ??DataTable44_11
       4  ??DataTable44_12
       4  ??DataTable44_13
       4  ??DataTable44_14
       4  ??DataTable44_15
       4  ??DataTable44_16
       4  ??DataTable44_17
       4  ??DataTable44_18
       4  ??DataTable44_19
       4  ??DataTable44_2
       4  ??DataTable44_20
       4  ??DataTable44_21
       4  ??DataTable44_3
       4  ??DataTable44_4
       4  ??DataTable44_5
       4  ??DataTable44_6
       4  ??DataTable44_7
       4  ??DataTable44_8
       4  ??DataTable44_9
       4  ??DataTable45
       4  ??DataTable46
       4  ??DataTable46_1
       4  ??DataTable47
       4  ??DataTable49
       4  ??DataTable51
       4  ??DataTable51_1
       4  ??DataTable53
       4  ??DataTable54
       4  ??DataTable54_1
       4  ??DataTable55
       4  ??DataTable56
       4  ??DataTable56_1
       4  ??DataTable56_2
       4  ??DataTable56_3
       4  ??DataTable57
       4  ??DataTable57_1
       4  ??DataTable57_10
       4  ??DataTable57_11
       4  ??DataTable57_12
       4  ??DataTable57_13
       4  ??DataTable57_14
       4  ??DataTable57_15
       4  ??DataTable57_16
       4  ??DataTable57_17
       4  ??DataTable57_18
       4  ??DataTable57_19
       4  ??DataTable57_2
       4  ??DataTable57_20
       4  ??DataTable57_21
       4  ??DataTable57_22
       4  ??DataTable57_23
       4  ??DataTable57_24
       4  ??DataTable57_25
       4  ??DataTable57_26
       4  ??DataTable57_27
       4  ??DataTable57_28
       4  ??DataTable57_29
       4  ??DataTable57_3
       4  ??DataTable57_30
       4  ??DataTable57_4
       4  ??DataTable57_5
       4  ??DataTable57_6
       4  ??DataTable57_7
       4  ??DataTable57_8
       4  ??DataTable57_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable9
      40  ?_0
      44  ?_1
     480  factory_tbl
      28  fixed_tbl
      16  magic_number_prg_tbl
      16  magic_number_set_tbl
       8  man_data_1000ms_main
       6  man_data_chk_program
     442  man_data_collect_sensor
      94  man_data_data_write_flash
      92  man_data_disp_info
      38  man_data_flash_erase_sector
      82  man_data_flash_write_sector
      14  man_data_get_SIM7500_cfotaswitch
       6  man_data_get_SIM7500_debug_flag
       4  man_data_get_fixed
       4  man_data_get_ftp_info
       6  man_data_get_gnss_no_fix_pos_time
       4  man_data_get_other
       4  man_data_get_sensor
       4  man_data_get_setting_alarmtime
       4  man_data_get_setting_batalarm
       4  man_data_get_setting_gprs
       4  man_data_get_setting_gpsota
       4  man_data_get_setting_gpssleeptime
       4  man_data_get_setting_otastart
       4  man_data_get_setting_other
       4  man_data_get_setting_sensor
       4  man_data_get_setting_usbgpsota
       4  man_data_get_setting_usbota
      96  man_data_init
     174  man_data_main
      46  man_data_program_chk_flash
     120  man_data_program_mrg_set_flash
       4  man_data_program_write_flash
      22  man_data_req_factory_reset
      42  man_data_return_callback
      10  man_data_set_SIM7500_cfotaswitch
       6  man_data_set_SIM7500_debug_flag
       6  man_data_set_battery_alarm
      16  man_data_set_cid
      48  man_data_set_default_vals_to_extended_area
      22  man_data_set_ftp_info
       6  man_data_set_gnss_no_fix_pos_time
      32  man_data_set_gps_version
      16  man_data_set_imei
      16  man_data_set_ipaddr
      30  man_data_set_nmea
      72  man_data_set_nmea_fix
      16  man_data_set_revision
      28  man_data_set_rssi_sts
       6  man_data_set_setting_alarmtime
       6  man_data_set_setting_almtrtime
      24  man_data_set_setting_batalarm
      20  man_data_set_setting_gprs
      20  man_data_set_setting_gpsota
      18  man_data_set_setting_gpssleeptime
      22  man_data_set_setting_otastart
      20  man_data_set_setting_other
       6  man_data_set_setting_sensor
      22  man_data_set_setting_usbgpsota
      20  man_data_set_setting_usbota
      32  man_data_set_term_version
     104  man_data_setting_get_flash
     156  man_data_setting_set_flash
   14508  man_data_work
      18  man_data_write_flash
     120  other_tbl
      36  tmp_tbl

 
 14 508 bytes in section .bss
     36 bytes in section .data
    744 bytes in section .rodata
  2 562 bytes in section .text
 
  2 562 bytes of CODE  memory
    744 bytes of CONST memory
 14 544 bytes of DATA  memory

Errors: none
Warnings: none
