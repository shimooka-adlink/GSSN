###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       21/May/2019  17:01:26
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\GNSS\Software\rJ105\source\GNSS_GW\apl\man_timer.c
#    Command line =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\apl\man_timer.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_B -lCN
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        -lA
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List\man_timer.lst
#    Object file  =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj\man_timer.o
#
###############################################################################

C:\GNSS\Software\rJ105\source\GNSS_GW\apl\man_timer.c
      1          
      2          /**
      3            ******************************************************************************
      4            * @file    man_timer.c
      5            * @author  コア
      6            * @version V1.0
      7            * @date    05-August-2016
      8            * @brief   指定時間後に通知する時間管理処理を行う
      9            ******************************************************************************
     10            $Id: man_timer.c 57 2018-03-30 05:54:51Z shitaoka $
     11            * @attention
     12            *
     13            *****************************************************************************
     14          */
     15          
     16          #include <string.h>
     17          #include <stdio.h>
     18          #include <stdlib.h>
     19          
     20          #include "board.h"
     21          #include "drv_t16_3.h"
     22          #include "man_timer.h"
     23          #include "man_error.h"
     24          
     25          #pragma section = "APL_PRG_BLOCK"
     26          
     27          
     28          #define	TIMER_MAN_BUFF_MAX		20
     29          
     30          #define	TIMER_MAN_FREE		0		// 空き
     31          #define	TIMER_MAN_USED		1		// 使用中
     32          
     33          
     34          /************************************************************************/
     35          /* declaration of structure                                             */
     36          /************************************************************************/
     37          // 個別情報
     38          typedef struct _man_timer_wait_t {
     39          	uint32_t	used;							// タイマ使用状態
     40          	uint32_t	start_1ms_count;				// 開始時のcount値
     41          	uint32_t	wait_time;						// 待ち時間
     42          	int32_t		id;								// ユニークID
     43          	func_timer	callback;						// callback関数
     44          } man_timer_wait_t;
     45          
     46          
     47          typedef struct _man_timer_work_t {
     48          	man_timer_wait_t	wait_info[TIMER_MAN_BUFF_MAX];
     49          } man_timer_work_t;
     50          
     51          
     52          
     53          /************************************************************************/
     54          /* definition of variables                                              */
     55          /************************************************************************/
     56          

   \                                 In section .bss, align 4
     57          static man_timer_work_t		man_timer_work;			// タイマ管理用変数
   \                     man_timer_work:
   \   00000000                      DS8 400
     58          
     59          
     60          /********************************************************************/
     61          /*!
     62           * \name	man_timer_init
     63           * \brief	時間管理処理の初期化を行う
     64           * \param	
     65           * \return  
     66           * \note	
     67           */
     68          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     69          void man_timer_init( void )
     70          {
   \                     man_timer_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     71          	// タイマ開始
     72          	t16_3_init();
   \   00000002   0x.... 0x....      BL       t16_3_init
     73          	t16_3_start();
   \   00000006   0x.... 0x....      BL       t16_3_start
     74          
     75          	// 使用変数の初期化
     76          	memset(&man_timer_work, 0, sizeof(man_timer_work));
   \   0000000A   0x21C8             MOVS     R1,#+200
   \   0000000C   0x0049             LSLS     R1,R1,#+1        ;; #+400
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0x....             LDR      R4,??DataTable4
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       __aeabi_memset
     77          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
     78          
     79          
     80          /********************************************************************/
     81          /*!
     82           * \name	man_timer_start_wait
     83           * \brief	時間待ちを開始する
     84           * \param	id        : ユニークID
     85           *          wait_time : 待ち時間
     86           *          callback  : 時間経過を通知する関数
     87           * \return   0: 成功
     88           *          -1: 失敗
     89           * \note	
     90           */
     91          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     92          int32_t man_timer_start_wait( int32_t id, uint32_t wait_time, func_timer callback )
     93          {
   \                     man_timer_start_wait: (+1)
   \   00000000   0xB5F4             PUSH     {R2,R4-R7,LR}
   \   00000002   0x0007             MOVS     R7,R0
   \   00000004   0x000D             MOVS     R5,R1
     94          	int32_t		i;
     95          	int32_t		ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
     96          
     97          	for(i=0; i<TIMER_MAN_BUFF_MAX; i++) {
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0xE000             B        ??man_timer_start_wait_0
   \                     ??man_timer_start_wait_1: (+1)
   \   0000000E   0x1C76             ADDS     R6,R6,#+1
   \                     ??man_timer_start_wait_0: (+1)
   \   00000010   0x2E14             CMP      R6,#+20
   \   00000012   0xDA22             BGE      ??man_timer_start_wait_2
     98          		if (man_timer_work.wait_info[i].used == TIMER_MAN_FREE) {
   \   00000014   0x....             LDR      R0,??DataTable4
   \   00000016   0x2114             MOVS     R1,#+20
   \   00000018   0x4371             MULS     R1,R6,R1
   \   0000001A   0x5840             LDR      R0,[R0, R1]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD1F6             BNE      ??man_timer_start_wait_1
     99          			man_timer_work.wait_info[i].used = TIMER_MAN_USED;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x....             LDR      R1,??DataTable4
   \   00000024   0x2214             MOVS     R2,#+20
   \   00000026   0x4372             MULS     R2,R6,R2
   \   00000028   0x5088             STR      R0,[R1, R2]
    100          			man_timer_work.wait_info[i].id = id;
   \   0000002A   0x....             LDR      R0,??DataTable4
   \   0000002C   0x2114             MOVS     R1,#+20
   \   0000002E   0x4371             MULS     R1,R6,R1
   \   00000030   0x1840             ADDS     R0,R0,R1
   \   00000032   0x60C7             STR      R7,[R0, #+12]
    101          			man_timer_work.wait_info[i].start_1ms_count = t16_3_get_counter();
   \   00000034   0x.... 0x....      BL       t16_3_get_counter
   \   00000038   0x....             LDR      R1,??DataTable4
   \   0000003A   0x2214             MOVS     R2,#+20
   \   0000003C   0x4372             MULS     R2,R6,R2
   \   0000003E   0x1889             ADDS     R1,R1,R2
   \   00000040   0x6048             STR      R0,[R1, #+4]
    102          			man_timer_work.wait_info[i].wait_time = wait_time;
   \   00000042   0x....             LDR      R0,??DataTable4
   \   00000044   0x2114             MOVS     R1,#+20
   \   00000046   0x4371             MULS     R1,R6,R1
   \   00000048   0x1840             ADDS     R0,R0,R1
   \   0000004A   0x6085             STR      R5,[R0, #+8]
    103          			man_timer_work.wait_info[i].callback = callback;
   \   0000004C   0x9800             LDR      R0,[SP, #+0]
   \   0000004E   0x....             LDR      R1,??DataTable4
   \   00000050   0x2214             MOVS     R2,#+20
   \   00000052   0x4356             MULS     R6,R2,R6
   \   00000054   0x1989             ADDS     R1,R1,R6
   \   00000056   0x6108             STR      R0,[R1, #+16]
    104          			ret = 0;
   \   00000058   0x2400             MOVS     R4,#+0
    105          			break;
    106          		}
    107          	}
    108          
    109          	if (ret != 0) {
   \                     ??man_timer_start_wait_2: (+1)
   \   0000005A   0x2C00             CMP      R4,#+0
   \   0000005C   0xD005             BEQ      ??man_timer_start_wait_3
    110          		man_error_setting(MAN_ERROR_MAN_TIMMER, id, (int32_t)callback);
   \   0000005E   0x236E             MOVS     R3,#+110
   \   00000060   0x9A00             LDR      R2,[SP, #+0]
   \   00000062   0x0039             MOVS     R1,R7
   \   00000064   0x2011             MOVS     R0,#+17
   \   00000066   0x.... 0x....      BL       man_error_set
    111          	}
    112          	
    113          	return ret;
   \                     ??man_timer_start_wait_3: (+1)
   \   0000006A   0x0020             MOVS     R0,R4
   \   0000006C   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    114          }
    115          
    116          
    117          
    118          /********************************************************************/
    119          /*!
    120           * \name	man_timer_cancel_wait
    121           * \brief	時間待ちを中止する
    122           * \param	id        : ユニークID
    123           *          wait_time : 待ち時間
    124           * \return   0: 成功
    125           *          -1: 失敗
    126           * \note	
    127           */
    128          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    129          int32_t man_timer_cancel_wait( int32_t id, uint32_t wait_time )
    130          {
   \                     man_timer_cancel_wait: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0002             MOVS     R2,R0
    131          	int32_t		i;
    132          	int32_t		ret=-1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
    133          
    134          	for(i=0; i<TIMER_MAN_BUFF_MAX; i++) {
   \   00000008   0x2300             MOVS     R3,#+0
   \   0000000A   0xE000             B        ??man_timer_cancel_wait_0
   \                     ??man_timer_cancel_wait_1: (+1)
   \   0000000C   0x1C5B             ADDS     R3,R3,#+1
   \                     ??man_timer_cancel_wait_0: (+1)
   \   0000000E   0x2B14             CMP      R3,#+20
   \   00000010   0xDA2B             BGE      ??man_timer_cancel_wait_2
    135          		if ( (man_timer_work.wait_info[i].used == TIMER_MAN_USED) 
    136          			&& (man_timer_work.wait_info[i].id == id)
    137          			&& (man_timer_work.wait_info[i].wait_time == wait_time) ) {
   \   00000012   0x....             LDR      R4,??DataTable4
   \   00000014   0x2514             MOVS     R5,#+20
   \   00000016   0x435D             MULS     R5,R3,R5
   \   00000018   0x5964             LDR      R4,[R4, R5]
   \   0000001A   0x2C01             CMP      R4,#+1
   \   0000001C   0xD1F6             BNE      ??man_timer_cancel_wait_1
   \   0000001E   0x....             LDR      R4,??DataTable4
   \   00000020   0x2514             MOVS     R5,#+20
   \   00000022   0x435D             MULS     R5,R3,R5
   \   00000024   0x1964             ADDS     R4,R4,R5
   \   00000026   0x68E4             LDR      R4,[R4, #+12]
   \   00000028   0x4294             CMP      R4,R2
   \   0000002A   0xD1EF             BNE      ??man_timer_cancel_wait_1
   \   0000002C   0x....             LDR      R4,??DataTable4
   \   0000002E   0x2514             MOVS     R5,#+20
   \   00000030   0x435D             MULS     R5,R3,R5
   \   00000032   0x1964             ADDS     R4,R4,R5
   \   00000034   0x68A4             LDR      R4,[R4, #+8]
   \   00000036   0x428C             CMP      R4,R1
   \   00000038   0xD1E8             BNE      ??man_timer_cancel_wait_1
    138          
    139          			man_timer_work.wait_info[i].used = TIMER_MAN_FREE;
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x....             LDR      R1,??DataTable4
   \   0000003E   0x2214             MOVS     R2,#+20
   \   00000040   0x435A             MULS     R2,R3,R2
   \   00000042   0x5088             STR      R0,[R1, R2]
    140          			man_timer_work.wait_info[i].start_1ms_count = 0;
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x....             LDR      R1,??DataTable4
   \   00000048   0x2214             MOVS     R2,#+20
   \   0000004A   0x435A             MULS     R2,R3,R2
   \   0000004C   0x1889             ADDS     R1,R1,R2
   \   0000004E   0x6048             STR      R0,[R1, #+4]
    141          			man_timer_work.wait_info[i].wait_time = 0;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x....             LDR      R1,??DataTable4
   \   00000054   0x2214             MOVS     R2,#+20
   \   00000056   0x435A             MULS     R2,R3,R2
   \   00000058   0x1889             ADDS     R1,R1,R2
   \   0000005A   0x6088             STR      R0,[R1, #+8]
    142          			man_timer_work.wait_info[i].callback = NULL;
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x....             LDR      R1,??DataTable4
   \   00000060   0x2214             MOVS     R2,#+20
   \   00000062   0x4353             MULS     R3,R2,R3
   \   00000064   0x18C9             ADDS     R1,R1,R3
   \   00000066   0x6108             STR      R0,[R1, #+16]
    143          			ret = 0;
   \   00000068   0x2000             MOVS     R0,#+0
    144          			break;
    145          		}
    146          	}
    147          
    148          	return ret;
   \                     ??man_timer_cancel_wait_2: (+1)
   \   0000006A   0xBD30             POP      {R4,R5,PC}       ;; return
    149          }
    150          
    151          
    152          
    153          /********************************************************************/
    154          /*!
    155           * \name	man_timer_stop
    156           * \brief	時間管理処理を停止する
    157           * \param	
    158           * \return  
    159           * \note	スタンバイに入るときは停止すること
    160           */
    161          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    162          void man_timer_stop( void )
    163          {
   \                     man_timer_stop: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    164          	t16_3_stop();
   \   00000002   0x.... 0x....      BL       t16_3_stop
    165          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    166          
    167          
    168          /********************************************************************/
    169          /*!
    170           * \name	man_timer_start
    171           * \brief	時間管理処理を再開する
    172           * \param	
    173           * \return   
    174           * \note	スタンバイ解除後は再開すること
    175           */
    176          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    177          void man_timer_start( void )
    178          {
   \                     man_timer_start: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    179          	t16_3_start();
   \   00000002   0x.... 0x....      BL       t16_3_start
    180          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    181          
    182          
    183          /********************************************************************/
    184          /*!
    185           * \name	man_timer_main
    186           * \brief	時間管理メイン処理
    187           * \param	なし
    188           * \return  なし
    189           * \note	1ms毎に呼ばれること
    190           */
    191          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    192          void man_timer_main( void )
    193          {
   \                     man_timer_main: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    194          	uint32_t	count=t16_3_get_counter();
   \   00000002   0x.... 0x....      BL       t16_3_get_counter
   \   00000006   0x0004             MOVS     R4,R0
    195          	uint32_t	count_tmp;
    196          	int32_t		i;
    197          
    198          	for(i=0; i<TIMER_MAN_BUFF_MAX; i++) {
   \   00000008   0x2500             MOVS     R5,#+0
   \   0000000A   0xE01A             B        ??man_timer_main_0
    199          		if (man_timer_work.wait_info[i].used == TIMER_MAN_USED) {
    200          			count_tmp = man_timer_work.wait_info[i].start_1ms_count + man_timer_work.wait_info[i].wait_time;
    201          			if (count_tmp >= (T16_3_MAX_COUNT+1)) {
    202          				count_tmp -= (T16_3_MAX_COUNT+1);
    203          				if ( (count < man_timer_work.wait_info[i].start_1ms_count) && (count >= count_tmp) ) {
    204          					if (man_timer_work.wait_info[i].callback != NULL) {
    205          						man_timer_work.wait_info[i].callback(man_timer_work.wait_info[i].id, TIMER_MAN_STATUS_OK);
    206          					}
    207          					man_timer_work.wait_info[i].used = TIMER_MAN_FREE;
    208          				}
    209          			}
    210          			else {
    211          				if (count >= count_tmp) {
   \                     ??man_timer_main_1: (+1)
   \   0000000C   0x4284             CMP      R4,R0
   \   0000000E   0xD317             BCC      ??man_timer_main_2
    212          					if (man_timer_work.wait_info[i].callback != NULL) {
   \   00000010   0x....             LDR      R0,??DataTable4
   \   00000012   0x2114             MOVS     R1,#+20
   \   00000014   0x4369             MULS     R1,R5,R1
   \   00000016   0x1840             ADDS     R0,R0,R1
   \   00000018   0x6900             LDR      R0,[R0, #+16]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD00B             BEQ      ??man_timer_main_3
    213          						man_timer_work.wait_info[i].callback(man_timer_work.wait_info[i].id, TIMER_MAN_STATUS_OK);
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R0,??DataTable4
   \   00000022   0x2214             MOVS     R2,#+20
   \   00000024   0x436A             MULS     R2,R5,R2
   \   00000026   0x1880             ADDS     R0,R0,R2
   \   00000028   0x68C0             LDR      R0,[R0, #+12]
   \   0000002A   0x....             LDR      R2,??DataTable4
   \   0000002C   0x2314             MOVS     R3,#+20
   \   0000002E   0x436B             MULS     R3,R5,R3
   \   00000030   0x18D2             ADDS     R2,R2,R3
   \   00000032   0x6912             LDR      R2,[R2, #+16]
   \   00000034   0x4790             BLX      R2
    214          					}
    215          					man_timer_work.wait_info[i].used = TIMER_MAN_FREE;
   \                     ??man_timer_main_3: (+1)
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x....             LDR      R1,??DataTable4
   \   0000003A   0x2214             MOVS     R2,#+20
   \   0000003C   0x436A             MULS     R2,R5,R2
   \   0000003E   0x5088             STR      R0,[R1, R2]
    216          				}
    217          			}
   \                     ??man_timer_main_2: (+1)
   \   00000040   0x1C6D             ADDS     R5,R5,#+1
   \                     ??man_timer_main_0: (+1)
   \   00000042   0x2D14             CMP      R5,#+20
   \   00000044   0xDA39             BGE      ??man_timer_main_4
   \   00000046   0x....             LDR      R0,??DataTable4
   \   00000048   0x2114             MOVS     R1,#+20
   \   0000004A   0x4369             MULS     R1,R5,R1
   \   0000004C   0x5840             LDR      R0,[R0, R1]
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xD1F6             BNE      ??man_timer_main_2
   \   00000052   0x....             LDR      R0,??DataTable4
   \   00000054   0x2114             MOVS     R1,#+20
   \   00000056   0x4369             MULS     R1,R5,R1
   \   00000058   0x1840             ADDS     R0,R0,R1
   \   0000005A   0x6840             LDR      R0,[R0, #+4]
   \   0000005C   0x....             LDR      R1,??DataTable4
   \   0000005E   0x2214             MOVS     R2,#+20
   \   00000060   0x436A             MULS     R2,R5,R2
   \   00000062   0x1889             ADDS     R1,R1,R2
   \   00000064   0x6889             LDR      R1,[R1, #+8]
   \   00000066   0x1840             ADDS     R0,R0,R1
   \   00000068   0x2180             MOVS     R1,#+128
   \   0000006A   0x05C9             LSLS     R1,R1,#+23       ;; #+1073741824
   \   0000006C   0x4288             CMP      R0,R1
   \   0000006E   0xD3CD             BCC      ??man_timer_main_1
   \   00000070   0x21C0             MOVS     R1,#+192
   \   00000072   0x0609             LSLS     R1,R1,#+24       ;; #-1073741824
   \   00000074   0x1840             ADDS     R0,R0,R1
   \   00000076   0x....             LDR      R1,??DataTable4
   \   00000078   0x2214             MOVS     R2,#+20
   \   0000007A   0x436A             MULS     R2,R5,R2
   \   0000007C   0x1889             ADDS     R1,R1,R2
   \   0000007E   0x6849             LDR      R1,[R1, #+4]
   \   00000080   0x428C             CMP      R4,R1
   \   00000082   0xD2DD             BCS      ??man_timer_main_2
   \   00000084   0x4284             CMP      R4,R0
   \   00000086   0xD3DB             BCC      ??man_timer_main_2
   \   00000088   0x....             LDR      R0,??DataTable4
   \   0000008A   0x2114             MOVS     R1,#+20
   \   0000008C   0x4369             MULS     R1,R5,R1
   \   0000008E   0x1840             ADDS     R0,R0,R1
   \   00000090   0x6900             LDR      R0,[R0, #+16]
   \   00000092   0x2800             CMP      R0,#+0
   \   00000094   0xD00B             BEQ      ??man_timer_main_5
   \   00000096   0x2100             MOVS     R1,#+0
   \   00000098   0x....             LDR      R0,??DataTable4
   \   0000009A   0x2214             MOVS     R2,#+20
   \   0000009C   0x436A             MULS     R2,R5,R2
   \   0000009E   0x1880             ADDS     R0,R0,R2
   \   000000A0   0x68C0             LDR      R0,[R0, #+12]
   \   000000A2   0x....             LDR      R2,??DataTable4
   \   000000A4   0x2314             MOVS     R3,#+20
   \   000000A6   0x436B             MULS     R3,R5,R3
   \   000000A8   0x18D2             ADDS     R2,R2,R3
   \   000000AA   0x6912             LDR      R2,[R2, #+16]
   \   000000AC   0x4790             BLX      R2
   \                     ??man_timer_main_5: (+1)
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x....             LDR      R1,??DataTable4
   \   000000B2   0x2214             MOVS     R2,#+20
   \   000000B4   0x436A             MULS     R2,R5,R2
   \   000000B6   0x5088             STR      R0,[R1, R2]
   \   000000B8   0xE7C2             B        ??man_timer_main_2
    218          		}
    219          	}
    220          }
   \                     ??man_timer_main_4: (+1)
   \   000000BA   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    221          
    222          
    223          /********************************************************************/
    224          /*!
    225           * \name	man_timer_get_1ms_count
    226           * \brief	1msフリーカウンタ値を取得する
    227           * \param	なし
    228           * \return  1msフリーカウンタ値
    229           * \note	必要時に呼ばれること
    230           */
    231          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    232          uint32_t man_timer_get_1ms_count( void )
    233          {
   \                     man_timer_get_1ms_count: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    234          	return t16_3_get_counter();
   \   00000002   0x.... 0x....      BL       t16_3_get_counter
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
    235          }
    236          
    237          
    238          /********************************************************************/
    239          /*!
    240           * \name	man_timer_get_elapsed_time
    241           * \brief	経過時間を計算する
    242           * \param	start   : 1msフリーカウンタ値
    243           *          end     : 1msフリーカウンタ値
    244           * \return  1msフリーカウンタ値
    245           * \note	必要時に呼ばれること
    246           */
    247          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    248          uint32_t man_timer_get_elapsed_time( uint32_t start, uint32_t end )
    249          {
   \                     man_timer_get_elapsed_time: (+1)
   \   00000000   0xB500             PUSH     {LR}
    250          	uint32_t	time;
    251          
    252          	if (end >= start) {
   \   00000002   0x4281             CMP      R1,R0
   \   00000004   0xD301             BCC      ??man_timer_get_elapsed_time_0
    253          		time = end - start;
   \   00000006   0x1A08             SUBS     R0,R1,R0
   \   00000008   0xE002             B        ??man_timer_get_elapsed_time_1
    254          	}
    255          	else {
    256          		time = T16_3_MAX_COUNT - end + start;
   \                     ??man_timer_get_elapsed_time_0: (+1)
   \   0000000A   0x....             LDR      R2,??DataTable4_1  ;; 0x3fffffff
   \   0000000C   0x1A51             SUBS     R1,R2,R1
   \   0000000E   0x1808             ADDS     R0,R1,R0
    257          	}
    258          
    259          	return time;
   \                     ??man_timer_get_elapsed_time_1: (+1)
   \   00000010   0xBD00             POP      {PC}             ;; return
    260          }
    261          
    262          
    263          
    264          
    265          /********************************************************************/
    266          /*!
    267           * \name	man_timer_chk_10ms
    268           * \brief	10m経過を判定する。
    269           * \param	なし
    270           * \return  0: 時間未経過
    271           *          1: 時間経過
    272           * \note	一つのタスクしか使用できません。
    273           */
    274          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    275          uint32_t man_timer_chk_10ms( void )
    276          {
   \                     man_timer_chk_10ms: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    277          	return t16_3_check_10ms();
   \   00000002   0x.... 0x....      BL       t16_3_check_10ms
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
    278          }
    279          
    280          /********************************************************************/
    281          /*!
    282           * \name	man_timer_chk_100ms
    283           * \brief	100m経過を判定する。
    284           * \param	なし
    285           * \return  0: 時間未経過
    286           *          1: 時間経過
    287           * \note	一つのタスクしか使用できません。
    288           */
    289          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    290          uint32_t man_timer_chk_100ms( void )
    291          {
   \                     man_timer_chk_100ms: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    292          	return t16_3_check_100ms();
   \   00000002   0x.... 0x....      BL       t16_3_check_100ms
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
    293          }
    294          
    295          /********************************************************************/
    296          /*!
    297           * \name	man_timer_chk_500ms
    298           * \brief	500m経過を判定する。
    299           * \param	なし
    300           * \return  0: 時間未経過
    301           *          1: 時間経過
    302           * \note	一つのタスクしか使用できません。
    303           */
    304          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    305          uint32_t man_timer_chk_500ms( void )
    306          {
   \                     man_timer_chk_500ms: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    307          	return t16_3_check_500ms();
   \   00000002   0x.... 0x....      BL       t16_3_check_500ms
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
    308          }
    309          
    310          /********************************************************************/
    311          /*!
    312           * \name	man_timer_chk_1000ms
    313           * \brief	1000m経過を判定する。
    314           * \param	なし
    315           * \return  0: 時間未経過
    316           *          1: 時間経過
    317           * \note	一つのタスクしか使用できません。
    318           */
    319          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    320          uint32_t man_timer_chk_1000ms( void )
    321          {
   \                     man_timer_chk_1000ms: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    322          	return t16_3_check_1000ms();
   \   00000002   0x.... 0x....      BL       t16_3_check_1000ms
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
    323          }
    324          
    325          /********************************************************************/
    326          /*!
    327           * \name	man_timer_set_500ms_hdl
    328           * \brief	500ms毎に呼ばれる割り込み関数を登録する処理
    329           * \param	hdl_500ms  : 500ms毎に呼ばれる割り込み関数
    330           * \return  なし
    331           * \note	処理時間を短くすること
    332           */
    333          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    334          void man_timer_set_500ms_hdl( func_drv_t16_3 hdl_500ms )
    335          {
   \                     man_timer_set_500ms_hdl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    336          	t16_3_set_500ms_hdl(hdl_500ms);
   \   00000002   0x.... 0x....      BL       t16_3_set_500ms_hdl
    337          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     man_timer_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x3FFFFFFF         DC32     0x3fffffff
    338          
    339          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      12   man_timer_cancel_wait
       8   man_timer_chk_1000ms
         8   -> t16_3_check_1000ms
       8   man_timer_chk_100ms
         8   -> t16_3_check_100ms
       8   man_timer_chk_10ms
         8   -> t16_3_check_10ms
       8   man_timer_chk_500ms
         8   -> t16_3_check_500ms
       8   man_timer_get_1ms_count
         8   -> t16_3_get_counter
       4   man_timer_get_elapsed_time
       8   man_timer_init
         8   -> __aeabi_memset
         8   -> t16_3_init
         8   -> t16_3_start
      16   man_timer_main
        16   -- Indirect call
        16   -> t16_3_get_counter
       8   man_timer_set_500ms_hdl
         8   -> t16_3_set_500ms_hdl
       8   man_timer_start
         8   -> t16_3_start
      24   man_timer_start_wait
        24   -> man_error_set
        24   -> t16_3_get_counter
       8   man_timer_stop
         8   -> t16_3_stop


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
     108  man_timer_cancel_wait
       8  man_timer_chk_1000ms
       8  man_timer_chk_100ms
       8  man_timer_chk_10ms
       8  man_timer_chk_500ms
       8  man_timer_get_1ms_count
      18  man_timer_get_elapsed_time
      26  man_timer_init
     188  man_timer_main
       8  man_timer_set_500ms_hdl
       8  man_timer_start
     110  man_timer_start_wait
       8  man_timer_stop
     400  man_timer_work

 
 400 bytes in section .bss
 522 bytes in section .text
 
 522 bytes of CODE memory
 400 bytes of DATA memory

Errors: none
Warnings: none
