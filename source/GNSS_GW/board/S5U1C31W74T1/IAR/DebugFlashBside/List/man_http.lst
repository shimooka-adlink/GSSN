###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       21/May/2019  17:01:23
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\GNSS\Software\rJ105\source\GNSS_GW\apl\man_http.c
#    Command line =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\apl\man_http.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_B -lCN
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        -lA
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List\man_http.lst
#    Object file  =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj\man_http.o
#
###############################################################################

C:\GNSS\Software\rJ105\source\GNSS_GW\apl\man_http.c
      1          
      2          /**
      3            ******************************************************************************
      4            * @file    man_http.c
      5            * @author  コア
      6            * @version V1.0
      7            * @date    2017.10.2
      8            * @brief   HTTPを管理する
      9            ******************************************************************************
     10            $Id: man_http.c 254 2018-08-01 06:37:07Z shitaoka $
     11            * @attention
     12            *
     13            *****************************************************************************
     14          */
     15          #include <string.h>
     16          #include <stdio.h>
     17          #include <stdlib.h>
     18          
     19          #include "system_manager.h"
     20          #include "board.h"
     21          #include "man_rtc.h"
     22          #include "mid_HTTP.h"
     23          #include "man_http.h"
     24          #include "man_timer.h"
     25          #include "man_data.h"
     26          #include "man_error.h"
     27          #include "man_usb.h"
     28          #include "gnss_gw_common.h"
     29          
     30          
     31          #pragma section = "APL_PRG_BLOCK"
     32          
     33          /************************************************************************/
     34          /* declaration of structure                                             */
     35          /************************************************************************/
     36          
     37          
     38          // HTTP管理シーケンス
     39          typedef enum {
     40          	MAN_HTTP_SEQ_READY,					// 00 : 要求待ち
     41          
     42          	MAN_HTTP_SEQ_OPEN_INIT,				// 01 : NETWORK開始  初期化コマンド中
     43          	MAN_HTTP_SEQ_OPEN_READY,			// 02 : NETWORK開始  準備中
     44          	MAN_HTTP_SEQ_OPEN_LTE,				// 03 : NETWORK開始  LTE OPEN中
     45          	MAN_HTTP_SEQ_OPEN_UDP,				// 04 : NETWORK開始  UDP OPEN中
     46          
     47          	MAN_HTTP_SEQ_UDP_SEND,				// 05 : UDP SEND開始 1個目
     48          
     49          	MAN_HTTP_SEQ_CLOSE_UDP,				// 06 : NETWORK終了  UDP CLOSE中
     50          	MAN_HTTP_SEQ_CLOSE_LTE,				// 07 : NETWORK終了  LTE CLOSE中
     51          	MAN_HTTP_SEQ_CLOSE_STBY_IN,			// 08 : NETWORK終了  スタンバイ IN中
     52          	MAN_HTTP_SEQ_CLOSE_STBY_OUT,		// 09 : NETWORK終了  スタンバイ OUT中
     53          
     54          	MAN_HTTP_SEQ_GET_CSQ,				// 10 : 無線電波の確認
     55          	MAN_HTTP_SEQ_GET_CPSI,				// 11 : 基準信号受信電力の確認
     56          	MAN_HTTP_SEQ_GET_IP,				// 12 : IP ADDRESS取得
     57          	MAN_HTTP_SEQ_EXEC_RESET,			// 13 : LTE RESET
     58          
     59          	MAN_HTTP_SEQ_REOPEN_WAIT,			// 14 : NETWORK再開  1000ms待ち
     60          	MAN_HTTP_SEQ_REOPEN_UDP,			// 15 : NETWORK再開  UDP OPEN中
     61          
     62          	MAN_HTTP_SEQ_CLIENT_OPEN,			// 16 : HTTP CLIENT開始
     63          	MAN_HTTP_SEQ_CLIENT_SEND,			// 17 : HTTP CLIENT SEND開始
     64          	MAN_HTTP_SEQ_CLIENT_RECV,			// 18 : HTTP CLIENT RECV開始
     65          	MAN_HTTP_SEQ_CLIENT_CLOSE,			// 19 : HTTP CLIENT終了
     66          
     67          	MAN_HTTP_SEQ_SERVER_OPEN,			// 20 : HTTP SERVER開始
     68          	MAN_HTTP_SEQ_SERVER_SEND,			// 21 : HTTP SERVER SEND開始
     69          	MAN_HTTP_SEQ_SERVER_CLOSE,			// 22 : HTTP SERVER終了
     70          
     71          	MAN_HTTP_SEQ_FTP_INIT,				// 23 : FTP FOLDER移動開始
     72          	MAN_HTTP_SEQ_FTP_OPEN,				// 24 : FTP OPEN開始
     73          	MAN_HTTP_SEQ_FTP_RECOVERY,			// 25 : FTP RECOVERY開始
     74          	MAN_HTTP_SEQ_FTP_GET,				// 26 : FTP GET開始
     75          	MAN_HTTP_SEQ_FILE_GET,				// 27 : FILE GET開始
     76          	MAN_HTTP_SEQ_FILE_GET_WAIT,			// 28 : FILE GET応答待ち
     77          	MAN_HTTP_SEQ_FILE_GET_OK,			// 29 : FILE GET完了
     78          	MAN_HTTP_SEQ_FILE_GET_NG,			// 30 : FILE GET異常
     79          
     80          	MAN_HTTP_SEQ_RETRY_RTC,				// 31 : RTC取得
     81          	MAN_HTTP_SEQ_SET_RTC,				// 31 : RTC設定
     82          	MAN_HTTP_SEQ_GET_RTC,				// 32 : RTC取得
     83          
     84          	MAN_HTTP_SEQ_OPEN_OTA_OFF,			// 33 : NETWORK開始  OTA機能停止
     85          } man_http_seq_def;
     86          
     87          
     88          #define	MAN_HTTP_STATUS_UDP			0x01	// UDP使用中
     89          #define	MAN_HTTP_STATUS_CLIENT		0x02	// HTTP CLIENT使用中
     90          #define	MAN_HTTP_STATUS_SERVER		0x04	// HTTP SERVER使用中
     91          
     92          
     93          #define	MAN_HTTP_RECV_DATA_MAX		200		// 受信データ最大値
     94          #define	MAN_HTTP_SEND_BUF_MAX		MAN_DATA_HTTP_MAX_SIZE	// コマンド送信バッファ
     95          
     96          #define	MAN_HTTP_RESP_ID_TIMER		100		
     97          #define	MAN_HTTP_FILE_GET_TIME		(2*60*1000)	// 2分間で受信できない場合は異常
     98          
     99          
    100          // 受信データ
    101          typedef struct _man_http_recv_t {
    102          	int32_t					flag;
    103          	uint8_t					data[MAN_HTTP_RECV_DATA_MAX];
    104          	int32_t					length;
    105          	int32_t					type;			// データ種別
    106          } man_http_recv_t;
    107          
    108          // 要求に対する応答
    109          typedef struct _man_http_resp_cmd_t {
    110          	int32_t					flag;
    111          	int32_t					id;
    112          	int32_t					status;
    113          } man_http_resp_cmd_t;
    114          
    115          
    116          
    117          // 要求
    118          typedef struct _man_http_req_info_t {
    119          	int32_t					id;					// ユニークID
    120          	func_man_http			callback;			// 結果を通知するcallback関数
    121          	func_man_http_recv		callback_recv;		// 受信結果を通知するcallback関数(HTTP client用)
    122          	int32_t					id_server;			// HTTP server用のユニークID
    123          	func_man_http_recv		callback_sever;		// 受信結果を通知するcallback関数(HTTP server用)
    124          	func_man_http_recv		callback_file;		// 受信結果を通知するcallback関数(FILE用)
    125          
    126          	int32_t					num;
    127          
    128          	int32_t					timeout;
    129          	uint32_t				start_time;			// コマンド開始時間
    130          
    131          	uint8_t					*data1;
    132          	int32_t					length1;
    133          	uint8_t					*data2;
    134          	int32_t					length2;
    135          	uint8_t					buff[MAN_HTTP_SEND_BUF_MAX];
    136          } man_http_req_info_t;
    137          
    138          
    139          // 受信データ通知先情報
    140          typedef struct _man_http_noti_info_t {
    141          	int32_t					id;					// ユニークID
    142          	func_man_http_recv		callback_recv;		// 受信データを通知するcallback関数
    143          } man_http_noti_info_t;
    144          
    145          // 受信状態通知先情報
    146          typedef struct _man_http_state_info_t {
    147          	int32_t					id;					// ユニークID
    148          	func_man_http_state		callback_state;		//状態を通知するcallback関数
    149          } man_http_state_info_t;
    150          
    151          
    152          // HTTP管理ワーク
    153          typedef struct _man_http_work_t {
    154          	uint32_t				status;				// 状態
    155          	man_http_req_info_t		request;			// 要求
    156          
    157          	man_http_state_info_t	lte_state;			// lte用の受信状態通知先情報
    158          	man_http_state_info_t	udp_state;			// udp用の受信状態通知先情報
    159          	man_http_state_info_t	server_state;		// server用の受信データ通知先情報
    160          	man_http_state_info_t	client_state;		// client用の受信データ通知先情報
    161          	man_http_state_info_t	ftp_state;			// ftp用の受信データ通知先情報
    162          
    163          	man_http_noti_info_t	server_noti;		// server用の受信データ通知先情報
    164          	man_http_recv_t			http_recv;			// 受信したHTTP情報
    165          //	clock_info_t			clock;				// JST 日本標準時 UTC+0900
    166          	man_http_seq_def		sequense;			// HTTP管理シーケンス
    167          	man_http_resp_cmd_t		resp_cmd;			// 要求に対する応答
    168          	int32_t					cpsi_err;
    169          	
    170          	int32_t					rtc_flag;
    171          
    172          	man_http_seq_def		seq_log[100];		// シーケンスログ
    173          	int32_t					seq_wp;
    174          
    175          	int32_t					rssi;
    176          	int32_t					rssi_raw;			// 受信信号強度[dbm]
    177          	int32_t					rsrp_raw;			// 基準信号受信電力[dbm]
    178          	clock_info_t			jst_clock;			// LTE時刻
    179          
    180          	uint8_t					buff[100];
    181          } man_http_work_t;
    182          
    183          
    184          /************************************************************************/
    185          /* definition of variables                                              */
    186          /************************************************************************/
    187          

   \                                 In section .bss, align 4
    188          man_http_work_t	man_http_work;
   \                     man_http_work:
   \   00000000                      DS8 1684
    189          
    190          
    191          
    192          #define	MAN_HTTP_RECV_HTTP			0		// HTTP/1.1 200 OK
    193          #define	MAN_HTTP_RECV_POST			1		// POST / HTTP/1.1
    194          #define	MAN_HTTP_RECV_HOST			2		// Host: 10.0.2.22
    195          #define	MAN_HTTP_RECV_MAX			3		// 
    196          
    197          // 受信データ テーブル
    198          typedef struct _man_http_recv_tbl_t {
    199          	int32_t					type;			// データ種別
    200          	uint8_t					*cmd;			// 判定文字列
    201          } man_http_recv_tbl_t;
    202          

   \                                 In section .rodata, align 4
    203          static const man_http_recv_tbl_t recv_tbl[] = {
   \                     recv_tbl:
   \   00000000   0x00000000         DC32 0, ?_0, 1, ?_1, 2, ?_2
   \              0x........   
   \              0x00000001   
   \              0x........   
   \              0x00000002   
   \              0x........   
    204          	{MAN_HTTP_RECV_HTTP,		"HTTP/1.1 200 OK"},
    205          	{MAN_HTTP_RECV_POST,		"POST / HTTP/1.1"},
    206          	{MAN_HTTP_RECV_HOST,		"Host:"},
    207          };
    208          
    209          
    210          
    211          
    212          
    213          /********************************************************************/
    214          /*!
    215           * \name	man_http_set_sequense
    216           * \brief	シーケンスを設定する
    217           * \param	sequense : 設定するシーケンス
    218           * \return  なし
    219           * \note	
    220           */
    221          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    222          static void man_http_set_sequense( man_http_seq_def sequense )
    223          {
   \                     man_http_set_sequense: (+1)
   \   00000000   0xB500             PUSH     {LR}
    224          	if (man_http_work.sequense != sequense) {
   \   00000002   0x....             LDR      R1,??DataTable3
   \   00000004   0x7809             LDRB     R1,[R1, #+0]
   \   00000006   0x0002             MOVS     R2,R0
   \   00000008   0xB2D2             UXTB     R2,R2
   \   0000000A   0x4291             CMP      R1,R2
   \   0000000C   0xD013             BEQ      ??man_http_set_sequense_0
    225          		man_http_work.sequense = sequense;
   \   0000000E   0x....             LDR      R1,??DataTable3
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    226          		man_http_work.seq_log[man_http_work.seq_wp] = sequense;
   \   00000012   0x....             LDR      R1,??DataTable3_1
   \   00000014   0x....             LDR      R2,??DataTable3_2
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0x1889             ADDS     R1,R1,R2
   \   0000001A   0x....             LDR      R2,??DataTable3_3  ;; 0x5b4
   \   0000001C   0x5488             STRB     R0,[R1, R2]
    227          		man_http_work.seq_wp++;
   \   0000001E   0x....             LDR      R0,??DataTable3_2
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x....             LDR      R1,??DataTable3_2
   \   00000026   0x6008             STR      R0,[R1, #+0]
    228          		if (man_http_work.seq_wp >= 100) {
   \   00000028   0x....             LDR      R0,??DataTable3_2
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x2864             CMP      R0,#+100
   \   0000002E   0xDB02             BLT      ??man_http_set_sequense_0
    229          			man_http_work.seq_wp = 0;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR      R1,??DataTable3_2
   \   00000034   0x6008             STR      R0,[R1, #+0]
    230          		}
    231          
    232          #ifdef GNSS_DEBUG_MAN_HTTP 
    233          			int32_t		length;
    234          			sprintf((char *)&man_http_work.buff[0], "HTTP SEQ(%d)\n", sequense);
    235          			length = strlen((char const *)&man_http_work.buff[0]);
    236          			man_usb_data_send(&man_http_work.buff[0], length);
    237          #endif
    238          
    239          	}
    240          }
   \                     ??man_http_set_sequense_0: (+1)
   \   00000036   0xBD00             POP      {PC}             ;; return
    241          
    242          /********************************************************************/
    243          /*!
    244           * \name	man_http_get_sequense
    245           * \brief	シーケンスを取得する
    246           * \param	なし
    247           * \return  設定するシーケンス
    248           * \note	
    249           */
    250          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    251          static man_http_seq_def man_http_get_sequense( void )
    252          {
    253          	return man_http_work.sequense;
   \                     man_http_get_sequense: (+1)
   \   00000000   0x....             LDR      R0,??DataTable3
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    254          }
    255          
    256          /********************************************************************/
    257          /*	callback関数                                                    */
    258          /********************************************************************/
    259          
    260          /********************************************************************/
    261          /*!
    262           * \name	man_http_req_callback
    263           * \brief	要求に対するcallback処理
    264           * \param	id     : ユニークID
    265           *          status : 受信結果
    266           * \return  なし
    267           * \note	
    268           */
    269          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    270          static void man_http_req_callback(int32_t id, int32_t status)
    271          {
   \                     man_http_req_callback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0002             MOVS     R2,R0
    272          	man_http_work.resp_cmd.flag = 1;
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x....             LDR      R3,??DataTable3_4
   \   00000008   0x6018             STR      R0,[R3, #+0]
    273          	man_http_work.resp_cmd.id = id & TIMER_MAN_ID_MASK;
   \   0000000A   0xB290             UXTH     R0,R2
   \   0000000C   0x....             LDR      R3,??DataTable3_5
   \   0000000E   0x6018             STR      R0,[R3, #+0]
    274          	man_http_work.resp_cmd.status = status;
   \   00000010   0x....             LDR      R0,??DataTable3_6
   \   00000012   0x6001             STR      R1,[R0, #+0]
    275          	man_http_work.http_recv.type = MAN_HTTP_RECV_MAX;
   \   00000014   0x2003             MOVS     R0,#+3
   \   00000016   0x....             LDR      R3,??DataTable3_7
   \   00000018   0x6018             STR      R0,[R3, #+0]
    276          
    277                  if(usb_log_flag & LOG_FLAG_LTE)
   \   0000001A   0x....             LDR      R0,??DataTable3_8
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x0780             LSLS     R0,R0,#+30
   \   00000020   0xD50B             BPL      ??man_http_req_callback_0
    278                  {  
    279                    sprintf(print_buf,"http_req_callback id %d st %d\n",id, status);
   \   00000022   0x000B             MOVS     R3,R1
   \   00000024   0x....             LDR      R1,??DataTable3_9
   \   00000026   0x....             LDR      R0,??DataTable3_10
   \   00000028   0x.... 0x....      BL       sprintf
    280                    sysmgr_log((uint8_t *)print_buf,strlen(print_buf));
   \   0000002C   0x....             LDR      R0,??DataTable3_10
   \   0000002E   0x.... 0x....      BL       strlen
   \   00000032   0x0001             MOVS     R1,R0
   \   00000034   0x....             LDR      R0,??DataTable3_10
   \   00000036   0x.... 0x....      BL       sysmgr_log
    281                  }
    282          }
   \                     ??man_http_req_callback_0: (+1)
   \   0000003A   0xBD01             POP      {R0,PC}          ;; return
    283          
    284          
    285          /********************************************************************/
    286          /*!
    287           * \name	man_http_res_callback
    288           * \brief	callback応答処理
    289           * \param	status : 通知するステータス
    290           * \return   0: 成功
    291           *          -1:失敗
    292           * \note	
    293           */
    294          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    295          static void man_http_res_callback( int32_t status )
    296          {
   \                     man_http_res_callback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    297          
    298          	// callback関数で終了通知
    299          	if (man_http_work.request.callback != NULL) {
   \   00000002   0x....             LDR      R1,??DataTable3_1
   \   00000004   0x6889             LDR      R1,[R1, #+8]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD008             BEQ      ??man_http_res_callback_0
    300          		man_http_work.request.callback(man_http_work.request.id, status);
   \   0000000A   0x0001             MOVS     R1,R0
   \   0000000C   0x....             LDR      R0,??DataTable3_1
   \   0000000E   0x6840             LDR      R0,[R0, #+4]
   \   00000010   0x....             LDR      R2,??DataTable3_1
   \   00000012   0x6892             LDR      R2,[R2, #+8]
   \   00000014   0x4790             BLX      R2
    301          		man_http_work.request.callback = NULL;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR      R1,??DataTable3_1
   \   0000001A   0x6088             STR      R0,[R1, #+8]
    302          	}
    303          	man_http_set_sequense(MAN_HTTP_SEQ_READY);
   \                     ??man_http_res_callback_0: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x.... 0x....      BL       man_http_set_sequense
    304          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
    305          
    306          
    307          /********************************************************************/
    308          /*!
    309           * \name	man_http_res_callback_recv
    310          * \brief	callback応答処理(受信データ通知)
    311           * \param	status : 通知するステータス
    312           * \return   0: 成功
    313           *          -1:失敗
    314           * \note	
    315           */
    316          /********************************************************************/
    317          static void man_http_res_callback_recv( int32_t status )
    318          {
    319          	// callback関数で終了通知
    320          	if (man_http_work.request.callback_recv != NULL) {
    321          		man_http_work.request.callback_recv(&man_http_work.http_recv.data[0], man_http_work.http_recv.length, man_http_work.request.id, status);
    322          		man_http_work.request.callback_recv = NULL;
    323          	}
    324          }
    325          
    326          /********************************************************************/
    327          /*!
    328           * \name	man_http_recv_callback
    329           * \brief	受信データ通知処理
    330           * \param	data   : 受信データ
    331           *          length : データ長
    332           *          id     : ユニークID
    333           *          state  : 受信状態
    334           * \return   0: 成功
    335           *          -1:失敗
    336           * \note	
    337           */
    338          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
    339          static void man_http_recv_callback( uint8_t *data, int32_t length, int32_t id, int32_t state )
    340          {
   \                     man_http_recv_callback: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
    341          	int32_t					i;
    342          	uint32_t				rcv_data;
    343          	mid_http_get_info_t		*get_info = mid_HTTP_get_info();
   \   00000008   0x.... 0x....      BL       mid_HTTP_get_info
    344          	mid_http_get_data_t		*get_data = mid_HTTP_get_data();
   \   0000000C   0x.... 0x....      BL       mid_HTTP_get_data
   \   00000010   0x9000             STR      R0,[SP, #+0]
    345          	man_http_noti_info_t	*server_noti = &man_http_work.server_noti;
   \   00000012   0x4F82             LDR      R7,??man_http_recv_callback_0
    346          	man_data_get_sensor_t	*sensor = man_data_get_sensor();
   \   00000014   0x.... 0x....      BL       man_data_get_sensor
    347          
    348          
    349          	man_http_work.resp_cmd.status = MID_HTTP_STATUS_OK;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x4981             LDR      R1,??man_http_recv_callback_0+0x4
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    350          
    351          	switch (state) {
   \   0000001E   0x9802             LDR      R0,[SP, #+8]
   \   00000020   0x2801             CMP      R0,#+1
   \   00000022   0xD030             BEQ      ??man_http_recv_callback_1
   \   00000024   0x280A             CMP      R0,#+10
   \   00000026   0xD100             BNE      .+4
   \   00000028   0xE09E             B        ??man_http_recv_callback_2
   \   0000002A   0x2814             CMP      R0,#+20
   \   0000002C   0xD100             BNE      .+4
   \   0000002E   0xE0BD             B        ??man_http_recv_callback_3
   \   00000030   0x2815             CMP      R0,#+21
   \   00000032   0xD100             BNE      .+4
   \   00000034   0xE0CB             B        ??man_http_recv_callback_4
   \   00000036   0x2816             CMP      R0,#+22
   \   00000038   0xD100             BNE      .+4
   \   0000003A   0xE0A6             B        ??man_http_recv_callback_5
   \   0000003C   0x281F             CMP      R0,#+31
   \   0000003E   0xD100             BNE      .+4
   \   00000040   0xE0E1             B        ??man_http_recv_callback_6
   \   00000042   0x2820             CMP      R0,#+32
   \   00000044   0xD100             BNE      .+4
   \   00000046   0xE0D3             B        ??man_http_recv_callback_7
   \   00000048   0x2829             CMP      R0,#+41
   \   0000004A   0xD100             BNE      .+4
   \   0000004C   0xE0EA             B        ??man_http_recv_callback_8
   \   0000004E   0x282A             CMP      R0,#+42
   \   00000050   0xD100             BNE      .+4
   \   00000052   0xE0F2             B        ??man_http_recv_callback_9
   \   00000054   0x282B             CMP      R0,#+43
   \   00000056   0xD100             BNE      .+4
   \   00000058   0xE0FA             B        ??man_http_recv_callback_10
   \   0000005A   0x282C             CMP      R0,#+44
   \   0000005C   0xD100             BNE      .+4
   \   0000005E   0xE102             B        ??man_http_recv_callback_11
   \   00000060   0x282D             CMP      R0,#+45
   \   00000062   0xD100             BNE      .+4
   \   00000064   0xE13A             B        ??man_http_recv_callback_12
   \   00000066   0x2832             CMP      R0,#+50
   \   00000068   0xD100             BNE      .+4
   \   0000006A   0xE142             B        ??man_http_recv_callback_13
   \   0000006C   0x2833             CMP      R0,#+51
   \   0000006E   0xD100             BNE      .+4
   \   00000070   0xE150             B        ??man_http_recv_callback_14
   \   00000072   0x2834             CMP      R0,#+52
   \   00000074   0xD100             BNE      .+4
   \   00000076   0xE16D             B        ??man_http_recv_callback_15
   \   00000078   0x2835             CMP      R0,#+53
   \   0000007A   0xD100             BNE      .+4
   \   0000007C   0xE180             B        ??man_http_recv_callback_16
   \   0000007E   0x2836             CMP      R0,#+54
   \   00000080   0xD100             BNE      .+4
   \   00000082   0xE172             B        ??man_http_recv_callback_17
   \   00000084   0xE187             B        ??man_http_recv_callback_18
    352          
    353          	// データ部
    354          	case MID_HTTP_STATE_RECEIVE_DATA:
    355          		for (i=0; i<MAN_HTTP_RECV_MAX; i++) {
   \                     ??man_http_recv_callback_1: (+1)
   \   00000086   0x2400             MOVS     R4,#+0
   \   00000088   0xE000             B        ??man_http_recv_callback_19
   \                     ??man_http_recv_callback_20: (+1)
   \   0000008A   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_http_recv_callback_19: (+1)
   \   0000008C   0x2C03             CMP      R4,#+3
   \   0000008E   0xDA11             BGE      ??man_http_recv_callback_21
    356          			if ( (memcmp(data, recv_tbl[i].cmd, strlen((const char *)recv_tbl[i].cmd)) == 0) ) {
   \   00000090   0x48AF             LDR      R0,??man_http_recv_callback_22
   \   00000092   0x2108             MOVS     R1,#+8
   \   00000094   0x4361             MULS     R1,R4,R1
   \   00000096   0x1840             ADDS     R0,R0,R1
   \   00000098   0x6840             LDR      R0,[R0, #+4]
   \   0000009A   0x.... 0x....      BL       strlen
   \   0000009E   0x0002             MOVS     R2,R0
   \   000000A0   0x48AB             LDR      R0,??man_http_recv_callback_22
   \   000000A2   0x2108             MOVS     R1,#+8
   \   000000A4   0x4361             MULS     R1,R4,R1
   \   000000A6   0x1840             ADDS     R0,R0,R1
   \   000000A8   0x6841             LDR      R1,[R0, #+4]
   \   000000AA   0x0028             MOVS     R0,R5
   \   000000AC   0x.... 0x....      BL       memcmp
   \   000000B0   0x2800             CMP      R0,#+0
   \   000000B2   0xD1EA             BNE      ??man_http_recv_callback_20
    357          				break;
    358          			}
    359          		}
    360          		switch (i) {
   \                     ??man_http_recv_callback_21: (+1)
   \   000000B4   0x2C00             CMP      R4,#+0
   \   000000B6   0xD005             BEQ      ??man_http_recv_callback_23
   \   000000B8   0x2C02             CMP      R4,#+2
   \   000000BA   0xD02E             BEQ      ??man_http_recv_callback_24
   \   000000BC   0xD32C             BCC      ??man_http_recv_callback_25
   \   000000BE   0x2C03             CMP      R4,#+3
   \   000000C0   0xD051             BEQ      ??man_http_recv_callback_26
   \   000000C2   0xE050             B        ??man_http_recv_callback_27
    361          		// "HTTP/1.1 200 OK"
    362          		case MAN_HTTP_RECV_HTTP:
    363          			if ( man_http_get_sequense() == MAN_HTTP_SEQ_CLIENT_RECV ) {
   \                     ??man_http_recv_callback_23: (+1)
   \   000000C4   0x.... 0x....      BL       man_http_get_sequense
   \   000000C8   0x2812             CMP      R0,#+18
   \   000000CA   0xD11A             BNE      ??man_http_recv_callback_28
    364          				man_http_work.resp_cmd.flag = 1;
   \   000000CC   0x2001             MOVS     R0,#+1
   \   000000CE   0x49B2             LDR      R1,??man_http_recv_callback_29
   \   000000D0   0x6008             STR      R0,[R1, #+0]
    365          				man_http_work.resp_cmd.id = man_http_get_sequense();
   \   000000D2   0x.... 0x....      BL       man_http_get_sequense
   \   000000D6   0x49B1             LDR      R1,??man_http_recv_callback_29+0x4
   \   000000D8   0x6008             STR      R0,[R1, #+0]
    366          				man_http_work.http_recv.type = MAN_HTTP_RECV_MAX;
   \   000000DA   0x2003             MOVS     R0,#+3
   \   000000DC   0x49B0             LDR      R1,??man_http_recv_callback_29+0x8
   \   000000DE   0x6008             STR      R0,[R1, #+0]
    367          				man_http_work.http_recv.length = strlen((const char *)recv_tbl[i].cmd);
   \   000000E0   0x489B             LDR      R0,??man_http_recv_callback_22
   \   000000E2   0x2108             MOVS     R1,#+8
   \   000000E4   0x434C             MULS     R4,R1,R4
   \   000000E6   0x1900             ADDS     R0,R0,R4
   \   000000E8   0x6840             LDR      R0,[R0, #+4]
   \   000000EA   0x.... 0x....      BL       strlen
   \   000000EE   0x....             LDR      R1,??DataTable4
   \   000000F0   0x6008             STR      R0,[R1, #+0]
    368          				memcpy(&man_http_work.http_recv.data[0], data, man_http_work.http_recv.length);
   \   000000F2   0x....             LDR      R0,??DataTable4
   \   000000F4   0x6802             LDR      R2,[R0, #+0]
   \   000000F6   0x0029             MOVS     R1,R5
   \   000000F8   0x....             LDR      R4,??DataTable4_1
   \   000000FA   0x0020             MOVS     R0,R4
   \   000000FC   0x.... 0x....      BL       __aeabi_memcpy
    369          			}
   \   00000100   0xE009             B        ??man_http_recv_callback_30
    370          			else {
    371          				man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), 0);
   \                     ??man_http_recv_callback_28: (+1)
   \   00000102   0x.... 0x....      BL       man_http_get_sequense
   \   00000106   0x23FF             MOVS     R3,#+255
   \   00000108   0x3374             ADDS     R3,R3,#+116      ;; #+371
   \   0000010A   0x2200             MOVS     R2,#+0
   \   0000010C   0xB2C0             UXTB     R0,R0
   \   0000010E   0x0001             MOVS     R1,R0
   \   00000110   0x2016             MOVS     R0,#+22
   \   00000112   0x.... 0x....      BL       man_error_set
    372          			}
    373          			break;
   \                     ??man_http_recv_callback_30: (+1)
   \   00000116   0xE026             B        ??man_http_recv_callback_27
    374          
    375          		// "POST / HTTP/1.1"
    376          		case MAN_HTTP_RECV_POST:
    377          			// 無視する
    378          			break;
   \                     ??man_http_recv_callback_25: (+1)
   \   00000118   0xE025             B        ??man_http_recv_callback_27
    379          
    380          		// "Host:"
    381          		case MAN_HTTP_RECV_HOST:
    382          			// data部を取り出す
    383          			for (i=3; i<length; i++) {
   \                     ??man_http_recv_callback_24: (+1)
   \   0000011A   0x2403             MOVS     R4,#+3
   \   0000011C   0xE000             B        ??man_http_recv_callback_31
   \                     ??man_http_recv_callback_32: (+1)
   \   0000011E   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_http_recv_callback_31: (+1)
   \   00000120   0x42B4             CMP      R4,R6
   \   00000122   0xDA19             BGE      ??man_http_recv_callback_33
    384          				if ( (data[i]==ASCII_CR) && (data[i+1]==ASCII_LF) && (data[i+2]==ASCII_CR) && (data[i+3]==ASCII_LF) ) {
   \   00000124   0x5D28             LDRB     R0,[R5, R4]
   \   00000126   0x280D             CMP      R0,#+13
   \   00000128   0xD1F9             BNE      ??man_http_recv_callback_32
   \   0000012A   0x1928             ADDS     R0,R5,R4
   \   0000012C   0x7840             LDRB     R0,[R0, #+1]
   \   0000012E   0x280A             CMP      R0,#+10
   \   00000130   0xD1F5             BNE      ??man_http_recv_callback_32
   \   00000132   0x1928             ADDS     R0,R5,R4
   \   00000134   0x7880             LDRB     R0,[R0, #+2]
   \   00000136   0x280D             CMP      R0,#+13
   \   00000138   0xD1F1             BNE      ??man_http_recv_callback_32
   \   0000013A   0x1928             ADDS     R0,R5,R4
   \   0000013C   0x78C0             LDRB     R0,[R0, #+3]
   \   0000013E   0x280A             CMP      R0,#+10
   \   00000140   0xD1ED             BNE      ??man_http_recv_callback_32
    385          					// 上位に通知する
    386          					if (server_noti->callback_recv != NULL) {
   \   00000142   0x6878             LDR      R0,[R7, #+4]
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xD007             BEQ      ??man_http_recv_callback_34
    387          						server_noti->callback_recv(&data[i+4], length-i-4, server_noti->id, MAN_HTTP_STATUS_OK);
   \   00000148   0x2300             MOVS     R3,#+0
   \   0000014A   0x683A             LDR      R2,[R7, #+0]
   \   0000014C   0x1B31             SUBS     R1,R6,R4
   \   0000014E   0x1F09             SUBS     R1,R1,#+4
   \   00000150   0x1928             ADDS     R0,R5,R4
   \   00000152   0x1D00             ADDS     R0,R0,#+4
   \   00000154   0x687C             LDR      R4,[R7, #+4]
   \   00000156   0x47A0             BLX      R4
    388          					}
    389          					break;
    390          				}
    391          			}
    392          			// server使用中
    393          			man_http_work.status |= MAN_HTTP_STATUS_SERVER;
   \                     ??man_http_recv_callback_34: (+1)
   \                     ??man_http_recv_callback_33: (+1)
   \   00000158   0x....             LDR      R0,??DataTable4_2
   \   0000015A   0x6800             LDR      R0,[R0, #+0]
   \   0000015C   0x2104             MOVS     R1,#+4
   \   0000015E   0x4301             ORRS     R1,R1,R0
   \   00000160   0x....             LDR      R0,??DataTable4_2
   \   00000162   0x6001             STR      R1,[R0, #+0]
    394          			break;
   \   00000164   0xE7FF             B        ??man_http_recv_callback_27
    395          
    396          		// 上記以外のデータ
    397          		case MAN_HTTP_RECV_MAX:
    398          			break;
    399          		}
    400          		break;
   \                     ??man_http_recv_callback_26: (+1)
   \                     ??man_http_recv_callback_27: (+1)
   \   00000166   0xE116             B        ??man_http_recv_callback_35
    401          
    402          	// "+IPCLOSE: 5,1"
    403          	case MID_HTTP_STATE_SERVER_IPCLOSE:
    404          		if (man_http_work.server_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_2: (+1)
   \   00000168   0x....             LDR      R0,??DataTable4_3
   \   0000016A   0x6800             LDR      R0,[R0, #+0]
   \   0000016C   0x2800             CMP      R0,#+0
   \   0000016E   0xD005             BEQ      ??man_http_recv_callback_36
    405          			man_http_work.server_state.callback_state(man_http_work.server_state.id, MAN_HTTP_STATE_CLOSE);
   \   00000170   0x2101             MOVS     R1,#+1
   \   00000172   0x....             LDR      R0,??DataTable4_4
   \   00000174   0x6800             LDR      R0,[R0, #+0]
   \   00000176   0x....             LDR      R2,??DataTable4_3
   \   00000178   0x6812             LDR      R2,[R2, #+0]
   \   0000017A   0x4790             BLX      R2
    406          		}
    407          		// server使用終了
    408          		man_http_work.status &= ~MAN_HTTP_STATUS_SERVER;
   \                     ??man_http_recv_callback_36: (+1)
   \   0000017C   0x....             LDR      R0,??DataTable4_2
   \   0000017E   0x6800             LDR      R0,[R0, #+0]
   \   00000180   0x2104             MOVS     R1,#+4
   \   00000182   0x4388             BICS     R0,R0,R1
   \   00000184   0x....             LDR      R1,??DataTable4_2
   \   00000186   0x6008             STR      R0,[R1, #+0]
    409          		break;
   \   00000188   0xE105             B        ??man_http_recv_callback_35
    410          
    411          	// "+CIPOPEN: 2,0"
    412          	case MID_HTTP_STATE_CLIENT_CIPOPEN:
    413          		if (man_http_work.client_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_5: (+1)
   \   0000018A   0x....             LDR      R0,??DataTable4_5
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0x2800             CMP      R0,#+0
   \   00000190   0xD005             BEQ      ??man_http_recv_callback_37
    414          			man_http_work.client_state.callback_state(man_http_work.client_state.id, MAN_HTTP_STATE_OPEN);
   \   00000192   0x2102             MOVS     R1,#+2
   \   00000194   0x....             LDR      R0,??DataTable4_6
   \   00000196   0x6800             LDR      R0,[R0, #+0]
   \   00000198   0x....             LDR      R2,??DataTable4_5
   \   0000019A   0x6812             LDR      R2,[R2, #+0]
   \   0000019C   0x4790             BLX      R2
    415          		}
    416          		man_http_work.status |= MAN_HTTP_STATUS_CLIENT;
   \                     ??man_http_recv_callback_37: (+1)
   \   0000019E   0x....             LDR      R0,??DataTable4_2
   \   000001A0   0x6800             LDR      R0,[R0, #+0]
   \   000001A2   0x2102             MOVS     R1,#+2
   \   000001A4   0x4301             ORRS     R1,R1,R0
   \   000001A6   0x....             LDR      R0,??DataTable4_2
   \   000001A8   0x6001             STR      R1,[R0, #+0]
    417          		break;
   \   000001AA   0xE0F4             B        ??man_http_recv_callback_35
    418          
    419          	// "+IPCLOSE: 2,1"
    420          	case MID_HTTP_STATE_CLIENT_IPCLOSE:
    421          		if (length > MAN_HTTP_RECV_DATA_MAX) length = MAN_HTTP_RECV_DATA_MAX;
   \                     ??man_http_recv_callback_3: (+1)
   \   000001AC   0x2EC9             CMP      R6,#+201
   \   000001AE   0xDB00             BLT      ??man_http_recv_callback_38
   \   000001B0   0x26C8             MOVS     R6,#+200
    422          		man_http_work.http_recv.type = i;
   \                     ??man_http_recv_callback_38: (+1)
   \   000001B2   0x487B             LDR      R0,??man_http_recv_callback_29+0x8
   \   000001B4   0x6004             STR      R4,[R0, #+0]
    423          		memcpy(&man_http_work.http_recv.data[0], data, length);
   \   000001B6   0x0032             MOVS     R2,R6
   \   000001B8   0x0029             MOVS     R1,R5
   \   000001BA   0x....             LDR      R4,??DataTable4_1
   \   000001BC   0x0020             MOVS     R0,R4
   \   000001BE   0x.... 0x....      BL       __aeabi_memcpy
    424          		man_http_work.http_recv.length = length;
   \   000001C2   0x....             LDR      R0,??DataTable4
   \   000001C4   0x6006             STR      R6,[R0, #+0]
    425          		man_http_work.http_recv.flag = 1;
   \   000001C6   0x2001             MOVS     R0,#+1
   \   000001C8   0x....             LDR      R1,??DataTable4_7
   \   000001CA   0x6008             STR      R0,[R1, #+0]
    426          		break;
   \   000001CC   0xE0E3             B        ??man_http_recv_callback_35
    427          
    428          	// "+CIPCLOSE: 2,0"
    429          	case MID_HTTP_STATE_CLIENT_CIPCLOSE:
    430          		if (man_http_work.client_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_4: (+1)
   \   000001CE   0x....             LDR      R0,??DataTable4_5
   \   000001D0   0x6800             LDR      R0,[R0, #+0]
   \   000001D2   0x2800             CMP      R0,#+0
   \   000001D4   0xD005             BEQ      ??man_http_recv_callback_39
    431          			man_http_work.client_state.callback_state(man_http_work.client_state.id, MAN_HTTP_STATE_CLOSE);
   \   000001D6   0x2101             MOVS     R1,#+1
   \   000001D8   0x....             LDR      R0,??DataTable4_6
   \   000001DA   0x6800             LDR      R0,[R0, #+0]
   \   000001DC   0x....             LDR      R2,??DataTable4_5
   \   000001DE   0x6812             LDR      R2,[R2, #+0]
   \   000001E0   0x4790             BLX      R2
    432          		}
    433          		man_http_work.status &= ~MAN_HTTP_STATUS_CLIENT;
   \                     ??man_http_recv_callback_39: (+1)
   \   000001E2   0x....             LDR      R0,??DataTable4_2
   \   000001E4   0x6800             LDR      R0,[R0, #+0]
   \   000001E6   0x2102             MOVS     R1,#+2
   \   000001E8   0x4388             BICS     R0,R0,R1
   \   000001EA   0x....             LDR      R1,??DataTable4_2
   \   000001EC   0x6008             STR      R0,[R1, #+0]
    434          		break;
   \   000001EE   0xE0D2             B        ??man_http_recv_callback_35
    435          
    436          	// "+CIPOPEN: 1,0"
    437          	case MID_HTTP_STATE_UDP_CIPOPEN:
    438          		if (man_http_work.udp_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_7: (+1)
   \   000001F0   0x....             LDR      R0,??DataTable4_8
   \   000001F2   0x6800             LDR      R0,[R0, #+0]
   \   000001F4   0x2800             CMP      R0,#+0
   \   000001F6   0xD005             BEQ      ??man_http_recv_callback_40
    439          			man_http_work.udp_state.callback_state(man_http_work.udp_state.id, MAN_HTTP_STATE_OPEN);
   \   000001F8   0x2102             MOVS     R1,#+2
   \   000001FA   0x....             LDR      R0,??DataTable4_9
   \   000001FC   0x6800             LDR      R0,[R0, #+0]
   \   000001FE   0x....             LDR      R2,??DataTable4_8
   \   00000200   0x6812             LDR      R2,[R2, #+0]
   \   00000202   0x4790             BLX      R2
    440          		}
    441          		break;
   \                     ??man_http_recv_callback_40: (+1)
   \   00000204   0xE0C7             B        ??man_http_recv_callback_35
    442          
    443          	case MID_HTTP_STATE_UDP_CIPCLOSE:
    444          		if (man_http_work.udp_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_6: (+1)
   \   00000206   0x....             LDR      R0,??DataTable4_8
   \   00000208   0x6800             LDR      R0,[R0, #+0]
   \   0000020A   0x2800             CMP      R0,#+0
   \   0000020C   0xD005             BEQ      ??man_http_recv_callback_41
    445          			man_http_work.udp_state.callback_state(man_http_work.udp_state.id, MAN_HTTP_STATE_CLOSE);
   \   0000020E   0x2101             MOVS     R1,#+1
   \   00000210   0x....             LDR      R0,??DataTable4_9
   \   00000212   0x6800             LDR      R0,[R0, #+0]
   \   00000214   0x....             LDR      R2,??DataTable4_8
   \   00000216   0x6812             LDR      R2,[R2, #+0]
   \   00000218   0x4790             BLX      R2
    446          		}
    447          		break;
   \                     ??man_http_recv_callback_41: (+1)
   \   0000021A   0xE0BC             B        ??man_http_recv_callback_35
   \                     ??man_http_recv_callback_0:
   \   0000021C   0x........         DC32     man_http_work+0x4C0
   \   00000220   0x........         DC32     man_http_work+0x5A8
    448          
    449          	// PB DONE
    450          	case MID_HTTP_STATE_LTE_PBDONE:
    451          		if (man_http_work.lte_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_8: (+1)
   \   00000224   0x....             LDR      R0,??DataTable4_10
   \   00000226   0x6800             LDR      R0,[R0, #+0]
   \   00000228   0x2800             CMP      R0,#+0
   \   0000022A   0xD005             BEQ      ??man_http_recv_callback_42
    452          			man_http_work.lte_state.callback_state(man_http_work.lte_state.id, MAN_HTTP_STATE_RESET_OK);
   \   0000022C   0x2105             MOVS     R1,#+5
   \   0000022E   0x....             LDR      R0,??DataTable4_11
   \   00000230   0x6800             LDR      R0,[R0, #+0]
   \   00000232   0x....             LDR      R2,??DataTable4_10
   \   00000234   0x6812             LDR      R2,[R2, #+0]
   \   00000236   0x4790             BLX      R2
    453          		}
    454          		break;
   \                     ??man_http_recv_callback_42: (+1)
   \   00000238   0xE0AD             B        ??man_http_recv_callback_35
    455          
    456          	// +NETCLOSE: 0 or +NETCLOSE: 2
    457          	case MID_HTTP_STATE_LTE_NETCLOSE_OK:
    458          		if (man_http_work.lte_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_9: (+1)
   \   0000023A   0x....             LDR      R0,??DataTable4_10
   \   0000023C   0x6800             LDR      R0,[R0, #+0]
   \   0000023E   0x2800             CMP      R0,#+0
   \   00000240   0xD005             BEQ      ??man_http_recv_callback_43
    459          			man_http_work.lte_state.callback_state(man_http_work.lte_state.id, MAN_HTTP_STATE_CLOSE);
   \   00000242   0x2101             MOVS     R1,#+1
   \   00000244   0x....             LDR      R0,??DataTable4_11
   \   00000246   0x6800             LDR      R0,[R0, #+0]
   \   00000248   0x....             LDR      R2,??DataTable4_10
   \   0000024A   0x6812             LDR      R2,[R2, #+0]
   \   0000024C   0x4790             BLX      R2
    460          		}
    461          		break;
   \                     ??man_http_recv_callback_43: (+1)
   \   0000024E   0xE0A2             B        ??man_http_recv_callback_35
    462          
    463          	// +NETCLOSE: n
    464          	case MID_HTTP_STATE_LTE_NETCLOSE_NG:
    465          		if (man_http_work.lte_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_10: (+1)
   \   00000250   0x....             LDR      R0,??DataTable4_10
   \   00000252   0x6800             LDR      R0,[R0, #+0]
   \   00000254   0x2800             CMP      R0,#+0
   \   00000256   0xD005             BEQ      ??man_http_recv_callback_44
    466          			man_http_work.lte_state.callback_state(man_http_work.lte_state.id, MAN_HTTP_STATE_CLOSE_NG);
   \   00000258   0x2107             MOVS     R1,#+7
   \   0000025A   0x....             LDR      R0,??DataTable4_11
   \   0000025C   0x6800             LDR      R0,[R0, #+0]
   \   0000025E   0x....             LDR      R2,??DataTable4_10
   \   00000260   0x6812             LDR      R2,[R2, #+0]
   \   00000262   0x4790             BLX      R2
    467          		}
    468          		break;
   \                     ??man_http_recv_callback_44: (+1)
   \   00000264   0xE097             B        ??man_http_recv_callback_35
    469          
    470          	// "+CIPERROR: 4"
    471          	case MID_HTTP_STATE_LTE_DATA_ERROR:
    472          		switch (get_data->err_num) {
   \                     ??man_http_recv_callback_11: (+1)
   \   00000266   0x9800             LDR      R0,[SP, #+0]
   \   00000268   0x7800             LDRB     R0,[R0, #+0]
   \   0000026A   0x2800             CMP      R0,#+0
   \   0000026C   0xD00E             BEQ      ??man_http_recv_callback_45
   \   0000026E   0x2802             CMP      R0,#+2
   \   00000270   0xD00E             BEQ      ??man_http_recv_callback_46
   \   00000272   0xD30C             BCC      ??man_http_recv_callback_47
   \   00000274   0x2804             CMP      R0,#+4
   \   00000276   0xD017             BEQ      ??man_http_recv_callback_48
   \   00000278   0xD315             BCC      ??man_http_recv_callback_49
   \   0000027A   0x2806             CMP      R0,#+6
   \   0000027C   0xD020             BEQ      ??man_http_recv_callback_50
   \   0000027E   0xD31E             BCC      ??man_http_recv_callback_51
   \   00000280   0x2808             CMP      R0,#+8
   \   00000282   0xD01F             BEQ      ??man_http_recv_callback_52
   \   00000284   0xD31D             BCC      ??man_http_recv_callback_53
   \   00000286   0x2809             CMP      R0,#+9
   \   00000288   0xD027             BEQ      ??man_http_recv_callback_54
   \   0000028A   0xE026             B        ??man_http_recv_callback_55
    473          		case MID_HTTP_ERR_CODE_SECCEED:				    // operation succeeded
    474          			break;
   \                     ??man_http_recv_callback_45: (+1)
   \   0000028C   0xE025             B        ??man_http_recv_callback_55
    475          		case MID_HTTP_ERR_CODE_NET_FAIL:			    // Network failure
    476          			break;
   \                     ??man_http_recv_callback_47: (+1)
   \   0000028E   0xE024             B        ??man_http_recv_callback_55
    477          		case MID_HTTP_ERR_CODE_NET_CLOSE:		    	// Network not opened
    478          			if (man_http_work.lte_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_46: (+1)
   \   00000290   0x....             LDR      R0,??DataTable4_10
   \   00000292   0x6800             LDR      R0,[R0, #+0]
   \   00000294   0x2800             CMP      R0,#+0
   \   00000296   0xD005             BEQ      ??man_http_recv_callback_56
    479          				man_http_work.lte_state.callback_state(man_http_work.lte_state.id, MAN_HTTP_STATE_NET_CLOSE_OK);
   \   00000298   0x210B             MOVS     R1,#+11
   \   0000029A   0x....             LDR      R0,??DataTable4_11
   \   0000029C   0x6800             LDR      R0,[R0, #+0]
   \   0000029E   0x....             LDR      R2,??DataTable4_10
   \   000002A0   0x6812             LDR      R2,[R2, #+0]
   \   000002A2   0x4790             BLX      R2
    480          			}
    481          			break;
   \                     ??man_http_recv_callback_56: (+1)
   \   000002A4   0xE019             B        ??man_http_recv_callback_55
    482          		case MID_HTTP_ERR_CODE_WRONG_PARAM:		    	// Wrong parameter
    483          			break;
   \                     ??man_http_recv_callback_49: (+1)
   \   000002A6   0xE018             B        ??man_http_recv_callback_55
    484          		case MID_HTTP_ERR_CODE_NOT_SUPPORT:		    	// Operation not supported
    485          			if (man_http_work.lte_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_48: (+1)
   \   000002A8   0x....             LDR      R0,??DataTable4_10
   \   000002AA   0x6800             LDR      R0,[R0, #+0]
   \   000002AC   0x2800             CMP      R0,#+0
   \   000002AE   0xD005             BEQ      ??man_http_recv_callback_57
    486          				man_http_work.lte_state.callback_state(man_http_work.lte_state.id, MAN_HTTP_STATE_DEV_NOT_SUPPORT);
   \   000002B0   0x210C             MOVS     R1,#+12
   \   000002B2   0x....             LDR      R0,??DataTable4_11
   \   000002B4   0x6800             LDR      R0,[R0, #+0]
   \   000002B6   0x....             LDR      R2,??DataTable4_10
   \   000002B8   0x6812             LDR      R2,[R2, #+0]
   \   000002BA   0x4790             BLX      R2
    487          			}
    488          			break;
   \                     ??man_http_recv_callback_57: (+1)
   \   000002BC   0xE00D             B        ??man_http_recv_callback_55
    489          		case MID_HTTP_ERR_CODE_FAIL_CREAT_SOCKET:    	// Failed to create socket
    490          			break;
   \                     ??man_http_recv_callback_51: (+1)
   \   000002BE   0xE00C             B        ??man_http_recv_callback_55
    491          		case MID_HTTP_ERR_CODE_FAIL_BIND_SOCKET:		// Failed to bind socket
    492          			break;
   \                     ??man_http_recv_callback_50: (+1)
   \   000002C0   0xE00B             B        ??man_http_recv_callback_55
    493          		case MID_HTTP_ERR_CODE_TCP_SERVER:		    	// TCP server is already listening
    494          			break;
   \                     ??man_http_recv_callback_53: (+1)
   \   000002C2   0xE00A             B        ??man_http_recv_callback_55
    495          		case MID_HTTP_ERR_CODE_BUSY:				   	// Busy
    496          			if (man_http_work.lte_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_52: (+1)
   \   000002C4   0x....             LDR      R0,??DataTable4_10
   \   000002C6   0x6800             LDR      R0,[R0, #+0]
   \   000002C8   0x2800             CMP      R0,#+0
   \   000002CA   0xD005             BEQ      ??man_http_recv_callback_58
    497          				man_http_work.lte_state.callback_state(man_http_work.lte_state.id, MAN_HTTP_STATE_DEV_BUSY);
   \   000002CC   0x210D             MOVS     R1,#+13
   \   000002CE   0x....             LDR      R0,??DataTable4_11
   \   000002D0   0x6800             LDR      R0,[R0, #+0]
   \   000002D2   0x....             LDR      R2,??DataTable4_10
   \   000002D4   0x6812             LDR      R2,[R2, #+0]
   \   000002D6   0x4790             BLX      R2
    498          			}
    499          			break;
   \                     ??man_http_recv_callback_58: (+1)
   \   000002D8   0xE7FF             B        ??man_http_recv_callback_55
    500          		case MID_HTTP_ERR_CODE_SOCKET_OPEN:		    	// Sockets opened
    501          			break;
    502          		}
    503          		break;
   \                     ??man_http_recv_callback_54: (+1)
   \                     ??man_http_recv_callback_55: (+1)
   \   000002DA   0xE05C             B        ??man_http_recv_callback_35
    504          
    505          	case MID_HTTP_STATE_LTE_SIMCARD:
    506          		if (man_http_work.lte_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_12: (+1)
   \   000002DC   0x....             LDR      R0,??DataTable4_10
   \   000002DE   0x6800             LDR      R0,[R0, #+0]
   \   000002E0   0x2800             CMP      R0,#+0
   \   000002E2   0xD005             BEQ      ??man_http_recv_callback_59
    507          			man_http_work.lte_state.callback_state(man_http_work.lte_state.id, MAN_HTTP_STATE_SIMCARD_NG);
   \   000002E4   0x210E             MOVS     R1,#+14
   \   000002E6   0x....             LDR      R0,??DataTable4_11
   \   000002E8   0x6800             LDR      R0,[R0, #+0]
   \   000002EA   0x....             LDR      R2,??DataTable4_10
   \   000002EC   0x6812             LDR      R2,[R2, #+0]
   \   000002EE   0x4790             BLX      R2
    508          		}
    509          		break;
   \                     ??man_http_recv_callback_59: (+1)
   \   000002F0   0xE051             B        ??man_http_recv_callback_35
    510          
    511          	// "+CFTRANTX: 512"
    512          	case MID_HTTP_STATE_FILE_GET:
    513          		if (man_http_get_sequense() == MAN_HTTP_SEQ_FILE_GET_WAIT) {
   \                     ??man_http_recv_callback_13: (+1)
   \   000002F2   0x.... 0x....      BL       man_http_get_sequense
   \   000002F6   0x281C             CMP      R0,#+28
   \   000002F8   0xD10B             BNE      ??man_http_recv_callback_60
    514          			if (man_http_work.request.callback_file != NULL) {
   \   000002FA   0x....             LDR      R0,??DataTable4_2
   \   000002FC   0x6980             LDR      R0,[R0, #+24]
   \   000002FE   0x2800             CMP      R0,#+0
   \   00000300   0xD007             BEQ      ??man_http_recv_callback_60
    515          				man_http_work.request.callback_file(data, length, man_http_work.request.id, MAN_HTTP_STATUS_OK);
   \   00000302   0x2300             MOVS     R3,#+0
   \   00000304   0x....             LDR      R0,??DataTable4_2
   \   00000306   0x6842             LDR      R2,[R0, #+4]
   \   00000308   0x0031             MOVS     R1,R6
   \   0000030A   0x0028             MOVS     R0,R5
   \   0000030C   0x....             LDR      R4,??DataTable4_2
   \   0000030E   0x69A4             LDR      R4,[R4, #+24]
   \   00000310   0x47A0             BLX      R4
    516          //				man_http_work.request.callback_file = NULL;
    517          			}
    518          		}
    519          		break;
   \                     ??man_http_recv_callback_60: (+1)
   \   00000312   0xE040             B        ??man_http_recv_callback_35
    520          
    521          	// "+CFTRANTX: 0"
    522          	case MID_HTTP_STATE_FILE_GET_END:
    523          		if (man_http_get_sequense() == MAN_HTTP_SEQ_FILE_GET_WAIT) {
   \                     ??man_http_recv_callback_14: (+1)
   \   00000314   0x.... 0x....      BL       man_http_get_sequense
   \   00000318   0x281C             CMP      R0,#+28
   \   0000031A   0xD118             BNE      ??man_http_recv_callback_61
    524          			// OKをログに残す
    525          			man_http_set_sequense(MAN_HTTP_SEQ_FILE_GET_OK);
   \   0000031C   0x201D             MOVS     R0,#+29
   \   0000031E   0x.... 0x....      BL       man_http_set_sequense
    526          			// タイマ停止
    527          			man_timer_cancel_wait(TIMER_MAN_ID_APL_HTTP + MAN_HTTP_SEQ_FILE_GET_WAIT, MAN_HTTP_FILE_GET_TIME);
   \   00000322   0x....             LDR      R1,??DataTable4_12  ;; 0x1d4c0
   \   00000324   0x....             LDR      R0,??DataTable4_13  ;; 0x4030001c
   \   00000326   0x.... 0x....      BL       man_timer_cancel_wait
    528          			if (man_http_work.request.callback_file != NULL) {
   \   0000032A   0x....             LDR      R0,??DataTable4_2
   \   0000032C   0x6980             LDR      R0,[R0, #+24]
   \   0000032E   0x2800             CMP      R0,#+0
   \   00000330   0xD00A             BEQ      ??man_http_recv_callback_62
    529          				man_http_work.request.callback_file(data, length, man_http_work.request.id, MAN_HTTP_STATUS_OK);
   \   00000332   0x2300             MOVS     R3,#+0
   \   00000334   0x....             LDR      R0,??DataTable4_2
   \   00000336   0x6842             LDR      R2,[R0, #+4]
   \   00000338   0x0031             MOVS     R1,R6
   \   0000033A   0x0028             MOVS     R0,R5
   \   0000033C   0x....             LDR      R4,??DataTable4_2
   \   0000033E   0x69A4             LDR      R4,[R4, #+24]
   \   00000340   0x47A0             BLX      R4
    530          				man_http_work.request.callback_file = NULL;
   \   00000342   0x2000             MOVS     R0,#+0
   \   00000344   0x....             LDR      R1,??DataTable4_2
   \   00000346   0x6188             STR      R0,[R1, #+24]
    531          			}
    532          			man_http_set_sequense(MAN_HTTP_SEQ_READY);
   \                     ??man_http_recv_callback_62: (+1)
   \   00000348   0x2000             MOVS     R0,#+0
   \   0000034A   0x.... 0x....      BL       man_http_set_sequense
    533          		}
    534          		break;
   \                     ??man_http_recv_callback_61: (+1)
   \   0000034E   0xE022             B        ??man_http_recv_callback_35
   \                     ??man_http_recv_callback_22:
   \   00000350   0x........         DC32     recv_tbl
    535          
    536          	// "+CFTPGETFILE: 0"
    537          	case MID_HTTP_STATE_FTP_GET_OK:
    538          		if (man_http_work.ftp_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_15: (+1)
   \   00000354   0x....             LDR      R0,??DataTable4_14
   \   00000356   0x6800             LDR      R0,[R0, #+0]
   \   00000358   0x2800             CMP      R0,#+0
   \   0000035A   0xD005             BEQ      ??man_http_recv_callback_63
    539          			man_http_work.ftp_state.callback_state(man_http_work.ftp_state.id, MAN_HTTP_STATE_GET_OK);
   \   0000035C   0x2108             MOVS     R1,#+8
   \   0000035E   0x....             LDR      R0,??DataTable4_15
   \   00000360   0x6800             LDR      R0,[R0, #+0]
   \   00000362   0x....             LDR      R2,??DataTable4_14
   \   00000364   0x6812             LDR      R2,[R2, #+0]
   \   00000366   0x4790             BLX      R2
    540          		}
    541          		break;
   \                     ??man_http_recv_callback_63: (+1)
   \   00000368   0xE015             B        ??man_http_recv_callback_35
    542          
    543          	// "+CFTPGETFILE: 213"
    544          	case MID_HTTP_STATE_FTP_GET_NOFILE:
    545          		if (man_http_work.ftp_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_17: (+1)
   \   0000036A   0x....             LDR      R0,??DataTable4_14
   \   0000036C   0x6800             LDR      R0,[R0, #+0]
   \   0000036E   0x2800             CMP      R0,#+0
   \   00000370   0xD005             BEQ      ??man_http_recv_callback_64
    546          			man_http_work.ftp_state.callback_state(man_http_work.ftp_state.id, MAN_HTTP_STATE_GET_NOFILE);
   \   00000372   0x210A             MOVS     R1,#+10
   \   00000374   0x....             LDR      R0,??DataTable4_15
   \   00000376   0x6800             LDR      R0,[R0, #+0]
   \   00000378   0x....             LDR      R2,??DataTable4_14
   \   0000037A   0x6812             LDR      R2,[R2, #+0]
   \   0000037C   0x4790             BLX      R2
    547          		}
    548          		break;
   \                     ??man_http_recv_callback_64: (+1)
   \   0000037E   0xE00A             B        ??man_http_recv_callback_35
    549          
    550          	// "+CFTPGETFILE: ???"  上記以外
    551          	case MID_HTTP_STATE_FTP_GET_NG:
    552          		if (man_http_work.ftp_state.callback_state != NULL) {
   \                     ??man_http_recv_callback_16: (+1)
   \   00000380   0x....             LDR      R0,??DataTable4_14
   \   00000382   0x6800             LDR      R0,[R0, #+0]
   \   00000384   0x2800             CMP      R0,#+0
   \   00000386   0xD005             BEQ      ??man_http_recv_callback_65
    553          			man_http_work.ftp_state.callback_state(man_http_work.ftp_state.id, MAN_HTTP_STATE_GET_NG);
   \   00000388   0x2109             MOVS     R1,#+9
   \   0000038A   0x....             LDR      R0,??DataTable4_15
   \   0000038C   0x6800             LDR      R0,[R0, #+0]
   \   0000038E   0x....             LDR      R2,??DataTable4_14
   \   00000390   0x6812             LDR      R2,[R2, #+0]
   \   00000392   0x4790             BLX      R2
    554          		}
    555          		break;
   \                     ??man_http_recv_callback_65: (+1)
   \   00000394   0xE7FF             B        ??man_http_recv_callback_35
    556          
    557          	default:
    558          		break;
    559          	}
    560          }
   \                     ??man_http_recv_callback_18: (+1)
   \                     ??man_http_recv_callback_35: (+1)
   \   00000396   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
   \                     ??man_http_recv_callback_29:
   \   00000398   0x........         DC32     man_http_work+0x5A0
   \   0000039C   0x........         DC32     man_http_work+0x5A4
   \   000003A0   0x........         DC32     man_http_work+0x598
    561          
    562          
    563          
    564          
    565          /********************************************************************/
    566          /*	static関数                                                      */
    567          /********************************************************************/
    568          
    569          
    570          
    571          /********************************************************************/
    572          /*!
    573           * \name	man_http_resp_cmd
    574           * \brief	応答データ解析処理
    575           * \param	なし
    576           * \return  なし
    577           * \note	
    578           */
    579          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
    580          static void man_http_resp_cmd( void )
    581          {
   \                     man_http_resp_cmd: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    582          	int32_t		ret=-1;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x43C0             MVNS     R0,R0            ;; #-1
    583          	mid_http_get_info_t *get_info;
    584          	clock_info_t	clock;
    585          	man_data_get_sensor_t	*sensor = man_data_get_sensor();
   \   00000006   0x.... 0x....      BL       man_data_get_sensor
   \   0000000A   0x0005             MOVS     R5,R0
    586          	mid_http_get_data_t		*get_data = mid_HTTP_get_data();
   \   0000000C   0x.... 0x....      BL       mid_HTTP_get_data
   \   00000010   0x0004             MOVS     R4,R0
    587          	man_data_get_other_t	*other = man_data_get_other();
   \   00000012   0x.... 0x....      BL       man_data_get_other
    588          	int32_t					rssi;
    589          	int32_t					rssi_raw;			// 受信信号強度[dbm]
    590          	int32_t					rsrp_raw;			// 基準信号受信電力[dbm]
    591          	man_data_rssi_sts_def	rssi_sts;
    592          
    593          	if (man_http_work.resp_cmd.flag != 0) {
   \   00000016   0x49C0             LDR      R1,??man_http_resp_cmd_0
   \   00000018   0x6809             LDR      R1,[R1, #+0]
   \   0000001A   0x2900             CMP      R1,#+0
   \   0000001C   0xD100             BNE      .+4
   \   0000001E   0xE261             B        ??man_http_resp_cmd_1
    594          		man_http_work.resp_cmd.flag = 0;
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x4ABD             LDR      R2,??man_http_resp_cmd_0
   \   00000024   0x6011             STR      R1,[R2, #+0]
    595          
    596          		// 受信処理
    597          		if (man_http_work.resp_cmd.status == MID_HTTP_STATUS_OK) {
   \   00000026   0x49BD             LDR      R1,??man_http_resp_cmd_0+0x4
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x2900             CMP      R1,#+0
   \   0000002C   0xD000             BEQ      .+4
   \   0000002E   0xE223             B        ??man_http_resp_cmd_2
    598          			switch (man_http_work.resp_cmd.id) {
   \   00000030   0x49BB             LDR      R1,??man_http_resp_cmd_0+0x8
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0x2901             CMP      R1,#+1
   \   00000036   0xD060             BEQ      ??man_http_resp_cmd_3
   \   00000038   0x2902             CMP      R1,#+2
   \   0000003A   0xD100             BNE      .+4
   \   0000003C   0xE088             B        ??man_http_resp_cmd_4
   \   0000003E   0x2903             CMP      R1,#+3
   \   00000040   0xD100             BNE      .+4
   \   00000042   0xE089             B        ??man_http_resp_cmd_5
   \   00000044   0x2904             CMP      R1,#+4
   \   00000046   0xD100             BNE      .+4
   \   00000048   0xE0A9             B        ??man_http_resp_cmd_6
   \   0000004A   0x2905             CMP      R1,#+5
   \   0000004C   0xD100             BNE      .+4
   \   0000004E   0xE0AA             B        ??man_http_resp_cmd_7
   \   00000050   0x2906             CMP      R1,#+6
   \   00000052   0xD100             BNE      .+4
   \   00000054   0xE0AB             B        ??man_http_resp_cmd_8
   \   00000056   0x2907             CMP      R1,#+7
   \   00000058   0xD100             BNE      .+4
   \   0000005A   0xE0AC             B        ??man_http_resp_cmd_9
   \   0000005C   0x2908             CMP      R1,#+8
   \   0000005E   0xD100             BNE      .+4
   \   00000060   0xE0AD             B        ??man_http_resp_cmd_10
   \   00000062   0x2909             CMP      R1,#+9
   \   00000064   0xD100             BNE      .+4
   \   00000066   0xE0C0             B        ??man_http_resp_cmd_11
   \   00000068   0x290A             CMP      R1,#+10
   \   0000006A   0xD100             BNE      .+4
   \   0000006C   0xE0D3             B        ??man_http_resp_cmd_12
   \   0000006E   0x290B             CMP      R1,#+11
   \   00000070   0xD100             BNE      .+4
   \   00000072   0xE0FF             B        ??man_http_resp_cmd_13
   \   00000074   0x290C             CMP      R1,#+12
   \   00000076   0xD100             BNE      .+4
   \   00000078   0xE08A             B        ??man_http_resp_cmd_14
   \   0000007A   0x290D             CMP      R1,#+13
   \   0000007C   0xD100             BNE      .+4
   \   0000007E   0xE128             B        ??man_http_resp_cmd_15
   \   00000080   0x290E             CMP      R1,#+14
   \   00000082   0xD100             BNE      .+4
   \   00000084   0xE132             B        ??man_http_resp_cmd_16
   \   00000086   0x290F             CMP      R1,#+15
   \   00000088   0xD100             BNE      .+4
   \   0000008A   0xE14B             B        ??man_http_resp_cmd_17
   \   0000008C   0x2910             CMP      R1,#+16
   \   0000008E   0xD100             BNE      .+4
   \   00000090   0xE14C             B        ??man_http_resp_cmd_18
   \   00000092   0x2911             CMP      R1,#+17
   \   00000094   0xD100             BNE      .+4
   \   00000096   0xE151             B        ??man_http_resp_cmd_19
   \   00000098   0x2912             CMP      R1,#+18
   \   0000009A   0xD100             BNE      .+4
   \   0000009C   0xE156             B        ??man_http_resp_cmd_20
   \   0000009E   0x2913             CMP      R1,#+19
   \   000000A0   0xD100             BNE      .+4
   \   000000A2   0xE147             B        ??man_http_resp_cmd_21
   \   000000A4   0x2914             CMP      R1,#+20
   \   000000A6   0xD100             BNE      .+4
   \   000000A8   0xE154             B        ??man_http_resp_cmd_22
   \   000000AA   0x2915             CMP      R1,#+21
   \   000000AC   0xD100             BNE      .+4
   \   000000AE   0xE159             B        ??man_http_resp_cmd_23
   \   000000B0   0x2916             CMP      R1,#+22
   \   000000B2   0xD100             BNE      .+4
   \   000000B4   0xE152             B        ??man_http_resp_cmd_24
   \   000000B6   0x2917             CMP      R1,#+23
   \   000000B8   0xD100             BNE      .+4
   \   000000BA   0xE157             B        ??man_http_resp_cmd_25
   \   000000BC   0x2918             CMP      R1,#+24
   \   000000BE   0xD100             BNE      .+4
   \   000000C0   0xE158             B        ??man_http_resp_cmd_26
   \   000000C2   0x2919             CMP      R1,#+25
   \   000000C4   0xD100             BNE      .+4
   \   000000C6   0xE159             B        ??man_http_resp_cmd_27
   \   000000C8   0x291A             CMP      R1,#+26
   \   000000CA   0xD100             BNE      .+4
   \   000000CC   0xE15A             B        ??man_http_resp_cmd_28
   \   000000CE   0x291B             CMP      R1,#+27
   \   000000D0   0xD100             BNE      .+4
   \   000000D2   0xE15B             B        ??man_http_resp_cmd_29
   \   000000D4   0x291C             CMP      R1,#+28
   \   000000D6   0xD100             BNE      .+4
   \   000000D8   0xE161             B        ??man_http_resp_cmd_30
   \   000000DA   0x291F             CMP      R1,#+31
   \   000000DC   0xD100             BNE      .+4
   \   000000DE   0xE17C             B        ??man_http_resp_cmd_31
   \   000000E0   0x2920             CMP      R1,#+32
   \   000000E2   0xD100             BNE      .+4
   \   000000E4   0xE192             B        ??man_http_resp_cmd_32
   \   000000E6   0x2921             CMP      R1,#+33
   \   000000E8   0xD100             BNE      .+4
   \   000000EA   0xE1A6             B        ??man_http_resp_cmd_33
   \   000000EC   0x2922             CMP      R1,#+34
   \   000000EE   0xD000             BEQ      .+4
   \   000000F0   0xE1B7             B        ??man_http_resp_cmd_34
    599          			case MAN_HTTP_SEQ_OPEN_OTA_OFF:
    600          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_35: (+1)
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x.... 0x....      BL       man_http_res_callback
    601          				break;
   \   000000F8   0xE1F4             B        ??man_http_resp_cmd_1
    602          
    603          			case MAN_HTTP_SEQ_OPEN_INIT:
    604          				// 取得した情報を取りだす。
    605          				get_info = mid_HTTP_get_info();
   \                     ??man_http_resp_cmd_3: (+1)
   \   000000FA   0x.... 0x....      BL       mid_HTTP_get_info
   \   000000FE   0x0004             MOVS     R4,R0
    606          
    607          				// 時刻を設定する
    608          				if (get_info->ctzuc_q == MID_HTTP_GET_CTZUC_1) {
   \   00000100   0x6820             LDR      R0,[R4, #+0]
   \   00000102   0x2802             CMP      R0,#+2
   \   00000104   0xD117             BNE      ??man_http_resp_cmd_36
    609          					// 時刻OKを設定する
    610          					if (get_info->clock_flg == 1) {
   \   00000106   0x68E0             LDR      R0,[R4, #+12]
   \   00000108   0x2801             CMP      R0,#+1
   \   0000010A   0xD10E             BNE      ??man_http_resp_cmd_37
    611          						if (get_info->rssi != 99) {
   \   0000010C   0x7D20             LDRB     R0,[R4, #+20]
   \   0000010E   0x2863             CMP      R0,#+99
   \   00000110   0xD005             BEQ      ??man_http_resp_cmd_38
    612          							// 時刻OKを設定する
    613          							man_rtc_set_clock(MAN_RTC_SEL_LTE, MAN_RTC_STS_OK, &get_info->clock);
   \   00000112   0x1D22             ADDS     R2,R4,#+4
   \   00000114   0x2101             MOVS     R1,#+1
   \   00000116   0x2000             MOVS     R0,#+0
   \   00000118   0x.... 0x....      BL       man_rtc_set_clock
   \   0000011C   0xE010             B        ??man_http_resp_cmd_39
    614          						}
    615          						else {
    616          							// 時刻NGを設定する
    617          							man_rtc_set_clock(MAN_RTC_SEL_LTE, MAN_RTC_STS_NG, &get_info->clock);
   \                     ??man_http_resp_cmd_38: (+1)
   \   0000011E   0x1D22             ADDS     R2,R4,#+4
   \   00000120   0x2100             MOVS     R1,#+0
   \   00000122   0x2000             MOVS     R0,#+0
   \   00000124   0x.... 0x....      BL       man_rtc_set_clock
   \   00000128   0xE00A             B        ??man_http_resp_cmd_39
    618          						}
    619          					}
    620          					else {
    621          						// 時刻NGを設定する
    622          						man_rtc_set_clock(MAN_RTC_SEL_LTE, MAN_RTC_STS_NG, &get_info->clock);
   \                     ??man_http_resp_cmd_37: (+1)
   \   0000012A   0x1D22             ADDS     R2,R4,#+4
   \   0000012C   0x2100             MOVS     R1,#+0
   \   0000012E   0x2000             MOVS     R0,#+0
   \   00000130   0x.... 0x....      BL       man_rtc_set_clock
   \   00000134   0xE004             B        ??man_http_resp_cmd_39
    623          					}
    624          				}
    625          				else {
    626          					// 時刻NGを設定する
    627          					man_rtc_set_clock(MAN_RTC_SEL_LTE, MAN_RTC_STS_NG, &get_info->clock);
   \                     ??man_http_resp_cmd_36: (+1)
   \   00000136   0x1D22             ADDS     R2,R4,#+4
   \   00000138   0x2100             MOVS     R1,#+0
   \   0000013A   0x2000             MOVS     R0,#+0
   \   0000013C   0x.... 0x....      BL       man_rtc_set_clock
    628          				}
    629          
    630          				// IMEI設定情報を登録する
    631          //				man_data_set_imei(&get_info->imei[0]);
    632          
    633          				// revision情報を登録する
    634          				man_data_set_revision(&get_info->revision[0]);
   \                     ??man_http_resp_cmd_39: (+1)
   \   00000140   0x0020             MOVS     R0,R4
   \   00000142   0x3024             ADDS     R0,R0,#+36
   \   00000144   0x.... 0x....      BL       man_data_set_revision
    635          				
    636          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \   00000148   0x2000             MOVS     R0,#+0
   \   0000014A   0x.... 0x....      BL       man_http_res_callback
    637          				break;
   \   0000014E   0xE1C9             B        ??man_http_resp_cmd_1
    638          
    639          			case MAN_HTTP_SEQ_OPEN_READY:
    640          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_4: (+1)
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0x.... 0x....      BL       man_http_res_callback
    641          				break;
   \   00000156   0xE1C5             B        ??man_http_resp_cmd_1
    642          
    643          			case MAN_HTTP_SEQ_OPEN_LTE:
    644          				// IP ADDRESS未取得時は取得を行う
    645          				if (other->ipaddr[0] == NULL) {
   \                     ??man_http_resp_cmd_5: (+1)
   \   00000158   0x2168             MOVS     R1,#+104
   \   0000015A   0x5C40             LDRB     R0,[R0, R1]
   \   0000015C   0x2800             CMP      R0,#+0
   \   0000015E   0xD113             BNE      ??man_http_resp_cmd_40
    646          					man_http_set_sequense(MAN_HTTP_SEQ_GET_IP);
   \   00000160   0x200C             MOVS     R0,#+12
   \   00000162   0x.... 0x....      BL       man_http_set_sequense
    647          					ret = mid_HTTP_req_GetIpAddress(MAN_HTTP_SEQ_GET_IP, man_http_req_callback);
   \   00000166   0x49C3             LDR      R1,??man_http_resp_cmd_41
   \   00000168   0x200C             MOVS     R0,#+12
   \   0000016A   0x.... 0x....      BL       mid_HTTP_req_GetIpAddress
    648          					if (ret < 0) {
   \   0000016E   0x2800             CMP      R0,#+0
   \   00000170   0xD50D             BPL      ??man_http_resp_cmd_42
    649          						man_error_setting(MAN_ERROR_MAN_HTTP, 0, 0);
   \   00000172   0x4BCA             LDR      R3,??man_http_resp_cmd_43  ;; 0x289
   \   00000174   0x2200             MOVS     R2,#+0
   \   00000176   0x2100             MOVS     R1,#+0
   \   00000178   0x2016             MOVS     R0,#+22
   \   0000017A   0x.... 0x....      BL       man_error_set
    650          						man_http_res_callback(MAN_HTTP_STATUS_NG);
   \   0000017E   0x2000             MOVS     R0,#+0
   \   00000180   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000182   0x.... 0x....      BL       man_http_res_callback
   \   00000186   0xE002             B        ??man_http_resp_cmd_42
    651          					}
    652          				}
    653          				else {
    654          					man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_40: (+1)
   \   00000188   0x2000             MOVS     R0,#+0
   \   0000018A   0x.... 0x....      BL       man_http_res_callback
    655          				}
    656          				break;
   \                     ??man_http_resp_cmd_42: (+1)
   \   0000018E   0xE1A9             B        ??man_http_resp_cmd_1
    657          
    658          			case MAN_HTTP_SEQ_GET_IP:
    659          				// 暴走するため、順番を入れ替える
    660          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_14: (+1)
   \   00000190   0x2000             MOVS     R0,#+0
   \   00000192   0x.... 0x....      BL       man_http_res_callback
    661          				// IP Addressを登録する
    662          				man_data_set_ipaddr(&get_data->ip[0]);
   \   00000196   0x1C60             ADDS     R0,R4,#+1
   \   00000198   0x.... 0x....      BL       man_data_set_ipaddr
    663          				break;
   \   0000019C   0xE1A2             B        ??man_http_resp_cmd_1
    664          
    665          			case MAN_HTTP_SEQ_OPEN_UDP:			// UDP OPEN 完了
    666          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_6: (+1)
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x.... 0x....      BL       man_http_res_callback
    667          				break;
   \   000001A4   0xE19E             B        ??man_http_resp_cmd_1
    668          
    669          			case MAN_HTTP_SEQ_UDP_SEND:		// 
    670          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_7: (+1)
   \   000001A6   0x2000             MOVS     R0,#+0
   \   000001A8   0x.... 0x....      BL       man_http_res_callback
    671          				break;
   \   000001AC   0xE19A             B        ??man_http_resp_cmd_1
    672          
    673          			case MAN_HTTP_SEQ_CLOSE_UDP:
    674          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_8: (+1)
   \   000001AE   0x2000             MOVS     R0,#+0
   \   000001B0   0x.... 0x....      BL       man_http_res_callback
    675          				break;
   \   000001B4   0xE196             B        ??man_http_resp_cmd_1
    676          
    677          			case MAN_HTTP_SEQ_CLOSE_LTE:
    678          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_9: (+1)
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0x.... 0x....      BL       man_http_res_callback
    679          				break;
   \   000001BC   0xE192             B        ??man_http_resp_cmd_1
    680          
    681          			case MAN_HTTP_SEQ_CLOSE_STBY_IN:
    682          				if (sensor->rssi_sts == MAN_DATA_RSSI_STS_OK) {
   \                     ??man_http_resp_cmd_10: (+1)
   \   000001BE   0x....             LDR      R0,??DataTable5  ;; 0xbd8
   \   000001C0   0x5C28             LDRB     R0,[R5, R0]
   \   000001C2   0x2801             CMP      R0,#+1
   \   000001C4   0xD10D             BNE      ??man_http_resp_cmd_44
    683          					man_http_work.rsrp_raw = -999;
   \   000001C6   0x....             LDR      R0,??DataTable5_1  ;; 0xfffffc19
   \   000001C8   0x....             LDR      R1,??DataTable5_2
   \   000001CA   0x6008             STR      R0,[R1, #+0]
    684          					man_http_work.rssi_raw = -999;
   \   000001CC   0x....             LDR      R0,??DataTable5_1  ;; 0xfffffc19
   \   000001CE   0x....             LDR      R1,??DataTable5_3
   \   000001D0   0x6008             STR      R0,[R1, #+0]
    685          					// STBY時は圏外とする
    686          					man_data_set_rssi_sts(MAN_DATA_RSSI_STS_NG);
   \   000001D2   0x2000             MOVS     R0,#+0
   \   000001D4   0x.... 0x....      BL       man_data_set_rssi_sts
    687          					man_dbglog_setting(MAN_ERROR_DBG_MAN_HTP, MAN_ERROR_DBG_TYPE_OTHER, MAN_DATA_RSSI_STS_NG);
   \   000001D8   0x2200             MOVS     R2,#+0
   \   000001DA   0x2105             MOVS     R1,#+5
   \   000001DC   0x2009             MOVS     R0,#+9
   \   000001DE   0x.... 0x....      BL       man_dbglog_setting
    688          				}
    689          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_44: (+1)
   \   000001E2   0x2000             MOVS     R0,#+0
   \   000001E4   0x.... 0x....      BL       man_http_res_callback
    690          				break;
   \   000001E8   0xE17C             B        ??man_http_resp_cmd_1
    691          
    692          			case MAN_HTTP_SEQ_CLOSE_STBY_OUT:
    693          				if (sensor->rssi_sts == MAN_DATA_RSSI_STS_OK) {
   \                     ??man_http_resp_cmd_11: (+1)
   \   000001EA   0x....             LDR      R0,??DataTable5  ;; 0xbd8
   \   000001EC   0x5C28             LDRB     R0,[R5, R0]
   \   000001EE   0x2801             CMP      R0,#+1
   \   000001F0   0xD10D             BNE      ??man_http_resp_cmd_45
    694          					man_http_work.rsrp_raw = -999;
   \   000001F2   0x....             LDR      R0,??DataTable5_1  ;; 0xfffffc19
   \   000001F4   0x....             LDR      R1,??DataTable5_2
   \   000001F6   0x6008             STR      R0,[R1, #+0]
    695          					man_http_work.rssi_raw = -999;
   \   000001F8   0x....             LDR      R0,??DataTable5_1  ;; 0xfffffc19
   \   000001FA   0x....             LDR      R1,??DataTable5_3
   \   000001FC   0x6008             STR      R0,[R1, #+0]
    696          					// STBY時は圏外とする
    697          					man_data_set_rssi_sts(MAN_DATA_RSSI_STS_NG);
   \   000001FE   0x2000             MOVS     R0,#+0
   \   00000200   0x.... 0x....      BL       man_data_set_rssi_sts
    698          					man_dbglog_setting(MAN_ERROR_DBG_MAN_HTP, MAN_ERROR_DBG_TYPE_OTHER, MAN_DATA_RSSI_STS_NG);
   \   00000204   0x2200             MOVS     R2,#+0
   \   00000206   0x2105             MOVS     R1,#+5
   \   00000208   0x2009             MOVS     R0,#+9
   \   0000020A   0x.... 0x....      BL       man_dbglog_setting
    699          				}
    700          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_45: (+1)
   \   0000020E   0x2000             MOVS     R0,#+0
   \   00000210   0x.... 0x....      BL       man_http_res_callback
    701          				break;
   \   00000214   0xE166             B        ??man_http_resp_cmd_1
    702          
    703          			case MAN_HTTP_SEQ_GET_CSQ:
    704          				// dBmに変換する
    705          				if (get_data->rssi <= 31) {
   \                     ??man_http_resp_cmd_12: (+1)
   \   00000216   0x7C60             LDRB     R0,[R4, #+17]
   \   00000218   0x2820             CMP      R0,#+32
   \   0000021A   0xDA05             BGE      ??man_http_resp_cmd_46
    706          					rssi = 51 + (31 - get_data->rssi) * 2;
   \   0000021C   0x7C61             LDRB     R1,[R4, #+17]
   \   0000021E   0x4248             RSBS     R0,R1,#+0
   \   00000220   0x2102             MOVS     R1,#+2
   \   00000222   0x4348             MULS     R0,R1,R0
   \   00000224   0x3071             ADDS     R0,R0,#+113
   \   00000226   0xE000             B        ??man_http_resp_cmd_47
    707          				}
    708          				else {
    709          					rssi = 114;
   \                     ??man_http_resp_cmd_46: (+1)
   \   00000228   0x2072             MOVS     R0,#+114
    710          				}
    711          
    712          				// rssiが変化したらチェックする
    713          				if (man_http_work.rssi != rssi) {
   \                     ??man_http_resp_cmd_47: (+1)
   \   0000022A   0x....             LDR      R1,??DataTable6
   \   0000022C   0x6809             LDR      R1,[R1, #+0]
   \   0000022E   0x4281             CMP      R1,R0
   \   00000230   0xD01C             BEQ      ??man_http_resp_cmd_48
    714          					man_http_work.rssi = rssi;
   \   00000232   0x....             LDR      R1,??DataTable6
   \   00000234   0x6008             STR      R0,[R1, #+0]
    715          
    716          					// 閾値より悪い場合は圏外とする
    717          					rssi_sts = sensor->rssi_sts;
   \   00000236   0x....             LDR      R1,??DataTable5  ;; 0xbd8
   \   00000238   0x5C6C             LDRB     R4,[R5, R1]
    718          					if (sensor->rssi_sts == MAN_DATA_RSSI_STS_OK) {
   \   0000023A   0x....             LDR      R1,??DataTable5  ;; 0xbd8
   \   0000023C   0x5C69             LDRB     R1,[R5, R1]
   \   0000023E   0x2901             CMP      R1,#+1
   \   00000240   0xD108             BNE      ??man_http_resp_cmd_49
    719          						if (rssi >= MAN_DATA_RSSI_NG) {
   \   00000242   0x2847             CMP      R0,#+71
   \   00000244   0xDB0E             BLT      ??man_http_resp_cmd_50
    720          							rssi_sts = MAN_DATA_RSSI_STS_NG;
   \   00000246   0x2400             MOVS     R4,#+0
    721          							man_dbglog_setting(MAN_ERROR_DBG_MAN_HTP, MAN_ERROR_DBG_TYPE_OTHER, MAN_DATA_RSSI_STS_NG);
   \   00000248   0x2200             MOVS     R2,#+0
   \   0000024A   0x2105             MOVS     R1,#+5
   \   0000024C   0x2009             MOVS     R0,#+9
   \   0000024E   0x.... 0x....      BL       man_dbglog_setting
   \   00000252   0xE007             B        ??man_http_resp_cmd_50
    722          						}
    723          					}
    724          		
    725          					// 閾値より良い場合は圏内する
    726          					else {
    727          						if (rssi <= MAN_DATA_RSSI_OK) {
   \                     ??man_http_resp_cmd_49: (+1)
   \   00000254   0x2842             CMP      R0,#+66
   \   00000256   0xDA05             BGE      ??man_http_resp_cmd_50
    728          							rssi_sts = MAN_DATA_RSSI_STS_OK;
   \   00000258   0x2401             MOVS     R4,#+1
    729          							man_dbglog_setting(MAN_ERROR_DBG_MAN_HTP, MAN_ERROR_DBG_TYPE_OTHER, MAN_DATA_RSSI_STS_OK);
   \   0000025A   0x2201             MOVS     R2,#+1
   \   0000025C   0x2105             MOVS     R1,#+5
   \   0000025E   0x2009             MOVS     R0,#+9
   \   00000260   0x.... 0x....      BL       man_dbglog_setting
    730          						}
    731          					}
    732          		
    733          					// データ管理に登録する
    734          					man_data_set_rssi_sts(rssi_sts);
   \                     ??man_http_resp_cmd_50: (+1)
   \   00000264   0x0020             MOVS     R0,R4
   \   00000266   0xB2C0             UXTB     R0,R0
   \   00000268   0x.... 0x....      BL       man_data_set_rssi_sts
    735          
    736          #ifdef GNSS_DEBUG_OUT_RSSI 
    737          			int32_t		length;
    738          			sprintf((char *)&man_http_work.buff[0], "RSI(-%d[dBm])\n", rssi);
    739          			length = strlen((char const *)&man_http_work.buff[0]);
    740          			man_usb_data_send(&man_http_work.buff[0], length);
    741          #endif
    742          				}
    743          				// 応答を返す
    744          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_48: (+1)
   \   0000026C   0x2000             MOVS     R0,#+0
   \   0000026E   0x.... 0x....      BL       man_http_res_callback
    745          				break;
   \   00000272   0xE137             B        ??man_http_resp_cmd_1
    746          
    747          			case MAN_HTTP_SEQ_GET_CPSI:
    748          				man_http_work.cpsi_err = 0;
   \                     ??man_http_resp_cmd_13: (+1)
   \   00000274   0x2000             MOVS     R0,#+0
   \   00000276   0x....             LDR      R1,??DataTable7
   \   00000278   0x6008             STR      R0,[R1, #+0]
    749          				// 取得データの取り出し
    750          				rsrp_raw = get_data->rsrp_raw;
   \   0000027A   0x69A0             LDR      R0,[R4, #+24]
    751          				rssi_raw = get_data->rssi_raw;
   \   0000027C   0x6961             LDR      R1,[R4, #+20]
    752          
    753          				// RSSI取得値を保存する
    754          				man_http_work.rssi_raw = get_data->rssi_raw;
   \   0000027E   0x6961             LDR      R1,[R4, #+20]
   \   00000280   0x....             LDR      R2,??DataTable5_3
   \   00000282   0x6011             STR      R1,[R2, #+0]
    755          
    756          				// rsrpが変化したらチェックする
    757          				if (man_http_work.rsrp_raw != rsrp_raw) {
   \   00000284   0x....             LDR      R1,??DataTable5_2
   \   00000286   0x6809             LDR      R1,[R1, #+0]
   \   00000288   0x4281             CMP      R1,R0
   \   0000028A   0xD01E             BEQ      ??man_http_resp_cmd_51
    758          					man_http_work.rsrp_raw = rsrp_raw;
   \   0000028C   0x....             LDR      R1,??DataTable5_2
   \   0000028E   0x6008             STR      R0,[R1, #+0]
    759          
    760          					// 閾値より悪い場合は圏外とする
    761          					rssi_sts = sensor->rssi_sts;
   \   00000290   0x....             LDR      R1,??DataTable5  ;; 0xbd8
   \   00000292   0x5C6C             LDRB     R4,[R5, R1]
    762          					if (sensor->rssi_sts == MAN_DATA_RSSI_STS_OK) {
   \   00000294   0x....             LDR      R1,??DataTable5  ;; 0xbd8
   \   00000296   0x5C69             LDRB     R1,[R5, R1]
   \   00000298   0x2901             CMP      R1,#+1
   \   0000029A   0xD109             BNE      ??man_http_resp_cmd_52
    763          						if (rsrp_raw <= MAN_DATA_RSRP_NG) {
   \   0000029C   0x....             LDR      R1,??DataTable6_1  ;; 0xfffffe0d
   \   0000029E   0x4288             CMP      R0,R1
   \   000002A0   0xDA0F             BGE      ??man_http_resp_cmd_53
    764          							rssi_sts = MAN_DATA_RSSI_STS_NG;
   \   000002A2   0x2400             MOVS     R4,#+0
    765          							man_dbglog_setting(MAN_ERROR_DBG_MAN_HTP, MAN_ERROR_DBG_TYPE_OTHER, MAN_DATA_RSSI_STS_NG);
   \   000002A4   0x2200             MOVS     R2,#+0
   \   000002A6   0x2105             MOVS     R1,#+5
   \   000002A8   0x2009             MOVS     R0,#+9
   \   000002AA   0x.... 0x....      BL       man_dbglog_setting
   \   000002AE   0xE008             B        ??man_http_resp_cmd_53
    766          						}
    767          					}
    768          		
    769          					// 閾値より良い場合は圏内する
    770          					else {
    771          						if (rsrp_raw >= MAN_DATA_RSRP_OK) {
   \                     ??man_http_resp_cmd_52: (+1)
   \   000002B0   0x....             LDR      R1,??DataTable6_1  ;; 0xfffffe0d
   \   000002B2   0x4288             CMP      R0,R1
   \   000002B4   0xDB05             BLT      ??man_http_resp_cmd_53
    772          							rssi_sts = MAN_DATA_RSSI_STS_OK;
   \   000002B6   0x2401             MOVS     R4,#+1
    773          							man_dbglog_setting(MAN_ERROR_DBG_MAN_HTP, MAN_ERROR_DBG_TYPE_OTHER, MAN_DATA_RSSI_STS_OK);
   \   000002B8   0x2201             MOVS     R2,#+1
   \   000002BA   0x2105             MOVS     R1,#+5
   \   000002BC   0x2009             MOVS     R0,#+9
   \   000002BE   0x.... 0x....      BL       man_dbglog_setting
    774          						}
    775          					}
    776          		
    777          					// データ管理に登録する
    778          					man_data_set_rssi_sts(rssi_sts);
   \                     ??man_http_resp_cmd_53: (+1)
   \   000002C2   0x0020             MOVS     R0,R4
   \   000002C4   0xB2C0             UXTB     R0,R0
   \   000002C6   0x.... 0x....      BL       man_data_set_rssi_sts
    779          
    780          #ifdef GNSS_DEBUG_OUT_RSSI 
    781          			int32_t		length;
    782          			sprintf((char *)&man_http_work.buff[0], "RSRP(%d[dBm]), RSSI(%d[dBm])\n", rsrp_raw, rssi_raw);
    783          			length = strlen((char const *)&man_http_work.buff[0]);
    784          			man_usb_data_send(&man_http_work.buff[0], length);
    785          #endif
    786          				}
    787          				// 応答を返す
    788          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_51: (+1)
   \   000002CA   0x2000             MOVS     R0,#+0
   \   000002CC   0x.... 0x....      BL       man_http_res_callback
    789          
    790          				break;
   \   000002D0   0xE108             B        ??man_http_resp_cmd_1
    791          
    792          			case MAN_HTTP_SEQ_EXEC_RESET:
    793          				man_http_work.rsrp_raw = -999;
   \                     ??man_http_resp_cmd_15: (+1)
   \   000002D2   0x....             LDR      R0,??DataTable5_1  ;; 0xfffffc19
   \   000002D4   0x....             LDR      R1,??DataTable5_2
   \   000002D6   0x6008             STR      R0,[R1, #+0]
    794          				man_http_work.rssi_raw = -999;
   \   000002D8   0x....             LDR      R0,??DataTable5_1  ;; 0xfffffc19
   \   000002DA   0x....             LDR      R1,??DataTable5_3
   \   000002DC   0x6008             STR      R0,[R1, #+0]
    795          				// RESET時は圏外とする
    796          				man_data_set_rssi_sts(MAN_DATA_RSSI_STS_NG);
   \   000002DE   0x2000             MOVS     R0,#+0
   \   000002E0   0x.... 0x....      BL       man_data_set_rssi_sts
    797          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \   000002E4   0x2000             MOVS     R0,#+0
   \   000002E6   0x.... 0x....      BL       man_http_res_callback
    798          				break;
   \   000002EA   0xE0FB             B        ??man_http_resp_cmd_1
    799          
    800          			case MAN_HTTP_SEQ_REOPEN_WAIT:
    801          				man_http_set_sequense(MAN_HTTP_SEQ_REOPEN_UDP);
   \                     ??man_http_resp_cmd_16: (+1)
   \   000002EC   0x200F             MOVS     R0,#+15
   \   000002EE   0x.... 0x....      BL       man_http_set_sequense
    802          				ret = mid_HTTP_req_UdpOpen(MAN_HTTP_SEQ_REOPEN_UDP, man_http_req_callback);
   \   000002F2   0x4960             LDR      R1,??man_http_resp_cmd_41
   \   000002F4   0x200F             MOVS     R0,#+15
   \   000002F6   0x.... 0x....      BL       mid_HTTP_req_UdpOpen
    803          				if (ret < 0) {
   \   000002FA   0x2800             CMP      R0,#+0
   \   000002FC   0xD50A             BPL      ??man_http_resp_cmd_54
    804          					man_error_setting(MAN_ERROR_MAN_HTTP, 0, 0);
   \   000002FE   0x23C9             MOVS     R3,#+201
   \   00000300   0x009B             LSLS     R3,R3,#+2        ;; #+804
   \   00000302   0x2200             MOVS     R2,#+0
   \   00000304   0x2100             MOVS     R1,#+0
   \   00000306   0x2016             MOVS     R0,#+22
   \   00000308   0x.... 0x....      BL       man_error_set
    805          					man_http_res_callback(MAN_HTTP_STATUS_NG);
   \   0000030C   0x2000             MOVS     R0,#+0
   \   0000030E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000310   0x.... 0x....      BL       man_http_res_callback
    806          				}
    807          				break;
   \                     ??man_http_resp_cmd_54: (+1)
   \   00000314   0xE0E6             B        ??man_http_resp_cmd_1
   \   00000316   0xBF00             Nop      
   \                     ??man_http_resp_cmd_0:
   \   00000318   0x........         DC32     man_http_work+0x5A0
   \   0000031C   0x........         DC32     man_http_work+0x5A8
   \   00000320   0x........         DC32     man_http_work+0x5A4
    808          
    809          			case MAN_HTTP_SEQ_REOPEN_UDP:
    810          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_17: (+1)
   \   00000324   0x2000             MOVS     R0,#+0
   \   00000326   0x.... 0x....      BL       man_http_res_callback
    811          				break;
   \   0000032A   0xE0DB             B        ??man_http_resp_cmd_1
    812          
    813          			case MAN_HTTP_SEQ_CLIENT_OPEN:
    814          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_18: (+1)
   \   0000032C   0x2000             MOVS     R0,#+0
   \   0000032E   0x.... 0x....      BL       man_http_res_callback
    815          				break;
   \   00000332   0xE0D7             B        ??man_http_resp_cmd_1
    816          
    817          			case MAN_HTTP_SEQ_CLIENT_CLOSE:
    818          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_21: (+1)
   \   00000334   0x2000             MOVS     R0,#+0
   \   00000336   0x.... 0x....      BL       man_http_res_callback
    819          				break;
   \   0000033A   0xE0D3             B        ??man_http_resp_cmd_1
    820          
    821          			case MAN_HTTP_SEQ_CLIENT_SEND:
    822          				if (man_http_work.http_recv.type == MAN_HTTP_RECV_MAX) {
   \                     ??man_http_resp_cmd_19: (+1)
   \   0000033C   0x....             LDR      R0,??DataTable7_1
   \   0000033E   0x6800             LDR      R0,[R0, #+0]
   \   00000340   0x2803             CMP      R0,#+3
   \   00000342   0xD102             BNE      ??man_http_resp_cmd_55
    823          					man_http_set_sequense(MAN_HTTP_SEQ_CLIENT_RECV);
   \   00000344   0x2012             MOVS     R0,#+18
   \   00000346   0x.... 0x....      BL       man_http_set_sequense
    824          				}
    825          //				else if (man_http_work.http_recv.type == MAN_HTTP_RECV_IPCLOSE2) {
    826          //					man_error_setting(MAN_ERROR_MAN_HTTP, 0, 0);
    827          //					man_http_res_callback(MAN_HTTP_STATUS_NG);
    828          //				}
    829          				break;
   \                     ??man_http_resp_cmd_55: (+1)
   \   0000034A   0xE0CB             B        ??man_http_resp_cmd_1
    830          
    831          			case MAN_HTTP_SEQ_CLIENT_RECV:
    832          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_20: (+1)
   \   0000034C   0x2000             MOVS     R0,#+0
   \   0000034E   0x.... 0x....      BL       man_http_res_callback
    833          				break;
   \   00000352   0xE0C7             B        ??man_http_resp_cmd_1
    834          
    835          			case MAN_HTTP_SEQ_SERVER_OPEN:
    836          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_22: (+1)
   \   00000354   0x2000             MOVS     R0,#+0
   \   00000356   0x.... 0x....      BL       man_http_res_callback
    837          				break;
   \   0000035A   0xE0C3             B        ??man_http_resp_cmd_1
    838          
    839          			case MAN_HTTP_SEQ_SERVER_CLOSE:
    840          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_24: (+1)
   \   0000035C   0x2000             MOVS     R0,#+0
   \   0000035E   0x.... 0x....      BL       man_http_res_callback
    841          				break;
   \   00000362   0xE0BF             B        ??man_http_resp_cmd_1
    842          
    843          			case MAN_HTTP_SEQ_SERVER_SEND:
    844          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_23: (+1)
   \   00000364   0x2000             MOVS     R0,#+0
   \   00000366   0x.... 0x....      BL       man_http_res_callback
    845          				break;
   \   0000036A   0xE0BB             B        ??man_http_resp_cmd_1
    846          
    847          			case MAN_HTTP_SEQ_FTP_INIT:
    848          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_25: (+1)
   \   0000036C   0x2000             MOVS     R0,#+0
   \   0000036E   0x.... 0x....      BL       man_http_res_callback
    849          				break;
   \   00000372   0xE0B7             B        ??man_http_resp_cmd_1
    850          
    851          			case MAN_HTTP_SEQ_FTP_OPEN:
    852          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_26: (+1)
   \   00000374   0x2000             MOVS     R0,#+0
   \   00000376   0x.... 0x....      BL       man_http_res_callback
    853          				break;
   \   0000037A   0xE0B3             B        ??man_http_resp_cmd_1
    854          
    855          			case MAN_HTTP_SEQ_FTP_RECOVERY:
    856          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_27: (+1)
   \   0000037C   0x2000             MOVS     R0,#+0
   \   0000037E   0x.... 0x....      BL       man_http_res_callback
    857          				break;
   \   00000382   0xE0AF             B        ??man_http_resp_cmd_1
    858          
    859          			case MAN_HTTP_SEQ_FTP_GET:
    860          				man_http_res_callback(MAN_HTTP_STATUS_OK);
   \                     ??man_http_resp_cmd_28: (+1)
   \   00000384   0x2000             MOVS     R0,#+0
   \   00000386   0x.... 0x....      BL       man_http_res_callback
    861          				break;
   \   0000038A   0xE0AB             B        ??man_http_resp_cmd_1
    862          
    863          			case MAN_HTTP_SEQ_FILE_GET:
    864          				man_http_set_sequense(MAN_HTTP_SEQ_FILE_GET_WAIT);
   \                     ??man_http_resp_cmd_29: (+1)
   \   0000038C   0x201C             MOVS     R0,#+28
   \   0000038E   0x.... 0x....      BL       man_http_set_sequense
    865          				// 応答待ち タイマ開始
    866          				// 2分タイマ開始
    867          				man_timer_start_wait(TIMER_MAN_ID_APL_HTTP + MAN_HTTP_SEQ_FILE_GET_WAIT, MAN_HTTP_FILE_GET_TIME, man_http_req_callback);
   \   00000392   0x4A38             LDR      R2,??man_http_resp_cmd_41
   \   00000394   0x....             LDR      R1,??DataTable10  ;; 0x1d4c0
   \   00000396   0x....             LDR      R0,??DataTable10_1  ;; 0x4030001c
   \   00000398   0x.... 0x....      BL       man_timer_start_wait
    868          				break;
   \   0000039C   0xE0A2             B        ??man_http_resp_cmd_1
    869          
    870          			case MAN_HTTP_SEQ_FILE_GET_WAIT:
    871          				// NGをログに残す
    872          				man_http_set_sequense(MAN_HTTP_SEQ_FILE_GET_NG);
   \                     ??man_http_resp_cmd_30: (+1)
   \   0000039E   0x201E             MOVS     R0,#+30
   \   000003A0   0x.... 0x....      BL       man_http_set_sequense
    873          				// 2分経過しても応答なし時は異常とする
    874          				if (man_http_work.request.callback_file != NULL) {
   \   000003A4   0x....             LDR      R0,??DataTable11
   \   000003A6   0x6980             LDR      R0,[R0, #+24]
   \   000003A8   0x2800             CMP      R0,#+0
   \   000003AA   0xD012             BEQ      ??man_http_resp_cmd_56
    875          					man_http_work.request.callback_file(NULL, 0, man_http_work.request.id, MAN_HTTP_STATUS_NG);
   \   000003AC   0x2300             MOVS     R3,#+0
   \   000003AE   0x43DB             MVNS     R3,R3            ;; #-1
   \   000003B0   0x....             LDR      R0,??DataTable11
   \   000003B2   0x6842             LDR      R2,[R0, #+4]
   \   000003B4   0x2100             MOVS     R1,#+0
   \   000003B6   0x2000             MOVS     R0,#+0
   \   000003B8   0x....             LDR      R4,??DataTable11
   \   000003BA   0x69A4             LDR      R4,[R4, #+24]
   \   000003BC   0x47A0             BLX      R4
    876          					man_http_work.request.callback_file = NULL;
   \   000003BE   0x2000             MOVS     R0,#+0
   \   000003C0   0x....             LDR      R1,??DataTable11
   \   000003C2   0x6188             STR      R0,[R1, #+24]
    877          					man_error_setting(MAN_ERROR_MAN_HTTP, man_http_work.resp_cmd.id, 0);
   \   000003C4   0x....             LDR      R3,??DataTable10_2  ;; 0x36d
   \   000003C6   0x2200             MOVS     R2,#+0
   \   000003C8   0x....             LDR      R0,??DataTable10_3
   \   000003CA   0x6801             LDR      R1,[R0, #+0]
   \   000003CC   0x2016             MOVS     R0,#+22
   \   000003CE   0x.... 0x....      BL       man_error_set
    878          				}
    879          				man_http_set_sequense(MAN_HTTP_SEQ_READY);
   \                     ??man_http_resp_cmd_56: (+1)
   \   000003D2   0x2000             MOVS     R0,#+0
   \   000003D4   0x.... 0x....      BL       man_http_set_sequense
    880          				break;
   \   000003D8   0xE084             B        ??man_http_resp_cmd_1
    881          
    882          			case MAN_HTTP_SEQ_RETRY_RTC:
    883          				// 取得した情報を取りだす。
    884          				get_info = mid_HTTP_get_info();
   \                     ??man_http_resp_cmd_31: (+1)
   \   000003DA   0x.... 0x....      BL       mid_HTTP_get_info
   \   000003DE   0x0004             MOVS     R4,R0
    885          				// 時刻OKを設定する
    886          				if (get_info->clock_flg == 1) {
   \   000003E0   0x68E0             LDR      R0,[R4, #+12]
   \   000003E2   0x2801             CMP      R0,#+1
   \   000003E4   0xD105             BNE      ??man_http_resp_cmd_57
    887          					// 時刻OKを設定する
    888          					man_rtc_set_clock(MAN_RTC_SEL_LTE, MAN_RTC_STS_OK, &get_info->clock);
   \   000003E6   0x1D22             ADDS     R2,R4,#+4
   \   000003E8   0x2101             MOVS     R1,#+1
   \   000003EA   0x2000             MOVS     R0,#+0
   \   000003EC   0x.... 0x....      BL       man_rtc_set_clock
   \   000003F0   0xE005             B        ??man_http_resp_cmd_58
    889          				}
    890          				else {
    891          					man_error_setting(MAN_ERROR_MAN_HTTP, 0, 0);
   \                     ??man_http_resp_cmd_57: (+1)
   \   000003F2   0x....             LDR      R3,??DataTable11_1  ;; 0x37b
   \   000003F4   0x2200             MOVS     R2,#+0
   \   000003F6   0x2100             MOVS     R1,#+0
   \   000003F8   0x2016             MOVS     R0,#+22
   \   000003FA   0x.... 0x....      BL       man_error_set
    892          				}
    893          				// RTCリトライ済みとする
    894          				man_http_work.rtc_flag = 1;
   \                     ??man_http_resp_cmd_58: (+1)
   \   000003FE   0x2001             MOVS     R0,#+1
   \   00000400   0x....             LDR      R1,??DataTable11_2
   \   00000402   0x6008             STR      R0,[R1, #+0]
    895          				man_http_set_sequense(MAN_HTTP_SEQ_READY);
   \   00000404   0x2000             MOVS     R0,#+0
   \   00000406   0x.... 0x....      BL       man_http_set_sequense
    896          				break;
   \   0000040A   0xE06B             B        ??man_http_resp_cmd_1
    897          
    898          			case MAN_HTTP_SEQ_SET_RTC:
    899          				// 取得した情報を取りだす。
    900          				get_info = mid_HTTP_get_info();
   \                     ??man_http_resp_cmd_32: (+1)
   \   0000040C   0x.... 0x....      BL       mid_HTTP_get_info
   \   00000410   0x0004             MOVS     R4,R0
    901          				// 時刻OKを設定する
    902          				if (get_info->clock_flg == 1) {
   \   00000412   0x68E0             LDR      R0,[R4, #+12]
   \   00000414   0x2801             CMP      R0,#+1
   \   00000416   0xD103             BNE      ??man_http_resp_cmd_59
    903          					// 時刻OKを設定する
    904          					man_rtc_set_clock_direct(&get_info->clock);
   \   00000418   0x1D20             ADDS     R0,R4,#+4
   \   0000041A   0x.... 0x....      BL       man_rtc_set_clock_direct
   \   0000041E   0xE005             B        ??man_http_resp_cmd_60
    905          				}
    906          				else {
    907          					man_error_setting(MAN_ERROR_MAN_HTTP, 0, 0);
   \                     ??man_http_resp_cmd_59: (+1)
   \   00000420   0x....             LDR      R3,??DataTable11_3  ;; 0x38b
   \   00000422   0x2200             MOVS     R2,#+0
   \   00000424   0x2100             MOVS     R1,#+0
   \   00000426   0x2016             MOVS     R0,#+22
   \   00000428   0x.... 0x....      BL       man_error_set
    908          				}
    909          				// RTCリトライ済みとする
    910          				man_http_work.rtc_flag = 1;
   \                     ??man_http_resp_cmd_60: (+1)
   \   0000042C   0x2001             MOVS     R0,#+1
   \   0000042E   0x....             LDR      R1,??DataTable11_2
   \   00000430   0x6008             STR      R0,[R1, #+0]
    911          				man_http_set_sequense(MAN_HTTP_SEQ_READY);
   \   00000432   0x2000             MOVS     R0,#+0
   \   00000434   0x.... 0x....      BL       man_http_set_sequense
    912          				break;
   \   00000438   0xE054             B        ??man_http_resp_cmd_1
    913          
    914          			case MAN_HTTP_SEQ_GET_RTC:
    915          				// 取得した情報を取りだす。
    916          				get_info = mid_HTTP_get_info();
   \                     ??man_http_resp_cmd_33: (+1)
   \   0000043A   0x.... 0x....      BL       mid_HTTP_get_info
   \   0000043E   0x0004             MOVS     R4,R0
    917          				man_http_work.jst_clock = get_info->clock;
   \   00000440   0x....             LDR      R0,??DataTable12
   \   00000442   0x1D21             ADDS     R1,R4,#+4
   \   00000444   0x2206             MOVS     R2,#+6
   \   00000446   0x.... 0x....      BL       __aeabi_memcpy
    918          
    919          				// 時刻取得結果を判定する
    920          				if (get_info->clock_flg == 1) {
   \   0000044A   0x68E0             LDR      R0,[R4, #+12]
   \   0000044C   0x2801             CMP      R0,#+1
   \   0000044E   0xD103             BNE      ??man_http_resp_cmd_61
    921          					man_http_res_callback(MAN_HTTP_STATUS_OK);
   \   00000450   0x2000             MOVS     R0,#+0
   \   00000452   0x.... 0x....      BL       man_http_res_callback
   \   00000456   0xE003             B        ??man_http_resp_cmd_62
    922          				}
    923          				else {
    924          					man_http_res_callback(MAN_HTTP_STATUS_NG);
   \                     ??man_http_resp_cmd_61: (+1)
   \   00000458   0x2000             MOVS     R0,#+0
   \   0000045A   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000045C   0x.... 0x....      BL       man_http_res_callback
    925          				}
    926          				break;
   \                     ??man_http_resp_cmd_62: (+1)
   \   00000460   0xE040             B        ??man_http_resp_cmd_1
    927          
    928          			default:
    929          				man_error_setting(MAN_ERROR_MAN_HTTP, man_http_work.resp_cmd.id, 0);
   \                     ??man_http_resp_cmd_34: (+1)
   \   00000462   0x....             LDR      R3,??DataTable12_1  ;; 0x3a1
   \   00000464   0x2200             MOVS     R2,#+0
   \   00000466   0x....             LDR      R0,??DataTable10_3
   \   00000468   0x6801             LDR      R1,[R0, #+0]
   \   0000046A   0x2016             MOVS     R0,#+22
   \   0000046C   0x.... 0x....      BL       man_error_set
    930          				break;
   \   00000470   0xE038             B        ??man_http_resp_cmd_1
   \   00000472   0xBF00             Nop      
   \                     ??man_http_resp_cmd_41:
   \   00000474   0x........         DC32     man_http_req_callback
    931          			}
    932          		}
    933          		else {
    934          			if (man_http_work.resp_cmd.id == MAN_HTTP_SEQ_RETRY_RTC) {
   \                     ??man_http_resp_cmd_2: (+1)
   \   00000478   0x....             LDR      R0,??DataTable10_3
   \   0000047A   0x6800             LDR      R0,[R0, #+0]
   \   0000047C   0x281F             CMP      R0,#+31
   \   0000047E   0xD10F             BNE      ??man_http_resp_cmd_63
    935          				// 異常発生時は取得を中止する
    936          				man_http_work.rtc_flag = 1;
   \   00000480   0x2001             MOVS     R0,#+1
   \   00000482   0x....             LDR      R1,??DataTable11_2
   \   00000484   0x6008             STR      R0,[R1, #+0]
    937          				man_error_setting(MAN_ERROR_MAN_HTTP, 0, 0);
   \   00000486   0x....             LDR      R3,??DataTable12_2  ;; 0x3a9
   \   00000488   0x2200             MOVS     R2,#+0
   \   0000048A   0x2100             MOVS     R1,#+0
   \   0000048C   0x2016             MOVS     R0,#+22
   \   0000048E   0x.... 0x....      BL       man_error_set
    938          				man_http_set_sequense(MAN_HTTP_SEQ_READY);
   \   00000492   0x2000             MOVS     R0,#+0
   \   00000494   0x.... 0x....      BL       man_http_set_sequense
   \   00000498   0xE024             B        ??man_http_resp_cmd_1
   \   0000049A   0xBF00             Nop      
   \                     ??man_http_resp_cmd_43:
   \   0000049C   0x00000289         DC32     0x289
    939          			}
    940          			else {
    941          				// 異常完了を通知する
    942          				man_http_res_callback(MAN_HTTP_STATUS_NG);
   \                     ??man_http_resp_cmd_63: (+1)
   \   000004A0   0x2000             MOVS     R0,#+0
   \   000004A2   0x43C0             MVNS     R0,R0            ;; #-1
   \   000004A4   0x.... 0x....      BL       man_http_res_callback
    943          				man_error_setting(MAN_ERROR_MAN_HTTP, man_http_work.resp_cmd.id, 0);
   \   000004A8   0x....             LDR      R3,??DataTable13  ;; 0x3af
   \   000004AA   0x2200             MOVS     R2,#+0
   \   000004AC   0x....             LDR      R0,??DataTable10_3
   \   000004AE   0x6801             LDR      R1,[R0, #+0]
   \   000004B0   0x2016             MOVS     R0,#+22
   \   000004B2   0x.... 0x....      BL       man_error_set
    944          				// CPSIが無応答時は圏外扱いとする
    945          				if (man_http_work.resp_cmd.id == MAN_HTTP_SEQ_GET_CPSI) {
   \   000004B6   0x....             LDR      R0,??DataTable10_3
   \   000004B8   0x6800             LDR      R0,[R0, #+0]
   \   000004BA   0x280B             CMP      R0,#+11
   \   000004BC   0xD112             BNE      ??man_http_resp_cmd_1
    946          					// 5回連続異常時は圏外扱いとする
    947          					if (man_http_work.cpsi_err >= 5) {
   \   000004BE   0x....             LDR      R0,??DataTable7
   \   000004C0   0x6800             LDR      R0,[R0, #+0]
   \   000004C2   0x2805             CMP      R0,#+5
   \   000004C4   0xDB09             BLT      ??man_http_resp_cmd_64
    948          						man_http_work.rsrp_raw = -999;
   \   000004C6   0x....             LDR      R0,??DataTable5_1  ;; 0xfffffc19
   \   000004C8   0x....             LDR      R1,??DataTable5_2
   \   000004CA   0x6008             STR      R0,[R1, #+0]
    949          						man_http_work.rssi_raw = -999;
   \   000004CC   0x....             LDR      R0,??DataTable5_1  ;; 0xfffffc19
   \   000004CE   0x....             LDR      R1,??DataTable5_3
   \   000004D0   0x6008             STR      R0,[R1, #+0]
    950          						// 無応答時は圏外とする
    951          						man_data_set_rssi_sts(MAN_DATA_RSSI_STS_NG);
   \   000004D2   0x2000             MOVS     R0,#+0
   \   000004D4   0x.... 0x....      BL       man_data_set_rssi_sts
   \   000004D8   0xE004             B        ??man_http_resp_cmd_1
    952          					}
    953          					else {
    954          						man_http_work.cpsi_err++;
   \                     ??man_http_resp_cmd_64: (+1)
   \   000004DA   0x....             LDR      R0,??DataTable7
   \   000004DC   0x6800             LDR      R0,[R0, #+0]
   \   000004DE   0x1C40             ADDS     R0,R0,#+1
   \   000004E0   0x....             LDR      R1,??DataTable7
   \   000004E2   0x6008             STR      R0,[R1, #+0]
    955          					}
    956          				}
    957          			}
    958          		}
    959          	}
    960          }
   \                     ??man_http_resp_cmd_1: (+1)
   \   000004E4   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    961          
    962          
    963          /********************************************************************/
    964          /*!
    965           * \name	man_http_recv_cmd
    966           * \brief	受信データ解析処理
    967           * \param	なし
    968           * \return  なし
    969           * \note	
    970           */
    971          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    972          static void man_http_recv_cmd( void )
    973          {
   \                     man_http_recv_cmd: (+1)
   \   00000000   0xB500             PUSH     {LR}
    974          	int32_t		ret=-1;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x43C0             MVNS     R0,R0            ;; #-1
    975          
    976          	if (man_http_work.http_recv.flag != 0) {
   \   00000006   0x....             LDR      R0,??DataTable16
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD002             BEQ      ??man_http_recv_cmd_0
    977          		man_http_work.http_recv.flag = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR      R1,??DataTable16
   \   00000012   0x6008             STR      R0,[R1, #+0]
    978          		
    979          		if (man_http_work.http_recv.type == MAN_HTTP_RECV_HOST) {
    980          			// コマンドを取り出す
    981          		}
    982          	}
    983          }
   \                     ??man_http_recv_cmd_0: (+1)
   \   00000014   0xBD00             POP      {PC}             ;; return
    984          
    985          
    986          /********************************************************************/
    987          /*	extern関数                                                      */
    988          /********************************************************************/
    989          
    990          /********************************************************************/
    991          /*!
    992           * \name	man_http_init
    993           * \brief	HTTP管理の初期化処理
    994           * \param	なし
    995           * \return  なし
    996           * \note	起動時に、呼ばれること
    997           */
    998          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    999          void man_http_init(void)
   1000          {
   \                     man_http_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1001          	// HTTPF初期化処理
   1002          	mid_HTTP_init();
   \   00000002   0x.... 0x....      BL       mid_HTTP_init
   1003          
   1004          	// データ受信時に通知する関数登録
   1005          	mid_HTTP_set_RecvNoti(0, man_http_recv_callback);
   \   00000006   0x....             LDR      R1,??DataTable14
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       mid_HTTP_set_RecvNoti
   1006          	
   1007          	// 内部変数を初期化する
   1008          	memset(&man_http_work, 0, sizeof(man_http_work_t));
   \   0000000E   0x....             LDR      R1,??DataTable14_1  ;; 0x694
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x....             LDR      R4,??DataTable11
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x.... 0x....      BL       __aeabi_memset
   1009          	man_http_work.rsrp_raw = -999;
   \   0000001A   0x....             LDR      R0,??DataTable13_1  ;; 0xfffffc19
   \   0000001C   0x....             LDR      R1,??DataTable13_2
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   1010          	man_http_work.rssi_raw = -999;
   \   00000020   0x....             LDR      R0,??DataTable13_1  ;; 0xfffffc19
   \   00000022   0x....             LDR      R1,??DataTable14_2
   \   00000024   0x6008             STR      R0,[R1, #+0]
   1011          }
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
   1012          
   1013          /********************************************************************/
   1014          /*!
   1015           * \name	man_http_main
   1016           * \brief	HTTP管理のmain処理
   1017           * \param	なし
   1018           * \return  なし
   1019           * \note	毎回、呼ばれること
   1020           */
   1021          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1022          void man_http_main(void)
   1023          {
   \                     man_http_main: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   1024          	int32_t					ret;
   1025          	uint32_t				end_time, time;
   1026          	mid_http_get_info_t 	*get_info = mid_HTTP_get_info();
   \   00000002   0x.... 0x....      BL       mid_HTTP_get_info
   \   00000006   0x0005             MOVS     R5,R0
   1027          	man_data_get_sensor_t	*sensor = man_data_get_sensor();
   \   00000008   0x.... 0x....      BL       man_data_get_sensor
   \   0000000C   0x0004             MOVS     R4,R0
   1028          
   1029          	// 応答データ解析処理
   1030          	man_http_resp_cmd();
   \   0000000E   0x.... 0x....      BL       man_http_resp_cmd
   1031          
   1032          	// 受信データ解析処理
   1033          	man_http_recv_cmd();
   \   00000012   0x.... 0x....      BL       man_http_recv_cmd
   1034          
   1035          	end_time = man_timer_get_1ms_count();
   \   00000016   0x.... 0x....      BL       man_timer_get_1ms_count
   \   0000001A   0x0006             MOVS     R6,R0
   1036          	// シーケンス処理
   1037          	switch (man_http_get_sequense()) {
   \   0000001C   0x.... 0x....      BL       man_http_get_sequense
   \   00000020   0x2812             CMP      R0,#+18
   \   00000022   0xD116             BNE      ??man_http_main_0
   1038          	case MAN_HTTP_SEQ_CLIENT_RECV:
   1039          		time = man_timer_get_elapsed_time(man_http_work.request.start_time, end_time);
   \   00000024   0x0031             MOVS     R1,R6
   \   00000026   0x....             LDR      R0,??DataTable11
   \   00000028   0x6A40             LDR      R0,[R0, #+36]
   \   0000002A   0x.... 0x....      BL       man_timer_get_elapsed_time
   1040          		if (time > man_http_work.request.timeout) {
   \   0000002E   0x....             LDR      R1,??DataTable11
   \   00000030   0x6A09             LDR      R1,[R1, #+32]
   \   00000032   0x4281             CMP      R1,R0
   \   00000034   0xD20C             BCS      ??man_http_main_1
   1041          			man_http_res_callback(MAN_HTTP_STATUS_NG);
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000003A   0x.... 0x....      BL       man_http_res_callback
   1042          			man_http_set_sequense(MAN_HTTP_SEQ_READY);
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x.... 0x....      BL       man_http_set_sequense
   1043          			man_error_setting(MAN_ERROR_MAN_HTTP, 0, 0);
   \   00000044   0x....             LDR      R3,??DataTable16_1  ;; 0x413
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x2016             MOVS     R0,#+22
   \   0000004C   0x.... 0x....      BL       man_error_set
   1044          		}
   1045          		break;
   \                     ??man_http_main_1: (+1)
   \   00000050   0xE7FF             B        ??man_http_main_2
   1046          	default:
   1047          		break;
   1048          	}
   1049          
   1050          
   1051          	if (man_rtc_get_status() == MAN_RTC_STS_LTE_NG) {
   \                     ??man_http_main_0: (+1)
   \                     ??man_http_main_2: (+1)
   \   00000052   0x.... 0x....      BL       man_rtc_get_status
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD117             BNE      ??man_http_main_3
   1052          		// RTC未リトライ時のみ実施する
   1053          		if (man_http_work.rtc_flag == 0) {
   \   0000005A   0x....             LDR      R0,??DataTable11_2
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD113             BNE      ??man_http_main_3
   1054          			if ( man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   00000062   0x.... 0x....      BL       man_http_get_sequense
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD10F             BNE      ??man_http_main_3
   1055          				// 圏内時
   1056          				if (sensor->rssi_sts == MAN_DATA_RSSI_STS_OK) {
   \   0000006A   0x....             LDR      R0,??DataTable16_2  ;; 0xbd8
   \   0000006C   0x5C20             LDRB     R0,[R4, R0]
   \   0000006E   0x2801             CMP      R0,#+1
   \   00000070   0xD10B             BNE      ??man_http_main_3
   1057          					if ( get_info->ctzuc_q == MID_HTTP_GET_CTZUC_1) {
   \   00000072   0x6828             LDR      R0,[R5, #+0]
   \   00000074   0x2802             CMP      R0,#+2
   \   00000076   0xD108             BNE      ??man_http_main_3
   1058          						// 要求を実施する
   1059          						ret = mid_HTTP_req_GetClk(MAN_HTTP_SEQ_RETRY_RTC, man_http_req_callback);
   \   00000078   0x....             LDR      R1,??DataTable18
   \   0000007A   0x201F             MOVS     R0,#+31
   \   0000007C   0x.... 0x....      BL       mid_HTTP_req_GetClk
   1060          
   1061          						if (ret >= 0) {
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD402             BMI      ??man_http_main_3
   1062          							man_http_set_sequense(MAN_HTTP_SEQ_RETRY_RTC);
   \   00000084   0x201F             MOVS     R0,#+31
   \   00000086   0x.... 0x....      BL       man_http_set_sequense
   1063          						}
   1064          					}
   1065          				}
   1066          			}
   1067          		}
   1068          	}
   1069          }
   \                     ??man_http_main_3: (+1)
   \   0000008A   0xBD70             POP      {R4-R6,PC}       ;; return
   1070          
   1071          

   \                                 In section .text, align 2, keep-with-next
   1072          int32_t man_http_update_date_time()
   1073          {
   \                     man_http_update_date_time: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1074            int32_t	ret;
   1075            ret = mid_HTTP_req_GetClk(MAN_HTTP_SEQ_SET_RTC, man_http_req_callback);
   \   00000002   0x....             LDR      R1,??DataTable18
   \   00000004   0x2020             MOVS     R0,#+32
   \   00000006   0x.... 0x....      BL       mid_HTTP_req_GetClk
   1076            if (ret >= 0)
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD404             BMI      ??man_http_update_date_time_0
   1077            {
   1078              man_http_set_sequense(MAN_HTTP_SEQ_SET_RTC);
   \   0000000E   0x2020             MOVS     R0,#+32
   \   00000010   0x.... 0x....      BL       man_http_set_sequense
   1079              return 1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xE000             B        ??man_http_update_date_time_1
   1080              
   1081            }
   1082            return 0;
   \                     ??man_http_update_date_time_0: (+1)
   \   00000018   0x2000             MOVS     R0,#+0
   \                     ??man_http_update_date_time_1: (+1)
   \   0000001A   0xBD02             POP      {R1,PC}          ;; return
   1083          }
   1084           
   1085          
   1086          
   1087          /********************************************************************/
   1088          /*!
   1089           * \name	man_http_lte_state
   1090           * \brief	LTEが受信した状態を通知する
   1091           * \param	id             : ユニーク番号
   1092           *          callback_state : 状態を通知するcallback関数
   1093           * \return   0: 成功
   1094           *          -1:失敗
   1095           * \note	必要時に、呼ばれること
   1096           */
   1097          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1098          int32_t man_http_lte_state(int32_t id, func_man_http_state callback_state)
   1099          {
   \                     man_http_lte_state: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   1100          	int32_t		ret = -1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1101          	
   1102          	if (callback_state != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??man_http_lte_state_0
   1103          		man_http_work.lte_state.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable17
   \   00000010   0x6002             STR      R2,[R0, #+0]
   1104          		man_http_work.lte_state.callback_state = callback_state;
   \   00000012   0x....             LDR      R0,??DataTable19
   \   00000014   0x6001             STR      R1,[R0, #+0]
   1105          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   1106          	}
   1107          	return ret;
   \                     ??man_http_lte_state_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   1108          }
   1109          
   1110          /********************************************************************/
   1111          /*!
   1112           * \name	man_http_lte_ota_off
   1113           * \brief	OTA機能停止処理
   1114           * \param	id       : ユニーク番号
   1115           *          callback : 完了を通知するcallback関数
   1116           * \return   0: 成功
   1117           *          -1:失敗
   1118           * \note	必要時に、呼ばれること
   1119           */
   1120          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1121          int32_t man_http_lte_ota_off(int32_t id, func_man_http callback)
   1122          {
   \                     man_http_lte_ota_off: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1123          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1124          
   1125          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_ota_off_0
   1126          		
   1127          		// 要求を実施する
   1128          		ret = mid_HTTP_req_OtaOffCmd(MAN_HTTP_SEQ_OPEN_OTA_OFF, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable18
   \   00000014   0x2022             MOVS     R0,#+34
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_OtaOffCmd
   \   0000001A   0x0004             MOVS     R4,R0
   1129          
   1130          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_ota_off_0
   1131          			man_http_set_sequense(MAN_HTTP_SEQ_OPEN_OTA_OFF);
   \   00000020   0x2022             MOVS     R0,#+34
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1132          			// 要求を保存する
   1133          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable15
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1134          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable15
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1135          		}
   1136          	}
   1137          
   1138          	if (ret < 0) {
   \                     ??man_http_lte_ota_off_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_lte_ota_off_1
   1139          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable21  ;; 0x473
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1140          	}
   1141          
   1142          	return ret;
   \                     ??man_http_lte_ota_off_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1143          }
   1144          
   1145          
   1146          /********************************************************************/
   1147          /*!
   1148           * \name	man_http_lte_init
   1149           * \brief	LTE 初期化処理
   1150           * \param	id       : ユニーク番号
   1151           *          callback : 完了を通知するcallback関数
   1152           * \return   0: 成功
   1153           *          -1:失敗
   1154           * \note	必要時に、呼ばれること
   1155           */
   1156          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1157          int32_t man_http_lte_init(int32_t id, func_man_http callback)
   1158          {
   \                     man_http_lte_init: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1159          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1160          
   1161          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_init_0
   1162          		
   1163          		// 要求を実施する
   1164          		ret = mid_HTTP_req_InitCmd(MAN_HTTP_SEQ_OPEN_INIT, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable18
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_InitCmd
   \   0000001A   0x0004             MOVS     R4,R0
   1165          
   1166          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_init_0
   1167          			man_http_set_sequense(MAN_HTTP_SEQ_OPEN_INIT);
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1168          			// 要求を保存する
   1169          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable15
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1170          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable15
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1171          		}
   1172          	}
   1173          
   1174          	if (ret < 0) {
   \                     ??man_http_lte_init_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_lte_init_1
   1175          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable22  ;; 0x497
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1176          	}
   1177          
   1178          	return ret;
   \                     ??man_http_lte_init_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1179          }
   1180          
   1181          
   1182          /********************************************************************/
   1183          /*!
   1184           * \name	man_http_lte_ready
   1185           * \brief	LTE 準備処理
   1186           * \param	id       : ユニーク番号
   1187           *          callback : 完了を通知するcallback関数
   1188           * \return   0: 成功
   1189           *          -1:失敗
   1190           * \note	必要時に、呼ばれること
   1191           */
   1192          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1193          int32_t man_http_lte_ready(int32_t id, func_man_http callback)
   1194          {
   \                     man_http_lte_ready: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1195          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1196          
   1197          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_ready_0
   1198          		
   1199          		// 要求を実施する
   1200          		ret = mid_HTTP_req_LteReady(MAN_HTTP_SEQ_OPEN_READY, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable18
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_LteReady
   \   0000001A   0x0004             MOVS     R4,R0
   1201          
   1202          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_ready_0
   1203          			man_http_set_sequense(MAN_HTTP_SEQ_OPEN_READY);
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1204          			// 要求を保存する
   1205          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable15
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1206          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable15
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1207          		}
   1208          	}
   1209          
   1210          	if (ret < 0) {
   \                     ??man_http_lte_ready_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_lte_ready_1
   1211          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable23  ;; 0x4bb
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1212          	}
   1213          
   1214          	return ret;
   \                     ??man_http_lte_ready_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1215          }
   1216          
   1217          
   1218          /********************************************************************/
   1219          /*!
   1220           * \name	man_http_lte_open
   1221           * \brief	LTE OPEN処理
   1222           * \param	id       : ユニーク番号
   1223           *          callback : 完了を通知するcallback関数
   1224           * \return   0: 成功
   1225           *          -1:失敗
   1226           * \note	必要時に、呼ばれること
   1227           */
   1228          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1229          int32_t man_http_lte_open(int32_t id, func_man_http callback)
   1230          {
   \                     man_http_lte_open: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1231          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1232          
   1233          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_open_0
   1234          		
   1235          		// 要求を実施する
   1236          		ret = mid_HTTP_req_LteOpen(MAN_HTTP_SEQ_OPEN_LTE, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable18
   \   00000014   0x2003             MOVS     R0,#+3
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_LteOpen
   \   0000001A   0x0004             MOVS     R4,R0
   1237          
   1238          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_open_0
   1239          			man_http_set_sequense(MAN_HTTP_SEQ_OPEN_LTE);
   \   00000020   0x2003             MOVS     R0,#+3
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1240          			// 要求を保存する
   1241          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable15
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1242          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable15
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1243          		}
   1244          	}
   1245          
   1246          	if (ret < 0) {
   \                     ??man_http_lte_open_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_lte_open_1
   1247          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable24  ;; 0x4df
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1248          	}
   1249          
   1250          	return ret;
   \                     ??man_http_lte_open_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1251          }
   1252          
   1253          
   1254          /********************************************************************/
   1255          /*!
   1256           * \name	man_http_lte_close
   1257           * \brief	LTE CLOSE処理
   1258           * \param	id       : ユニーク番号
   1259           *          callback : 完了を通知するcallback関数
   1260           * \return   0: 成功
   1261           *          -1:失敗
   1262           * \note	必要時に、呼ばれること
   1263           */
   1264          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1265          int32_t man_http_lte_close(int32_t id, func_man_http callback)
   1266          {
   \                     man_http_lte_close: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1267          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1268          
   1269          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_close_0
   1270          		
   1271          		// 要求を実施する
   1272          		ret = mid_HTTP_req_LteClose(MAN_HTTP_SEQ_CLOSE_LTE, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable18
   \   00000014   0x2007             MOVS     R0,#+7
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_LteClose
   \   0000001A   0x0004             MOVS     R4,R0
   1273          
   1274          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_close_0
   1275          			man_http_set_sequense(MAN_HTTP_SEQ_CLOSE_LTE);
   \   00000020   0x2007             MOVS     R0,#+7
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1276          			// 要求を保存する
   1277          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable15
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1278          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable15
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1279          		}
   1280          	}
   1281          
   1282          	if (ret < 0) {
   \                     ??man_http_lte_close_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_lte_close_1
   1283          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable25  ;; 0x503
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1284          	}
   1285          
   1286          	return ret;
   \                     ??man_http_lte_close_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1287          }
   1288          
   1289          
   1290          /********************************************************************/
   1291          /*!
   1292           * \name	man_http_lte_stby_in
   1293           * \brief	LTE STBY IN処理
   1294           * \param	id       : ユニーク番号
   1295           *          callback : 完了を通知するcallback関数
   1296           * \return   0: 成功
   1297           *          -1:失敗
   1298           * \note	必要時に、呼ばれること
   1299           */
   1300          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1301          int32_t man_http_lte_stby_in(int32_t id, func_man_http callback)
   1302          {
   \                     man_http_lte_stby_in: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1303          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1304          
   1305          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_stby_in_0
   1306          		
   1307          		// 要求を実施する
   1308          		ret = mid_HTTP_req_LteStbyIn(MAN_HTTP_SEQ_CLOSE_STBY_IN, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable18
   \   00000014   0x2008             MOVS     R0,#+8
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_LteStbyIn
   \   0000001A   0x0004             MOVS     R4,R0
   1309          
   1310          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_stby_in_0
   1311          			man_http_set_sequense(MAN_HTTP_SEQ_CLOSE_STBY_IN);
   \   00000020   0x2008             MOVS     R0,#+8
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1312          			// 要求を保存する
   1313          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable25_1
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1314          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable25_1
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1315          		}
   1316          	}
   1317          
   1318          	if (ret < 0) {
   \                     ??man_http_lte_stby_in_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_lte_stby_in_1
   1319          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable26  ;; 0x527
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1320          	}
   1321          
   1322          	return ret;
   \                     ??man_http_lte_stby_in_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1323          }
   1324          
   1325          
   1326          /********************************************************************/
   1327          /*!
   1328           * \name	man_http_lte_stby_out
   1329           * \brief	LTE STBY OUT処理
   1330           * \param	id       : ユニーク番号
   1331           *          callback : 完了を通知するcallback関数
   1332           * \return   0: 成功
   1333           *          -1:失敗
   1334           * \note	必要時に、呼ばれること
   1335           */
   1336          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1337          int32_t man_http_lte_stby_out(int32_t id, func_man_http callback)
   1338          {
   \                     man_http_lte_stby_out: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1339          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1340          
   1341          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_stby_out_0
   1342          		
   1343          		// 要求を実施する
   1344          		ret = mid_HTTP_req_LteStbyOut(MAN_HTTP_SEQ_CLOSE_STBY_OUT, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable18
   \   00000014   0x2009             MOVS     R0,#+9
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_LteStbyOut
   \   0000001A   0x0004             MOVS     R4,R0
   1345          
   1346          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_stby_out_0
   1347          			man_http_set_sequense(MAN_HTTP_SEQ_CLOSE_STBY_OUT);
   \   00000020   0x2009             MOVS     R0,#+9
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1348          			// 要求を保存する
   1349          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable25_1
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1350          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable25_1
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1351          		}
   1352          	}
   1353          
   1354          	if (ret < 0) {
   \                     ??man_http_lte_stby_out_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_lte_stby_out_1
   1355          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable27  ;; 0x54b
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1356          	}
   1357          
   1358          	return ret;
   \                     ??man_http_lte_stby_out_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1359          }
   1360          
   1361          
   1362          /********************************************************************/
   1363          /*!
   1364           * \name	man_http_lte_exec_reset
   1365           * \brief	RESET実施処理
   1366           * \param	id       : ユニーク番号
   1367           *          callback : 完了を通知するcallback関数
   1368           * \return   0: 成功
   1369           *          -1:失敗
   1370           * \note	必要時に、呼ばれること
   1371           *          RESET実行完了はMAN_HTTP_STATE_RESET_OKで判断する
   1372           */
   1373          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1374          int32_t man_http_lte_exec_reset(int32_t id, func_man_http callback)
   1375          {
   \                     man_http_lte_exec_reset: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1376          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1377          
   1378          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_exec_reset_0
   1379          		
   1380          		// 要求を実施する
   1381          		ret = mid_HTTP_req_LteReset(MAN_HTTP_SEQ_EXEC_RESET, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable18
   \   00000014   0x200D             MOVS     R0,#+13
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_LteReset
   \   0000001A   0x0004             MOVS     R4,R0
   1382          
   1383          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_exec_reset_0
   1384          			man_http_set_sequense(MAN_HTTP_SEQ_EXEC_RESET);
   \   00000020   0x200D             MOVS     R0,#+13
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1385          			// 要求を保存する
   1386          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable25_1
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1387          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable25_1
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1388          		}
   1389          	}
   1390          
   1391          	if (ret < 0) {
   \                     ??man_http_lte_exec_reset_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD509             BPL      ??man_http_lte_exec_reset_1
   1392          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x23AE             MOVS     R3,#+174
   \   00000038   0x00DB             LSLS     R3,R3,#+3        ;; #+1392
   \   0000003A   0x0032             MOVS     R2,R6
   \   0000003C   0xB2C0             UXTB     R0,R0
   \   0000003E   0x0001             MOVS     R1,R0
   \   00000040   0x2016             MOVS     R0,#+22
   \   00000042   0x.... 0x....      BL       man_error_set
   1393          	}
   1394          
   1395          	return ret;
   \                     ??man_http_lte_exec_reset_1: (+1)
   \   00000046   0x0020             MOVS     R0,R4
   \   00000048   0xBD70             POP      {R4-R6,PC}       ;; return
   1396          }
   1397          
   1398          
   1399          /********************************************************************/
   1400          /*!
   1401           * \name	man_http_lte_get_csq
   1402           * \brief	無線電波の確認処理
   1403           * \param	id       : ユニーク番号
   1404           *          callback : 完了を通知するcallback関数
   1405           * \return   0: 成功
   1406           *          -1:失敗
   1407           * \note	必要時に、呼ばれること
   1408           *          結果はMAN_HTTP_STATE_CSQ_OK, MAN_HTTP_STATE_CSQ_NGで判断する
   1409           */
   1410          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1411          int32_t man_http_lte_get_csq(int32_t id, func_man_http callback)
   1412          {
   \                     man_http_lte_get_csq: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1413          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1414          
   1415          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_get_csq_0
   1416          		
   1417          		// 要求を実施する
   1418          		ret = mid_HTTP_req_LteCsq(MAN_HTTP_SEQ_GET_CSQ, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable27_1
   \   00000014   0x200A             MOVS     R0,#+10
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_LteCsq
   \   0000001A   0x0004             MOVS     R4,R0
   1419          
   1420          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_get_csq_0
   1421          			man_http_set_sequense(MAN_HTTP_SEQ_GET_CSQ);
   \   00000020   0x200A             MOVS     R0,#+10
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1422          			// 要求を保存する
   1423          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable25_1
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1424          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable25_1
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1425          		}
   1426          	}
   1427          
   1428          	if (ret < 0) {
   \                     ??man_http_lte_get_csq_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_lte_get_csq_1
   1429          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable30  ;; 0x595
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1430          	}
   1431          
   1432          	return ret;
   \                     ??man_http_lte_get_csq_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1433          }
   1434          
   1435          
   1436          /********************************************************************/
   1437          /*!
   1438           * \name	man_http_lte_get_cpsi
   1439           * \brief	基準信号受信電力の確認処理
   1440           * \param	id       : ユニーク番号
   1441           *          callback : 完了を通知するcallback関数
   1442           * \return   0: 成功
   1443           *          -1:失敗
   1444           * \note	必要時に、呼ばれること
   1445           *          結果はMAN_HTTP_STATE_CSQ_OK, MAN_HTTP_STATE_CSQ_NGで判断する
   1446           */
   1447          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1448          int32_t man_http_lte_get_cpsi(int32_t id, func_man_http callback)
   1449          {
   \                     man_http_lte_get_cpsi: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1450          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1451          
   1452          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_lte_get_cpsi_0
   1453          		
   1454          		// 要求を実施する
   1455          		ret = mid_HTTP_req_LteCpsi(MAN_HTTP_SEQ_GET_CPSI, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable27_1
   \   00000014   0x200B             MOVS     R0,#+11
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_LteCpsi
   \   0000001A   0x0004             MOVS     R4,R0
   1456          
   1457          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_lte_get_cpsi_0
   1458          			man_http_set_sequense(MAN_HTTP_SEQ_GET_CPSI);
   \   00000020   0x200B             MOVS     R0,#+11
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1459          			// 要求を保存する
   1460          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable25_1
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1461          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable25_1
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1462          		}
   1463          	}
   1464          
   1465          	if (ret < 0) {
   \                     ??man_http_lte_get_cpsi_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_lte_get_cpsi_1
   1466          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable31  ;; 0x5ba
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1467          	}
   1468          
   1469          	return ret;
   \                     ??man_http_lte_get_cpsi_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1470          }
   1471          
   1472          
   1473          
   1474          /********************************************************************/
   1475          /*!
   1476           * \name	man_http_udp_state
   1477           * \brief	UDPが受信した状態を通知する
   1478           * \param	id             : ユニーク番号
   1479           *          callback_state : 状態を通知するcallback関数
   1480           * \return   0: 成功
   1481           *          -1:失敗
   1482           * \note	必要時に、呼ばれること
   1483           */
   1484          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1485          int32_t man_http_udp_state(int32_t id, func_man_http_state callback_state)
   1486          {
   \                     man_http_udp_state: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   1487          	int32_t		ret = -1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1488          	
   1489          	if (callback_state != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??man_http_udp_state_0
   1490          		man_http_work.udp_state.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable29
   \   00000010   0x6002             STR      R2,[R0, #+0]
   1491          		man_http_work.udp_state.callback_state = callback_state;
   \   00000012   0x....             LDR      R0,??DataTable31_1
   \   00000014   0x6001             STR      R1,[R0, #+0]
   1492          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   1493          	}
   1494          	return ret;
   \                     ??man_http_udp_state_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   1495          }
   1496          
   1497          
   1498          /********************************************************************/
   1499          /*!
   1500           * \name	man_http_udp_open
   1501           * \brief	UDP OPEN開始処理
   1502           * \param	id       : ユニーク番号
   1503           *          callback : 完了を通知するcallback関数
   1504           * \return   0: 成功
   1505           *          -1:失敗
   1506           * \note	必要時に、呼ばれること
   1507           */
   1508          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1509          int32_t man_http_udp_open(int32_t id, func_man_http callback)
   1510          {
   \                     man_http_udp_open: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1511          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1512          
   1513          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_udp_open_0
   1514          		
   1515          		// 要求を実施する
   1516          		ret = mid_HTTP_req_UdpOpen(MAN_HTTP_SEQ_OPEN_UDP, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable27_1
   \   00000014   0x2004             MOVS     R0,#+4
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_UdpOpen
   \   0000001A   0x0004             MOVS     R4,R0
   1517          
   1518          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_udp_open_0
   1519          			man_http_set_sequense(MAN_HTTP_SEQ_OPEN_UDP);
   \   00000020   0x2004             MOVS     R0,#+4
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1520          			// 要求を保存する
   1521          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable25_1
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1522          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable25_1
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1523          		}
   1524          	}
   1525          
   1526          	if (ret < 0) {
   \                     ??man_http_udp_open_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_udp_open_1
   1527          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable32  ;; 0x5f7
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1528          	}
   1529          
   1530          	return ret;
   \                     ??man_http_udp_open_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1531          }
   1532          
   1533          
   1534          /********************************************************************/
   1535          /*!
   1536           * \name	man_http_udp_close
   1537           * \brief	UDP CLOSE開始処理
   1538           * \param	id       : ユニーク番号
   1539           *          callback : 完了を通知するcallback関数
   1540           * \return   0: 成功
   1541           *          -1:失敗
   1542           * \note	必要時に、呼ばれること
   1543           */
   1544          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1545          int32_t man_http_udp_close(int32_t id, func_man_http callback)
   1546          {
   \                     man_http_udp_close: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1547          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1548          
   1549          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_udp_close_0
   1550          		
   1551          		// 要求を実施する
   1552          		ret = mid_HTTP_req_UdpClose(MAN_HTTP_SEQ_CLOSE_UDP, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable27_1
   \   00000014   0x2006             MOVS     R0,#+6
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_UdpClose
   \   0000001A   0x0004             MOVS     R4,R0
   1553          
   1554          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_udp_close_0
   1555          			man_http_set_sequense(MAN_HTTP_SEQ_CLOSE_UDP);
   \   00000020   0x2006             MOVS     R0,#+6
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1556          			// 要求を保存する
   1557          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable25_1
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1558          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable25_1
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1559          		}
   1560          	}
   1561          
   1562          	if (ret < 0) {
   \                     ??man_http_udp_close_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_udp_close_1
   1563          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable32_1  ;; 0x61b
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1564          	}
   1565          
   1566          	return ret;
   \                     ??man_http_udp_close_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1567          }
   1568          
   1569          /********************************************************************/
   1570          /*!
   1571           * \name	man_http_udp_send
   1572           * \brief	UDP SEND開始
   1573           * \param	data      : 送信データ
   1574           *          length    : データ長
   1575           *          id        : ユニーク番号
   1576           *          callback  : 完了を通知するcallback関数
   1577           * \return   0: 成功
   1578           *          -1:失敗
   1579           * \note	必要時に、呼ばれること
   1580           *          data は完了するまで破壊しないこと
   1581           */
   1582          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1583          int32_t man_http_udp_send(uint8_t *data, int32_t length, int32_t id, func_man_http callback)
   1584          {
   \                     man_http_udp_send: (+1)
   \   00000000   0xB5F4             PUSH     {R2,R4-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x001E             MOVS     R6,R3
   1585          	int32_t	ret=-1;
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x43E4             MVNS     R4,R4            ;; #-1
   1586          
   1587          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000C   0x.... 0x....      BL       man_http_get_sequense
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD114             BNE      ??man_http_udp_send_0
   1588          		
   1589          		// 要求を実施する
   1590          		ret = mid_HTTP_req_UdpSend(data, length, MAN_HTTP_SEQ_UDP_SEND, man_http_req_callback);
   \   00000014   0x....             LDR      R3,??DataTable27_1
   \   00000016   0x2205             MOVS     R2,#+5
   \   00000018   0x0039             MOVS     R1,R7
   \   0000001A   0x0028             MOVS     R0,R5
   \   0000001C   0x.... 0x....      BL       mid_HTTP_req_UdpSend
   \   00000020   0x0004             MOVS     R4,R0
   1591          
   1592          		if (ret >= 0) {
   \   00000022   0x2C00             CMP      R4,#+0
   \   00000024   0xD40B             BMI      ??man_http_udp_send_0
   1593          			man_http_set_sequense(MAN_HTTP_SEQ_UDP_SEND);
   \   00000026   0x2005             MOVS     R0,#+5
   \   00000028   0x.... 0x....      BL       man_http_set_sequense
   1594          			// 要求を保存する
   1595          			man_http_work.request.id = id;
   \   0000002C   0x9800             LDR      R0,[SP, #+0]
   \   0000002E   0x....             LDR      R1,??DataTable25_1
   \   00000030   0x6048             STR      R0,[R1, #+4]
   1596          			man_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R0,??DataTable25_1
   \   00000034   0x6086             STR      R6,[R0, #+8]
   1597          			man_http_work.request.data1   = data;
   \   00000036   0x....             LDR      R0,??DataTable25_1
   \   00000038   0x6285             STR      R5,[R0, #+40]
   1598          			man_http_work.request.length1 = length;
   \   0000003A   0x....             LDR      R0,??DataTable25_1
   \   0000003C   0x62C7             STR      R7,[R0, #+44]
   1599          		}
   1600          	}
   1601          
   1602          	if (ret < 0) {
   \                     ??man_http_udp_send_0: (+1)
   \   0000003E   0x2C00             CMP      R4,#+0
   \   00000040   0xD508             BPL      ??man_http_udp_send_1
   1603          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000042   0x.... 0x....      BL       man_http_get_sequense
   \   00000046   0x....             LDR      R3,??DataTable34  ;; 0x643
   \   00000048   0x9A00             LDR      R2,[SP, #+0]
   \   0000004A   0xB2C0             UXTB     R0,R0
   \   0000004C   0x0001             MOVS     R1,R0
   \   0000004E   0x2016             MOVS     R0,#+22
   \   00000050   0x.... 0x....      BL       man_error_set
   1604          	}
   1605          
   1606          	return ret;
   \                     ??man_http_udp_send_1: (+1)
   \   00000054   0x0020             MOVS     R0,R4
   \   00000056   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   1607          }
   1608          
   1609          /********************************************************************/
   1610          /*!
   1611           * \name	man_http_client_state
   1612           * \brief	clientが受信した状態を通知する
   1613           * \param	id             : ユニーク番号
   1614           *          callback_state : 状態を通知するcallback関数
   1615           * \return   0: 成功
   1616           *          -1:失敗
   1617           * \note	必要時に、呼ばれること
   1618           */
   1619          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1620          int32_t man_http_client_state(int32_t id, func_man_http_state callback_state)
   1621          {
   \                     man_http_client_state: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   1622          	int32_t		ret = -1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1623          	
   1624          	if (callback_state != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??man_http_client_state_0
   1625          		man_http_work.client_state.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable32_2
   \   00000010   0x6002             STR      R2,[R0, #+0]
   1626          		man_http_work.client_state.callback_state = callback_state;
   \   00000012   0x....             LDR      R0,??DataTable34_1
   \   00000014   0x6001             STR      R1,[R0, #+0]
   1627          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   1628          	}
   1629          	return ret;
   \                     ??man_http_client_state_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   1630          }
   1631          
   1632          
   1633          /********************************************************************/
   1634          /*!
   1635           * \name	man_http_client_open
   1636           * \brief	HTTP clientを使用開始する
   1637           * \param	id       : ユニーク番号
   1638           *          callback : 完了を通知するcallback関数
   1639           * \return   0: 成功
   1640           *          -1:失敗
   1641           * \note	必要時に、呼ばれること
   1642           */
   1643          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1644          int32_t man_http_client_open(int32_t id, func_man_http callback)
   1645          {
   \                     man_http_client_open: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1646          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1647          
   1648          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD113             BNE      ??man_http_client_open_0
   1649          		
   1650          		// 要求を実施する
   1651          		ret = mid_HTTP_req_ClientOpen(MAN_HTTP_SEQ_CLIENT_OPEN, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable27_1
   \   00000014   0x2010             MOVS     R0,#+16
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_ClientOpen
   \   0000001A   0x0004             MOVS     R4,R0
   1652          
   1653          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD40C             BMI      ??man_http_client_open_0
   1654          			man_http_set_sequense(MAN_HTTP_SEQ_CLIENT_OPEN);
   \   00000020   0x2010             MOVS     R0,#+16
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1655          			// 要求を保存する
   1656          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable33
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1657          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable33
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1658          			man_http_work.status |= MAN_HTTP_STATUS_CLIENT;
   \   0000002E   0x....             LDR      R0,??DataTable33
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x2102             MOVS     R1,#+2
   \   00000034   0x4301             ORRS     R1,R1,R0
   \   00000036   0x....             LDR      R0,??DataTable33
   \   00000038   0x6001             STR      R1,[R0, #+0]
   1659          		}
   1660          	}
   1661          
   1662          	if (ret < 0) {
   \                     ??man_http_client_open_0: (+1)
   \   0000003A   0x2C00             CMP      R4,#+0
   \   0000003C   0xD508             BPL      ??man_http_client_open_1
   1663          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   0000003E   0x.... 0x....      BL       man_http_get_sequense
   \   00000042   0x....             LDR      R3,??DataTable35  ;; 0x67f
   \   00000044   0x0032             MOVS     R2,R6
   \   00000046   0xB2C0             UXTB     R0,R0
   \   00000048   0x0001             MOVS     R1,R0
   \   0000004A   0x2016             MOVS     R0,#+22
   \   0000004C   0x.... 0x....      BL       man_error_set
   1664          	}
   1665          
   1666          	return ret;
   \                     ??man_http_client_open_1: (+1)
   \   00000050   0x0020             MOVS     R0,R4
   \   00000052   0xBD70             POP      {R4-R6,PC}       ;; return
   1667          }
   1668          
   1669          
   1670          /********************************************************************/
   1671          /*!
   1672           * \name	man_http_client_close
   1673           * \brief	HTTP clientを使用終了する
   1674           * \param	id           : ユニーク番号
   1675           *          callback     : 完了を通知するcallback関数
   1676           * \return   0: 成功
   1677           *          -1:失敗
   1678           * \note	必要時に、呼ばれること
   1679           *          callback関数受信後は他のコマンドは出力可能
   1680           *          メッセージはcallback_end後に再開すること
   1681           */
   1682          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1683          int32_t man_http_client_close(int32_t id, func_man_http callback)
   1684          {
   \                     man_http_client_close: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1685          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1686          
   1687          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_client_close_0
   1688          		
   1689          		// 要求を実施する
   1690          		ret = mid_HTTP_req_ClientClose(MAN_HTTP_SEQ_CLIENT_CLOSE, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable27_1
   \   00000014   0x2013             MOVS     R0,#+19
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_ClientClose
   \   0000001A   0x0004             MOVS     R4,R0
   1691          
   1692          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_client_close_0
   1693          		man_http_set_sequense(MAN_HTTP_SEQ_CLIENT_CLOSE);
   \   00000020   0x2013             MOVS     R0,#+19
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1694          			// 要求を保存する
   1695          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable33
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1696          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable33
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1697          		}
   1698          	}
   1699          
   1700          	if (ret < 0) {
   \                     ??man_http_client_close_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_client_close_1
   1701          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable36  ;; 0x6a5
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1702          	}
   1703          
   1704          	return ret;
   \                     ??man_http_client_close_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1705          }
   1706          
   1707          
   1708          /********************************************************************/
   1709          /*!
   1710           * \name	man_http_client_send_recv
   1711           * \brief	HTTP client SEND開始, RECV開始
   1712           *           HTTP headerを付加して送信します。
   1713           * \param	data      : 送信データ
   1714           *          length    : データ長
   1715           *          timeout   : 応答がない場合、失敗と判断する時間[ms]
   1716           *          id        : ユニーク番号
   1717           *          callback  : 完了を通知するcallback関数
   1718           * \return   0: 成功
   1719           *          -1:失敗
   1720           * \note	必要時に、呼ばれること
   1721           *          
   1722           */
   1723          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1724          int32_t man_http_client_send_recv(uint8_t *data, int32_t length, int32_t timeout, int32_t id, func_man_http callback)
   1725          {
   \                     man_http_client_send_recv: (+1)
   \   00000000   0xB5FD             PUSH     {R0,R2-R7,LR}
   \   00000002   0x000E             MOVS     R6,R1
   1726          	int32_t	ret=-1;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x43E4             MVNS     R4,R4            ;; #-1
   1727          	man_data_num_gprs_t		*gprs = man_data_get_setting_gprs();
   \   00000008   0x.... 0x....      BL       man_data_get_setting_gprs
   \   0000000C   0x0005             MOVS     R5,R0
   1728          	man_http_req_info_t		*req = &man_http_work.request;
   \   0000000E   0x....             LDR      R7,??DataTable35_1
   1729          	int32_t	http_len;
   1730          
   1731          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   00000010   0x.... 0x....      BL       man_http_get_sequense
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD138             BNE      ??man_http_client_send_recv_0
   1732          
   1733          		// headerを付加する。
   1734          		sprintf((char *)req->buff, "POST / HTTP/1.1\r\nHOST: %s\r\nContent-Length: %d\r\n\r\n", gprs->ip, length);
   \   00000018   0x0033             MOVS     R3,R6
   \   0000001A   0x002A             MOVS     R2,R5
   \   0000001C   0x3220             ADDS     R2,R2,#+32
   \   0000001E   0x....             LDR      R1,??DataTable35_2
   \   00000020   0x0038             MOVS     R0,R7
   \   00000022   0x3034             ADDS     R0,R0,#+52
   \   00000024   0x.... 0x....      BL       sprintf
   1735          		http_len = strlen((char const *)req->buff);
   \   00000028   0x0038             MOVS     R0,R7
   \   0000002A   0x3034             ADDS     R0,R0,#+52
   \   0000002C   0x.... 0x....      BL       strlen
   \   00000030   0x0005             MOVS     R5,R0
   1736          		if ( (http_len + length) <= MAN_HTTP_SEND_BUF_MAX ) {
   \   00000032   0x19A8             ADDS     R0,R5,R6
   \   00000034   0x....             LDR      R1,??DataTable36_1  ;; 0x461
   \   00000036   0x4288             CMP      R0,R1
   \   00000038   0xDA27             BGE      ??man_http_client_send_recv_0
   1737          			memcpy(&req->buff[http_len], data, length);
   \   0000003A   0x0032             MOVS     R2,R6
   \   0000003C   0x9900             LDR      R1,[SP, #+0]
   \   0000003E   0x1978             ADDS     R0,R7,R5
   \   00000040   0x0004             MOVS     R4,R0
   \   00000042   0x3434             ADDS     R4,R4,#+52
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x.... 0x....      BL       __aeabi_memcpy
   1738          			http_len += length;
   \   0000004A   0x19AD             ADDS     R5,R5,R6
   1739          
   1740          			// 要求を実施する
   1741          			ret = mid_HTTP_req_ClientSend(req->buff, http_len, MAN_HTTP_SEQ_CLIENT_SEND, man_http_req_callback);
   \   0000004C   0x....             LDR      R3,??DataTable36_2
   \   0000004E   0x2211             MOVS     R2,#+17
   \   00000050   0x0029             MOVS     R1,R5
   \   00000052   0x0038             MOVS     R0,R7
   \   00000054   0x3034             ADDS     R0,R0,#+52
   \   00000056   0x.... 0x....      BL       mid_HTTP_req_ClientSend
   \   0000005A   0x0004             MOVS     R4,R0
   1742          
   1743          			if (ret >= 0) {
   \   0000005C   0x2C00             CMP      R4,#+0
   \   0000005E   0xD414             BMI      ??man_http_client_send_recv_0
   1744          				man_http_set_sequense(MAN_HTTP_SEQ_CLIENT_SEND);
   \   00000060   0x2011             MOVS     R0,#+17
   \   00000062   0x.... 0x....      BL       man_http_set_sequense
   1745          				// 要求を保存する
   1746          				man_http_work.request.id = id;
   \   00000066   0x9802             LDR      R0,[SP, #+8]
   \   00000068   0x....             LDR      R1,??DataTable33
   \   0000006A   0x6048             STR      R0,[R1, #+4]
   1747          				man_http_work.request.callback = callback;
   \   0000006C   0x9808             LDR      R0,[SP, #+32]
   \   0000006E   0x....             LDR      R1,??DataTable33
   \   00000070   0x6088             STR      R0,[R1, #+8]
   1748          				man_http_work.request.data1   = data;
   \   00000072   0x9800             LDR      R0,[SP, #+0]
   \   00000074   0x....             LDR      R1,??DataTable33
   \   00000076   0x6288             STR      R0,[R1, #+40]
   1749          				man_http_work.request.length1 = length;
   \   00000078   0x....             LDR      R0,??DataTable33
   \   0000007A   0x62C6             STR      R6,[R0, #+44]
   1750          
   1751          				man_http_work.request.timeout = timeout;							// 10秒経過しても応答がない場合は失敗とする
   \   0000007C   0x9801             LDR      R0,[SP, #+4]
   \   0000007E   0x....             LDR      R1,??DataTable33
   \   00000080   0x6208             STR      R0,[R1, #+32]
   1752          				man_http_work.request.start_time = man_timer_get_1ms_count();		// コマンド開始時間設定
   \   00000082   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00000086   0x....             LDR      R1,??DataTable33
   \   00000088   0x6248             STR      R0,[R1, #+36]
   1753          			}
   1754          		}
   1755          	}
   1756          
   1757          	if (ret < 0) {
   \                     ??man_http_client_send_recv_0: (+1)
   \   0000008A   0x2C00             CMP      R4,#+0
   \   0000008C   0xD508             BPL      ??man_http_client_send_recv_1
   1758          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   0000008E   0x.... 0x....      BL       man_http_get_sequense
   \   00000092   0x....             LDR      R3,??DataTable38  ;; 0x6de
   \   00000094   0x9A02             LDR      R2,[SP, #+8]
   \   00000096   0xB2C0             UXTB     R0,R0
   \   00000098   0x0001             MOVS     R1,R0
   \   0000009A   0x2016             MOVS     R0,#+22
   \   0000009C   0x.... 0x....      BL       man_error_set
   1759          	}
   1760          
   1761          	return ret;
   \                     ??man_http_client_send_recv_1: (+1)
   \   000000A0   0x0020             MOVS     R0,R4
   \   000000A2   0xBDFE             POP      {R1-R7,PC}       ;; return
   1762          }
   1763          
   1764          
   1765          /********************************************************************/
   1766          /*!
   1767           * \name	man_http_server_state
   1768           * \brief	serverが受信した状態を通知する
   1769           * \param	id             : ユニーク番号
   1770           *          callback_state : 状態を通知するcallback関数
   1771           * \return   0: 成功
   1772           *          -1:失敗
   1773           * \note	必要時に、呼ばれること
   1774           */
   1775          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1776          int32_t man_http_server_state(int32_t id, func_man_http_state callback_state)
   1777          {
   \                     man_http_server_state: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   1778          	int32_t		ret = -1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1779          	
   1780          	if (callback_state != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??man_http_server_state_0
   1781          		man_http_work.server_state.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable37
   \   00000010   0x6002             STR      R2,[R0, #+0]
   1782          		man_http_work.server_state.callback_state = callback_state;
   \   00000012   0x....             LDR      R0,??DataTable38_1
   \   00000014   0x6001             STR      R1,[R0, #+0]
   1783          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   1784          	}
   1785          	return ret;
   \                     ??man_http_server_state_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   1786          }
   1787          
   1788          
   1789          /********************************************************************/
   1790          /*!
   1791           * \name	man_http_server_noti
   1792           * \brief	HTTP serverが受信したデータを通知する
   1793           * \param	id            : ユニーク番号
   1794           *          callback_recv : 受信を通知するcallback関数
   1795           * \return   0: 成功
   1796           *          -1:失敗
   1797           * \note	必要時に、呼ばれること
   1798           */
   1799          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1800          int32_t man_http_server_noti(int32_t id, func_man_http_recv callback_recv)
   1801          {
   \                     man_http_server_noti: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   1802          	int32_t		ret = -1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1803          	
   1804          	if (callback_recv != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??man_http_server_noti_0
   1805          		man_http_work.server_noti.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable37_1
   \   00000010   0x6002             STR      R2,[R0, #+0]
   1806          		man_http_work.server_noti.callback_recv = callback_recv;
   \   00000012   0x....             LDR      R0,??DataTable39
   \   00000014   0x6001             STR      R1,[R0, #+0]
   1807          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   1808          	}
   1809          	return ret;
   \                     ??man_http_server_noti_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   1810          }
   1811          
   1812          
   1813          /********************************************************************/
   1814          /*!
   1815           * \name	man_http_server_open
   1816           * \brief	HTTP serverを使用開始する
   1817           * \param	id       : ユニーク番号
   1818           *          callback : 完了を通知するcallback関数
   1819           * \return   0: 成功
   1820           *          -1:失敗
   1821           * \note	必要時に、呼ばれること
   1822           */
   1823          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1824          int32_t man_http_server_open(int32_t id, func_man_http callback)
   1825          {
   \                     man_http_server_open: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1826          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1827          
   1828          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_server_open_0
   1829          		
   1830          		// 要求を実施する
   1831          		ret = mid_HTTP_req_ServerOpen(MAN_HTTP_SEQ_SERVER_OPEN, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable36_2
   \   00000014   0x2014             MOVS     R0,#+20
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_ServerOpen
   \   0000001A   0x0004             MOVS     R4,R0
   1832          
   1833          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_server_open_0
   1834          			man_http_set_sequense(MAN_HTTP_SEQ_SERVER_OPEN);
   \   00000020   0x2014             MOVS     R0,#+20
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1835          			// 要求を保存する
   1836          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable33
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1837          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable33
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1838          		}
   1839          	}
   1840          
   1841          	if (ret < 0) {
   \                     ??man_http_server_open_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_server_open_1
   1842          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable40  ;; 0x732
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1843          	}
   1844          
   1845          	return ret;
   \                     ??man_http_server_open_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1846          }
   1847          
   1848          
   1849          /********************************************************************/
   1850          /*!
   1851           * \name	man_http_server_close
   1852           * \brief	HTTP serverを使用終了する
   1853           * \param	id       : ユニーク番号
   1854           *          callback : 完了を通知するcallback関数
   1855           * \return   0: 成功
   1856           *          -1:失敗
   1857           * \note	必要時に、呼ばれること
   1858           */
   1859          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1860          int32_t man_http_server_close(int32_t id, func_man_http callback)
   1861          {
   \                     man_http_server_close: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1862          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1863          
   1864          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_server_close_0
   1865          		
   1866          		// 要求を実施する
   1867          		ret = mid_HTTP_req_ServerClose(MAN_HTTP_SEQ_SERVER_CLOSE, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable36_2
   \   00000014   0x2016             MOVS     R0,#+22
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_ServerClose
   \   0000001A   0x0004             MOVS     R4,R0
   1868          
   1869          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_server_close_0
   1870          			man_http_set_sequense(MAN_HTTP_SEQ_SERVER_CLOSE);
   \   00000020   0x2016             MOVS     R0,#+22
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1871          			// 要求を保存する
   1872          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable33
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1873          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable33
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1874          		}
   1875          	}
   1876          
   1877          	if (ret < 0) {
   \                     ??man_http_server_close_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_server_close_1
   1878          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable41  ;; 0x756
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1879          	}
   1880          
   1881          	return ret;
   \                     ??man_http_server_close_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1882          }
   1883          
   1884          /********************************************************************/
   1885          /*!
   1886           * \name	man_http_server_send
   1887           * \brief	HTTP server SEND開始
   1888           *            headerを付加して送信します。
   1889           * \param	data      : 送信データ
   1890           *          length    : データ長
   1891           *          id        : ユニーク番号
   1892           *          callback  : 完了を通知するcallback関数
   1893           * \return   0: 成功
   1894           *          -1:失敗
   1895           * \note	必要時に、呼ばれること
   1896           */
   1897          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1898          int32_t man_http_server_send(uint8_t *data, int32_t length, int32_t id, func_man_http callback)
   1899          {
   \                     man_http_server_send: (+1)
   \   00000000   0xB5FE             PUSH     {R1-R7,LR}
   \   00000002   0x0007             MOVS     R7,R0
   1900          	int32_t	ret=-1;
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0x43ED             MVNS     R5,R5            ;; #-1
   1901          	man_http_req_info_t	*req = &man_http_work.request;
   \   00000008   0x....             LDR      R6,??DataTable35_1
   1902          	int32_t	http_len;
   1903          
   1904          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD131             BNE      ??man_http_server_send_0
   1905          		// HTTP header を付加する
   1906          		sprintf((char *)req->buff, "HTTP/1.1 200 OK\r\nContent-Length: %d\r\n\r\n", length);
   \   00000012   0x9A00             LDR      R2,[SP, #+0]
   \   00000014   0x....             LDR      R1,??DataTable40_1
   \   00000016   0x0030             MOVS     R0,R6
   \   00000018   0x3034             ADDS     R0,R0,#+52
   \   0000001A   0x.... 0x....      BL       sprintf
   1907          		http_len = strlen((char const *)req->buff);
   \   0000001E   0x0030             MOVS     R0,R6
   \   00000020   0x3034             ADDS     R0,R0,#+52
   \   00000022   0x.... 0x....      BL       strlen
   \   00000026   0x0004             MOVS     R4,R0
   1908          		if ( (http_len + length) <= MAN_HTTP_SEND_BUF_MAX ) {
   \   00000028   0x9800             LDR      R0,[SP, #+0]
   \   0000002A   0x1820             ADDS     R0,R4,R0
   \   0000002C   0x....             LDR      R1,??DataTable36_1  ;; 0x461
   \   0000002E   0x4288             CMP      R0,R1
   \   00000030   0xDA21             BGE      ??man_http_server_send_0
   1909          			memcpy(&req->buff[http_len], data, length);
   \   00000032   0x9A00             LDR      R2,[SP, #+0]
   \   00000034   0x0039             MOVS     R1,R7
   \   00000036   0x1930             ADDS     R0,R6,R4
   \   00000038   0x0005             MOVS     R5,R0
   \   0000003A   0x3534             ADDS     R5,R5,#+52
   \   0000003C   0x0028             MOVS     R0,R5
   \   0000003E   0x.... 0x....      BL       __aeabi_memcpy
   1910          			http_len += length;
   \   00000042   0x9800             LDR      R0,[SP, #+0]
   \   00000044   0x1824             ADDS     R4,R4,R0
   1911          		
   1912          			// 要求を実施する
   1913          			ret = mid_HTTP_req_ServerSend(req->buff, http_len, MAN_HTTP_SEQ_SERVER_SEND, man_http_req_callback);
   \   00000046   0x....             LDR      R3,??DataTable36_2
   \   00000048   0x2215             MOVS     R2,#+21
   \   0000004A   0x0021             MOVS     R1,R4
   \   0000004C   0x0030             MOVS     R0,R6
   \   0000004E   0x3034             ADDS     R0,R0,#+52
   \   00000050   0x.... 0x....      BL       mid_HTTP_req_ServerSend
   \   00000054   0x0005             MOVS     R5,R0
   1914          
   1915          			if (ret >= 0) {
   \   00000056   0x2D00             CMP      R5,#+0
   \   00000058   0xD40D             BMI      ??man_http_server_send_0
   1916          				man_http_set_sequense(MAN_HTTP_SEQ_SERVER_SEND);
   \   0000005A   0x2015             MOVS     R0,#+21
   \   0000005C   0x.... 0x....      BL       man_http_set_sequense
   1917          				// 要求を保存する
   1918          				man_http_work.request.id = id;
   \   00000060   0x9801             LDR      R0,[SP, #+4]
   \   00000062   0x....             LDR      R1,??DataTable33
   \   00000064   0x6048             STR      R0,[R1, #+4]
   1919          				man_http_work.request.callback = callback;
   \   00000066   0x9802             LDR      R0,[SP, #+8]
   \   00000068   0x....             LDR      R1,??DataTable33
   \   0000006A   0x6088             STR      R0,[R1, #+8]
   1920          				man_http_work.request.data1   = data;
   \   0000006C   0x....             LDR      R0,??DataTable33
   \   0000006E   0x6287             STR      R7,[R0, #+40]
   1921          				man_http_work.request.length1 = length;
   \   00000070   0x9800             LDR      R0,[SP, #+0]
   \   00000072   0x....             LDR      R1,??DataTable33
   \   00000074   0x62C8             STR      R0,[R1, #+44]
   1922          			}
   1923          		}
   1924          		else {
   1925          			// バッファ数異常
   1926          		}
   1927          	}
   1928          
   1929          	if (ret < 0) {
   \                     ??man_http_server_send_0: (+1)
   \   00000076   0x2D00             CMP      R5,#+0
   \   00000078   0xD509             BPL      ??man_http_server_send_1
   1930          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), http_len + length);
   \   0000007A   0x.... 0x....      BL       man_http_get_sequense
   \   0000007E   0x....             LDR      R3,??DataTable45  ;; 0x78a
   \   00000080   0x9900             LDR      R1,[SP, #+0]
   \   00000082   0x1862             ADDS     R2,R4,R1
   \   00000084   0xB2C0             UXTB     R0,R0
   \   00000086   0x0001             MOVS     R1,R0
   \   00000088   0x2016             MOVS     R0,#+22
   \   0000008A   0x.... 0x....      BL       man_error_set
   1931          	}
   1932          
   1933          	return ret;
   \                     ??man_http_server_send_1: (+1)
   \   0000008E   0x0028             MOVS     R0,R5
   \   00000090   0xBDFE             POP      {R1-R7,PC}       ;; return
   1934          }
   1935          
   1936          
   1937          /********************************************************************/
   1938          /*!
   1939           * \name	man_http_ftp_state
   1940           * \brief	FTPが受信した状態を通知する
   1941           * \param	id             : ユニーク番号
   1942           *          callback_state : 状態を通知するcallback関数
   1943           * \return   0: 成功
   1944           *          -1:失敗
   1945           * \note	必要時に、呼ばれること
   1946           */
   1947          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1948          int32_t man_http_ftp_state(int32_t id, func_man_http_state callback_state)
   1949          {
   \                     man_http_ftp_state: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   1950          	int32_t		ret = -1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1951          	
   1952          	if (callback_state != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??man_http_ftp_state_0
   1953          		man_http_work.ftp_state.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable45_1
   \   00000010   0x6002             STR      R2,[R0, #+0]
   1954          		man_http_work.ftp_state.callback_state = callback_state;
   \   00000012   0x....             LDR      R0,??DataTable45_2
   \   00000014   0x6001             STR      R1,[R0, #+0]
   1955          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   1956          	}
   1957          	return ret;
   \                     ??man_http_ftp_state_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   1958          }
   1959          
   1960          /********************************************************************/
   1961          /*!
   1962           * \name	man_http_ftp_init
   1963           * \brief	FTPを使用準備を開始する
   1964           * \param	id       : ユニーク番号
   1965           *          callback : 完了を通知するcallback関数
   1966           * \return   0: 成功
   1967           *          -1:失敗
   1968           * \note	必要時に、呼ばれること
   1969           */
   1970          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1971          int32_t man_http_ftp_init(int32_t id, func_man_http callback)
   1972          {
   \                     man_http_ftp_init: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   1973          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   1974          
   1975          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_ftp_init_0
   1976          		
   1977          		// 要求を実施する
   1978          		ret = mid_HTTP_req_FtpDel(MAN_HTTP_SEQ_FTP_INIT, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable36_2
   \   00000014   0x2017             MOVS     R0,#+23
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_FtpDel
   \   0000001A   0x0004             MOVS     R4,R0
   1979          
   1980          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_ftp_init_0
   1981          			man_http_set_sequense(MAN_HTTP_SEQ_FTP_INIT);
   \   00000020   0x2017             MOVS     R0,#+23
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   1982          			// 要求を保存する
   1983          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable45_3
   \   00000028   0x6046             STR      R6,[R0, #+4]
   1984          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable45_3
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   1985          		}
   1986          	}
   1987          
   1988          	if (ret < 0) {
   \                     ??man_http_ftp_init_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_ftp_init_1
   1989          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable45_4  ;; 0x7c5
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   1990          	}
   1991          
   1992          	return ret;
   \                     ??man_http_ftp_init_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   1993          }
   1994          
   1995          
   1996          /********************************************************************/
   1997          /*!
   1998           * \name	man_http_ftp_open
   1999           * \brief	FTPを使用を開始する
   2000           * \param	id       : ユニーク番号
   2001           *          callback : 完了を通知するcallback関数
   2002           * \return   0: 成功
   2003           *          -1:失敗
   2004           * \note	必要時に、呼ばれること
   2005           */
   2006          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2007          int32_t man_http_ftp_open(int32_t id, func_man_http callback)
   2008          {
   \                     man_http_ftp_open: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   2009          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   2010          
   2011          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_ftp_open_0
   2012          		
   2013          		// 要求を実施する
   2014          		ret = mid_HTTP_req_FtpOpen(MAN_HTTP_SEQ_FTP_OPEN, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable36_2
   \   00000014   0x2018             MOVS     R0,#+24
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_FtpOpen
   \   0000001A   0x0004             MOVS     R4,R0
   2015          
   2016          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_ftp_open_0
   2017          			man_http_set_sequense(MAN_HTTP_SEQ_FTP_OPEN);
   \   00000020   0x2018             MOVS     R0,#+24
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   2018          			// 要求を保存する
   2019          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable45_3
   \   00000028   0x6046             STR      R6,[R0, #+4]
   2020          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable45_3
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   2021          		}
   2022          	}
   2023          
   2024          	if (ret < 0) {
   \                     ??man_http_ftp_open_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_ftp_open_1
   2025          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable45_5  ;; 0x7e9
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   2026          	}
   2027          
   2028          	return ret;
   \                     ??man_http_ftp_open_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   2029          }
   2030          
   2031          
   2032          /********************************************************************/
   2033          /*!
   2034           * \name	man_http_ftp_get
   2035           * \brief	FTPを使用して指定のファイルをCHIP内に保存する
   2036           * \param	file_num : ファイル番号
   2037           *          id       : ユニーク番号
   2038           *          callback : 完了を通知するcallback関数
   2039           * \return   0: 成功
   2040           *          -1:失敗
   2041           * \note	必要時に、呼ばれること
   2042           */
   2043          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2044          int32_t man_http_ftp_get(int32_t file_num, int32_t id, func_man_http callback)
   2045          {
   \                     man_http_ftp_get: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0016             MOVS     R6,R2
   2046          	int32_t	ret=-1;
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x43E4             MVNS     R4,R4            ;; #-1
   2047          
   2048          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000C   0x.... 0x....      BL       man_http_get_sequense
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD110             BNE      ??man_http_ftp_get_0
   2049          		
   2050          		// 要求を実施する
   2051          		ret = mid_HTTP_req_FtpGet(file_num, MAN_HTTP_SEQ_FTP_GET, man_http_req_callback);
   \   00000014   0x....             LDR      R2,??DataTable45_6
   \   00000016   0x211A             MOVS     R1,#+26
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       mid_HTTP_req_FtpGet
   \   0000001E   0x0004             MOVS     R4,R0
   2052          
   2053          		if (ret >= 0) {
   \   00000020   0x2C00             CMP      R4,#+0
   \   00000022   0xD408             BMI      ??man_http_ftp_get_0
   2054          			man_http_set_sequense(MAN_HTTP_SEQ_FTP_GET);
   \   00000024   0x201A             MOVS     R0,#+26
   \   00000026   0x.... 0x....      BL       man_http_set_sequense
   2055          			// 要求を保存する
   2056          			man_http_work.request.id = id;
   \   0000002A   0x....             LDR      R0,??DataTable45_3
   \   0000002C   0x6047             STR      R7,[R0, #+4]
   2057          			man_http_work.request.callback = callback;
   \   0000002E   0x....             LDR      R0,??DataTable45_3
   \   00000030   0x6086             STR      R6,[R0, #+8]
   2058          			man_http_work.request.num = file_num;
   \   00000032   0x....             LDR      R0,??DataTable45_3
   \   00000034   0x61C5             STR      R5,[R0, #+28]
   2059          		}
   2060          	}
   2061          
   2062          	if (ret < 0) {
   \                     ??man_http_ftp_get_0: (+1)
   \   00000036   0x2C00             CMP      R4,#+0
   \   00000038   0xD508             BPL      ??man_http_ftp_get_1
   2063          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   0000003A   0x.... 0x....      BL       man_http_get_sequense
   \   0000003E   0x....             LDR      R3,??DataTable45_7  ;; 0x80f
   \   00000040   0x003A             MOVS     R2,R7
   \   00000042   0xB2C0             UXTB     R0,R0
   \   00000044   0x0001             MOVS     R1,R0
   \   00000046   0x2016             MOVS     R0,#+22
   \   00000048   0x.... 0x....      BL       man_error_set
   2064          	}
   2065          
   2066          	return ret;
   \                     ??man_http_ftp_get_1: (+1)
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   2067          }
   2068          
   2069          /********************************************************************/
   2070          /*!
   2071           * \name	man_http_ftp_recovery
   2072           * \brief	RESET後のFTP 初期化処理を開始する
   2073           * \param	id       : ユニーク番号
   2074           *          callback : 完了を通知するcallback関数
   2075           * \return   0: 成功
   2076           *          -1:失敗
   2077           * \note	必要時に、呼ばれること
   2078           */
   2079          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2080          int32_t man_http_ftp_recovery(int32_t id, func_man_http callback)
   2081          {
   \                     man_http_ftp_recovery: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   2082          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   2083          
   2084          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_ftp_recovery_0
   2085          		
   2086          		// 要求を実施する
   2087          		ret = mid_HTTP_req_FtpRecovery(MAN_HTTP_SEQ_FTP_RECOVERY, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable45_6
   \   00000014   0x2019             MOVS     R0,#+25
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_FtpRecovery
   \   0000001A   0x0004             MOVS     R4,R0
   2088          
   2089          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_ftp_recovery_0
   2090          			man_http_set_sequense(MAN_HTTP_SEQ_FTP_RECOVERY);
   \   00000020   0x2019             MOVS     R0,#+25
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   2091          			// 要求を保存する
   2092          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable45_3
   \   00000028   0x6046             STR      R6,[R0, #+4]
   2093          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable45_3
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   2094          		}
   2095          	}
   2096          
   2097          	if (ret < 0) {
   \                     ??man_http_ftp_recovery_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_ftp_recovery_1
   2098          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable45_8  ;; 0x832
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   2099          	}
   2100          
   2101          	return ret;
   \                     ??man_http_ftp_recovery_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   2102          }
   2103          
   2104          
   2105          
   2106          /********************************************************************/
   2107          /*!
   2108           * \name	man_http_file_get
   2109           * \brief	指定のファイルを取り出す
   2110           * \param	file_num : ファイル番号
   2111           *          id       : ユニーク番号
   2112           *          callback : 完了を通知するcallback関数
   2113           * \return   0: 成功
   2114           *          -1:失敗
   2115           * \note	必要時に、呼ばれること
   2116           */
   2117          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2118          int32_t man_http_file_get(int32_t file_num, int32_t id, func_man_http_recv callback)
   2119          {
   \                     man_http_file_get: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0016             MOVS     R6,R2
   2120          	int32_t	ret=-1;
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x43E4             MVNS     R4,R4            ;; #-1
   2121          
   2122          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000C   0x.... 0x....      BL       man_http_get_sequense
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD110             BNE      ??man_http_file_get_0
   2123          		
   2124          		// 要求を実施する
   2125          		ret = mid_HTTP_req_FileGet(file_num, MAN_HTTP_SEQ_FILE_GET, man_http_req_callback);
   \   00000014   0x....             LDR      R2,??DataTable45_6
   \   00000016   0x211B             MOVS     R1,#+27
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       mid_HTTP_req_FileGet
   \   0000001E   0x0004             MOVS     R4,R0
   2126          
   2127          		if (ret >= 0) {
   \   00000020   0x2C00             CMP      R4,#+0
   \   00000022   0xD408             BMI      ??man_http_file_get_0
   2128          			man_http_set_sequense(MAN_HTTP_SEQ_FILE_GET);
   \   00000024   0x201B             MOVS     R0,#+27
   \   00000026   0x.... 0x....      BL       man_http_set_sequense
   2129          			// 要求を保存する
   2130          			man_http_work.request.id = id;
   \   0000002A   0x....             LDR      R0,??DataTable45_3
   \   0000002C   0x6047             STR      R7,[R0, #+4]
   2131          			man_http_work.request.callback_file = callback;
   \   0000002E   0x....             LDR      R0,??DataTable45_3
   \   00000030   0x6186             STR      R6,[R0, #+24]
   2132          			man_http_work.request.num = file_num;
   \   00000032   0x....             LDR      R0,??DataTable45_3
   \   00000034   0x61C5             STR      R5,[R0, #+28]
   2133          		}
   2134          	}
   2135          
   2136          	if (ret < 0) {
   \                     ??man_http_file_get_0: (+1)
   \   00000036   0x2C00             CMP      R4,#+0
   \   00000038   0xD508             BPL      ??man_http_file_get_1
   2137          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   0000003A   0x.... 0x....      BL       man_http_get_sequense
   \   0000003E   0x....             LDR      R3,??DataTable45_9  ;; 0x859
   \   00000040   0x003A             MOVS     R2,R7
   \   00000042   0xB2C0             UXTB     R0,R0
   \   00000044   0x0001             MOVS     R1,R0
   \   00000046   0x2016             MOVS     R0,#+22
   \   00000048   0x.... 0x....      BL       man_error_set
   2138          	}
   2139          
   2140          	return ret;
   \                     ??man_http_file_get_1: (+1)
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   2141          }
   2142          
   2143          
   2144          /********************************************************************/
   2145          /*!
   2146           * \name	man_http_get_rtc
   2147           * \brief	LTEの保持している現在時刻を取得する
   2148           * \param	id       : ユニーク番号
   2149           *          callback : 完了を通知するcallback関数
   2150           * \return   0: 成功
   2151           *          -1:失敗
   2152           * \note	必要時に、呼ばれること
   2153           */
   2154          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2155          int32_t man_http_get_rtc(int32_t id, func_man_http callback)
   2156          {
   \                     man_http_get_rtc: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   2157          	int32_t	ret=-1;
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x43E4             MVNS     R4,R4            ;; #-1
   2158          
   2159          	if (man_http_get_sequense() == MAN_HTTP_SEQ_READY) {
   \   0000000A   0x.... 0x....      BL       man_http_get_sequense
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD10D             BNE      ??man_http_get_rtc_0
   2160          		
   2161          		// 要求を実施する
   2162          		ret = mid_HTTP_req_GetClk(MAN_HTTP_SEQ_GET_RTC, man_http_req_callback);
   \   00000012   0x....             LDR      R1,??DataTable45_6
   \   00000014   0x2021             MOVS     R0,#+33
   \   00000016   0x.... 0x....      BL       mid_HTTP_req_GetClk
   \   0000001A   0x0004             MOVS     R4,R0
   2163          
   2164          		if (ret >= 0) {
   \   0000001C   0x2C00             CMP      R4,#+0
   \   0000001E   0xD406             BMI      ??man_http_get_rtc_0
   2165          			man_http_set_sequense(MAN_HTTP_SEQ_GET_RTC);
   \   00000020   0x2021             MOVS     R0,#+33
   \   00000022   0x.... 0x....      BL       man_http_set_sequense
   2166          			// 要求を保存する
   2167          			man_http_work.request.id = id;
   \   00000026   0x....             LDR      R0,??DataTable45_3
   \   00000028   0x6046             STR      R6,[R0, #+4]
   2168          			man_http_work.request.callback = callback;
   \   0000002A   0x....             LDR      R0,??DataTable45_3
   \   0000002C   0x6085             STR      R5,[R0, #+8]
   2169          		}
   2170          	}
   2171          
   2172          	if (ret < 0) {
   \                     ??man_http_get_rtc_0: (+1)
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD508             BPL      ??man_http_get_rtc_1
   2173          		man_error_setting(MAN_ERROR_MAN_HTTP, man_http_get_sequense(), id);
   \   00000032   0x.... 0x....      BL       man_http_get_sequense
   \   00000036   0x....             LDR      R3,??DataTable45_10  ;; 0x87d
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0xB2C0             UXTB     R0,R0
   \   0000003C   0x0001             MOVS     R1,R0
   \   0000003E   0x2016             MOVS     R0,#+22
   \   00000040   0x.... 0x....      BL       man_error_set
   2174          	}
   2175          
   2176          	return ret;
   \                     ??man_http_get_rtc_1: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
   2177          }
   2178          
   2179          /********************************************************************/
   2180          /*!
   2181           * \name	man_http_get_status
   2182           * \brief	HTTP の状態を取得する
   2183           * \param	なし
   2184           * \return   0: 要求待ち
   2185           *           1: 実行中
   2186           * \note	必要時に、呼ばれること
   2187           */
   2188          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2189          int32_t man_http_get_status( void )
   2190          {
   \                     man_http_get_status: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   2191          	int32_t	ret=0;
   \   00000002   0x2400             MOVS     R4,#+0
   2192          
   2193          	// HTTP管理
   2194          	if (man_http_get_sequense() != MAN_HTTP_SEQ_READY) {
   \   00000004   0x.... 0x....      BL       man_http_get_sequense
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD000             BEQ      ??man_http_get_status_0
   2195          		ret = 1;
   \   0000000C   0x2401             MOVS     R4,#+1
   2196          	}
   2197          	// server使用中は実行中とする
   2198          	if ( (man_http_work.status & MAN_HTTP_STATUS_SERVER) != 0 ) {
   \                     ??man_http_get_status_0: (+1)
   \   0000000E   0x....             LDR      R0,??DataTable45_3
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x0740             LSLS     R0,R0,#+29
   \   00000014   0xD500             BPL      ??man_http_get_status_1
   2199          		ret = 1;
   \   00000016   0x2401             MOVS     R4,#+1
   2200          	}
   2201          	// HTTP制御が実行中
   2202          	if (mid_HTTP_get_status() == 1) {
   \                     ??man_http_get_status_1: (+1)
   \   00000018   0x.... 0x....      BL       mid_HTTP_get_status
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD100             BNE      ??man_http_get_status_2
   2203          		ret = 1;
   \   00000020   0x2401             MOVS     R4,#+1
   2204          	}
   2205          
   2206          	return ret;
   \                     ??man_http_get_status_2: (+1)
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
   2207          }
   2208          
   2209          
   2210          /********************************************************************/
   2211          /*!
   2212           * \name	man_http_get_status2
   2213          * \brief	HTTP の状態を取得する(server用)
   2214           * \param	なし
   2215           * \return   0: 要求待ち
   2216           *           1: 実行中
   2217           * \note	必要時に、呼ばれること
   2218           */
   2219          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2220          int32_t man_http_get_status2( void )
   2221          {
   \                     man_http_get_status2: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   2222          	int32_t	ret=0;
   \   00000002   0x2400             MOVS     R4,#+0
   2223          
   2224          	// HTTP管理
   2225          	if (man_http_get_sequense() != MAN_HTTP_SEQ_READY) {
   \   00000004   0x.... 0x....      BL       man_http_get_sequense
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD000             BEQ      ??man_http_get_status2_0
   2226          		ret = 1;
   \   0000000C   0x2401             MOVS     R4,#+1
   2227          	}
   2228          	// HTTP制御が実行中
   2229          	if (mid_HTTP_get_status() == 1) {
   \                     ??man_http_get_status2_0: (+1)
   \   0000000E   0x.... 0x....      BL       mid_HTTP_get_status
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD100             BNE      ??man_http_get_status2_1
   2230          		ret = 1;
   \   00000016   0x2401             MOVS     R4,#+1
   2231          	}
   2232          
   2233          	return ret;
   \                     ??man_http_get_status2_1: (+1)
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
   2234          }
   2235          
   2236          /********************************************************************/
   2237          /*!
   2238           * \name	man_http_disp_info
   2239           * \brief	管理情報を表示する処理
   2240           * \param	なし
   2241           * \return  なし
   2242           * \note	必要時に、呼ばれること
   2243           */
   2244          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2245          void man_http_disp_info( void )
   2246          {
   \                     man_http_disp_info: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   2247          	int32_t					length;
   2248          	mid_http_get_info_t 	*get_info;
   2249          
   2250          	get_info = mid_HTTP_get_info();
   \   00000002   0x.... 0x....      BL       mid_HTTP_get_info
   2251          	sprintf((char *)&man_http_work.buff[0], "HTTP INFO :: ctzuc=%d, flag=%d, rssi=%d\n", get_info->ctzuc_q, get_info->clock_flg, get_info->rssi);
   \   00000006   0x7D01             LDRB     R1,[R0, #+20]
   \   00000008   0x9100             STR      R1,[SP, #+0]
   \   0000000A   0x68C3             LDR      R3,[R0, #+12]
   \   0000000C   0x6802             LDR      R2,[R0, #+0]
   \   0000000E   0x....             LDR      R1,??DataTable45_11
   \   00000010   0x....             LDR      R0,??DataTable45_12
   \   00000012   0x.... 0x....      BL       sprintf
   2252          	length = strlen((char const *)&man_http_work.buff[0]);
   \   00000016   0x....             LDR      R0,??DataTable45_12
   \   00000018   0x.... 0x....      BL       strlen
   2253          	man_usb_data_send(&man_http_work.buff[0], length);
   \   0000001C   0x0001             MOVS     R1,R0
   \   0000001E   0x....             LDR      R0,??DataTable45_12
   \   00000020   0x.... 0x....      BL       man_usb_data_send
   2254          }
   \   00000024   0xBD01             POP      {R0,PC}          ;; return
   2255          
   2256          
   2257          /********************************************************************/
   2258          /*!
   2259           * \name	man_http_get_rsrp
   2260           * \brief	RSRP, RSSIデータを取得する処理
   2261           * \param	rsrp  : rsrp格納エリア
   2262           *          rssi  : rssi格納エリア
   2263           * \return  なし
   2264           * \note	必要時に、呼ばれること
   2265           */
   2266          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2267          void man_http_get_rsrp( int32_t	*rsrp, int32_t	*rssi )
   2268          {
   2269          
   2270          	*rsrp = man_http_work.rsrp_raw;
   \                     man_http_get_rsrp: (+1)
   \   00000000   0x....             LDR      R2,??DataTable45_13
   \   00000002   0x6812             LDR      R2,[R2, #+0]
   \   00000004   0x6002             STR      R2,[R0, #+0]
   2271          	*rssi = man_http_work.rssi_raw;
   \   00000006   0x....             LDR      R0,??DataTable45_14
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x6008             STR      R0,[R1, #+0]
   2272          }
   \   0000000C   0x4770             BX       LR               ;; return
   2273          
   2274          /********************************************************************/
   2275          /*!
   2276           * \name	man_http_get_clock
   2277           * \brief	LTE時刻(JST)の取得
   2278           * \param	
   2279           * \return  LTE時刻(JST)
   2280           * \note	man_http_get_rtcで成功したときのみ、呼ばれること
   2281           *          失敗時に呼ばれると異なる時刻が取れます。
   2282           */
   2283          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2284          clock_info_t *man_http_get_clock( void )
   2285          {
   2286          	return &man_http_work.jst_clock;
   \                     man_http_get_clock: (+1)
   \   00000000   0x....             LDR      R0,??DataTable45_15
   \   00000002   0x4770             BX       LR               ;; return
   2287          }
   2288          
   2289          
   2290          /********************************************************************/
   2291          /*!
   2292           * \name	man_http_set_rssi_ng
   2293           * \brief	電波状況を圏外にする
   2294           * \param	なし
   2295           * \return  なし
   2296           * \note	POWER OFF, RESET発生時に呼び出すこと
   2297           */
   2298          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2299          void man_http_set_rssi_ng( void )
   2300          {
   \                     man_http_set_rssi_ng: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   2301          	man_http_work.rsrp_raw = -999;
   \   00000002   0x....             LDR      R0,??DataTable45_16  ;; 0xfffffc19
   \   00000004   0x....             LDR      R1,??DataTable45_13
   \   00000006   0x6008             STR      R0,[R1, #+0]
   2302          	man_http_work.rssi_raw = -999;
   \   00000008   0x....             LDR      R0,??DataTable45_16  ;; 0xfffffc19
   \   0000000A   0x....             LDR      R1,??DataTable45_14
   \   0000000C   0x6008             STR      R0,[R1, #+0]
   2303          	// 圏外とする
   2304          	man_data_set_rssi_sts(MAN_DATA_RSSI_STS_NG);
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       man_data_set_rssi_sts
   2305          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     man_http_work+0x59C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     man_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     man_http_work+0x618

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x000005B4         DC32     0x5b4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     man_http_work+0x5A0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     man_http_work+0x5A4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     man_http_work+0x5A8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     man_http_work+0x598

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     usb_log_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     print_buf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     man_http_work+0x594

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     man_http_work+0x4CC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     man_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     man_http_work+0x4AC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     man_http_work+0x4A8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     man_http_work+0x4B4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     man_http_work+0x4B0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     man_http_work+0x4C8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     man_http_work+0x4A4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     man_http_work+0x4A0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     man_http_work+0x49C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     man_http_work+0x498

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x0001D4C0         DC32     0x1d4c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x4030001C         DC32     0x4030001c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     man_http_work+0x4BC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     man_http_work+0x4B8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x00000BD8         DC32     0xbd8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0xFFFFFC19         DC32     0xfffffc19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     man_http_work+0x624

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     man_http_work+0x620

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     man_http_work+0x61C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0xFFFFFE0D         DC32     0xfffffe0d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     man_http_work+0x5AC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     man_http_work+0x598

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x0001D4C0         DC32     0x1d4c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x4030001C         DC32     0x4030001c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x0000036D         DC32     0x36d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x........         DC32     man_http_work+0x5A4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     man_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x0000037B         DC32     0x37b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     man_http_work+0x5B0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x0000038B         DC32     0x38b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     man_http_work+0x628

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x000003A1         DC32     0x3a1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x000003A9         DC32     0x3a9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x000003AF         DC32     0x3af

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0xFFFFFC19         DC32     0xfffffc19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     man_http_work+0x624

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     man_http_recv_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x00000694         DC32     0x694

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x........         DC32     man_http_work+0x620

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x........         DC32     man_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x........         DC32     man_http_work+0x4C8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   0x00000413         DC32     0x413

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_2:
   \   00000000   0x00000BD8         DC32     0xbd8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     man_http_work+0x498

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x........         DC32     man_http_req_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x........         DC32     man_http_work+0x49C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x00000473         DC32     0x473

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   0x00000497         DC32     0x497

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x000004BB         DC32     0x4bb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x000004DF         DC32     0x4df

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   0x00000503         DC32     0x503

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_1:
   \   00000000   0x........         DC32     man_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   0x00000527         DC32     0x527

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x0000054B         DC32     0x54b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \   00000000   0x........         DC32     man_http_req_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x........         DC32     man_http_work+0x4A0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   0x00000595         DC32     0x595

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   0x000005BA         DC32     0x5ba

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_1:
   \   00000000   0x........         DC32     man_http_work+0x4A4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   0x000005F7         DC32     0x5f7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_1:
   \   00000000   0x0000061B         DC32     0x61b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_2:
   \   00000000   0x........         DC32     man_http_work+0x4B0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   0x........         DC32     man_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   0x00000643         DC32     0x643

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_1:
   \   00000000   0x........         DC32     man_http_work+0x4B4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   0x0000067F         DC32     0x67f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_1:
   \   00000000   0x........         DC32     man_http_work+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_2:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   0x000006A5         DC32     0x6a5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_1:
   \   00000000   0x00000461         DC32     0x461

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_2:
   \   00000000   0x........         DC32     man_http_req_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   0x........         DC32     man_http_work+0x4A8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_1:
   \   00000000   0x........         DC32     man_http_work+0x4C0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38:
   \   00000000   0x000006DE         DC32     0x6de

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_1:
   \   00000000   0x........         DC32     man_http_work+0x4AC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39:
   \   00000000   0x........         DC32     man_http_work+0x4C4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   0x00000732         DC32     0x732

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_1:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   0x00000756         DC32     0x756

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45:
   \   00000000   0x0000078A         DC32     0x78a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_1:
   \   00000000   0x........         DC32     man_http_work+0x4B8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_2:
   \   00000000   0x........         DC32     man_http_work+0x4BC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_3:
   \   00000000   0x........         DC32     man_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_4:
   \   00000000   0x000007C5         DC32     0x7c5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_5:
   \   00000000   0x000007E9         DC32     0x7e9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_6:
   \   00000000   0x........         DC32     man_http_req_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_7:
   \   00000000   0x0000080F         DC32     0x80f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_8:
   \   00000000   0x00000832         DC32     0x832

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_9:
   \   00000000   0x00000859         DC32     0x859

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_10:
   \   00000000   0x0000087D         DC32     0x87d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_11:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_12:
   \   00000000   0x........         DC32     man_http_work+0x62E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_13:
   \   00000000   0x........         DC32     man_http_work+0x624

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_14:
   \   00000000   0x........         DC32     man_http_work+0x620

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_15:
   \   00000000   0x........         DC32     man_http_work+0x628

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_16:
   \   00000000   0xFFFFFC19         DC32     0xfffffc19

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x48 0x54          DC8 "HTTP/1.1 200 OK"
   \              0x54 0x50    
   \              0x2F 0x31    
   \              0x2E 0x31    
   \              0x20 0x32    
   \              0x30 0x30    
   \              0x20 0x4F    
   \              0x4B 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x50 0x4F          DC8 "POST / HTTP/1.1"
   \              0x53 0x54    
   \              0x20 0x2F    
   \              0x20 0x48    
   \              0x54 0x54    
   \              0x50 0x2F    
   \              0x31 0x2E    
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x48 0x6F          DC8 "Host:"
   \              0x73 0x74    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x68 0x74          DC8 "http_req_callback id %d st %d\012"
   \              0x74 0x70    
   \              0x5F 0x72    
   \              0x65 0x71    
   \              0x5F 0x63    
   \              0x61 0x6C    
   \              0x6C 0x62    
   \              0x61 0x63    
   \              0x6B 0x20    
   \              0x69 0x64    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x73 0x74    
   \              0x20 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x50 0x4F          DC8 "POST / HTTP/1.1\015\012HOST: %s\015\012Content-Length: %d\015\012\015\012"
   \              0x53 0x54    
   \              0x20 0x2F    
   \              0x20 0x48    
   \              0x54 0x54    
   \              0x50 0x2F    
   \              0x31 0x2E    
   \              0x31 0x0D    
   \              0x0A 0x48    
   \              0x4F 0x53    
   \              0x54 0x3A    
   \              0x20 0x25    
   \              0x73 0x0D    
   \              0x0A 0x43    
   \              0x6F 0x6E    
   \              0x74 0x65    
   \              0x6E 0x74    
   \              0x2D 0x4C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \              0x68 0x3A    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x0D    
   \              0x0A 0x00    
   \   00000032   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x48 0x54          DC8 "HTTP/1.1 200 OK\015\012Content-Length: %d\015\012\015\012"
   \              0x54 0x50    
   \              0x2F 0x31    
   \              0x2E 0x31    
   \              0x20 0x32    
   \              0x30 0x30    
   \              0x20 0x4F    
   \              0x4B 0x0D    
   \              0x0A 0x43    
   \              0x6F 0x6E    
   \              0x74 0x65    
   \              0x6E 0x74    
   \              0x2D 0x4C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \              0x68 0x3A    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x48 0x54          DC8 "HTTP INFO :: ctzuc=%d, flag=%d, rssi=%d\012"
   \              0x54 0x50    
   \              0x20 0x49    
   \              0x4E 0x46    
   \              0x4F 0x20    
   \              0x3A 0x3A    
   \              0x20 0x63    
   \              0x74 0x7A    
   \              0x75 0x63    
   \              0x3D 0x25    
   \              0x64 0x2C    
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x67 0x3D    
   \              0x25 0x64    
   \              0x2C 0x20    
   \              0x72 0x73    
   \              0x73 0x69    
   \              0x3D 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   2306          
   2307          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   man_http_client_close
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_ClientClose
      16   man_http_client_open
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_ClientOpen
      32   man_http_client_send_recv
        32   -> __aeabi_memcpy
        32   -> man_data_get_setting_gprs
        32   -> man_error_set
        32   -> man_http_get_sequense
        32   -> man_http_set_sequense
        32   -> man_timer_get_1ms_count
        32   -> mid_HTTP_req_ClientSend
        32   -> sprintf
        32   -> strlen
       4   man_http_client_state
       8   man_http_disp_info
         8   -> man_usb_data_send
         8   -> mid_HTTP_get_info
         8   -> sprintf
         8   -> strlen
      24   man_http_file_get
        24   -> man_error_set
        24   -> man_http_get_sequense
        24   -> man_http_set_sequense
        24   -> mid_HTTP_req_FileGet
      24   man_http_ftp_get
        24   -> man_error_set
        24   -> man_http_get_sequense
        24   -> man_http_set_sequense
        24   -> mid_HTTP_req_FtpGet
      16   man_http_ftp_init
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_FtpDel
      16   man_http_ftp_open
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_FtpOpen
      16   man_http_ftp_recovery
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_FtpRecovery
       4   man_http_ftp_state
       0   man_http_get_clock
       0   man_http_get_rsrp
      16   man_http_get_rtc
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_GetClk
       0   man_http_get_sequense
       8   man_http_get_status
         8   -> man_http_get_sequense
         8   -> mid_HTTP_get_status
       8   man_http_get_status2
         8   -> man_http_get_sequense
         8   -> mid_HTTP_get_status
       8   man_http_init
         8   -> __aeabi_memset
         8   -> mid_HTTP_init
         8   -> mid_HTTP_set_RecvNoti
      16   man_http_lte_close
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_LteClose
      16   man_http_lte_exec_reset
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_LteReset
      16   man_http_lte_get_cpsi
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_LteCpsi
      16   man_http_lte_get_csq
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_LteCsq
      16   man_http_lte_init
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_InitCmd
      16   man_http_lte_open
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_LteOpen
      16   man_http_lte_ota_off
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_OtaOffCmd
      16   man_http_lte_ready
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_LteReady
       4   man_http_lte_state
      16   man_http_lte_stby_in
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_LteStbyIn
      16   man_http_lte_stby_out
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_LteStbyOut
      16   man_http_main
        16   -> man_data_get_sensor
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_recv_cmd
        16   -> man_http_res_callback
        16   -> man_http_resp_cmd
        16   -> man_http_set_sequense
        16   -> man_rtc_get_status
        16   -> man_timer_get_1ms_count
        16   -> man_timer_get_elapsed_time
        16   -> mid_HTTP_get_info
        16   -> mid_HTTP_req_GetClk
      32   man_http_recv_callback
        32   -- Indirect call
        32   -> __aeabi_memcpy
        32   -> man_data_get_sensor
        32   -> man_error_set
        32   -> man_http_get_sequense
        32   -> man_http_set_sequense
        32   -> man_timer_cancel_wait
        32   -> memcmp
        32   -> mid_HTTP_get_data
        32   -> mid_HTTP_get_info
        32   -> strlen
       4   man_http_recv_cmd
       8   man_http_req_callback
         8   -> sprintf
         8   -> strlen
         8   -> sysmgr_log
       8   man_http_res_callback
         8   -- Indirect call
         8   -> man_http_set_sequense
      16   man_http_resp_cmd
        16   -- Indirect call
        16   -> __aeabi_memcpy
        16   -> man_data_get_other
        16   -> man_data_get_sensor
        16   -> man_data_set_ipaddr
        16   -> man_data_set_revision
        16   -> man_data_set_rssi_sts
        16   -> man_dbglog_setting
        16   -> man_error_set
        16   -> man_http_res_callback
        16   -> man_http_set_sequense
        16   -> man_rtc_set_clock
        16   -> man_rtc_set_clock_direct
        16   -> man_timer_start_wait
        16   -> mid_HTTP_get_data
        16   -> mid_HTTP_get_info
        16   -> mid_HTTP_req_GetIpAddress
        16   -> mid_HTTP_req_UdpOpen
      16   man_http_server_close
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_ServerClose
       4   man_http_server_noti
      16   man_http_server_open
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_ServerOpen
      32   man_http_server_send
        32   -> __aeabi_memcpy
        32   -> man_error_set
        32   -> man_http_get_sequense
        32   -> man_http_set_sequense
        32   -> mid_HTTP_req_ServerSend
        32   -> sprintf
        32   -> strlen
       4   man_http_server_state
       8   man_http_set_rssi_ng
         8   -> man_data_set_rssi_sts
       4   man_http_set_sequense
      16   man_http_udp_close
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_UdpClose
      16   man_http_udp_open
        16   -> man_error_set
        16   -> man_http_get_sequense
        16   -> man_http_set_sequense
        16   -> mid_HTTP_req_UdpOpen
      24   man_http_udp_send
        24   -> man_error_set
        24   -> man_http_get_sequense
        24   -> man_http_set_sequense
        24   -> mid_HTTP_req_UdpSend
       4   man_http_udp_state
       8   man_http_update_date_time
         8   -> man_http_set_sequense
         8   -> mid_HTTP_req_GetClk


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_2
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_2
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_2
       4  ??DataTable15
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable16_2
       4  ??DataTable17
       4  ??DataTable18
       4  ??DataTable19
       4  ??DataTable21
       4  ??DataTable22
       4  ??DataTable23
       4  ??DataTable24
       4  ??DataTable25
       4  ??DataTable25_1
       4  ??DataTable26
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable29
       4  ??DataTable3
       4  ??DataTable30
       4  ??DataTable31
       4  ??DataTable31_1
       4  ??DataTable32
       4  ??DataTable32_1
       4  ??DataTable32_2
       4  ??DataTable33
       4  ??DataTable34
       4  ??DataTable34_1
       4  ??DataTable35
       4  ??DataTable35_1
       4  ??DataTable35_2
       4  ??DataTable36
       4  ??DataTable36_1
       4  ??DataTable36_2
       4  ??DataTable37
       4  ??DataTable37_1
       4  ??DataTable38
       4  ??DataTable38_1
       4  ??DataTable39
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ??DataTable4
       4  ??DataTable40
       4  ??DataTable40_1
       4  ??DataTable41
       4  ??DataTable45
       4  ??DataTable45_1
       4  ??DataTable45_10
       4  ??DataTable45_11
       4  ??DataTable45_12
       4  ??DataTable45_13
       4  ??DataTable45_14
       4  ??DataTable45_15
       4  ??DataTable45_16
       4  ??DataTable45_2
       4  ??DataTable45_3
       4  ??DataTable45_4
       4  ??DataTable45_5
       4  ??DataTable45_6
       4  ??DataTable45_7
       4  ??DataTable45_8
       4  ??DataTable45_9
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable7
       4  ??DataTable7_1
      16  ?_0
      16  ?_1
       8  ?_2
      32  ?_3
      52  ?_4
      40  ?_5
      44  ?_6
      72  man_http_client_close
      84  man_http_client_open
     164  man_http_client_send_recv
      26  man_http_client_state
      38  man_http_disp_info
      80  man_http_file_get
      80  man_http_ftp_get
      72  man_http_ftp_init
      72  man_http_ftp_open
      72  man_http_ftp_recovery
      26  man_http_ftp_state
       4  man_http_get_clock
      14  man_http_get_rsrp
      72  man_http_get_rtc
       6  man_http_get_sequense
      38  man_http_get_status
      28  man_http_get_status2
      40  man_http_init
      72  man_http_lte_close
      74  man_http_lte_exec_reset
      72  man_http_lte_get_cpsi
      72  man_http_lte_get_csq
      72  man_http_lte_init
      72  man_http_lte_open
      72  man_http_lte_ota_off
      72  man_http_lte_ready
      26  man_http_lte_state
      72  man_http_lte_stby_in
      72  man_http_lte_stby_out
     140  man_http_main
     932  man_http_recv_callback
      22  man_http_recv_cmd
      60  man_http_req_callback
      36  man_http_res_callback
    1254  man_http_resp_cmd
      72  man_http_server_close
      26  man_http_server_noti
      72  man_http_server_open
     146  man_http_server_send
      26  man_http_server_state
      22  man_http_set_rssi_ng
      56  man_http_set_sequense
      72  man_http_udp_close
      72  man_http_udp_open
      88  man_http_udp_send
      26  man_http_udp_state
      28  man_http_update_date_time
    1684  man_http_work
      24  recv_tbl

 
 1 684 bytes in section .bss
   232 bytes in section .rodata
 5 322 bytes in section .text
 
 5 322 bytes of CODE  memory
   232 bytes of CONST memory
 1 684 bytes of DATA  memory

Errors: none
Warnings: 2
