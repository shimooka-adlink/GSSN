###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       21/May/2019  17:00:56
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\driver\gpio\drv_gpio.c
#    Command line =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\driver\gpio\drv_gpio.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_A -lCN
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List
#        -lA
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List\drv_gpio.lst
#    Object file  =  
#        C:\GNSS\Software\rJ105\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\Obj\drv_gpio.o
#
###############################################################################

C:\GNSS\Software\rJ105\source\GNSS_GW\driver\gpio\drv_gpio.c
      1          
      2          /**
      3            ******************************************************************************
      4            * @file    main.c
      5            * @author  Epson
      6            * @version V1.1
      7            * @date    05-August-2016
      8            * @brief   This file is PPORT example software.
      9            ******************************************************************************
     10              $Id: drv_gpio.c 221 2018-07-17 06:38:06Z shitaoka $
     11            * @attention
     12            *
     13            *****************************************************************************
     14            */ 
     15          
     16          
     17          #include <string.h>
     18          #include <stdio.h>
     19          #include "board.h"
     20          #include "system_manager.h"
     21          #include "se_common.h"
     22          #include "se_pport.h"
     23          #include "se_clg.h"
     24          #include "drv_gpio.h"
     25          #include "man_usb.h"
     26          
     27          #pragma section = "DRV_PRG_BLOCK"
     28          
     29          
     30          
     31          /********************************************************************/
     32          /*!
     33           * \name	gpio_init
     34           * \brief	GPIO DriverÇÃèâä˙âª
     35           * \param	Ç»Çµ
     36           * \return  Ç»Çµ
     37           * \note	
     38           */
     39          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     40          void gpio_init( void ) 
     41          {
   \                     gpio_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     42              /// Set output port
     43              sePPORT_InitAsOutput( OUTPORT1  );
   \   00000002   0x2036             MOVS     R0,#+54
   \   00000004   0x.... 0x....      BL       sePPORT_InitAsOutput
     44              sePPORT_InitAsOutput( OUTPORT2  );
   \   00000008   0x203B             MOVS     R0,#+59
   \   0000000A   0x.... 0x....      BL       sePPORT_InitAsOutput
     45              sePPORT_InitAsOutput( OUTPORT3  );
   \   0000000E   0x2021             MOVS     R0,#+33
   \   00000010   0x.... 0x....      BL       sePPORT_InitAsOutput
     46              sePPORT_InitAsOutput( OUTPORT4  );
   \   00000014   0x2035             MOVS     R0,#+53
   \   00000016   0x.... 0x....      BL       sePPORT_InitAsOutput
     47          //    sePPORT_InitAsOutput( OUTPORT5  );
     48              sePPORT_InitAsOutput( OUTPORT6  );
   \   0000001A   0x203C             MOVS     R0,#+60
   \   0000001C   0x.... 0x....      BL       sePPORT_InitAsOutput
     49          //    sePPORT_InitAsOutput( OUTPORT7  );
     50          //    sePPORT_InitAsOutput( OUTPORT8  );
     51              sePPORT_InitAsOutput( OUTPORT9  );
   \   00000020   0x2037             MOVS     R0,#+55
   \   00000022   0x.... 0x....      BL       sePPORT_InitAsOutput
     52              sePPORT_InitAsOutput( OUTPORT10 );
   \   00000026   0x2038             MOVS     R0,#+56
   \   00000028   0x.... 0x....      BL       sePPORT_InitAsOutput
     53              sePPORT_InitAsOutput( OUTPORT11 );
   \   0000002C   0x2039             MOVS     R0,#+57
   \   0000002E   0x.... 0x....      BL       sePPORT_InitAsOutput
     54              sePPORT_InitAsOutput( OUTPORT12 );
   \   00000032   0x203A             MOVS     R0,#+58
   \   00000034   0x.... 0x....      BL       sePPORT_InitAsOutput
     55              sePPORT_InitAsOutput( OUTPORT13 );
   \   00000038   0x2015             MOVS     R0,#+21
   \   0000003A   0x.... 0x....      BL       sePPORT_InitAsOutput
     56          	sePPORT_InitAsOutput( OUTPORT14 );
   \   0000003E   0x203E             MOVS     R0,#+62
   \   00000040   0x.... 0x....      BL       sePPORT_InitAsOutput
     57          
     58          
     59              /// Disable interrupt.
     60              sePPORT_DisableInt( OUTPORT1  );
   \   00000044   0x2036             MOVS     R0,#+54
   \   00000046   0x.... 0x....      BL       sePPORT_DisableInt
     61              sePPORT_DisableInt( OUTPORT2  );
   \   0000004A   0x203B             MOVS     R0,#+59
   \   0000004C   0x.... 0x....      BL       sePPORT_DisableInt
     62              sePPORT_DisableInt( OUTPORT3  );
   \   00000050   0x2021             MOVS     R0,#+33
   \   00000052   0x.... 0x....      BL       sePPORT_DisableInt
     63              sePPORT_DisableInt( OUTPORT4  );
   \   00000056   0x2035             MOVS     R0,#+53
   \   00000058   0x.... 0x....      BL       sePPORT_DisableInt
     64          //    sePPORT_DisableInt( OUTPORT5  );
     65              sePPORT_DisableInt( OUTPORT6  );
   \   0000005C   0x203C             MOVS     R0,#+60
   \   0000005E   0x.... 0x....      BL       sePPORT_DisableInt
     66          //    sePPORT_DisableInt( OUTPORT7  );
     67          //    sePPORT_DisableInt( OUTPORT8  );
     68              sePPORT_DisableInt( OUTPORT9  );
   \   00000062   0x2037             MOVS     R0,#+55
   \   00000064   0x.... 0x....      BL       sePPORT_DisableInt
     69              sePPORT_DisableInt( OUTPORT10 );
   \   00000068   0x2038             MOVS     R0,#+56
   \   0000006A   0x.... 0x....      BL       sePPORT_DisableInt
     70              sePPORT_DisableInt( OUTPORT11 );
   \   0000006E   0x2039             MOVS     R0,#+57
   \   00000070   0x.... 0x....      BL       sePPORT_DisableInt
     71              sePPORT_DisableInt( OUTPORT12 );
   \   00000074   0x203A             MOVS     R0,#+58
   \   00000076   0x.... 0x....      BL       sePPORT_DisableInt
     72              sePPORT_DisableInt( OUTPORT13 );
   \   0000007A   0x2015             MOVS     R0,#+21
   \   0000007C   0x.... 0x....      BL       sePPORT_DisableInt
     73              sePPORT_DisableInt( OUTPORT14 );
   \   00000080   0x203E             MOVS     R0,#+62
   \   00000082   0x.... 0x....      BL       sePPORT_DisableInt
     74          
     75              /// Set output data(LOW).
     76              sePPORT_SetOutput( OUTPORT1,  sePPORT_DATA_LOW );
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x2036             MOVS     R0,#+54
   \   0000008A   0x.... 0x....      BL       sePPORT_SetOutput
     77              sePPORT_SetOutput( OUTPORT2,  sePPORT_DATA_LOW );
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0x203B             MOVS     R0,#+59
   \   00000092   0x.... 0x....      BL       sePPORT_SetOutput
     78              sePPORT_SetOutput( OUTPORT3,  sePPORT_DATA_LOW );
   \   00000096   0x2100             MOVS     R1,#+0
   \   00000098   0x2021             MOVS     R0,#+33
   \   0000009A   0x.... 0x....      BL       sePPORT_SetOutput
     79              sePPORT_SetOutput( OUTPORT4,  sePPORT_DATA_LOW );
   \   0000009E   0x2100             MOVS     R1,#+0
   \   000000A0   0x2035             MOVS     R0,#+53
   \   000000A2   0x.... 0x....      BL       sePPORT_SetOutput
     80              sePPORT_SetOutput( OUTPORT6,  sePPORT_DATA_LOW );
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x203C             MOVS     R0,#+60
   \   000000AA   0x.... 0x....      BL       sePPORT_SetOutput
     81          //    sePPORT_SetOutput( OUTPORT8,  sePPORT_DATA_LOW );
     82              sePPORT_SetOutput( OUTPORT13, sePPORT_DATA_LOW );
   \   000000AE   0x2100             MOVS     R1,#+0
   \   000000B0   0x2015             MOVS     R0,#+21
   \   000000B2   0x.... 0x....      BL       sePPORT_SetOutput
     83              sePPORT_SetOutput( OUTPORT14, sePPORT_DATA_LOW );
   \   000000B6   0x2100             MOVS     R1,#+0
   \   000000B8   0x203E             MOVS     R0,#+62
   \   000000BA   0x.... 0x....      BL       sePPORT_SetOutput
     84          
     85              /// Set output data(HIGH).
     86          //    sePPORT_SetOutput( OUTPORT5,  sePPORT_DATA_HIGH );
     87          //    sePPORT_SetOutput( OUTPORT6,  sePPORT_DATA_HIGH );
     88          //    sePPORT_SetOutput( OUTPORT7,  sePPORT_DATA_HIGH );
     89              sePPORT_SetOutput( OUTPORT9,  sePPORT_DATA_HIGH );
   \   000000BE   0x2101             MOVS     R1,#+1
   \   000000C0   0x2037             MOVS     R0,#+55
   \   000000C2   0x.... 0x....      BL       sePPORT_SetOutput
     90              sePPORT_SetOutput( OUTPORT10, sePPORT_DATA_HIGH );
   \   000000C6   0x2101             MOVS     R1,#+1
   \   000000C8   0x2038             MOVS     R0,#+56
   \   000000CA   0x.... 0x....      BL       sePPORT_SetOutput
     91              sePPORT_SetOutput( OUTPORT11, sePPORT_DATA_HIGH );
   \   000000CE   0x2101             MOVS     R1,#+1
   \   000000D0   0x2039             MOVS     R0,#+57
   \   000000D2   0x.... 0x....      BL       sePPORT_SetOutput
     92              sePPORT_SetOutput( OUTPORT12, sePPORT_DATA_HIGH );
   \   000000D6   0x2101             MOVS     R1,#+1
   \   000000D8   0x203A             MOVS     R0,#+58
   \   000000DA   0x.... 0x....      BL       sePPORT_SetOutput
     93          //    sePPORT_SetOutput( OUTPORT13, sePPORT_DATA_HIGH );
     94          //    sePPORT_SetOutput( OUTPORT14, sePPORT_DATA_HIGH );
     95          
     96          
     97              /// Set input port
     98              sePPORT_InitAsInput( INPORT1 );
   \   000000DE   0x2020             MOVS     R0,#+32
   \   000000E0   0x.... 0x....      BL       sePPORT_InitAsInput
     99              sePPORT_InitAsInput( INPORT2 );
   \   000000E4   0x2028             MOVS     R0,#+40
   \   000000E6   0x.... 0x....      BL       sePPORT_InitAsInput
    100              sePPORT_InitAsInput( INPORT3 );
   \   000000EA   0x2029             MOVS     R0,#+41
   \   000000EC   0x.... 0x....      BL       sePPORT_InitAsInput
    101              sePPORT_InitAsInput( INPORT4 );
   \   000000F0   0x202A             MOVS     R0,#+42
   \   000000F2   0x.... 0x....      BL       sePPORT_InitAsInput
    102              sePPORT_InitAsInput( INPORT5 );
   \   000000F6   0x2004             MOVS     R0,#+4
   \   000000F8   0x.... 0x....      BL       sePPORT_InitAsInput
    103              sePPORT_InitAsInput( INPORT6 );
   \   000000FC   0x2030             MOVS     R0,#+48
   \   000000FE   0x.... 0x....      BL       sePPORT_InitAsInput
    104              sePPORT_InitAsInput( INPORT7 );
   \   00000102   0x2031             MOVS     R0,#+49
   \   00000104   0x.... 0x....      BL       sePPORT_InitAsInput
    105              sePPORT_InitAsInput( INPORT8 );
   \   00000108   0x2032             MOVS     R0,#+50
   \   0000010A   0x.... 0x....      BL       sePPORT_InitAsInput
    106              sePPORT_InitAsInput( INPORT9 );
   \   0000010E   0x2033             MOVS     R0,#+51
   \   00000110   0x.... 0x....      BL       sePPORT_InitAsInput
    107              sePPORT_InitAsInput( INPORT10 );
   \   00000114   0x202E             MOVS     R0,#+46
   \   00000116   0x.... 0x....      BL       sePPORT_InitAsInput
    108              sePPORT_InitAsInput( INPORT11 );
   \   0000011A   0x203D             MOVS     R0,#+61
   \   0000011C   0x.... 0x....      BL       sePPORT_InitAsInput
    109              sePPORT_InitAsInput( INPORT13 );
   \   00000120   0x2008             MOVS     R0,#+8
   \   00000122   0x.... 0x....      BL       sePPORT_InitAsInput
    110              sePPORT_InitAsInput( INPORT14 );
   \   00000126   0x200B             MOVS     R0,#+11
   \   00000128   0x.... 0x....      BL       sePPORT_InitAsInput
    111              sePPORT_InitAsInput( INPORT15 );
   \   0000012C   0x200C             MOVS     R0,#+12
   \   0000012E   0x.... 0x....      BL       sePPORT_InitAsInput
    112              sePPORT_InitAsInput( INPORT16 );
   \   00000132   0x2014             MOVS     R0,#+20
   \   00000134   0x.... 0x....      BL       sePPORT_InitAsInput
    113              sePPORT_InitAsInput( INPORT17 );
   \   00000138   0x2041             MOVS     R0,#+65
   \   0000013A   0x.... 0x....      BL       sePPORT_InitAsInput
    114              sePPORT_InitAsInput( INPORT18 );
   \   0000013E   0x2005             MOVS     R0,#+5
   \   00000140   0x.... 0x....      BL       sePPORT_InitAsInput
    115              sePPORT_EnableChatteringFilter( INPORT1 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000144   0x2020             MOVS     R0,#+32
   \   00000146   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    116              sePPORT_EnableChatteringFilter( INPORT2 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   0000014A   0x2028             MOVS     R0,#+40
   \   0000014C   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    117              sePPORT_EnableChatteringFilter( INPORT3 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000150   0x2029             MOVS     R0,#+41
   \   00000152   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    118              sePPORT_EnableChatteringFilter( INPORT4 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000156   0x202A             MOVS     R0,#+42
   \   00000158   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    119              sePPORT_EnableChatteringFilter( INPORT5 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   0000015C   0x2004             MOVS     R0,#+4
   \   0000015E   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    120              sePPORT_EnableChatteringFilter( INPORT6 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000162   0x2030             MOVS     R0,#+48
   \   00000164   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    121              sePPORT_EnableChatteringFilter( INPORT7 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000168   0x2031             MOVS     R0,#+49
   \   0000016A   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    122              sePPORT_EnableChatteringFilter( INPORT8 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   0000016E   0x2032             MOVS     R0,#+50
   \   00000170   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    123              sePPORT_EnableChatteringFilter( INPORT9 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000174   0x2033             MOVS     R0,#+51
   \   00000176   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    124              sePPORT_EnableChatteringFilter( INPORT10 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   0000017A   0x202E             MOVS     R0,#+46
   \   0000017C   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    125              sePPORT_EnableChatteringFilter( INPORT11 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000180   0x203D             MOVS     R0,#+61
   \   00000182   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    126              sePPORT_EnableChatteringFilter( INPORT13 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000186   0x2008             MOVS     R0,#+8
   \   00000188   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    127              sePPORT_EnableChatteringFilter( INPORT14 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   0000018C   0x200B             MOVS     R0,#+11
   \   0000018E   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    128              sePPORT_EnableChatteringFilter( INPORT15 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000192   0x200C             MOVS     R0,#+12
   \   00000194   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    129              sePPORT_EnableChatteringFilter( INPORT16 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   00000198   0x2014             MOVS     R0,#+20
   \   0000019A   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    130              sePPORT_EnableChatteringFilter( INPORT17 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   0000019E   0x2041             MOVS     R0,#+65
   \   000001A0   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    131              sePPORT_EnableChatteringFilter( INPORT18 );		// É`ÉÉÉ^ÉäÉìÉOÉtÉBÉãÉ^Å[
   \   000001A4   0x2005             MOVS     R0,#+5
   \   000001A6   0x.... 0x....      BL       sePPORT_EnableChatteringFilter
    132          }
   \   000001AA   0xBD01             POP      {R0,PC}          ;; return
    133          
    134          
    135          /********************************************************************/
    136          /*!
    137           * \name	gpio_set_port
    138           * \brief	éwíËPORTÇ…èoóÕÇ∑ÇÈ
    139           * \param	port   : éwíËPORT
    140           *          action : 1: High, 0:Low
    141           * \return  Ç»Çµ
    142           * \note	àŸèÌÇ»ílÇéwíËÇµÇΩèÍçáÅAâΩÇ‡çsÇÌÇ»Ç¢
    143           */
    144          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    145          void gpio_set_port( sePPORT_Id port , int32_t action ) 
    146          {
   \                     gpio_set_port: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    147          	sePPORT_Id portId;
    148                  
    149                 if(usb_log_flag & LOG_FLAG_LTE)
   \   00000006   0x....             LDR      R0,??DataTable0
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x0780             LSLS     R0,R0,#+30
   \   0000000C   0xD52E             BPL      ??gpio_set_port_0
    150                  {
    151                    if(port == OUTPORT13 )
   \   0000000E   0xB2E4             UXTB     R4,R4
   \   00000010   0x2C15             CMP      R4,#+21
   \   00000012   0xD10C             BNE      ??gpio_set_port_1
    152                    {
    153                      sprintf((char *)print_buf,"LTE_PWR:%d\r\n",action);
   \   00000014   0x002A             MOVS     R2,R5
   \   00000016   0x....             LDR      R1,??DataTable0_1
   \   00000018   0x....             LDR      R0,??DataTable0_2
   \   0000001A   0x.... 0x....      BL       sprintf
    154                      sysmgr_log(print_buf,strlen((char *)print_buf));
   \   0000001E   0x....             LDR      R0,??DataTable0_2
   \   00000020   0x.... 0x....      BL       strlen
   \   00000024   0x0001             MOVS     R1,R0
   \   00000026   0x....             LDR      R0,??DataTable0_2
   \   00000028   0x.... 0x....      BL       sysmgr_log
   \   0000002C   0xE01E             B        ??gpio_set_port_0
    155                    } else if(port == OUTPORT4 ) {
   \                     ??gpio_set_port_1: (+1)
   \   0000002E   0xB2E4             UXTB     R4,R4
   \   00000030   0x2C35             CMP      R4,#+53
   \   00000032   0xD10C             BNE      ??gpio_set_port_2
    156                      sprintf((char *)print_buf,"LTE_RST:%d\r\n",action);
   \   00000034   0x002A             MOVS     R2,R5
   \   00000036   0x....             LDR      R1,??DataTable0_3
   \   00000038   0x....             LDR      R0,??DataTable0_2
   \   0000003A   0x.... 0x....      BL       sprintf
    157                      sysmgr_log(print_buf,strlen((char *)print_buf));
   \   0000003E   0x....             LDR      R0,??DataTable0_2
   \   00000040   0x.... 0x....      BL       strlen
   \   00000044   0x0001             MOVS     R1,R0
   \   00000046   0x....             LDR      R0,??DataTable0_2
   \   00000048   0x.... 0x....      BL       sysmgr_log
   \   0000004C   0xE00E             B        ??gpio_set_port_0
    158                    } else if(port == OUTPORT3 ) {
   \                     ??gpio_set_port_2: (+1)
   \   0000004E   0xB2E4             UXTB     R4,R4
   \   00000050   0x2C21             CMP      R4,#+33
   \   00000052   0xD10B             BNE      ??gpio_set_port_0
    159                      sprintf((char *)print_buf,"LTE_DTR:%d\r\n",action);
   \   00000054   0x002A             MOVS     R2,R5
   \   00000056   0x....             LDR      R1,??DataTable0_4
   \   00000058   0x....             LDR      R0,??DataTable0_2
   \   0000005A   0x.... 0x....      BL       sprintf
    160                      sysmgr_log(print_buf,strlen((char *)print_buf));
   \   0000005E   0x....             LDR      R0,??DataTable0_2
   \   00000060   0x.... 0x....      BL       strlen
   \   00000064   0x0001             MOVS     R1,R0
   \   00000066   0x....             LDR      R0,??DataTable0_2
   \   00000068   0x.... 0x....      BL       sysmgr_log
    161                    }
    162                  }      
    163          	if (action == 1) {
   \                     ??gpio_set_port_0: (+1)
   \   0000006C   0x2D01             CMP      R5,#+1
   \   0000006E   0xD105             BNE      ??gpio_set_port_3
    164          		sePPORT_SetOutput( port, sePPORT_DATA_HIGH );
   \   00000070   0x2101             MOVS     R1,#+1
   \   00000072   0x0020             MOVS     R0,R4
   \   00000074   0xB2C0             UXTB     R0,R0
   \   00000076   0x.... 0x....      BL       sePPORT_SetOutput
   \   0000007A   0xE006             B        ??gpio_set_port_4
    165          	}
    166          	else if (action == 0) {
   \                     ??gpio_set_port_3: (+1)
   \   0000007C   0x2D00             CMP      R5,#+0
   \   0000007E   0xD104             BNE      ??gpio_set_port_4
    167          		sePPORT_SetOutput( port, sePPORT_DATA_LOW );
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x0020             MOVS     R0,R4
   \   00000084   0xB2C0             UXTB     R0,R0
   \   00000086   0x.... 0x....      BL       sePPORT_SetOutput
    168          	}
    169          }
   \                     ??gpio_set_port_4: (+1)
   \   0000008A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    170          
    171          
    172          /********************************************************************/
    173          /*!
    174           * \name	gpio_get_port
    175           * \brief	éwíËPORTÇÃèÛë‘ÇéÊìæÇ∑ÇÈ
    176           * \param	port   : éwíËPORT
    177           * \return   0: LOW
    178           *           1: HIGH
    179           * \note	
    180           */
    181          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    182          int32_t gpio_get_port( sePPORT_Id port ) 
    183          {
   \                     gpio_get_port: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    184             return sePPORT_GetInput( port );
   \   00000002   0xB2C0             UXTB     R0,R0
   \   00000004   0x.... 0x....      BL       sePPORT_GetInput
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
    185          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     usb_log_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     print_buf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x4C 0x54          DC8 "LTE_PWR:%d\015\012"
   \              0x45 0x5F    
   \              0x50 0x57    
   \              0x52 0x3A    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x4C 0x54          DC8 "LTE_RST:%d\015\012"
   \              0x45 0x5F    
   \              0x52 0x53    
   \              0x54 0x3A    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x4C 0x54          DC8 "LTE_DTR:%d\015\012"
   \              0x45 0x5F    
   \              0x44 0x54    
   \              0x52 0x3A    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    186          
    187          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   gpio_get_port
         8   -> sePPORT_GetInput
       8   gpio_init
         8   -> sePPORT_DisableInt
         8   -> sePPORT_EnableChatteringFilter
         8   -> sePPORT_InitAsInput
         8   -> sePPORT_InitAsOutput
         8   -> sePPORT_SetOutput
      16   gpio_set_port
        16   -> sePPORT_SetOutput
        16   -> sprintf
        16   -> strlen
        16   -> sysmgr_log


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
      16  ?_0
      16  ?_1
      16  ?_2
      10  gpio_get_port
     428  gpio_init
     140  gpio_set_port

 
  48 bytes in section .rodata
 598 bytes in section .text
 
 598 bytes of CODE  memory
  48 bytes of CONST memory

Errors: none
Warnings: none
