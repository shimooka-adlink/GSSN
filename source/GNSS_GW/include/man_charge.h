
/**
  ******************************************************************************
  * @file    man_charge.h
  * @author  コア
  * @version V1.0
  * @date    2017.10.2
  * @brief   充電開始・充電終了・外部電源ON・外部電源OFFを管理する
  ******************************************************************************
  $Id: man_charge.h 246 2018-07-27 06:18:43Z shitaoka $
  * @attention
  *
  *****************************************************************************
*/

#ifndef _MAN_CHARGE_H_
#define _MAN_CHARGE_H_


// 充電ステータス
#define	MAN_CHARGE_STAT_NON		0x00		// その他
#define	MAN_CHARGE_STAT_CHARGE	0x01		// 充電開始
#define	MAN_CHARGE_STAT_DONE	0x02		// 充電終了

// 外部電源ステータス
#define	MAN_CHARGE_EXTSTAT_OFF	0x00		// 外部電源OFF
#define	MAN_CHARGE_EXTSTAT_ON	0x01		// 外部電源ON


/********************************************************************/
/*!
 * \name	man_charge_init
 * \brief	充電情報管理の初期化処理
 * \param	なし
 * \return   0: 正常
 *          -1: 異常
 * \note	起動時に、呼ばれること
 */
/********************************************************************/
extern int32_t man_charge_init(void);


/********************************************************************/
/*!
 * \name	man_charge_1000ms_main
 * \brief	充電情報管理のmain処理
 * \param	なし
 * \return  なし
 * \note	1000ms毎に呼ばれること
 */
/********************************************************************/
extern void man_charge_1000ms_main(void);

/********************************************************************/
/*!
 * \name	man_charge_get_data
 * \brief	保持している充電情報の取得
 * \param	charge_state : 充電情報
 *                          0x00 : その他
 *                          0x01 : 充電開始
 *                          0x02 : 充電終了
 *          ext_state    : 外部電源ON/OFF情報
 *                          0x00 : 外部電源OFF
 *                          0x01 : 外部電源ON
 * \return   0: 正常
 *          -1: 異常
 * \note	必要時に呼ばれること
 */
/********************************************************************/
extern int32_t man_charge_get_data(uint32_t *charge_state, uint32_t *ext_state);

/********************************************************************/
/*!
 * \name	man_charge_active
 * \brief	充電情報管理のアクティブモード処理
 * \param	なし
 * \return   0: 正常
 *          -1: 異常
 * \note	スタンバイ -> アクティブ時に、呼ばれること
 */
/********************************************************************/
extern int32_t man_charge_active(void);

/********************************************************************/
/*!
 * \name	man_charge_standby
 * \brief	充電情報管理のスタンバイモード処理
 * \param	なし
 * \return   0: 正常
 *          -1: 異常
 * \note	アクティブ -> スタンバイ時に、呼ばれること
 */
/********************************************************************/
extern int32_t man_charge_standby(void);

/********************************************************************/
/*!
 * \name	man_charge_noti_voltage
 * \brief	現在の電源電圧を通知する処理
 * \param	voltage : 取得した電源電圧
 * \return  なし
 * \note	電源電圧の取得が出来た時点でレジスタTEを決定する
 */
/********************************************************************/
extern void man_charge_noti_voltage(int32_t voltage);

/********************************************************************/
/*!
 * \name	man_charge_disp_info
 * \brief	充電管理情報を表示する処理
 * \param	なし
 * \return  なし
 * \note	必要時に、呼ばれること
 */
/********************************************************************/
extern void man_charge_disp_info( void );

/********************************************************************/
/*!
 * \name	man_charge_expow_get
 * \brief	外部電源ON/OFFを取得する
 * \param	なし
 * \return  外部電源ON/OFF状態
 * \note	必要時、呼ばれること
 */
/********************************************************************/
extern int32_t man_charge_expow_get( void );

/********************************************************************/
/*!
 * \name	man_MAN_usb_expow_usb_get
 * \brief	外部電源(USB)ON/OFFを取得する
 * \param	なし
 * \return  外部電源(USB)ON/OFF状態
 * \note	必要時、呼ばれること
 */
/********************************************************************/
extern int32_t man_charge_expow_usb_get( void );

#endif	// _MAN_CHARGE_H_


