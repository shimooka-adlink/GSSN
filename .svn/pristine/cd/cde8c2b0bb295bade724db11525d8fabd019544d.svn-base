###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       17/May/2019  13:31:49
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\middle\mid_GPS.c
#    Command line =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\middle\mid_GPS.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_A -lCN
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List
#        -lA
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List\mid_GPS.lst
#    Object file  =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\Obj\mid_GPS.o
#
###############################################################################

C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\middle\mid_GPS.c
      1          
      2          /**
      3            ******************************************************************************
      4            * @file    mid_GPS.c
      5            * @author  コア
      6            * @version V1.0
      7            * @date    2017.10.2
      8            * @brief   GPSを制御する。
      9            ******************************************************************************
     10            $Id: mid_GPS.c 225 2018-07-18 03:46:15Z shitaoka $
     11            * @attention
     12            *
     13            *****************************************************************************
     14          */ 
     15          
     16          
     17          #include <string.h>
     18          #include <stdio.h>
     19          #include <stdlib.h>
     20          #include "board.h"
     21          #include "man_rtc.h"
     22          #include "man_error.h"
     23          #include "ctrl_CXD5600GF.h"
     24          #include "gnss_gw_common.h"
     25          #include "mid_GPS.h"
     26          
     27          
     28          #pragma section = "MID_PRG_BLOCK"
     29          
     30          
     31          
     32          #define	MID_GPS_RETRY_MAX				2		// GPSコマンドのリトライ回数
     33          
     34          
     35          // GPSからのコマンド応答結果
     36          typedef enum {
     37          	// 発生の可能性がある
     38          	MID_GPS_CMDSTS_OK,					// 00 : 正常受信
     39          
     40          	// リトライするエラー
     41          	MID_GPS_CMDSTS_ERR,					// 01 : ERR受信
     42          	MID_GPS_CMDSTS_RETRY,				// 02 : 再送依頼
     43          	MID_GPS_CMDSTS_TIMEOUT,				// 03 : タイムアウト
     44          	MID_GPS_CMDSTS_LENERR,				// 04 : データ長異常
     45          
     46          	// 発生しない(処理中止)
     47          	MID_GPS_CMDSTS_UNKNOWN,				// 05 : 未知の応答データ
     48          	MID_GPS_CMDSTS_FAULT,				// 06 : status異常
     49          	MID_GPS_CMDSTS_IDERR				// 07 : ID異常
     50          } mid_gps_cmdsts_def;
     51          
     52          
     53          // GPS制御シーケンス
     54          typedef enum {
     55          	MID_GPS_SEQ_READY,				    // 00 : 要求待ち
     56          	MID_GPS_SEQ_CS_RESP_GSTP, 			// 01 :コールドスタート IDLEモード(GSTP)コマンドの応答待ち
     57          	MID_GPS_SEQ_CS_RESP_VER, 			// 02 :コールドスタート ファームウエアリビジョン番号取得(VER)コマンドの応答待ち
     58          	MID_GPS_SEQ_CS_RESP_BSSL, 			// 03 :コールドスタート 出力センテンス選択(BSSL)コマンドの応答待ち
     59          	MID_GPS_SEQ_CS_RESP_GNS, 			// 04 : コールドスタート 測位使用衛星設定(GNS)コマンドの応答待ち
     60          	MID_GPS_SEQ_CS_RESP_ISIC, 			// 05 : コールドスタート IME最大チャンネル数設定(ISIC)コマンドの応答待ち
     61          	MID_GPS_SEQ_CS_RESP_GCD, 			// 06 : コールドスタート コールドスタート(GCD)コマンドの応答待ち
     62          
     63          	MID_GPS_SEQ_HS_RESP_BRES, 			// 07 : ホットスタート   FLASH復帰(BRES)コマンドの応答待ち
     64          	MID_GPS_SEQ_HS_RESP_GTIM, 			// 08 : ホットスタート   時刻設定(GTIM)コマンドの応答待ち
     65          	MID_GPS_SEQ_HS_RESP_VER, 			// 09 : ホットスタート   ファームウエアリビジョン番号取得(VER)コマンドの応答待ち
     66          	MID_GPS_SEQ_HS_RESP_BSSL, 			// 10 : ホットスタート   出力センテンス選択(BSSL)コマンドの応答待ち
     67          	MID_GPS_SEQ_HS_RESP_GNS, 			// 11 : ホットスタート   測位使用衛星設定(GNS)コマンドの応答待ち
     68          	MID_GPS_SEQ_HS_RESP_ISIC, 			// 12 : ホットスタート   IME最大チャンネル数設定(ISIC)コマンドの応答待ち
     69          	MID_GPS_SEQ_HS_RESP_GSP, 			// 13 : ホットスタート   ホットスタート(GSP)コマンドの応答待ち
     70          
     71          	MID_GPS_SEQ_OF_RESP_GSTP, 			// 14 : GPS電源OFF       IDLEモード(GSTP)コマンドの応答待ち
     72          	MID_GPS_SEQ_OF_RESP_BUP, 			// 15 : GPS電源OFF       バックアップデータ保存(BUP)コマンドの応答待ち
     73          
     74          	MID_GPS_SEQ_SP_RESP_GSTP, 			// 16 : SLEEP            IDLEモード(GSTP)コマンドの応答待ち
     75          	MID_GPS_SEQ_SP_RESP_BUP, 			// 17 : SLEEP            バックアップデータ保存(BUP)コマンドの応答待ち
     76          	MID_GPS_SEQ_SP_RESP_SLP, 			// 18 : SLEEP            SLEEP(SLP)コマンドの応答待ち
     77          
     78          	MID_GPS_SEQ_WU_RESP_WUP, 			// 19 : WAKE UP          起床(WUP)コマンドの応答待ち
     79          	MID_GPS_SEQ_WU_RESP_BRES, 			// 20 : WAKE UP          FLASH復帰(BRES)コマンドの応答待ち
     80          	MID_GPS_SEQ_WU_RESP_GSP, 			// 21 : WAKE UP          ホットスタート(GSP)コマンドの応答待ち
     81          
     82          	MID_GPS_SEQ_IL_RESP_GSTP,			// 22 : IDLE             IDLEモード(GSTP)コマンドの応答待ち
     83          	MID_GPS_SEQ_EX_RESP_GSP,			// 23 : EXEC             ホットスタート(GSP)コマンドの応答待ち
     84          
     85          	MID_GPS_SEQ_FW_RESP_FER, 			// 24 : FW更新           Flashメモリー消去(FER)コマンドの応答待ち
     86          	MID_GPS_SEQ_FW_RESP_UDL, 			// 25 : FW更新           アップデータ・ダウンロード(udl)コマンドの応答待ち
     87          	MID_GPS_SEQ_FW_RESP_UPDATER, 		// 26 : FW更新           updaterパケットの応答待ち
     88          	MID_GPS_SEQ_FW_RESP_FDL,			// 27 : FW更新           ファームウェア・ダウンロード(fdl)コマンドの応答待ち
     89          	MID_GPS_SEQ_FW_RESP_CONFIG, 		// 28 : FW更新           コンフィギュレーションデータパケットの応答待ち
     90          	MID_GPS_SEQ_FW_RESP_FIRMWARE, 		// 29 : FW更新           ファームウェアパケットの応答待ち
     91          	MID_GPS_SEQ_FW_RESP_FUD, 			// 30 : FW更新           強制アップデータ・ダウンロード(fud)コマンドの応答待ち
     92          	MID_GPS_SEQ_FW_RESP_PKT_NEXT, 		// 31 : FW更新           パケットデータ送信完了待ち
     93          	MID_GPS_SEQ_FW_RESP_PKT_END, 		// 32 : FW更新           パケットデータの送信＆応答待ち
     94          	MID_GPS_SEQ_FW_RESP_UDL2,			// 33 : FW更新           アップデータ・ダウンロード(udl)コマンドの応答待ち
     95          	MID_GPS_SEQ_FW_RESP_FDL2,			// 34 : FW更新           ファームウェア・ダウンロード(fdl)コマンドの応答待ち
     96          } mid_gps_seq_def;
     97          
     98          
     99          
    100          
    101          
    102          
    103          
    104          typedef struct _mid_gps_resp_info_t {
    105          	int32_t					flag;				// 応答ありフラグ
    106          	mid_gps_cmdsts_def		cmdsts;				// コマンドステータス
    107          	int32_t					id;					// 応答ID
    108          	int32_t					errcode;			// エラーコード
    109          	uint8_t					version[GPS_VER_MAX];		// 受信バージョン
    110          	int32_t					ver_len;			// バージョン長
    111          } mid_gps_resp_info_t;
    112          
    113          
    114          // 要求
    115          typedef struct _mid_gps_req_info_t {
    116          	int32_t					id;					// ユニークID
    117          	uint8_t					*data;				// 送信データ
    118          	int32_t					length;				// 送信データ長
    119          	func_gps_cmd			callback;			// 結果を通知するcallback関数
    120          } mid_gps_req_info_t;
    121          
    122          // 受信データ通知先情報
    123          typedef struct _mid_gps_noti_resp_t {
    124          	int32_t					id;					// ユニークID
    125          	func_gps_noti_resp		callback;			// 受信データを通知するcallback関数
    126          } mid_gps_noti_resp_t;
    127          
    128          
    129          // GPSワーク
    130          typedef struct _mid_gps_work_t {
    131          	mid_gps_req_info_t		request;			// 要求
    132          	mid_gps_seq_def			sequence;			// シーケンス
    133          	mid_gps_cmdsts_def		cmdsts;				// コマンドステータス
    134          
    135          	mid_gps_noti_resp_t		recv_noti_resp;		// 受信データ通知先情報
    136          
    137          	uint8_t					version[GPS_VER_MAX];		// バージョン
    138          	int32_t					ver_len;			// バージョン長
    139          	uint32_t				retry;				// リトライ回数
    140          	int32_t					retry_req;			// リトライ要求
    141          	mid_gps_resp_info_t		resp_info;			// 応答結果
    142          } mid_gps_work_t;
    143          
    144          
    145          /************************************************************************/
    146          /* definition of variables                                              */
    147          /************************************************************************/
    148          

   \                                 In section .bss, align 4
    149          static mid_gps_work_t		mid_gps_work;		// GPS用変数
   \                     mid_gps_work:
   \   00000000                      DS8 84
    150          
    151          
    152          
    153          // コマンド・レスポンステーブル
    154          typedef struct _ctrl_cxd5600_cmd_tbl_t {
    155          	int32_t				id;				// シーケンス
    156          	uint8_t				*cmd;			// コマンド
    157          	uint8_t				*resp_ok1;		// 正常応答1
    158          	uint8_t				*resp_ok2;		// 正常応答2
    159          	mid_gps_cmdsts_def	ok2_status;		// ok2時のステータス
    160          	uint8_t				*resp_ng;		// エラー応答
    161          	uint8_t				type;			// 1応答/2応答/3データ/4データ(応答なし)
    162          	uint8_t				option;			// 0なし/1 time付加
    163          	uint32_t			timeout;		// time out時間
    164          } ctrl_cxd5600_cmd_tbl_t;
    165          

   \                                 In section .rodata, align 4
    166          static const ctrl_cxd5600_cmd_tbl_t cmd_tbl[] = {
   \                     cmd_tbl:
   \   00000000   0x00000001         DC32 1, ?_0, ?_1, 0H
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000014   0x........         DC32 ?_2
   \   00000018   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000001C   0x000007D0         DC32 2000, 2, ?_3, ?_4, 0H
   \              0x00000002   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000034   0x........         DC32 ?_5
   \   00000038   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   0000003C   0x000000C8         DC32 200, 3, ?_6, ?_7, 0H
   \              0x00000003   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000050   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000054   0x........         DC32 ?_8
   \   00000058   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000005C   0x000000C8         DC32 200, 4, ?_9, ?_10, 0H
   \              0x00000004   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000070   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000074   0x........         DC32 ?_11
   \   00000078   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000007C   0x000000C8         DC32 200, 5, ?_12, ?_13, 0H
   \              0x00000005   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000090   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000094   0x........         DC32 ?_14
   \   00000098   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000009C   0x000000C8         DC32 200, 6, ?_15, ?_16, 0H
   \              0x00000006   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000000B0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000B4   0x........         DC32 ?_14
   \   000000B8   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000000BC   0x000003E8         DC32 1000, 7, ?_17, ?_18, 0H
   \              0x00000007   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000000D0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000D4   0x........         DC32 ?_19
   \   000000D8   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000000DC   0x000000C8         DC32 200, 8, ?_20, ?_21, 0H
   \              0x00000008   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000000F0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000000F4   0x........         DC32 ?_22
   \   000000F8   0x01 0x01          DC8 1, 1, 0, 0
   \              0x00 0x00    
   \   000000FC   0x000000C8         DC32 200, 9, ?_3, ?_4, 0H
   \              0x00000009   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000110   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000114   0x........         DC32 ?_5
   \   00000118   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   0000011C   0x000000C8         DC32 200, 10, ?_6, ?_7, 0H
   \              0x0000000A   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000130   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000134   0x........         DC32 ?_8
   \   00000138   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000013C   0x000000C8         DC32 200, 11, ?_9, ?_10, 0H
   \              0x0000000B   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000150   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000154   0x........         DC32 ?_11
   \   00000158   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000015C   0x000000C8         DC32 200, 12, ?_12, ?_13, 0H
   \              0x0000000C   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000170   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000174   0x........         DC32 ?_14
   \   00000178   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000017C   0x000000C8         DC32 200, 13, ?_23, ?_24, 0H
   \              0x0000000D   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000190   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000194   0x........         DC32 ?_25
   \   00000198   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000019C   0x000003E8         DC32 1000, 14, ?_0, ?_1, 0H
   \              0x0000000E   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000001B0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000001B4   0x........         DC32 ?_2
   \   000001B8   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000001BC   0x000007D0         DC32 2000, 15, ?_26, ?_27, 0H
   \              0x0000000F   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000001D0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000001D4   0x........         DC32 ?_28
   \   000001D8   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000001DC   0x000001F4         DC32 500, 16, ?_0, ?_1, 0H
   \              0x00000010   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000001F0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000001F4   0x........         DC32 ?_2
   \   000001F8   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000001FC   0x000007D0         DC32 2000, 17, ?_26, ?_27, 0H
   \              0x00000011   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000210   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000214   0x........         DC32 ?_28
   \   00000218   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000021C   0x000001F4         DC32 500, 18, ?_29, ?_30, 0H
   \              0x00000012   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000230   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000234   0x........         DC32 ?_31
   \   00000238   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000023C   0x000000C8         DC32 200, 19, ?_32, ?_33, 0H
   \              0x00000013   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000250   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000254   0x........         DC32 ?_34
   \   00000258   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000025C   0x000000C8         DC32 200, 20, ?_17, ?_18, 0H
   \              0x00000014   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000270   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000274   0x........         DC32 ?_19
   \   00000278   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000027C   0x000000C8         DC32 200, 21, ?_23, ?_24, 0H
   \              0x00000015   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000290   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000294   0x........         DC32 ?_25
   \   00000298   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000029C   0x000003E8         DC32 1000, 22, ?_0, ?_1, 0H
   \              0x00000016   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000002B0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000002B4   0x........         DC32 ?_2
   \   000002B8   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000002BC   0x000007D0         DC32 2000, 23, ?_23, ?_24, 0H
   \              0x00000017   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000002D0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000002D4   0x........         DC32 ?_25
   \   000002D8   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000002DC   0x000003E8         DC32 1000, 24, ?_35, ?_36, 0H
   \              0x00000018   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000002F0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000002F4   0x........         DC32 ?_37
   \   000002F8   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000002FC   0x00000BB8         DC32 3000, 25, ?_38, ?_39, 0H
   \              0x00000019   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000310   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000314   0x........         DC32 ?_40
   \   00000318   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000031C   0x00000BB8         DC32 3000, 26, ?_38, ?_39, 0H
   \              0x0000001A   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000330   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000334   0x........         DC32 ?_40
   \   00000338   0x03 0x00          DC8 3, 0, 0, 0
   \              0x00 0x00    
   \   0000033C   0x00002710         DC32 10000, 27, ?_41, ?_39, 0H
   \              0x0000001B   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000350   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000354   0x........         DC32 ?_42
   \   00000358   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000035C   0x00000BB8         DC32 3000, 28, ?_41, ?_39, 0H
   \              0x0000001C   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000370   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000374   0x........         DC32 ?_42
   \   00000378   0x03 0x00          DC8 3, 0, 0, 0
   \              0x00 0x00    
   \   0000037C   0x00002710         DC32 10000, 29, ?_41, ?_39, ?_43
   \              0x0000001D   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000390   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000394   0x........         DC32 ?_42
   \   00000398   0x03 0x00          DC8 3, 0, 0, 0
   \              0x00 0x00    
   \   0000039C   0x00002710         DC32 10000, 30, ?_44, ?_45, 0H
   \              0x0000001E   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000003B0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000003B4   0x........         DC32 ?_46
   \   000003B8   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000003BC   0x000001F4         DC32 500, 31, ?_41, ?_39, 0H
   \              0x0000001F   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   000003D0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000003D4   0x........         DC32 ?_42
   \   000003D8   0x04 0x00          DC8 4, 0, 0, 0
   \              0x00 0x00    
   \   000003DC   0x00002710         DC32 10000, 32, ?_41, ?_39, ?_43
   \              0x00000020   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000003F0   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   000003F4   0x........         DC32 ?_42
   \   000003F8   0x03 0x00          DC8 3, 0, 0, 0
   \              0x00 0x00    
   \   000003FC   0x00002710         DC32 10000, 33, ?_38, ?_39, 0H
   \              0x00000021   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000410   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000414   0x........         DC32 ?_40
   \   00000418   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000041C   0x00000BB8         DC32 3000, 34, ?_41, ?_39, 0H
   \              0x00000022   
   \              0x........   
   \              0x........   
   \              0x00000000   
   \   00000430   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000434   0x........         DC32 ?_42
   \   00000438   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000043C   0x00000BB8         DC32 3000
    167          //	シーケンス						コマンド						正常応答1		正常応答2		ok2時のステータス		エラー応答		type	option	timeout
    168          	{MID_GPS_SEQ_CS_RESP_GSTP,	 	"@GSTP\r\n",					 "[GSTP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GSTP] Err",	1,		0,		2000},
    169          	{MID_GPS_SEQ_CS_RESP_VER,	 	"@VER\r\n",						 "[VER] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[VER] Err",	2,		0,		200},
    170          	{MID_GPS_SEQ_CS_RESP_BSSL,	 	"@BSSL 0x340FF\r\n",			 "[BSSL] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[BSSL] Err",	1,		0,		200},
    171          	{MID_GPS_SEQ_CS_RESP_GNS,	 	"@GNS 0x3B\r\n",				 "[GNS] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GNS] Err",	1,		0,		200},
    172          	{MID_GPS_SEQ_CS_RESP_ISIC,	 	"@ISIC 4\r\n",					 "[ISIC] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[ISIC] Err",	1,		0,		200},
    173          	{MID_GPS_SEQ_CS_RESP_GCD,	 	"@GCD\r\n",						 "[GCD] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[ISIC] Err",	1,		0,		1000},
    174          
    175          	{MID_GPS_SEQ_HS_RESP_BRES,	 	"@BRES\r\n",					 "[BRES] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[BRES] Err",	1,		0,		200},
    176          	{MID_GPS_SEQ_HS_RESP_GTIM,	 	"@GTIM 2017 08 09 16 00 30\r\n", "[GTIM] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GTIM] Err",	1,		1,		200},
    177          	{MID_GPS_SEQ_HS_RESP_VER,	 	"@VER\r\n",						 "[VER] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[VER] Err",	2,		0,		200},
    178          	{MID_GPS_SEQ_HS_RESP_BSSL,	 	"@BSSL 0x340FF\r\n",			 "[BSSL] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[BSSL] Err",	1,		0,		200},
    179          	{MID_GPS_SEQ_HS_RESP_GNS,	 	"@GNS 0x3B\r\n",				 "[GNS] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GNS] Err",	1,		0,		200},
    180          	{MID_GPS_SEQ_HS_RESP_ISIC,	 	"@ISIC 4\r\n",					 "[ISIC] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[ISIC] Err",	1,		0,		200},
    181          	{MID_GPS_SEQ_HS_RESP_GSP,	 	"@GSP\r\n",						 "[GSP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GSP] Err",	1,		0,		1000},
    182          
    183          	{MID_GPS_SEQ_OF_RESP_GSTP,	 	"@GSTP\r\n",					 "[GSTP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GSTP] Err",	1,		0,		2000},
    184          	{MID_GPS_SEQ_OF_RESP_BUP,	 	"@BUP\r\n",						 "[BUP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[BUP] Err",	1,		0,		500},
    185          
    186          	{MID_GPS_SEQ_SP_RESP_GSTP,	 	"@GSTP\r\n",					 "[GSTP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GSTP] Err",	1,		0,		2000},
    187          	{MID_GPS_SEQ_SP_RESP_BUP,	 	"@BUP\r\n",						 "[BUP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[BUP] Err",	1,		0,		500},
    188          	{MID_GPS_SEQ_SP_RESP_SLP,	 	"@SLP 1\r\n",					 "[SLP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[SLP] Err",	1,		0,		200},
    189          
    190          	{MID_GPS_SEQ_WU_RESP_WUP,	 	"@WUP\r\n",						 "[WUP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[WUP] Err",	1,		0,		200},
    191          	{MID_GPS_SEQ_WU_RESP_BRES,	 	"@BRES\r\n",					 "[BRES] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[BRES] Err",	1,		0,		200},
    192          	{MID_GPS_SEQ_WU_RESP_GSP,	 	"@GSP\r\n",						 "[GSP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GSP] Err",	1,		0,		1000},
    193          
    194          	{MID_GPS_SEQ_IL_RESP_GSTP,	 	"@GSTP\r\n",					 "[GSTP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GSTP] Err",	1,		0,		2000},
    195          	{MID_GPS_SEQ_EX_RESP_GSP,	 	"@GSP\r\n",						 "[GSP] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[GSP] Err",	1,		0,		1000},
    196          	
    197          	{MID_GPS_SEQ_FW_RESP_FER,	 	"@FER\r\n",						 "[FER] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[FER] Err",	1,		0,		3000},
    198          	{MID_GPS_SEQ_FW_RESP_UDL,	 	"@udl\r\n",						 "[cmd] Ready",	 NULL,			MID_GPS_CMDSTS_OK,		"[udl] Err",	1,		0,		3000},
    199          	{MID_GPS_SEQ_FW_RESP_UPDATER,	"@udl\r\n",						 "[cmd] Ready",	 NULL,			MID_GPS_CMDSTS_OK,		"[udl] Err",	3,		0,		10000},
    200          	{MID_GPS_SEQ_FW_RESP_FDL,	 	"@fdl\r\n",						 "[cmd] Ready",	 NULL,			MID_GPS_CMDSTS_OK,		"[fdl] Err",	1,		0,		3000},
    201          	{MID_GPS_SEQ_FW_RESP_CONFIG,	"@fdl\r\n",						 "[cmd] Ready",	 NULL,			MID_GPS_CMDSTS_OK,		"[fdl] Err",	3,		0,		10000},
    202          	{MID_GPS_SEQ_FW_RESP_FIRMWARE,	"@fdl\r\n",						 "[cmd] Ready",	 "[fdl] Resnd",	MID_GPS_CMDSTS_RETRY,	"[fdl] Err",	3,		0,		10000},
    203          	{MID_GPS_SEQ_FW_RESP_FUD,	 	"@fud\r\n",						 "[fud] Done",	 NULL,			MID_GPS_CMDSTS_OK,		"[fud] Err",	1,		0,		500},
    204          	{MID_GPS_SEQ_FW_RESP_PKT_NEXT,	"@fdl\r\n",						 "[cmd] Ready",	 NULL,			MID_GPS_CMDSTS_OK,		"[fdl] Err",	4,		0,		10000},
    205          	{MID_GPS_SEQ_FW_RESP_PKT_END,	"@fdl\r\n",						 "[cmd] Ready",	 "[fdl] Resnd",	MID_GPS_CMDSTS_RETRY,	"[fdl] Err",	3,		0,		10000},
    206          	{MID_GPS_SEQ_FW_RESP_UDL2,	 	"@udl\r\n",						 "[cmd] Ready",	 NULL,			MID_GPS_CMDSTS_OK,		"[udl] Err",	1,		0,		3000},
    207          	{MID_GPS_SEQ_FW_RESP_FDL2,	 	"@fdl\r\n",						 "[cmd] Ready",	 NULL,			MID_GPS_CMDSTS_OK,		"[fdl] Err",	1,		0,		3000},
    208          };
    209          
    210          
    211          // OTAコマンド・レスポンステーブル
    212          typedef struct _ctrl_cxd5600_data_tbl_t {
    213          	uint8_t		*resp;			// 応答
    214          	int32_t		status;			// 結果
    215          } ctrl_cxd5600_data_tbl_t;
    216          
    217          // OTAデータ・レスポンステーブル

   \                                 In section .rodata, align 4
    218          static const ctrl_cxd5600_data_tbl_t data_tbl[2] = {
   \                     data_tbl:
   \   00000000   0x........         DC32 ?_47, 1, ?_48, 2
   \              0x00000001   
   \              0x........   
   \              0x00000002   
    219          	{	"[udl] Done-",	MID_GPS_OTA_RESP_UDL_END		},	// UDL END
    220          	{	"[fdl] Done-",	MID_GPS_OTA_RESP_FDL_END		},	// FDL END
    221          };
    222          
    223          
    224          static void mid_GPS_resp_check(uint8_t *data, int32_t length, int32_t id, int32_t status);
    225          static void mid_GPS_resp_check2(uint8_t *data1, int32_t length1, uint8_t *data2, int32_t length2, int32_t id, int32_t status);
    226          static void mid_GPS_resp_check4(int32_t id, int32_t status);
    227          
    228          
    229          /********************************************************************/
    230          /*	callback関数                                                    */
    231          /********************************************************************/
    232          
    233          /********************************************************************/
    234          /*!
    235           * \name	mid_GPS_callback
    236           * \brief	callback処理
    237           * \param	data   : 受信データ
    238           *          length : データ長
    239           *          id     : ユニークID
    240           *          status : 受信結果
    241           * \return  なし
    242           * \note	必要時に、呼ばれること
    243           */
    244          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    245          static void mid_GPS_callback(uint8_t *data, int32_t length, int32_t id, int32_t status)
    246          {
   \                     mid_GPS_callback: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    247          	if ( (cmd_tbl[id-1].type == 1) || (cmd_tbl[id-1].type == 3) ) {
   \   00000002   0x....             LDR      R4,??DataTable4
   \   00000004   0x2520             MOVS     R5,#+32
   \   00000006   0x4355             MULS     R5,R2,R5
   \   00000008   0x1964             ADDS     R4,R4,R5
   \   0000000A   0x3C08             SUBS     R4,R4,#+8
   \   0000000C   0x7824             LDRB     R4,[R4, #+0]
   \   0000000E   0x2C01             CMP      R4,#+1
   \   00000010   0xD007             BEQ      ??mid_GPS_callback_0
   \   00000012   0x....             LDR      R4,??DataTable4
   \   00000014   0x2520             MOVS     R5,#+32
   \   00000016   0x4355             MULS     R5,R2,R5
   \   00000018   0x1964             ADDS     R4,R4,R5
   \   0000001A   0x3C08             SUBS     R4,R4,#+8
   \   0000001C   0x7824             LDRB     R4,[R4, #+0]
   \   0000001E   0x2C03             CMP      R4,#+3
   \   00000020   0xD101             BNE      ??mid_GPS_callback_1
    248          		mid_GPS_resp_check(data, length, id, status);
   \                     ??mid_GPS_callback_0: (+1)
   \   00000022   0x.... 0x....      BL       mid_GPS_resp_check
    249          	}
    250          }
   \                     ??mid_GPS_callback_1: (+1)
   \   00000026   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    251          
    252          
    253          /********************************************************************/
    254          /*!
    255           * \name	mid_GPS_callback2
    256           * \brief	callback2処理
    257           * \param	data1   : 受信データ
    258           *          length1 : データ長
    259           *          data2   : 受信データ
    260           *          length2 : データ長
    261           *          id      : ユニークID
    262           *          status  : 受信結果
    263           * \return  なし
    264           * \note	必要時に、呼ばれること
    265           */
    266          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    267          static void mid_GPS_callback2(uint8_t *data1, int32_t length1, uint8_t *data2, int32_t length2, int32_t id, int32_t status)
    268          {
   \                     mid_GPS_callback2: (+1)
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
   \   00000002   0x9C06             LDR      R4,[SP, #+24]
    269          	if (cmd_tbl[id-1].type == 2) {
   \   00000004   0x....             LDR      R5,??DataTable4
   \   00000006   0x2620             MOVS     R6,#+32
   \   00000008   0x4366             MULS     R6,R4,R6
   \   0000000A   0x19AD             ADDS     R5,R5,R6
   \   0000000C   0x3D08             SUBS     R5,R5,#+8
   \   0000000E   0x782D             LDRB     R5,[R5, #+0]
   \   00000010   0x2D02             CMP      R5,#+2
   \   00000012   0xD104             BNE      ??mid_GPS_callback2_0
    270          		mid_GPS_resp_check2(data1, length1, data2, length2, id, status);
   \   00000014   0x9D07             LDR      R5,[SP, #+28]
   \   00000016   0x9501             STR      R5,[SP, #+4]
   \   00000018   0x9400             STR      R4,[SP, #+0]
   \   0000001A   0x.... 0x....      BL       mid_GPS_resp_check2
    271          	}
    272          }
   \                     ??mid_GPS_callback2_0: (+1)
   \   0000001E   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    273          
    274          /********************************************************************/
    275          /*!
    276           * \name	mid_GPS_callback4
    277           * \brief	callback処理
    278           * \param	id     : ユニークID
    279           *          status : 受信結果
    280           * \return  なし
    281           * \note	必要時に、呼ばれること
    282           */
    283          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    284          static void mid_GPS_callback4(int32_t id, int32_t status)
    285          {
   \                     mid_GPS_callback4: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    286          	if (cmd_tbl[id-1].type == 4) {
   \   00000002   0x....             LDR      R2,??DataTable6
   \   00000004   0x2320             MOVS     R3,#+32
   \   00000006   0x4343             MULS     R3,R0,R3
   \   00000008   0x18D2             ADDS     R2,R2,R3
   \   0000000A   0x3A08             SUBS     R2,R2,#+8
   \   0000000C   0x7812             LDRB     R2,[R2, #+0]
   \   0000000E   0x2A04             CMP      R2,#+4
   \   00000010   0xD101             BNE      ??mid_GPS_callback4_0
    287          		mid_GPS_resp_check4(id, status);
   \   00000012   0x.... 0x....      BL       mid_GPS_resp_check4
    288          	}
    289          }
   \                     ??mid_GPS_callback4_0: (+1)
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    290          
    291          
    292          /********************************************************************/
    293          /*!
    294           * \name	mid_GPS_callback_noti
    295           * \brief	callback処理
    296           * \param	data   : 受信データ
    297           *          length : データ長
    298           *          id     : ユニークID
    299           *          status : 受信結果
    300           * \return  なし
    301           * \note	必要時に、呼ばれること
    302           *
    303           *          "[udl] Done-"         -> MID_GPS_OTA_RESP_UDL_END
    304           *          "[fdl] Done-"         -> MID_GPS_OTA_RESP_FDL_END
    305           *
    306           */
    307          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    308          static void mid_GPS_callback_noti(uint8_t *data, int32_t length, int32_t id, int32_t status)
    309          {
   \                     mid_GPS_callback_noti: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
    310          	int32_t		i;
    311          
    312          	if (status == CTRL_CXD5600_STATUS_OK) {
   \   00000004   0x2B00             CMP      R3,#+0
   \   00000006   0xD122             BNE      ??mid_GPS_callback_noti_0
    313          		for (i=0; i<2; i++) {
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0xE000             B        ??mid_GPS_callback_noti_1
   \                     ??mid_GPS_callback_noti_2: (+1)
   \   0000000C   0x1C64             ADDS     R4,R4,#+1
   \                     ??mid_GPS_callback_noti_1: (+1)
   \   0000000E   0x2C02             CMP      R4,#+2
   \   00000010   0xDA1D             BGE      ??mid_GPS_callback_noti_0
    314          			// 応答が 一致
    315          			if (memcmp(data, data_tbl[i].resp, strlen((const char *)data_tbl[i].resp)) == 0) {
   \   00000012   0x....             LDR      R0,??DataTable6_1
   \   00000014   0x2108             MOVS     R1,#+8
   \   00000016   0x4361             MULS     R1,R4,R1
   \   00000018   0x5840             LDR      R0,[R0, R1]
   \   0000001A   0x.... 0x....      BL       strlen
   \   0000001E   0x0002             MOVS     R2,R0
   \   00000020   0x....             LDR      R0,??DataTable6_1
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0x4361             MULS     R1,R4,R1
   \   00000026   0x5841             LDR      R1,[R0, R1]
   \   00000028   0x0028             MOVS     R0,R5
   \   0000002A   0x.... 0x....      BL       memcmp
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD1EC             BNE      ??mid_GPS_callback_noti_2
    316          
    317          				if (mid_gps_work.recv_noti_resp.callback != NULL) {
   \   00000032   0x....             LDR      R0,??DataTable6_2
   \   00000034   0x6980             LDR      R0,[R0, #+24]
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD009             BEQ      ??mid_GPS_callback_noti_3
    318          					mid_gps_work.recv_noti_resp.callback(mid_gps_work.recv_noti_resp.id, data_tbl[i].status);
   \   0000003A   0x....             LDR      R0,??DataTable6_1
   \   0000003C   0x2108             MOVS     R1,#+8
   \   0000003E   0x434C             MULS     R4,R1,R4
   \   00000040   0x1900             ADDS     R0,R0,R4
   \   00000042   0x6841             LDR      R1,[R0, #+4]
   \   00000044   0x....             LDR      R0,??DataTable6_2
   \   00000046   0x6940             LDR      R0,[R0, #+20]
   \   00000048   0x....             LDR      R2,??DataTable6_2
   \   0000004A   0x6992             LDR      R2,[R2, #+24]
   \   0000004C   0x4790             BLX      R2
    319          				}
    320          				break;
    321          			}
    322          		}
    323          	}
    324          	
    325          }
   \                     ??mid_GPS_callback_noti_3: (+1)
   \                     ??mid_GPS_callback_noti_0: (+1)
   \   0000004E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    326          
    327          
    328          /********************************************************************/
    329          /*	static関数                                                      */
    330          /********************************************************************/
    331          
    332          
    333          /********************************************************************/
    334          /*!
    335           * \name	mid_GPS_get_errcode
    336           * \brief	エラーコードを取得する
    337           * \param	data    : エラーコード(ASCII)の先頭
    338           *          length  : データ長
    339           *          errcode : エラーコード(num)
    340           * \return  なし
    341           * \note	必要時に、呼ばれること
    342           */
    343          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    344          static void mid_GPS_get_errcode(uint8_t *data, int32_t length, int32_t	*errcode)
    345          {
   \                     mid_GPS_get_errcode: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
    346          	int32_t		code=0;
   \   00000002   0x2300             MOVS     R3,#+0
    347          	int32_t		i;
    348          
    349          	for (i=0; i<length; i++) {
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0xE005             B        ??mid_GPS_get_errcode_0
    350          		if ( (data[i] == ASCII_CR) || (data[i] == ASCII_LF) ) break;
    351          		code *= 10;
   \                     ??mid_GPS_get_errcode_1: (+1)
   \   00000008   0x250A             MOVS     R5,#+10
   \   0000000A   0x436B             MULS     R3,R5,R3
    352          		code += (data[i] - '0');
   \   0000000C   0x5D05             LDRB     R5,[R0, R4]
   \   0000000E   0x3D30             SUBS     R5,R5,#+48
   \   00000010   0x195B             ADDS     R3,R3,R5
   \   00000012   0x1C64             ADDS     R4,R4,#+1
   \                     ??mid_GPS_get_errcode_0: (+1)
   \   00000014   0x428C             CMP      R4,R1
   \   00000016   0xDA05             BGE      ??mid_GPS_get_errcode_2
   \   00000018   0x5D05             LDRB     R5,[R0, R4]
   \   0000001A   0x2D0D             CMP      R5,#+13
   \   0000001C   0xD002             BEQ      ??mid_GPS_get_errcode_3
   \   0000001E   0x5D05             LDRB     R5,[R0, R4]
   \   00000020   0x2D0A             CMP      R5,#+10
   \   00000022   0xD1F1             BNE      ??mid_GPS_get_errcode_1
    353          	}
    354          
    355          	*errcode = code;
   \                     ??mid_GPS_get_errcode_3: (+1)
   \                     ??mid_GPS_get_errcode_2: (+1)
   \   00000024   0x6013             STR      R3,[R2, #+0]
    356          }
   \   00000026   0xBD30             POP      {R4,R5,PC}       ;; return
    357          
    358          
    359          /********************************************************************/
    360          /*!
    361           * \name	mid_GPS_resp_check
    362           * \brief	コマンド応答チェック
    363           * \param	data   : 受信データ
    364           *          length : データ長
    365           *          id     : ユニークID
    366           *          status : 受信結果
    367           * \return  なし
    368           * \note	必要時に、呼ばれること
    369           */
    370          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    371          static void mid_GPS_resp_check(uint8_t *data, int32_t length, int32_t id, int32_t status)
    372          {
   \                     mid_GPS_resp_check: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000E             MOVS     R6,R1
   \   00000006   0x0014             MOVS     R4,R2
    373          	int32_t		errcode;
    374          	int32_t		pos;
    375          	uint32_t	rcv_data;
    376          
    377          	rcv_data = (data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3];
   \   00000008   0x7828             LDRB     R0,[R5, #+0]
   \   0000000A   0x0600             LSLS     R0,R0,#+24
   \   0000000C   0x7869             LDRB     R1,[R5, #+1]
   \   0000000E   0x0409             LSLS     R1,R1,#+16
   \   00000010   0x1840             ADDS     R0,R0,R1
   \   00000012   0x78A9             LDRB     R1,[R5, #+2]
   \   00000014   0x0209             LSLS     R1,R1,#+8
   \   00000016   0x1840             ADDS     R0,R0,R1
   \   00000018   0x78E9             LDRB     R1,[R5, #+3]
   \   0000001A   0x1847             ADDS     R7,R0,R1
    378          
    379          	if (status == CTRL_CXD5600_STATUS_OK) {
   \   0000001C   0x2B00             CMP      R3,#+0
   \   0000001E   0xD175             BNE      ??mid_GPS_resp_check_0
    380          		
    381          		mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_UNKNOWN;
   \   00000020   0x2005             MOVS     R0,#+5
   \   00000022   0x....             LDR      R1,??DataTable6_3
   \   00000024   0x7008             STRB     R0,[R1, #+0]
    382          		
    383          		// 応答が "[***] Done\r\n"
    384          		if (memcmp(data, cmd_tbl[id-1].resp_ok1, strlen((const char *)cmd_tbl[id-1].resp_ok1)) == 0) {
   \   00000026   0x....             LDR      R0,??DataTable4
   \   00000028   0x2120             MOVS     R1,#+32
   \   0000002A   0x4361             MULS     R1,R4,R1
   \   0000002C   0x1840             ADDS     R0,R0,R1
   \   0000002E   0x3818             SUBS     R0,R0,#+24
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      BL       strlen
   \   00000036   0x0002             MOVS     R2,R0
   \   00000038   0x....             LDR      R0,??DataTable4
   \   0000003A   0x2120             MOVS     R1,#+32
   \   0000003C   0x4361             MULS     R1,R4,R1
   \   0000003E   0x1840             ADDS     R0,R0,R1
   \   00000040   0x3818             SUBS     R0,R0,#+24
   \   00000042   0x6801             LDR      R1,[R0, #+0]
   \   00000044   0x0028             MOVS     R0,R5
   \   00000046   0x.... 0x....      BL       memcmp
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD103             BNE      ??mid_GPS_resp_check_1
    385          			mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_OK;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x....             LDR      R1,??DataTable6_3
   \   00000052   0x7008             STRB     R0,[R1, #+0]
   \   00000054   0xE075             B        ??mid_GPS_resp_check_2
    386          		}
    387          		// 応答が"[***] Err"
    388          		else if (memcmp(data, cmd_tbl[id-1].resp_ng, strlen((const char *)cmd_tbl[id-1].resp_ng)) == 0) {
   \                     ??mid_GPS_resp_check_1: (+1)
   \   00000056   0x....             LDR      R0,??DataTable4
   \   00000058   0x2120             MOVS     R1,#+32
   \   0000005A   0x4361             MULS     R1,R4,R1
   \   0000005C   0x1840             ADDS     R0,R0,R1
   \   0000005E   0x380C             SUBS     R0,R0,#+12
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x.... 0x....      BL       strlen
   \   00000066   0x0002             MOVS     R2,R0
   \   00000068   0x....             LDR      R0,??DataTable4
   \   0000006A   0x2120             MOVS     R1,#+32
   \   0000006C   0x4361             MULS     R1,R4,R1
   \   0000006E   0x1840             ADDS     R0,R0,R1
   \   00000070   0x380C             SUBS     R0,R0,#+12
   \   00000072   0x6801             LDR      R1,[R0, #+0]
   \   00000074   0x0028             MOVS     R0,R5
   \   00000076   0x.... 0x....      BL       memcmp
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD114             BNE      ??mid_GPS_resp_check_3
    389          			pos = strlen((const char *)cmd_tbl[id-1].resp_ng);
   \   0000007E   0x....             LDR      R0,??DataTable4
   \   00000080   0x2120             MOVS     R1,#+32
   \   00000082   0x4361             MULS     R1,R4,R1
   \   00000084   0x1840             ADDS     R0,R0,R1
   \   00000086   0x380C             SUBS     R0,R0,#+12
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x.... 0x....      BL       strlen
    390          			mid_GPS_get_errcode(&data[pos+1], length - pos, &errcode);
   \   0000008E   0x466A             MOV      R2,SP
   \   00000090   0x1A31             SUBS     R1,R6,R0
   \   00000092   0x1828             ADDS     R0,R5,R0
   \   00000094   0x1C40             ADDS     R0,R0,#+1
   \   00000096   0x.... 0x....      BL       mid_GPS_get_errcode
    391          			mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_ERR;
   \   0000009A   0x2001             MOVS     R0,#+1
   \   0000009C   0x....             LDR      R1,??DataTable6_3
   \   0000009E   0x7008             STRB     R0,[R1, #+0]
    392          			mid_gps_work.resp_info.errcode = errcode;
   \   000000A0   0x9800             LDR      R0,[SP, #+0]
   \   000000A2   0x....             LDR      R1,??DataTable6_2
   \   000000A4   0x6408             STR      R0,[R1, #+64]
   \   000000A6   0xE04C             B        ??mid_GPS_resp_check_2
    393          		}
    394          		// その他の応答
    395          		else {
    396          			// 応答がok2の場合
    397          			if (cmd_tbl[id-1].resp_ok2 != NULL) {
   \                     ??mid_GPS_resp_check_3: (+1)
   \   000000A8   0x....             LDR      R0,??DataTable4
   \   000000AA   0x2120             MOVS     R1,#+32
   \   000000AC   0x4361             MULS     R1,R4,R1
   \   000000AE   0x1840             ADDS     R0,R0,R1
   \   000000B0   0x3814             SUBS     R0,R0,#+20
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x2800             CMP      R0,#+0
   \   000000B6   0xD01B             BEQ      ??mid_GPS_resp_check_4
    398          				if (memcmp(data, cmd_tbl[id-1].resp_ok2, strlen((const char *)cmd_tbl[id-1].resp_ok2)) == 0) {
   \   000000B8   0x....             LDR      R0,??DataTable4
   \   000000BA   0x2120             MOVS     R1,#+32
   \   000000BC   0x4361             MULS     R1,R4,R1
   \   000000BE   0x1840             ADDS     R0,R0,R1
   \   000000C0   0x3814             SUBS     R0,R0,#+20
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0x.... 0x....      BL       strlen
   \   000000C8   0x0002             MOVS     R2,R0
   \   000000CA   0x....             LDR      R0,??DataTable4
   \   000000CC   0x2120             MOVS     R1,#+32
   \   000000CE   0x4361             MULS     R1,R4,R1
   \   000000D0   0x1840             ADDS     R0,R0,R1
   \   000000D2   0x3814             SUBS     R0,R0,#+20
   \   000000D4   0x6801             LDR      R1,[R0, #+0]
   \   000000D6   0x0028             MOVS     R0,R5
   \   000000D8   0x.... 0x....      BL       memcmp
   \   000000DC   0x2800             CMP      R0,#+0
   \   000000DE   0xD107             BNE      ??mid_GPS_resp_check_4
    399          					mid_gps_work.resp_info.cmdsts = cmd_tbl[id-1].ok2_status;
   \   000000E0   0x....             LDR      R0,??DataTable4
   \   000000E2   0x2120             MOVS     R1,#+32
   \   000000E4   0x4361             MULS     R1,R4,R1
   \   000000E6   0x1840             ADDS     R0,R0,R1
   \   000000E8   0x3810             SUBS     R0,R0,#+16
   \   000000EA   0x7800             LDRB     R0,[R0, #+0]
   \   000000EC   0x....             LDR      R1,??DataTable6_3
   \   000000EE   0x7008             STRB     R0,[R1, #+0]
    400          				}
    401          			}
    402          			
    403          			if (mid_gps_work.resp_info.cmdsts == MID_GPS_CMDSTS_UNKNOWN) {
   \                     ??mid_GPS_resp_check_4: (+1)
   \   000000F0   0x....             LDR      R0,??DataTable6_3
   \   000000F2   0x7800             LDRB     R0,[R0, #+0]
   \   000000F4   0x2805             CMP      R0,#+5
   \   000000F6   0xD124             BNE      ??mid_GPS_resp_check_2
    404          				// エラー登録
    405          				man_error_setting(MAN_ERROR_MID_GPS, length, rcv_data);
   \   000000F8   0x23FF             MOVS     R3,#+255
   \   000000FA   0x3396             ADDS     R3,R3,#+150      ;; #+405
   \   000000FC   0x003A             MOVS     R2,R7
   \   000000FE   0x0031             MOVS     R1,R6
   \   00000100   0x200F             MOVS     R0,#+15
   \   00000102   0x.... 0x....      BL       man_error_set
    406          				// 受信バッファを初期化する処理
    407          				ctrl_CXD5600GF_clear_buffer();
   \   00000106   0x.... 0x....      BL       ctrl_CXD5600GF_clear_buffer
   \   0000010A   0xE01A             B        ??mid_GPS_resp_check_2
    408          			}
    409          		}
    410          	}
    411          
    412          	// 無応答
    413          	else if (status == CTRL_CXD5600_STATUS_TIMEOUT) {
   \                     ??mid_GPS_resp_check_0: (+1)
   \   0000010C   0x2000             MOVS     R0,#+0
   \   0000010E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000110   0x4283             CMP      R3,R0
   \   00000112   0xD10C             BNE      ??mid_GPS_resp_check_5
    414          		mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_TIMEOUT;
   \   00000114   0x2003             MOVS     R0,#+3
   \   00000116   0x....             LDR      R1,??DataTable6_3
   \   00000118   0x7008             STRB     R0,[R1, #+0]
    415          		// エラー登録
    416          		man_error_setting(MAN_ERROR_MID_GPS, id, rcv_data);
   \   0000011A   0x23D0             MOVS     R3,#+208
   \   0000011C   0x005B             LSLS     R3,R3,#+1        ;; #+416
   \   0000011E   0x003A             MOVS     R2,R7
   \   00000120   0x0021             MOVS     R1,R4
   \   00000122   0x200F             MOVS     R0,#+15
   \   00000124   0x.... 0x....      BL       man_error_set
    417          		// 受信バッファを初期化する処理
    418          		ctrl_CXD5600GF_clear_buffer();
   \   00000128   0x.... 0x....      BL       ctrl_CXD5600GF_clear_buffer
   \   0000012C   0xE009             B        ??mid_GPS_resp_check_2
    419          	}
    420          
    421          	// 異常
    422          	else {
    423          		mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_FAULT;
   \                     ??mid_GPS_resp_check_5: (+1)
   \   0000012E   0x2006             MOVS     R0,#+6
   \   00000130   0x....             LDR      R1,??DataTable6_3
   \   00000132   0x7008             STRB     R0,[R1, #+0]
    424          		// エラー登録
    425          		man_error_setting(MAN_ERROR_MID_GPS, id, rcv_data);
   \   00000134   0x23FF             MOVS     R3,#+255
   \   00000136   0x33AA             ADDS     R3,R3,#+170      ;; #+425
   \   00000138   0x003A             MOVS     R2,R7
   \   0000013A   0x0021             MOVS     R1,R4
   \   0000013C   0x200F             MOVS     R0,#+15
   \   0000013E   0x.... 0x....      BL       man_error_set
    426          	}
    427          
    428          	mid_gps_work.resp_info.id = id;
   \                     ??mid_GPS_resp_check_2: (+1)
   \   00000142   0x....             LDR      R0,??DataTable6_2
   \   00000144   0x63C4             STR      R4,[R0, #+60]
    429          	// 受信済み
    430          	mid_gps_work.resp_info.flag = 1;
   \   00000146   0x2001             MOVS     R0,#+1
   \   00000148   0x....             LDR      R1,??DataTable6_2
   \   0000014A   0x6348             STR      R0,[R1, #+52]
    431          }
   \   0000014C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    432          
    433          
    434          /********************************************************************/
    435          /*!
    436           * \name	mid_GPS_resp_check2
    437           * \brief	応答チェック(２応答コマンド用)
    438           * \param	data1   : 受信データ
    439           *          length1 : データ長
    440           *          data2   : 受信データ
    441           *          length2 : データ長
    442           *          id      : ユニークID
    443           *          status  : 受信結果
    444           * \return  なし
    445           * \note	必要時に、呼ばれること
    446           */
    447          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    448          static void mid_GPS_resp_check2(uint8_t *data1, int32_t length1, uint8_t *data2, int32_t length2, int32_t id, int32_t status)
    449          {
   \                     mid_GPS_resp_check2: (+1)
   \   00000000   0xB5FE             PUSH     {R1-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x9F08             LDR      R7,[SP, #+32]
   \   00000008   0x9E09             LDR      R6,[SP, #+36]
    450          	int32_t		errcode;
    451          	int32_t		pos;
    452          	uint32_t	rcv_data1, rcv_data2;
    453          
    454          	if (status == CTRL_CXD5600_STATUS_OK) {
   \   0000000A   0x2E00             CMP      R6,#+0
   \   0000000C   0xD163             BNE      ??mid_GPS_resp_check2_0
    455          		// 応答が "[***] Done\r\n"
    456          		if (memcmp(data2, cmd_tbl[id-1].resp_ok1, strlen((const char *)cmd_tbl[id-1].resp_ok1)) == 0) {
   \   0000000E   0x....             LDR      R0,??DataTable6
   \   00000010   0x2120             MOVS     R1,#+32
   \   00000012   0x4379             MULS     R1,R7,R1
   \   00000014   0x1840             ADDS     R0,R0,R1
   \   00000016   0x3818             SUBS     R0,R0,#+24
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x.... 0x....      BL       strlen
   \   0000001E   0x0002             MOVS     R2,R0
   \   00000020   0x....             LDR      R0,??DataTable6
   \   00000022   0x2120             MOVS     R1,#+32
   \   00000024   0x4379             MULS     R1,R7,R1
   \   00000026   0x1840             ADDS     R0,R0,R1
   \   00000028   0x3818             SUBS     R0,R0,#+24
   \   0000002A   0x6801             LDR      R1,[R0, #+0]
   \   0000002C   0x9801             LDR      R0,[SP, #+4]
   \   0000002E   0x.... 0x....      BL       memcmp
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD119             BNE      ??mid_GPS_resp_check2_1
    457          			if (length1 <= GPS_VER_MAX) {
   \   00000036   0x2D0D             CMP      R5,#+13
   \   00000038   0xDA0C             BGE      ??mid_GPS_resp_check2_2
    458          				mid_gps_work.resp_info.ver_len = length1;
   \   0000003A   0x....             LDR      R0,??DataTable8
   \   0000003C   0x6505             STR      R5,[R0, #+80]
    459          				memcpy(&mid_gps_work.resp_info.version[0], data1, mid_gps_work.resp_info.ver_len);
   \   0000003E   0x....             LDR      R0,??DataTable8
   \   00000040   0x6D02             LDR      R2,[R0, #+80]
   \   00000042   0x0021             MOVS     R1,R4
   \   00000044   0x....             LDR      R4,??DataTable8_1
   \   00000046   0x0020             MOVS     R0,R4
   \   00000048   0x.... 0x....      BL       __aeabi_memcpy
    460          				mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_OK;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x....             LDR      R1,??DataTable6_3
   \   00000050   0x7008             STRB     R0,[R1, #+0]
   \   00000052   0xE06B             B        ??mid_GPS_resp_check2_3
    461          			}
    462          			// バージョンデータ長異常
    463          			else {
    464          				man_error_setting(MAN_ERROR_MID_GPS, status, length1);
   \                     ??mid_GPS_resp_check2_2: (+1)
   \   00000054   0x23E8             MOVS     R3,#+232
   \   00000056   0x005B             LSLS     R3,R3,#+1        ;; #+464
   \   00000058   0x002A             MOVS     R2,R5
   \   0000005A   0x0031             MOVS     R1,R6
   \   0000005C   0x200F             MOVS     R0,#+15
   \   0000005E   0x.... 0x....      BL       man_error_set
    465          				mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_LENERR;
   \   00000062   0x2004             MOVS     R0,#+4
   \   00000064   0x....             LDR      R1,??DataTable6_3
   \   00000066   0x7008             STRB     R0,[R1, #+0]
   \   00000068   0xE060             B        ??mid_GPS_resp_check2_3
    466          			}
    467          		}
    468          		// 応答が"[***] Err"
    469          		else if (memcmp(data2, cmd_tbl[id-1].resp_ng, strlen((const char *)cmd_tbl[id-1].resp_ng)) == 0) {
   \                     ??mid_GPS_resp_check2_1: (+1)
   \   0000006A   0x....             LDR      R0,??DataTable6
   \   0000006C   0x2120             MOVS     R1,#+32
   \   0000006E   0x4379             MULS     R1,R7,R1
   \   00000070   0x1840             ADDS     R0,R0,R1
   \   00000072   0x380C             SUBS     R0,R0,#+12
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x.... 0x....      BL       strlen
   \   0000007A   0x0002             MOVS     R2,R0
   \   0000007C   0x....             LDR      R0,??DataTable6
   \   0000007E   0x2120             MOVS     R1,#+32
   \   00000080   0x4379             MULS     R1,R7,R1
   \   00000082   0x1840             ADDS     R0,R0,R1
   \   00000084   0x380C             SUBS     R0,R0,#+12
   \   00000086   0x6801             LDR      R1,[R0, #+0]
   \   00000088   0x9801             LDR      R0,[SP, #+4]
   \   0000008A   0x.... 0x....      BL       memcmp
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xD116             BNE      ??mid_GPS_resp_check2_4
    470          			pos = strlen((const char *)cmd_tbl[id-1].resp_ng);
   \   00000092   0x....             LDR      R0,??DataTable6
   \   00000094   0x2120             MOVS     R1,#+32
   \   00000096   0x4379             MULS     R1,R7,R1
   \   00000098   0x1840             ADDS     R0,R0,R1
   \   0000009A   0x380C             SUBS     R0,R0,#+12
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x.... 0x....      BL       strlen
    471          			mid_GPS_get_errcode(&data2[pos+1], length2 - pos, &errcode);
   \   000000A2   0x466A             MOV      R2,SP
   \   000000A4   0x9902             LDR      R1,[SP, #+8]
   \   000000A6   0x1A09             SUBS     R1,R1,R0
   \   000000A8   0x9B01             LDR      R3,[SP, #+4]
   \   000000AA   0x1818             ADDS     R0,R3,R0
   \   000000AC   0x1C40             ADDS     R0,R0,#+1
   \   000000AE   0x.... 0x....      BL       mid_GPS_get_errcode
    472          			mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_ERR;
   \   000000B2   0x2001             MOVS     R0,#+1
   \   000000B4   0x....             LDR      R1,??DataTable6_3
   \   000000B6   0x7008             STRB     R0,[R1, #+0]
    473          			mid_gps_work.resp_info.errcode = errcode;
   \   000000B8   0x9800             LDR      R0,[SP, #+0]
   \   000000BA   0x....             LDR      R1,??DataTable8
   \   000000BC   0x6408             STR      R0,[R1, #+64]
   \   000000BE   0xE035             B        ??mid_GPS_resp_check2_3
    474          		}
    475          		// その他の応答
    476          		else {
    477          			mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_UNKNOWN;
   \                     ??mid_GPS_resp_check2_4: (+1)
   \   000000C0   0x2005             MOVS     R0,#+5
   \   000000C2   0x....             LDR      R1,??DataTable6_3
   \   000000C4   0x7008             STRB     R0,[R1, #+0]
    478          			// エラー登録
    479          			man_error_setting(MAN_ERROR_MID_GPS, status, 0);
   \   000000C6   0x23FF             MOVS     R3,#+255
   \   000000C8   0x33E0             ADDS     R3,R3,#+224      ;; #+479
   \   000000CA   0x2200             MOVS     R2,#+0
   \   000000CC   0x0031             MOVS     R1,R6
   \   000000CE   0x200F             MOVS     R0,#+15
   \   000000D0   0x.... 0x....      BL       man_error_set
   \   000000D4   0xE02A             B        ??mid_GPS_resp_check2_3
    480          		}
    481          	}
    482          
    483          	// 無応答
    484          	else if (status == CTRL_CXD5600_STATUS_TIMEOUT) {
   \                     ??mid_GPS_resp_check2_0: (+1)
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x43C0             MVNS     R0,R0            ;; #-1
   \   000000DA   0x4286             CMP      R6,R0
   \   000000DC   0xD113             BNE      ??mid_GPS_resp_check2_5
    485          		mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_TIMEOUT;
   \   000000DE   0x2003             MOVS     R0,#+3
   \   000000E0   0x....             LDR      R1,??DataTable6_3
   \   000000E2   0x7008             STRB     R0,[R1, #+0]
    486          		// エラー登録
    487          		rcv_data1 = (data1[0] << 24) + (data1[1] << 16) + (data1[2] << 8) + data1[3];
   \   000000E4   0x7820             LDRB     R0,[R4, #+0]
   \   000000E6   0x0600             LSLS     R0,R0,#+24
   \   000000E8   0x7861             LDRB     R1,[R4, #+1]
   \   000000EA   0x0409             LSLS     R1,R1,#+16
   \   000000EC   0x1840             ADDS     R0,R0,R1
   \   000000EE   0x78A1             LDRB     R1,[R4, #+2]
   \   000000F0   0x0209             LSLS     R1,R1,#+8
   \   000000F2   0x1840             ADDS     R0,R0,R1
   \   000000F4   0x78E1             LDRB     R1,[R4, #+3]
   \   000000F6   0x1841             ADDS     R1,R0,R1
    488          		man_error_setting(MAN_ERROR_MID_GPS, rcv_data1, length1);
   \   000000F8   0x23F4             MOVS     R3,#+244
   \   000000FA   0x005B             LSLS     R3,R3,#+1        ;; #+488
   \   000000FC   0x002A             MOVS     R2,R5
   \   000000FE   0x200F             MOVS     R0,#+15
   \   00000100   0x.... 0x....      BL       man_error_set
   \   00000104   0xE012             B        ??mid_GPS_resp_check2_3
    489          	}
    490          
    491          	// 異常
    492          	else {
    493          		mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_FAULT;
   \                     ??mid_GPS_resp_check2_5: (+1)
   \   00000106   0x2006             MOVS     R0,#+6
   \   00000108   0x....             LDR      R1,??DataTable6_3
   \   0000010A   0x7008             STRB     R0,[R1, #+0]
    494          		// エラー登録
    495          		rcv_data1 = (data1[0] << 24) + (data1[1] << 16) + (data1[2] << 8) + data1[3];
   \   0000010C   0x7820             LDRB     R0,[R4, #+0]
   \   0000010E   0x0600             LSLS     R0,R0,#+24
   \   00000110   0x7861             LDRB     R1,[R4, #+1]
   \   00000112   0x0409             LSLS     R1,R1,#+16
   \   00000114   0x1840             ADDS     R0,R0,R1
   \   00000116   0x78A1             LDRB     R1,[R4, #+2]
   \   00000118   0x0209             LSLS     R1,R1,#+8
   \   0000011A   0x1840             ADDS     R0,R0,R1
   \   0000011C   0x78E1             LDRB     R1,[R4, #+3]
   \   0000011E   0x1841             ADDS     R1,R0,R1
    496          		man_error_setting(MAN_ERROR_MID_GPS, rcv_data1, length1);
   \   00000120   0x23F8             MOVS     R3,#+248
   \   00000122   0x005B             LSLS     R3,R3,#+1        ;; #+496
   \   00000124   0x002A             MOVS     R2,R5
   \   00000126   0x200F             MOVS     R0,#+15
   \   00000128   0x.... 0x....      BL       man_error_set
    497          	}
    498          
    499          	mid_gps_work.resp_info.id = id;
   \                     ??mid_GPS_resp_check2_3: (+1)
   \   0000012C   0x....             LDR      R0,??DataTable8
   \   0000012E   0x63C7             STR      R7,[R0, #+60]
    500          	// 受信済み
    501          	mid_gps_work.resp_info.flag = 1;
   \   00000130   0x2001             MOVS     R0,#+1
   \   00000132   0x....             LDR      R1,??DataTable8
   \   00000134   0x6348             STR      R0,[R1, #+52]
    502          }
   \   00000136   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
    503          
    504          
    505          /********************************************************************/
    506          /*!
    507           * \name	mid_GPS_resp_check4
    508           * \brief	応答チェック(無応答コマンド用)
    509           * \param	id      : ユニークID
    510           *          status  : 受信結果
    511           * \return  なし
    512           * \note	必要時に、呼ばれること
    513           */
    514          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    515          static void mid_GPS_resp_check4(int32_t id, int32_t status)
    516          {
   \                     mid_GPS_resp_check4: (+1)
   \   00000000   0xB500             PUSH     {LR}
    517          	if (status == CTRL_CXD5600_STATUS_OK) {
   \   00000002   0x2900             CMP      R1,#+0
   \   00000004   0xD103             BNE      ??mid_GPS_resp_check4_0
    518          		mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_OK;
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x....             LDR      R2,??DataTable6_3
   \   0000000A   0x7011             STRB     R1,[R2, #+0]
   \   0000000C   0xE002             B        ??mid_GPS_resp_check4_1
    519          	}
    520          	else {
    521          		mid_gps_work.resp_info.cmdsts = MID_GPS_CMDSTS_ERR;
   \                     ??mid_GPS_resp_check4_0: (+1)
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x....             LDR      R2,??DataTable6_3
   \   00000012   0x7011             STRB     R1,[R2, #+0]
    522          	}
    523          	
    524          	mid_gps_work.resp_info.id = id;
   \                     ??mid_GPS_resp_check4_1: (+1)
   \   00000014   0x....             LDR      R1,??DataTable8
   \   00000016   0x63C8             STR      R0,[R1, #+60]
    525          	// 受信済み
    526          	mid_gps_work.resp_info.flag = 1;
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x....             LDR      R1,??DataTable8
   \   0000001C   0x6348             STR      R0,[R1, #+52]
    527          }
   \   0000001E   0xBD00             POP      {PC}             ;; return
    528          
    529          
    530          /********************************************************************/
    531          /*!
    532           * \name	mid_GPS_send_command
    533           * \brief	GPSコマンド送信処理
    534           * \param	id        : ユニークID
    535           * \return   0: 成功
    536           *          -1:失敗
    537           * \note	必要時に、呼ばれること
    538           */
    539          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    540          static int32_t mid_GPS_send_command(int32_t id)
    541          {
   \                     mid_GPS_send_command: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08F             SUB      SP,SP,#+60
   \   00000004   0x0006             MOVS     R6,R0
    542          	int32_t				ret=0;
   \   00000006   0x2400             MOVS     R4,#+0
    543          	uint8_t				cmd[40];
    544          	int32_t				length;
    545          	clock_info_t		jst_clock;
    546          	clock_info_t		*utc_clock;
    547          	int32_t				timeout;
    548          
    549          	mid_gps_work.resp_info.flag = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR      R1,??DataTable8
   \   0000000C   0x6348             STR      R0,[R1, #+52]
    550          
    551          	length = strlen((const char *)cmd_tbl[id-1].cmd);
   \   0000000E   0x....             LDR      R0,??DataTable8_2
   \   00000010   0x2120             MOVS     R1,#+32
   \   00000012   0x4371             MULS     R1,R6,R1
   \   00000014   0x1840             ADDS     R0,R0,R1
   \   00000016   0x381C             SUBS     R0,R0,#+28
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x.... 0x....      BL       strlen
   \   0000001E   0x0007             MOVS     R7,R0
    552          	memcpy(cmd, cmd_tbl[id-1].cmd, length);
   \   00000020   0x003A             MOVS     R2,R7
   \   00000022   0x....             LDR      R0,??DataTable8_2
   \   00000024   0x2120             MOVS     R1,#+32
   \   00000026   0x4371             MULS     R1,R6,R1
   \   00000028   0x1840             ADDS     R0,R0,R1
   \   0000002A   0x381C             SUBS     R0,R0,#+28
   \   0000002C   0x6801             LDR      R1,[R0, #+0]
   \   0000002E   0xAD04             ADD      R5,SP,#+16
   \   00000030   0x0028             MOVS     R0,R5
   \   00000032   0x.... 0x....      BL       __aeabi_memcpy
    553          	timeout = cmd_tbl[id-1].timeout;
   \   00000036   0x....             LDR      R0,??DataTable8_2
   \   00000038   0x2120             MOVS     R1,#+32
   \   0000003A   0x4371             MULS     R1,R6,R1
   \   0000003C   0x1840             ADDS     R0,R0,R1
   \   0000003E   0x1F00             SUBS     R0,R0,#+4
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x9001             STR      R0,[SP, #+4]
    554          
    555          	// 時刻設定時
    556          	if (cmd_tbl[id-1].option == 1) {
   \   00000044   0x....             LDR      R0,??DataTable8_2
   \   00000046   0x2120             MOVS     R1,#+32
   \   00000048   0x4371             MULS     R1,R6,R1
   \   0000004A   0x1840             ADDS     R0,R0,R1
   \   0000004C   0x1FC0             SUBS     R0,R0,#+7
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0x2801             CMP      R0,#+1
   \   00000052   0xD12A             BNE      ??mid_GPS_send_command_0
    557          		// 時刻の取得
    558          		man_rtc_get_clock(&jst_clock);
   \   00000054   0xA802             ADD      R0,SP,#+8
   \   00000056   0x.... 0x....      BL       man_rtc_get_clock
    559          
    560          		// UTCに変換(JST-0900)
    561          		utc_clock = gm_time(&jst_clock);
   \   0000005A   0xA802             ADD      R0,SP,#+8
   \   0000005C   0x.... 0x....      BL       gm_time
   \   00000060   0x0005             MOVS     R5,R0
    562          
    563          		// 時刻設定(GTIM)コマンド作成
    564          		num_to_bcd(&cmd[8],  utc_clock->year);
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x5629             LDRSB    R1,[R5, R0]
   \   00000066   0xA804             ADD      R0,SP,#+16
   \   00000068   0x3008             ADDS     R0,R0,#+8
   \   0000006A   0x.... 0x....      BL       num_to_bcd
    565          		num_to_bcd(&cmd[11], utc_clock->month);
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0x5629             LDRSB    R1,[R5, R0]
   \   00000072   0xA804             ADD      R0,SP,#+16
   \   00000074   0x300B             ADDS     R0,R0,#+11
   \   00000076   0x.... 0x....      BL       num_to_bcd
    566          		num_to_bcd(&cmd[14], utc_clock->day);
   \   0000007A   0x2002             MOVS     R0,#+2
   \   0000007C   0x5629             LDRSB    R1,[R5, R0]
   \   0000007E   0xA804             ADD      R0,SP,#+16
   \   00000080   0x300E             ADDS     R0,R0,#+14
   \   00000082   0x.... 0x....      BL       num_to_bcd
    567          		num_to_bcd(&cmd[17], utc_clock->hour);
   \   00000086   0x2003             MOVS     R0,#+3
   \   00000088   0x5629             LDRSB    R1,[R5, R0]
   \   0000008A   0xA804             ADD      R0,SP,#+16
   \   0000008C   0x3011             ADDS     R0,R0,#+17
   \   0000008E   0x.... 0x....      BL       num_to_bcd
    568          		num_to_bcd(&cmd[20], utc_clock->minute);
   \   00000092   0x2004             MOVS     R0,#+4
   \   00000094   0x5629             LDRSB    R1,[R5, R0]
   \   00000096   0xA804             ADD      R0,SP,#+16
   \   00000098   0x3014             ADDS     R0,R0,#+20
   \   0000009A   0x.... 0x....      BL       num_to_bcd
    569          		num_to_bcd(&cmd[23], utc_clock->seconds);
   \   0000009E   0x2005             MOVS     R0,#+5
   \   000000A0   0x5629             LDRSB    R1,[R5, R0]
   \   000000A2   0xA804             ADD      R0,SP,#+16
   \   000000A4   0x3017             ADDS     R0,R0,#+23
   \   000000A6   0x.... 0x....      BL       num_to_bcd
    570          	}
    571          
    572          
    573          	if (cmd_tbl[id-1].type == 1) {
   \                     ??mid_GPS_send_command_0: (+1)
   \   000000AA   0x....             LDR      R0,??DataTable8_2
   \   000000AC   0x2120             MOVS     R1,#+32
   \   000000AE   0x4371             MULS     R1,R6,R1
   \   000000B0   0x1840             ADDS     R0,R0,R1
   \   000000B2   0x3808             SUBS     R0,R0,#+8
   \   000000B4   0x7800             LDRB     R0,[R0, #+0]
   \   000000B6   0x2801             CMP      R0,#+1
   \   000000B8   0xD109             BNE      ??mid_GPS_send_command_1
    574          		ret = ctrl_CXD5600GF_cmd(&cmd[0], length, id, timeout, mid_GPS_callback);
   \   000000BA   0x....             LDR      R0,??DataTable8_3
   \   000000BC   0x9000             STR      R0,[SP, #+0]
   \   000000BE   0x9B01             LDR      R3,[SP, #+4]
   \   000000C0   0x0032             MOVS     R2,R6
   \   000000C2   0x0039             MOVS     R1,R7
   \   000000C4   0xA804             ADD      R0,SP,#+16
   \   000000C6   0x.... 0x....      BL       ctrl_CXD5600GF_cmd
   \   000000CA   0x0004             MOVS     R4,R0
   \   000000CC   0xE036             B        ??mid_GPS_send_command_2
    575          	}
    576          	else if (cmd_tbl[id-1].type == 2) {
   \                     ??mid_GPS_send_command_1: (+1)
   \   000000CE   0x....             LDR      R0,??DataTable8_2
   \   000000D0   0x2120             MOVS     R1,#+32
   \   000000D2   0x4371             MULS     R1,R6,R1
   \   000000D4   0x1840             ADDS     R0,R0,R1
   \   000000D6   0x3808             SUBS     R0,R0,#+8
   \   000000D8   0x7800             LDRB     R0,[R0, #+0]
   \   000000DA   0x2802             CMP      R0,#+2
   \   000000DC   0xD109             BNE      ??mid_GPS_send_command_3
    577          		ret = ctrl_CXD5600GF_cmd2(&cmd[0], length, id, timeout, mid_GPS_callback2);
   \   000000DE   0x....             LDR      R0,??DataTable8_4
   \   000000E0   0x9000             STR      R0,[SP, #+0]
   \   000000E2   0x9B01             LDR      R3,[SP, #+4]
   \   000000E4   0x0032             MOVS     R2,R6
   \   000000E6   0x0039             MOVS     R1,R7
   \   000000E8   0xA804             ADD      R0,SP,#+16
   \   000000EA   0x.... 0x....      BL       ctrl_CXD5600GF_cmd2
   \   000000EE   0x0004             MOVS     R4,R0
   \   000000F0   0xE024             B        ??mid_GPS_send_command_2
    578          	}
    579          	else if (cmd_tbl[id-1].type == 3) {
   \                     ??mid_GPS_send_command_3: (+1)
   \   000000F2   0x....             LDR      R0,??DataTable8_2
   \   000000F4   0x2120             MOVS     R1,#+32
   \   000000F6   0x4371             MULS     R1,R6,R1
   \   000000F8   0x1840             ADDS     R0,R0,R1
   \   000000FA   0x3808             SUBS     R0,R0,#+8
   \   000000FC   0x7800             LDRB     R0,[R0, #+0]
   \   000000FE   0x2803             CMP      R0,#+3
   \   00000100   0xD10B             BNE      ??mid_GPS_send_command_4
    580          		ret = ctrl_CXD5600GF_data(mid_gps_work.request.data, mid_gps_work.request.length, id, timeout, mid_GPS_callback);
   \   00000102   0x....             LDR      R0,??DataTable8_3
   \   00000104   0x9000             STR      R0,[SP, #+0]
   \   00000106   0x9B01             LDR      R3,[SP, #+4]
   \   00000108   0x0032             MOVS     R2,R6
   \   0000010A   0x....             LDR      R0,??DataTable8
   \   0000010C   0x6881             LDR      R1,[R0, #+8]
   \   0000010E   0x....             LDR      R0,??DataTable8
   \   00000110   0x6840             LDR      R0,[R0, #+4]
   \   00000112   0x.... 0x....      BL       ctrl_CXD5600GF_data
   \   00000116   0x0004             MOVS     R4,R0
   \   00000118   0xE010             B        ??mid_GPS_send_command_2
    581          	}
    582          	else if (cmd_tbl[id-1].type == 4) {
   \                     ??mid_GPS_send_command_4: (+1)
   \   0000011A   0x....             LDR      R0,??DataTable8_2
   \   0000011C   0x2120             MOVS     R1,#+32
   \   0000011E   0x4371             MULS     R1,R6,R1
   \   00000120   0x1840             ADDS     R0,R0,R1
   \   00000122   0x3808             SUBS     R0,R0,#+8
   \   00000124   0x7800             LDRB     R0,[R0, #+0]
   \   00000126   0x2804             CMP      R0,#+4
   \   00000128   0xD108             BNE      ??mid_GPS_send_command_2
    583          		ret = ctrl_CXD5600GF_data_non_ack(mid_gps_work.request.data, mid_gps_work.request.length, id, mid_GPS_callback4);
   \   0000012A   0x....             LDR      R3,??DataTable8_5
   \   0000012C   0x0032             MOVS     R2,R6
   \   0000012E   0x....             LDR      R0,??DataTable8
   \   00000130   0x6881             LDR      R1,[R0, #+8]
   \   00000132   0x....             LDR      R0,??DataTable8
   \   00000134   0x6840             LDR      R0,[R0, #+4]
   \   00000136   0x.... 0x....      BL       ctrl_CXD5600GF_data_non_ack
   \   0000013A   0x0004             MOVS     R4,R0
    584          	}
    585          
    586          
    587          	if (ret < 0) {
   \                     ??mid_GPS_send_command_2: (+1)
   \   0000013C   0x2C00             CMP      R4,#+0
   \   0000013E   0xD505             BPL      ??mid_GPS_send_command_5
    588          		// エラー登録
    589          		man_error_setting(MAN_ERROR_MID_GPS, id, 0);
   \   00000140   0x....             LDR      R3,??DataTable8_6  ;; 0x24d
   \   00000142   0x2200             MOVS     R2,#+0
   \   00000144   0x0031             MOVS     R1,R6
   \   00000146   0x200F             MOVS     R0,#+15
   \   00000148   0x.... 0x....      BL       man_error_set
    590          	}
    591          
    592          	return ret;
   \                     ??mid_GPS_send_command_5: (+1)
   \   0000014C   0x0020             MOVS     R0,R4
   \   0000014E   0xB00F             ADD      SP,SP,#+60
   \   00000150   0xBDF0             POP      {R4-R7,PC}       ;; return
    593          }
    594          
    595          
    596          /********************************************************************/
    597          /*!
    598           * \name	mid_GPS_res_callbacl
    599           * \brief	callback応答処理
    600           * \param	status : 通知するステータス
    601           * \return   0: 成功
    602           *          -1:失敗
    603           * \note	
    604           */
    605          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    606          static void mid_GPS_res_callbacl( int32_t status )
    607          {
   \                     mid_GPS_res_callbacl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    608          
    609          	// callback関数で終了通知
    610          	if (mid_gps_work.request.callback != NULL) {
   \   00000002   0x....             LDR      R1,??DataTable8
   \   00000004   0x68C9             LDR      R1,[R1, #+12]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD008             BEQ      ??mid_GPS_res_callbacl_0
    611          		mid_gps_work.request.callback(mid_gps_work.request.id, status);
   \   0000000A   0x0001             MOVS     R1,R0
   \   0000000C   0x....             LDR      R0,??DataTable8
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x....             LDR      R2,??DataTable8
   \   00000012   0x68D2             LDR      R2,[R2, #+12]
   \   00000014   0x4790             BLX      R2
    612          		mid_gps_work.request.callback = NULL;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR      R1,??DataTable8
   \   0000001A   0x60C8             STR      R0,[R1, #+12]
    613          	}
    614          }
   \                     ??mid_GPS_res_callbacl_0: (+1)
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return
    615          
    616          /********************************************************************/
    617          /*!
    618           * \name	mid_GPS_response
    619           * \brief	受信処理(正常時)
    620           * \param	status  :: 応答結果
    621           * \return   0: 成功
    622           *          -1:失敗
    623           * \note	
    624           */
    625          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
    626          static int32_t mid_GPS_response(int32_t status)
    627          {
   \                     mid_GPS_response: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
    628          	int32_t		ret=-1;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x43E4             MVNS     R4,R4            ;; #-1
    629          	int32_t		seq;
    630          	int32_t		sts;
    631          
    632          	sts = ctrl_CXD5600GF_check_nmea_recv();
   \   00000008   0x.... 0x....      BL       ctrl_CXD5600GF_check_nmea_recv
    633          	seq = mid_gps_work.sequence;
   \   0000000C   0x497D             LDR      R1,??mid_GPS_response_0
   \   0000000E   0x7C0D             LDRB     R5,[R1, #+16]
    634          
    635          	// NMEA受信終了を待つ
    636          	if (sts != 1) {
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD100             BNE      .+4
   \   00000014   0xE1BD             B        ??mid_GPS_response_1
    637          
    638          		// シーケンス処理
    639          		switch(mid_gps_work.sequence) {
   \   00000016   0x487B             LDR      R0,??mid_GPS_response_0
   \   00000018   0x7C00             LDRB     R0,[R0, #+16]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD051             BEQ      ??mid_GPS_response_2
   \   0000001E   0x2802             CMP      R0,#+2
   \   00000020   0xD05C             BEQ      ??mid_GPS_response_3
   \   00000022   0xD34F             BCC      ??mid_GPS_response_4
   \   00000024   0x2804             CMP      R0,#+4
   \   00000026   0xD07C             BEQ      ??mid_GPS_response_5
   \   00000028   0xD36F             BCC      ??mid_GPS_response_6
   \   0000002A   0x2806             CMP      R0,#+6
   \   0000002C   0xD100             BNE      .+4
   \   0000002E   0xE090             B        ??mid_GPS_response_7
   \   00000030   0xD200             BCS      .+4
   \   00000032   0xE082             B        ??mid_GPS_response_8
   \   00000034   0x2808             CMP      R0,#+8
   \   00000036   0xD100             BNE      .+4
   \   00000038   0xE09F             B        ??mid_GPS_response_9
   \   0000003A   0xD200             BCS      .+4
   \   0000003C   0xE091             B        ??mid_GPS_response_10
   \   0000003E   0x280A             CMP      R0,#+10
   \   00000040   0xD100             BNE      .+4
   \   00000042   0xE0B2             B        ??mid_GPS_response_11
   \   00000044   0xD200             BCS      .+4
   \   00000046   0xE0A4             B        ??mid_GPS_response_12
   \   00000048   0x280C             CMP      R0,#+12
   \   0000004A   0xD100             BNE      .+4
   \   0000004C   0xE0C5             B        ??mid_GPS_response_13
   \   0000004E   0xD200             BCS      .+4
   \   00000050   0xE0B7             B        ??mid_GPS_response_14
   \   00000052   0x280E             CMP      R0,#+14
   \   00000054   0xD100             BNE      .+4
   \   00000056   0xE0D7             B        ??mid_GPS_response_15
   \   00000058   0xD200             BCS      .+4
   \   0000005A   0xE0CA             B        ??mid_GPS_response_16
   \   0000005C   0x2810             CMP      R0,#+16
   \   0000005E   0xD100             BNE      .+4
   \   00000060   0xE0E6             B        ??mid_GPS_response_17
   \   00000062   0xD200             BCS      .+4
   \   00000064   0xE0DC             B        ??mid_GPS_response_18
   \   00000066   0x2812             CMP      R0,#+18
   \   00000068   0xD100             BNE      .+4
   \   0000006A   0xE0F9             B        ??mid_GPS_response_19
   \   0000006C   0xD200             BCS      .+4
   \   0000006E   0xE0EB             B        ??mid_GPS_response_20
   \   00000070   0x2814             CMP      R0,#+20
   \   00000072   0xD100             BNE      .+4
   \   00000074   0xE108             B        ??mid_GPS_response_21
   \   00000076   0xD200             BCS      .+4
   \   00000078   0xE0FA             B        ??mid_GPS_response_22
   \   0000007A   0x2816             CMP      R0,#+22
   \   0000007C   0xD100             BNE      .+4
   \   0000007E   0xE117             B        ??mid_GPS_response_23
   \   00000080   0xD200             BCS      .+4
   \   00000082   0xE10D             B        ??mid_GPS_response_24
   \   00000084   0x2818             CMP      R0,#+24
   \   00000086   0xD100             BNE      .+4
   \   00000088   0xE122             B        ??mid_GPS_response_25
   \   0000008A   0xD200             BCS      .+4
   \   0000008C   0xE118             B        ??mid_GPS_response_26
   \   0000008E   0x281A             CMP      R0,#+26
   \   00000090   0xD100             BNE      .+4
   \   00000092   0xE131             B        ??mid_GPS_response_27
   \   00000094   0xD200             BCS      .+4
   \   00000096   0xE123             B        ??mid_GPS_response_28
   \   00000098   0x281C             CMP      R0,#+28
   \   0000009A   0xD100             BNE      .+4
   \   0000009C   0xE140             B        ??mid_GPS_response_29
   \   0000009E   0xD200             BCS      .+4
   \   000000A0   0xE132             B        ??mid_GPS_response_30
   \   000000A2   0x281E             CMP      R0,#+30
   \   000000A4   0xD100             BNE      .+4
   \   000000A6   0xE14B             B        ??mid_GPS_response_31
   \   000000A8   0xD200             BCS      .+4
   \   000000AA   0xE141             B        ??mid_GPS_response_32
   \   000000AC   0x2820             CMP      R0,#+32
   \   000000AE   0xD100             BNE      .+4
   \   000000B0   0xE156             B        ??mid_GPS_response_33
   \   000000B2   0xD200             BCS      .+4
   \   000000B4   0xE14C             B        ??mid_GPS_response_34
   \   000000B6   0x2822             CMP      R0,#+34
   \   000000B8   0xD100             BNE      .+4
   \   000000BA   0xE161             B        ??mid_GPS_response_35
   \   000000BC   0xD200             BCS      .+4
   \   000000BE   0xE157             B        ??mid_GPS_response_36
   \   000000C0   0xE166             B        ??mid_GPS_response_37
    640          		case MID_GPS_SEQ_READY:						// 要求待ち
    641          			break;
   \                     ??mid_GPS_response_2: (+1)
   \   000000C2   0xE167             B        ??mid_GPS_response_38
    642          
    643          		case MID_GPS_SEQ_CS_RESP_GSTP:				// コールドスタート IDLEモード(GSTP)コマンドの応答待ち
    644          			// ファームウエアリビジョン番号取得(VER)コマンド送信
    645          			mid_gps_work.sequence = MID_GPS_SEQ_CS_RESP_VER;
   \                     ??mid_GPS_response_4: (+1)
   \   000000C4   0x2002             MOVS     R0,#+2
   \   000000C6   0x494F             LDR      R1,??mid_GPS_response_0
   \   000000C8   0x7408             STRB     R0,[R1, #+16]
    646          			mid_gps_work.retry = 0;
   \   000000CA   0x2000             MOVS     R0,#+0
   \   000000CC   0x494D             LDR      R1,??mid_GPS_response_0
   \   000000CE   0x62C8             STR      R0,[R1, #+44]
    647          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   000000D0   0x484C             LDR      R0,??mid_GPS_response_0
   \   000000D2   0x7C00             LDRB     R0,[R0, #+16]
   \   000000D4   0x.... 0x....      BL       mid_GPS_send_command
   \   000000D8   0x0004             MOVS     R4,R0
    648          			break;
   \   000000DA   0xE15B             B        ??mid_GPS_response_38
    649          
    650          		case MID_GPS_SEQ_CS_RESP_VER: 				// コールドスタート ファームウエアリビジョン番号取得(VER)コマンドの応答待ち
    651          			// バージョン情報保存
    652          			mid_gps_work.ver_len = mid_gps_work.resp_info.ver_len;
   \                     ??mid_GPS_response_3: (+1)
   \   000000DC   0x4849             LDR      R0,??mid_GPS_response_0
   \   000000DE   0x6D00             LDR      R0,[R0, #+80]
   \   000000E0   0x4948             LDR      R1,??mid_GPS_response_0
   \   000000E2   0x6288             STR      R0,[R1, #+40]
    653          			memcpy(&mid_gps_work.version[0], &mid_gps_work.resp_info.version[0], mid_gps_work.ver_len);
   \   000000E4   0x4847             LDR      R0,??mid_GPS_response_0
   \   000000E6   0x6A82             LDR      R2,[R0, #+40]
   \   000000E8   0x....             LDR      R1,??DataTable10
   \   000000EA   0x....             LDR      R4,??DataTable10_1
   \   000000EC   0x0020             MOVS     R0,R4
   \   000000EE   0x.... 0x....      BL       __aeabi_memcpy
    654          
    655          			// 出力センテンス選択(BSSL)コマンド送信
    656          			mid_gps_work.sequence = MID_GPS_SEQ_CS_RESP_BSSL;
   \   000000F2   0x2003             MOVS     R0,#+3
   \   000000F4   0x4943             LDR      R1,??mid_GPS_response_0
   \   000000F6   0x7408             STRB     R0,[R1, #+16]
    657          			mid_gps_work.retry = 0;
   \   000000F8   0x2000             MOVS     R0,#+0
   \   000000FA   0x4942             LDR      R1,??mid_GPS_response_0
   \   000000FC   0x62C8             STR      R0,[R1, #+44]
    658          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   000000FE   0x4841             LDR      R0,??mid_GPS_response_0
   \   00000100   0x7C00             LDRB     R0,[R0, #+16]
   \   00000102   0x.... 0x....      BL       mid_GPS_send_command
   \   00000106   0x0004             MOVS     R4,R0
    659          			break;
   \   00000108   0xE144             B        ??mid_GPS_response_38
    660          
    661          		case MID_GPS_SEQ_CS_RESP_BSSL: 				// コールドスタート 出力センテンス選択(BSSL)コマンドの応答待ち
    662          			// 測位使用衛星設定(GNS)コマンド送信
    663          			mid_gps_work.sequence = MID_GPS_SEQ_CS_RESP_GNS;
   \                     ??mid_GPS_response_6: (+1)
   \   0000010A   0x2004             MOVS     R0,#+4
   \   0000010C   0x493D             LDR      R1,??mid_GPS_response_0
   \   0000010E   0x7408             STRB     R0,[R1, #+16]
    664          			mid_gps_work.retry = 0;
   \   00000110   0x2000             MOVS     R0,#+0
   \   00000112   0x493C             LDR      R1,??mid_GPS_response_0
   \   00000114   0x62C8             STR      R0,[R1, #+44]
    665          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000116   0x483B             LDR      R0,??mid_GPS_response_0
   \   00000118   0x7C00             LDRB     R0,[R0, #+16]
   \   0000011A   0x.... 0x....      BL       mid_GPS_send_command
   \   0000011E   0x0004             MOVS     R4,R0
    666          			break;
   \   00000120   0xE138             B        ??mid_GPS_response_38
    667          
    668          		case MID_GPS_SEQ_CS_RESP_GNS: 				// コールドスタート 測位使用衛星設定(GNS)コマンドの応答待ち
    669          			// IME最大チャンネル数設定(ISIC)コマンド送信
    670          			mid_gps_work.sequence = MID_GPS_SEQ_CS_RESP_ISIC;
   \                     ??mid_GPS_response_5: (+1)
   \   00000122   0x2005             MOVS     R0,#+5
   \   00000124   0x4937             LDR      R1,??mid_GPS_response_0
   \   00000126   0x7408             STRB     R0,[R1, #+16]
    671          			mid_gps_work.retry = 0;
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0x4936             LDR      R1,??mid_GPS_response_0
   \   0000012C   0x62C8             STR      R0,[R1, #+44]
    672          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   0000012E   0x4835             LDR      R0,??mid_GPS_response_0
   \   00000130   0x7C00             LDRB     R0,[R0, #+16]
   \   00000132   0x.... 0x....      BL       mid_GPS_send_command
   \   00000136   0x0004             MOVS     R4,R0
    673          			break;
   \   00000138   0xE12C             B        ??mid_GPS_response_38
    674          
    675          		case MID_GPS_SEQ_CS_RESP_ISIC: 				// コールドスタート IME最大チャンネル数設定(ISIC)コマンドの応答待ち
    676          			// コールドスタート(GCD)コマンド送信
    677          			mid_gps_work.sequence = MID_GPS_SEQ_CS_RESP_GCD;
   \                     ??mid_GPS_response_8: (+1)
   \   0000013A   0x2006             MOVS     R0,#+6
   \   0000013C   0x4931             LDR      R1,??mid_GPS_response_0
   \   0000013E   0x7408             STRB     R0,[R1, #+16]
    678          			mid_gps_work.retry = 0;
   \   00000140   0x2000             MOVS     R0,#+0
   \   00000142   0x4930             LDR      R1,??mid_GPS_response_0
   \   00000144   0x62C8             STR      R0,[R1, #+44]
    679          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000146   0x482F             LDR      R0,??mid_GPS_response_0
   \   00000148   0x7C00             LDRB     R0,[R0, #+16]
   \   0000014A   0x.... 0x....      BL       mid_GPS_send_command
   \   0000014E   0x0004             MOVS     R4,R0
    680          			break;
   \   00000150   0xE120             B        ??mid_GPS_response_38
    681          
    682          		case MID_GPS_SEQ_CS_RESP_GCD: 				// コールドスタート コールドスタート(GCD)コマンドの応答待ち
    683          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_7: (+1)
   \   00000152   0x2000             MOVS     R0,#+0
   \   00000154   0x492B             LDR      R1,??mid_GPS_response_0
   \   00000156   0x7408             STRB     R0,[R1, #+16]
    684          			// callback関数で正常終了通知
    685          			mid_GPS_res_callbacl(status);
   \   00000158   0x0030             MOVS     R0,R6
   \   0000015A   0x.... 0x....      BL       mid_GPS_res_callbacl
    686          			ret = 0;
   \   0000015E   0x2400             MOVS     R4,#+0
    687          			break;
   \   00000160   0xE118             B        ??mid_GPS_response_38
    688          
    689          		case MID_GPS_SEQ_HS_RESP_BRES: 				// ホットスタート   FLASH復帰(BRES)コマンドの応答待ち
    690          			// 時刻設定(GTIM)コマンド送信
    691          			mid_gps_work.sequence = MID_GPS_SEQ_HS_RESP_GTIM;
   \                     ??mid_GPS_response_10: (+1)
   \   00000162   0x2008             MOVS     R0,#+8
   \   00000164   0x4927             LDR      R1,??mid_GPS_response_0
   \   00000166   0x7408             STRB     R0,[R1, #+16]
    692          			mid_gps_work.retry = 0;
   \   00000168   0x2000             MOVS     R0,#+0
   \   0000016A   0x4926             LDR      R1,??mid_GPS_response_0
   \   0000016C   0x62C8             STR      R0,[R1, #+44]
    693          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   0000016E   0x4825             LDR      R0,??mid_GPS_response_0
   \   00000170   0x7C00             LDRB     R0,[R0, #+16]
   \   00000172   0x.... 0x....      BL       mid_GPS_send_command
   \   00000176   0x0004             MOVS     R4,R0
    694          			break;
   \   00000178   0xE10C             B        ??mid_GPS_response_38
    695          
    696          		case MID_GPS_SEQ_HS_RESP_GTIM: 				// ホットスタート   時刻設定(GTIM)コマンドの応答待ち
    697          			// ファームウエアリビジョン番号取得(VER)コマンド送信
    698          			mid_gps_work.sequence = MID_GPS_SEQ_HS_RESP_VER;
   \                     ??mid_GPS_response_9: (+1)
   \   0000017A   0x2009             MOVS     R0,#+9
   \   0000017C   0x4921             LDR      R1,??mid_GPS_response_0
   \   0000017E   0x7408             STRB     R0,[R1, #+16]
    699          			mid_gps_work.retry = 0;
   \   00000180   0x2000             MOVS     R0,#+0
   \   00000182   0x4920             LDR      R1,??mid_GPS_response_0
   \   00000184   0x62C8             STR      R0,[R1, #+44]
    700          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000186   0x481F             LDR      R0,??mid_GPS_response_0
   \   00000188   0x7C00             LDRB     R0,[R0, #+16]
   \   0000018A   0x.... 0x....      BL       mid_GPS_send_command
   \   0000018E   0x0004             MOVS     R4,R0
    701          			break;
   \   00000190   0xE100             B        ??mid_GPS_response_38
    702          
    703          		case MID_GPS_SEQ_HS_RESP_VER: 				// ホットスタート   ファームウエアリビジョン番号取得(VER)コマンドの応答待ち
    704          			// ホットスタート(BSSL)コマンド送信
    705          			mid_gps_work.sequence = MID_GPS_SEQ_HS_RESP_BSSL;
   \                     ??mid_GPS_response_12: (+1)
   \   00000192   0x200A             MOVS     R0,#+10
   \   00000194   0x491B             LDR      R1,??mid_GPS_response_0
   \   00000196   0x7408             STRB     R0,[R1, #+16]
    706          			mid_gps_work.retry = 0;
   \   00000198   0x2000             MOVS     R0,#+0
   \   0000019A   0x491A             LDR      R1,??mid_GPS_response_0
   \   0000019C   0x62C8             STR      R0,[R1, #+44]
    707          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   0000019E   0x4819             LDR      R0,??mid_GPS_response_0
   \   000001A0   0x7C00             LDRB     R0,[R0, #+16]
   \   000001A2   0x.... 0x....      BL       mid_GPS_send_command
   \   000001A6   0x0004             MOVS     R4,R0
    708          			break;
   \   000001A8   0xE0F4             B        ??mid_GPS_response_38
    709          
    710          		case MID_GPS_SEQ_HS_RESP_BSSL:
    711          			// ホットスタート(GNS)コマンド送信
    712          			mid_gps_work.sequence = MID_GPS_SEQ_HS_RESP_GNS;
   \                     ??mid_GPS_response_11: (+1)
   \   000001AA   0x200B             MOVS     R0,#+11
   \   000001AC   0x4915             LDR      R1,??mid_GPS_response_0
   \   000001AE   0x7408             STRB     R0,[R1, #+16]
    713          			mid_gps_work.retry = 0;
   \   000001B0   0x2000             MOVS     R0,#+0
   \   000001B2   0x4914             LDR      R1,??mid_GPS_response_0
   \   000001B4   0x62C8             STR      R0,[R1, #+44]
    714          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   000001B6   0x4813             LDR      R0,??mid_GPS_response_0
   \   000001B8   0x7C00             LDRB     R0,[R0, #+16]
   \   000001BA   0x.... 0x....      BL       mid_GPS_send_command
   \   000001BE   0x0004             MOVS     R4,R0
    715          			break;
   \   000001C0   0xE0E8             B        ??mid_GPS_response_38
    716          
    717          		case MID_GPS_SEQ_HS_RESP_GNS:
    718          			// ホットスタート(ISIC)コマンド送信
    719          			mid_gps_work.sequence = MID_GPS_SEQ_HS_RESP_ISIC;
   \                     ??mid_GPS_response_14: (+1)
   \   000001C2   0x200C             MOVS     R0,#+12
   \   000001C4   0x490F             LDR      R1,??mid_GPS_response_0
   \   000001C6   0x7408             STRB     R0,[R1, #+16]
    720          			mid_gps_work.retry = 0;
   \   000001C8   0x2000             MOVS     R0,#+0
   \   000001CA   0x490E             LDR      R1,??mid_GPS_response_0
   \   000001CC   0x62C8             STR      R0,[R1, #+44]
    721          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   000001CE   0x480D             LDR      R0,??mid_GPS_response_0
   \   000001D0   0x7C00             LDRB     R0,[R0, #+16]
   \   000001D2   0x.... 0x....      BL       mid_GPS_send_command
   \   000001D6   0x0004             MOVS     R4,R0
    722          			break;
   \   000001D8   0xE0DC             B        ??mid_GPS_response_38
    723          
    724          		case MID_GPS_SEQ_HS_RESP_ISIC:
    725          			// ホットスタート(GSP)コマンド送信
    726          			mid_gps_work.sequence = MID_GPS_SEQ_HS_RESP_GSP;
   \                     ??mid_GPS_response_13: (+1)
   \   000001DA   0x200D             MOVS     R0,#+13
   \   000001DC   0x4909             LDR      R1,??mid_GPS_response_0
   \   000001DE   0x7408             STRB     R0,[R1, #+16]
    727          			mid_gps_work.retry = 0;
   \   000001E0   0x2000             MOVS     R0,#+0
   \   000001E2   0x4908             LDR      R1,??mid_GPS_response_0
   \   000001E4   0x62C8             STR      R0,[R1, #+44]
    728          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   000001E6   0x4807             LDR      R0,??mid_GPS_response_0
   \   000001E8   0x7C00             LDRB     R0,[R0, #+16]
   \   000001EA   0x.... 0x....      BL       mid_GPS_send_command
   \   000001EE   0x0004             MOVS     R4,R0
    729          			break;
   \   000001F0   0xE0D0             B        ??mid_GPS_response_38
    730          
    731          		case MID_GPS_SEQ_HS_RESP_GSP: 				// ホットスタート   ホットスタート(GSP)コマンドの応答待ち
    732          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_16: (+1)
   \   000001F2   0x2000             MOVS     R0,#+0
   \   000001F4   0x4903             LDR      R1,??mid_GPS_response_0
   \   000001F6   0x7408             STRB     R0,[R1, #+16]
    733          			// callback関数で正常終了通知
    734          			mid_GPS_res_callbacl(status);
   \   000001F8   0x0030             MOVS     R0,R6
   \   000001FA   0x.... 0x....      BL       mid_GPS_res_callbacl
    735          			ret = 0;
   \   000001FE   0x2400             MOVS     R4,#+0
    736          			break;
   \   00000200   0xE0C8             B        ??mid_GPS_response_38
   \   00000202   0xBF00             Nop      
   \                     ??mid_GPS_response_0:
   \   00000204   0x........         DC32     mid_gps_work
    737          
    738          		case MID_GPS_SEQ_OF_RESP_GSTP: 				// GPS電源OFF       IDLEモード(GSTP)コマンドの応答待ち
    739          			// IDLEモード(GSTP)コマンド送信
    740          			mid_gps_work.sequence = MID_GPS_SEQ_OF_RESP_BUP;
   \                     ??mid_GPS_response_15: (+1)
   \   00000208   0x200F             MOVS     R0,#+15
   \   0000020A   0x....             LDR      R1,??DataTable12
   \   0000020C   0x7408             STRB     R0,[R1, #+16]
    741          			mid_gps_work.retry = 0;
   \   0000020E   0x2000             MOVS     R0,#+0
   \   00000210   0x....             LDR      R1,??DataTable12
   \   00000212   0x62C8             STR      R0,[R1, #+44]
    742          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000214   0x....             LDR      R0,??DataTable12
   \   00000216   0x7C00             LDRB     R0,[R0, #+16]
   \   00000218   0x.... 0x....      BL       mid_GPS_send_command
   \   0000021C   0x0004             MOVS     R4,R0
    743          			break;
   \   0000021E   0xE0B9             B        ??mid_GPS_response_38
    744          
    745          		case MID_GPS_SEQ_OF_RESP_BUP: 				// GPS電源OFF       バックアップデータ保存(BUP)コマンドの応答待ち
    746          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_18: (+1)
   \   00000220   0x2000             MOVS     R0,#+0
   \   00000222   0x....             LDR      R1,??DataTable12
   \   00000224   0x7408             STRB     R0,[R1, #+16]
    747          			// callback関数で正常終了通知
    748          			mid_GPS_res_callbacl(status);
   \   00000226   0x0030             MOVS     R0,R6
   \   00000228   0x.... 0x....      BL       mid_GPS_res_callbacl
    749          			ret = 0;
   \   0000022C   0x2400             MOVS     R4,#+0
    750          			break;
   \   0000022E   0xE0B1             B        ??mid_GPS_response_38
    751          
    752          		case MID_GPS_SEQ_SP_RESP_GSTP:
    753          			// バックアップデータ保存(BUP)コマンド送信
    754          			mid_gps_work.sequence = MID_GPS_SEQ_SP_RESP_BUP;
   \                     ??mid_GPS_response_17: (+1)
   \   00000230   0x2011             MOVS     R0,#+17
   \   00000232   0x....             LDR      R1,??DataTable12
   \   00000234   0x7408             STRB     R0,[R1, #+16]
    755          			mid_gps_work.retry = 0;
   \   00000236   0x2000             MOVS     R0,#+0
   \   00000238   0x....             LDR      R1,??DataTable12
   \   0000023A   0x62C8             STR      R0,[R1, #+44]
    756          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   0000023C   0x....             LDR      R0,??DataTable12
   \   0000023E   0x7C00             LDRB     R0,[R0, #+16]
   \   00000240   0x.... 0x....      BL       mid_GPS_send_command
   \   00000244   0x0004             MOVS     R4,R0
    757          			break;
   \   00000246   0xE0A5             B        ??mid_GPS_response_38
    758          
    759          		case MID_GPS_SEQ_SP_RESP_BUP:
    760          			// SLEEP(SLP)コマンド送信
    761          			mid_gps_work.sequence = MID_GPS_SEQ_SP_RESP_SLP;
   \                     ??mid_GPS_response_20: (+1)
   \   00000248   0x2012             MOVS     R0,#+18
   \   0000024A   0x....             LDR      R1,??DataTable12
   \   0000024C   0x7408             STRB     R0,[R1, #+16]
    762          			mid_gps_work.retry = 0;
   \   0000024E   0x2000             MOVS     R0,#+0
   \   00000250   0x....             LDR      R1,??DataTable12
   \   00000252   0x62C8             STR      R0,[R1, #+44]
    763          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000254   0x....             LDR      R0,??DataTable12
   \   00000256   0x7C00             LDRB     R0,[R0, #+16]
   \   00000258   0x.... 0x....      BL       mid_GPS_send_command
   \   0000025C   0x0004             MOVS     R4,R0
    764          			break;
   \   0000025E   0xE099             B        ??mid_GPS_response_38
    765          
    766          		case MID_GPS_SEQ_SP_RESP_SLP:				// 
    767          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_19: (+1)
   \   00000260   0x2000             MOVS     R0,#+0
   \   00000262   0x....             LDR      R1,??DataTable12
   \   00000264   0x7408             STRB     R0,[R1, #+16]
    768          			// callback関数で正常終了通知
    769          			mid_GPS_res_callbacl(status);
   \   00000266   0x0030             MOVS     R0,R6
   \   00000268   0x.... 0x....      BL       mid_GPS_res_callbacl
    770          			ret = 0;
   \   0000026C   0x2400             MOVS     R4,#+0
    771          			break;
   \   0000026E   0xE091             B        ??mid_GPS_response_38
    772          
    773          		case MID_GPS_SEQ_WU_RESP_WUP:
    774          			// バックアップデータ保存(BUP)コマンド送信
    775          			mid_gps_work.sequence = MID_GPS_SEQ_WU_RESP_BRES;
   \                     ??mid_GPS_response_22: (+1)
   \   00000270   0x2014             MOVS     R0,#+20
   \   00000272   0x....             LDR      R1,??DataTable12
   \   00000274   0x7408             STRB     R0,[R1, #+16]
    776          			mid_gps_work.retry = 0;
   \   00000276   0x2000             MOVS     R0,#+0
   \   00000278   0x....             LDR      R1,??DataTable12
   \   0000027A   0x62C8             STR      R0,[R1, #+44]
    777          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   0000027C   0x....             LDR      R0,??DataTable12
   \   0000027E   0x7C00             LDRB     R0,[R0, #+16]
   \   00000280   0x.... 0x....      BL       mid_GPS_send_command
   \   00000284   0x0004             MOVS     R4,R0
    778          			break;
   \   00000286   0xE085             B        ??mid_GPS_response_38
    779          
    780          		case MID_GPS_SEQ_WU_RESP_BRES:
    781          			// ホットスタート(GSP)コマンド送信
    782          			mid_gps_work.sequence = MID_GPS_SEQ_WU_RESP_GSP;
   \                     ??mid_GPS_response_21: (+1)
   \   00000288   0x2015             MOVS     R0,#+21
   \   0000028A   0x....             LDR      R1,??DataTable12
   \   0000028C   0x7408             STRB     R0,[R1, #+16]
    783          			mid_gps_work.retry = 0;
   \   0000028E   0x2000             MOVS     R0,#+0
   \   00000290   0x....             LDR      R1,??DataTable12
   \   00000292   0x62C8             STR      R0,[R1, #+44]
    784          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000294   0x....             LDR      R0,??DataTable12
   \   00000296   0x7C00             LDRB     R0,[R0, #+16]
   \   00000298   0x.... 0x....      BL       mid_GPS_send_command
   \   0000029C   0x0004             MOVS     R4,R0
    785          			break;
   \   0000029E   0xE079             B        ??mid_GPS_response_38
    786          
    787          		case MID_GPS_SEQ_WU_RESP_GSP:
    788          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_24: (+1)
   \   000002A0   0x2000             MOVS     R0,#+0
   \   000002A2   0x....             LDR      R1,??DataTable12
   \   000002A4   0x7408             STRB     R0,[R1, #+16]
    789          			// callback関数で正常終了通知
    790          			mid_GPS_res_callbacl(status);
   \   000002A6   0x0030             MOVS     R0,R6
   \   000002A8   0x.... 0x....      BL       mid_GPS_res_callbacl
    791          			ret = 0;
   \   000002AC   0x2400             MOVS     R4,#+0
    792          			break;
   \   000002AE   0xE071             B        ??mid_GPS_response_38
    793          
    794          		case MID_GPS_SEQ_IL_RESP_GSTP:
    795          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_23: (+1)
   \   000002B0   0x2000             MOVS     R0,#+0
   \   000002B2   0x....             LDR      R1,??DataTable12
   \   000002B4   0x7408             STRB     R0,[R1, #+16]
    796          			// callback関数で正常終了通知
    797          			mid_GPS_res_callbacl(status);
   \   000002B6   0x0030             MOVS     R0,R6
   \   000002B8   0x.... 0x....      BL       mid_GPS_res_callbacl
    798          			ret = 0;
   \   000002BC   0x2400             MOVS     R4,#+0
    799          			break;
   \   000002BE   0xE069             B        ??mid_GPS_response_38
    800          
    801          		case MID_GPS_SEQ_EX_RESP_GSP:
    802          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_26: (+1)
   \   000002C0   0x2000             MOVS     R0,#+0
   \   000002C2   0x....             LDR      R1,??DataTable12
   \   000002C4   0x7408             STRB     R0,[R1, #+16]
    803          			// callback関数で正常終了通知
    804          			mid_GPS_res_callbacl(status);
   \   000002C6   0x0030             MOVS     R0,R6
   \   000002C8   0x.... 0x....      BL       mid_GPS_res_callbacl
    805          			ret = 0;
   \   000002CC   0x2400             MOVS     R4,#+0
    806          			break;
   \   000002CE   0xE061             B        ??mid_GPS_response_38
    807          
    808          		case MID_GPS_SEQ_FW_RESP_FER:
    809          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_25: (+1)
   \   000002D0   0x2000             MOVS     R0,#+0
   \   000002D2   0x....             LDR      R1,??DataTable12
   \   000002D4   0x7408             STRB     R0,[R1, #+16]
    810          			// callback関数で正常終了通知
    811          			mid_GPS_res_callbacl(status);
   \   000002D6   0x0030             MOVS     R0,R6
   \   000002D8   0x.... 0x....      BL       mid_GPS_res_callbacl
    812          			ret = 0;
   \   000002DC   0x2400             MOVS     R4,#+0
    813          			break;
   \   000002DE   0xE059             B        ??mid_GPS_response_38
    814          
    815          		case MID_GPS_SEQ_FW_RESP_UDL:
    816          			// UPDATER送信
    817          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_UPDATER;
   \                     ??mid_GPS_response_28: (+1)
   \   000002E0   0x201A             MOVS     R0,#+26
   \   000002E2   0x....             LDR      R1,??DataTable12
   \   000002E4   0x7408             STRB     R0,[R1, #+16]
    818          			mid_gps_work.retry = 0;
   \   000002E6   0x2000             MOVS     R0,#+0
   \   000002E8   0x....             LDR      R1,??DataTable12
   \   000002EA   0x62C8             STR      R0,[R1, #+44]
    819          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   000002EC   0x....             LDR      R0,??DataTable12
   \   000002EE   0x7C00             LDRB     R0,[R0, #+16]
   \   000002F0   0x.... 0x....      BL       mid_GPS_send_command
   \   000002F4   0x0004             MOVS     R4,R0
    820          			break;
   \   000002F6   0xE04D             B        ??mid_GPS_response_38
    821          
    822          		case MID_GPS_SEQ_FW_RESP_UPDATER:
    823          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_27: (+1)
   \   000002F8   0x2000             MOVS     R0,#+0
   \   000002FA   0x....             LDR      R1,??DataTable12
   \   000002FC   0x7408             STRB     R0,[R1, #+16]
    824          			// callback関数で正常終了通知
    825          			mid_GPS_res_callbacl(status);
   \   000002FE   0x0030             MOVS     R0,R6
   \   00000300   0x.... 0x....      BL       mid_GPS_res_callbacl
    826          			ret = 0;
   \   00000304   0x2400             MOVS     R4,#+0
    827          			break;
   \   00000306   0xE045             B        ??mid_GPS_response_38
    828          
    829          		case MID_GPS_SEQ_FW_RESP_FDL:
    830          			// CONFIG送信
    831          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_CONFIG;
   \                     ??mid_GPS_response_30: (+1)
   \   00000308   0x201C             MOVS     R0,#+28
   \   0000030A   0x....             LDR      R1,??DataTable12
   \   0000030C   0x7408             STRB     R0,[R1, #+16]
    832          			mid_gps_work.retry = 0;
   \   0000030E   0x2000             MOVS     R0,#+0
   \   00000310   0x....             LDR      R1,??DataTable12
   \   00000312   0x62C8             STR      R0,[R1, #+44]
    833          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000314   0x....             LDR      R0,??DataTable12
   \   00000316   0x7C00             LDRB     R0,[R0, #+16]
   \   00000318   0x.... 0x....      BL       mid_GPS_send_command
   \   0000031C   0x0004             MOVS     R4,R0
    834          			break;
   \   0000031E   0xE039             B        ??mid_GPS_response_38
    835          
    836          		case MID_GPS_SEQ_FW_RESP_CONFIG:
    837          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_29: (+1)
   \   00000320   0x2000             MOVS     R0,#+0
   \   00000322   0x....             LDR      R1,??DataTable12
   \   00000324   0x7408             STRB     R0,[R1, #+16]
    838          			// callback関数で正常終了通知
    839          			mid_GPS_res_callbacl(status);
   \   00000326   0x0030             MOVS     R0,R6
   \   00000328   0x.... 0x....      BL       mid_GPS_res_callbacl
    840          			ret = 0;
   \   0000032C   0x2400             MOVS     R4,#+0
    841          			break;
   \   0000032E   0xE031             B        ??mid_GPS_response_38
    842          
    843          		case MID_GPS_SEQ_FW_RESP_FIRMWARE:
    844          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_32: (+1)
   \   00000330   0x2000             MOVS     R0,#+0
   \   00000332   0x....             LDR      R1,??DataTable12
   \   00000334   0x7408             STRB     R0,[R1, #+16]
    845          			// callback関数で正常終了通知
    846          			mid_GPS_res_callbacl(status);
   \   00000336   0x0030             MOVS     R0,R6
   \   00000338   0x.... 0x....      BL       mid_GPS_res_callbacl
    847          			ret = 0;
   \   0000033C   0x2400             MOVS     R4,#+0
    848          			break;
   \   0000033E   0xE029             B        ??mid_GPS_response_38
    849          
    850          		case MID_GPS_SEQ_FW_RESP_FUD:
    851          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_31: (+1)
   \   00000340   0x2000             MOVS     R0,#+0
   \   00000342   0x....             LDR      R1,??DataTable12
   \   00000344   0x7408             STRB     R0,[R1, #+16]
    852          			// callback関数で正常終了通知
    853          			mid_GPS_res_callbacl(status);
   \   00000346   0x0030             MOVS     R0,R6
   \   00000348   0x.... 0x....      BL       mid_GPS_res_callbacl
    854          			ret = 0;
   \   0000034C   0x2400             MOVS     R4,#+0
    855          			break;
   \   0000034E   0xE021             B        ??mid_GPS_response_38
    856          
    857          		case MID_GPS_SEQ_FW_RESP_PKT_NEXT:
    858          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_34: (+1)
   \   00000350   0x2000             MOVS     R0,#+0
   \   00000352   0x....             LDR      R1,??DataTable12
   \   00000354   0x7408             STRB     R0,[R1, #+16]
    859          			// callback関数で正常終了通知
    860          			mid_GPS_res_callbacl(status);
   \   00000356   0x0030             MOVS     R0,R6
   \   00000358   0x.... 0x....      BL       mid_GPS_res_callbacl
    861          			ret = 0;
   \   0000035C   0x2400             MOVS     R4,#+0
    862          			break;
   \   0000035E   0xE019             B        ??mid_GPS_response_38
    863          
    864          		case MID_GPS_SEQ_FW_RESP_PKT_END:
    865          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_33: (+1)
   \   00000360   0x2000             MOVS     R0,#+0
   \   00000362   0x....             LDR      R1,??DataTable12
   \   00000364   0x7408             STRB     R0,[R1, #+16]
    866          			// callback関数で正常終了通知
    867          			mid_GPS_res_callbacl(status);
   \   00000366   0x0030             MOVS     R0,R6
   \   00000368   0x.... 0x....      BL       mid_GPS_res_callbacl
    868          			ret = 0;
   \   0000036C   0x2400             MOVS     R4,#+0
    869          			break;
   \   0000036E   0xE011             B        ??mid_GPS_response_38
    870          			
    871          		case MID_GPS_SEQ_FW_RESP_UDL2:
    872          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_36: (+1)
   \   00000370   0x2000             MOVS     R0,#+0
   \   00000372   0x....             LDR      R1,??DataTable12
   \   00000374   0x7408             STRB     R0,[R1, #+16]
    873          			// callback関数で正常終了通知
    874          			mid_GPS_res_callbacl(status);
   \   00000376   0x0030             MOVS     R0,R6
   \   00000378   0x.... 0x....      BL       mid_GPS_res_callbacl
    875          			ret = 0;
   \   0000037C   0x2400             MOVS     R4,#+0
    876          			break;
   \   0000037E   0xE009             B        ??mid_GPS_response_38
    877          
    878          		case MID_GPS_SEQ_FW_RESP_FDL2:
    879          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \                     ??mid_GPS_response_35: (+1)
   \   00000380   0x2000             MOVS     R0,#+0
   \   00000382   0x....             LDR      R1,??DataTable12
   \   00000384   0x7408             STRB     R0,[R1, #+16]
    880          			// callback関数で正常終了通知
    881          			mid_GPS_res_callbacl(status);
   \   00000386   0x0030             MOVS     R0,R6
   \   00000388   0x.... 0x....      BL       mid_GPS_res_callbacl
    882          			ret = 0;
   \   0000038C   0x2400             MOVS     R4,#+0
    883          			break;
   \   0000038E   0xE001             B        ??mid_GPS_response_38
    884          
    885          		default:
    886          			break;
   \                     ??mid_GPS_response_37: (+1)
   \   00000390   0xE000             B        ??mid_GPS_response_38
    887          		}
    888          	}
    889          	else {
    890          		ret = 0;
   \                     ??mid_GPS_response_1: (+1)
   \   00000392   0x2400             MOVS     R4,#+0
    891          	}
    892          
    893          	if (ret < 0) {
   \                     ??mid_GPS_response_38: (+1)
   \   00000394   0x2C00             CMP      R4,#+0
   \   00000396   0xD506             BPL      ??mid_GPS_response_39
    894          		// エラー登録
    895          		man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, seq);
   \   00000398   0x....             LDR      R3,??DataTable16  ;; 0x37f
   \   0000039A   0x002A             MOVS     R2,R5
   \   0000039C   0x....             LDR      R0,??DataTable12
   \   0000039E   0x7C01             LDRB     R1,[R0, #+16]
   \   000003A0   0x200F             MOVS     R0,#+15
   \   000003A2   0x.... 0x....      BL       man_error_set
    896          	}
    897          
    898          	return ret;
   \                     ??mid_GPS_response_39: (+1)
   \   000003A6   0x0020             MOVS     R0,R4
   \   000003A8   0xBD70             POP      {R4-R6,PC}       ;; return
    899          }
    900          
    901          
    902          
    903          /********************************************************************/
    904          /*	extern関数                                                      */
    905          /********************************************************************/
    906          
    907          
    908          /********************************************************************/
    909          /*!
    910           * \name	mid_GPS_init
    911           * \brief	GPSの初期化処理
    912           * \param	なし
    913           * \return  なし
    914           * \note	起動時に、呼ばれること
    915           */
    916          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    917          void mid_GPS_init(void)
    918          {
   \                     mid_GPS_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    919          	// CXD5600GF初期化処理
    920          	ctrl_CXD5600GF_init();
   \   00000002   0x.... 0x....      BL       ctrl_CXD5600GF_init
    921          
    922          	// 内部変数を初期化する
    923          	memset(&mid_gps_work, 0, sizeof(mid_gps_work_t));
   \   00000006   0x2154             MOVS     R1,#+84
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x....             LDR      R4,??DataTable12
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memset
    924          	
    925          	// コマンド応答以外の受信データの通知を依頼する
    926          	ctrl_CXD5600GF_set_noti(0, mid_GPS_callback_noti);
   \   00000012   0x....             LDR      R1,??DataTable17
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       ctrl_CXD5600GF_set_noti
    927          }
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    928          
    929          
    930          
    931          /********************************************************************/
    932          /*!
    933           * \name	mid_GPS_main
    934           * \brief	GPS制御メイン処理
    935           * \param	なし
    936           * \return  なし
    937           * \note	毎回に、呼ばれること
    938           */
    939          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    940          void mid_GPS_main(void)
    941          {
   \                     mid_GPS_main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    942          	int32_t		ret=-1;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x43C0             MVNS     R0,R0            ;; #-1
    943          	int32_t		sts;
    944          
    945          	sts = ctrl_CXD5600GF_check_nmea_recv();
   \   00000006   0x.... 0x....      BL       ctrl_CXD5600GF_check_nmea_recv
    946          
    947          	if (mid_gps_work.resp_info.flag != 0) {
   \   0000000A   0x....             LDR      R1,??DataTable12
   \   0000000C   0x6B49             LDR      R1,[R1, #+52]
   \   0000000E   0x2900             CMP      R1,#+0
   \   00000010   0xD06E             BEQ      ??mid_GPS_main_0
    948          
    949          		// 受信処理
    950          		switch (mid_gps_work.resp_info.cmdsts) {
   \   00000012   0x....             LDR      R1,??DataTable17_1
   \   00000014   0x7809             LDRB     R1,[R1, #+0]
   \   00000016   0x2900             CMP      R1,#+0
   \   00000018   0xD008             BEQ      ??mid_GPS_main_1
   \   0000001A   0x2901             CMP      R1,#+1
   \   0000001C   0xD03A             BEQ      ??mid_GPS_main_2
   \   0000001E   0x2902             CMP      R1,#+2
   \   00000020   0xD01E             BEQ      ??mid_GPS_main_3
   \   00000022   0x2903             CMP      R1,#+3
   \   00000024   0xD036             BEQ      ??mid_GPS_main_2
   \   00000026   0x2905             CMP      R1,#+5
   \   00000028   0xD034             BEQ      ??mid_GPS_main_2
   \   0000002A   0xE04F             B        ??mid_GPS_main_4
    951          		case MID_GPS_CMDSTS_OK:
    952          			// NMEA受信終了を待つ
    953          			if (sts != 1) {
   \                     ??mid_GPS_main_1: (+1)
   \   0000002C   0x2801             CMP      R0,#+1
   \   0000002E   0xD016             BEQ      ??mid_GPS_main_5
    954          				// 正常受信処理
    955          				ret = mid_GPS_response(MID_GPS_STATUS_OK);
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       mid_GPS_response
    956          				if (ret < 0) {
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD50E             BPL      ??mid_GPS_main_6
    957          					// エラー登録
    958          					man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, mid_gps_work.resp_info.cmdsts);
   \   0000003A   0x....             LDR      R3,??DataTable18  ;; 0x3be
   \   0000003C   0x....             LDR      R0,??DataTable17_1
   \   0000003E   0x7802             LDRB     R2,[R0, #+0]
   \   00000040   0x....             LDR      R0,??DataTable12
   \   00000042   0x7C01             LDRB     R1,[R0, #+16]
   \   00000044   0x200F             MOVS     R0,#+15
   \   00000046   0x.... 0x....      BL       man_error_set
    959          					// 中止する。
    960          					mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x....             LDR      R1,??DataTable12
   \   0000004E   0x7408             STRB     R0,[R1, #+16]
    961          					// callback関数で異常終了通知
    962          					mid_GPS_res_callbacl(MID_GPS_STATUS_NG);
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000054   0x.... 0x....      BL       mid_GPS_res_callbacl
    963          				}
    964          				mid_gps_work.resp_info.flag = 0;
   \                     ??mid_GPS_main_6: (+1)
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x....             LDR      R1,??DataTable12
   \   0000005C   0x6348             STR      R0,[R1, #+52]
    965          			}
    966          			break;
   \                     ??mid_GPS_main_5: (+1)
   \   0000005E   0xE047             B        ??mid_GPS_main_0
    967          
    968          		case MID_GPS_CMDSTS_RETRY:
    969          			// NMEA受信終了を待つ
    970          			if (sts != 1) {
   \                     ??mid_GPS_main_3: (+1)
   \   00000060   0x2801             CMP      R0,#+1
   \   00000062   0xD016             BEQ      ??mid_GPS_main_7
    971          				// 正常受信処理
    972          				ret = mid_GPS_response(MID_GPS_STATUS_RETRY);
   \   00000064   0x2001             MOVS     R0,#+1
   \   00000066   0x.... 0x....      BL       mid_GPS_response
    973          				if (ret < 0) {
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD50E             BPL      ??mid_GPS_main_8
    974          					// エラー登録
    975          					man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, mid_gps_work.resp_info.cmdsts);
   \   0000006E   0x....             LDR      R3,??DataTable18_1  ;; 0x3cf
   \   00000070   0x....             LDR      R0,??DataTable17_1
   \   00000072   0x7802             LDRB     R2,[R0, #+0]
   \   00000074   0x....             LDR      R0,??DataTable12
   \   00000076   0x7C01             LDRB     R1,[R0, #+16]
   \   00000078   0x200F             MOVS     R0,#+15
   \   0000007A   0x.... 0x....      BL       man_error_set
    976          					// 中止する。
    977          					mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x....             LDR      R1,??DataTable12
   \   00000082   0x7408             STRB     R0,[R1, #+16]
    978          					// callback関数で異常終了通知
    979          					mid_GPS_res_callbacl(MID_GPS_STATUS_NG);
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000088   0x.... 0x....      BL       mid_GPS_res_callbacl
    980          				}
    981          				mid_gps_work.resp_info.flag = 0;
   \                     ??mid_GPS_main_8: (+1)
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x....             LDR      R1,??DataTable12
   \   00000090   0x6348             STR      R0,[R1, #+52]
    982          			}
    983          			break;
   \                     ??mid_GPS_main_7: (+1)
   \   00000092   0xE02D             B        ??mid_GPS_main_0
    984          
    985          
    986          		case MID_GPS_CMDSTS_ERR:
    987          		case MID_GPS_CMDSTS_UNKNOWN:
    988          		case MID_GPS_CMDSTS_TIMEOUT:
    989          			// リトライ
    990          			if (mid_gps_work.retry >= MID_GPS_RETRY_MAX) {
   \                     ??mid_GPS_main_2: (+1)
   \   00000094   0x....             LDR      R0,??DataTable12
   \   00000096   0x6AC0             LDR      R0,[R0, #+44]
   \   00000098   0x2802             CMP      R0,#+2
   \   0000009A   0xD310             BCC      ??mid_GPS_main_9
    991          				// エラー登録
    992          				man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, mid_gps_work.resp_info.cmdsts);
   \   0000009C   0x23F8             MOVS     R3,#+248
   \   0000009E   0x009B             LSLS     R3,R3,#+2        ;; #+992
   \   000000A0   0x....             LDR      R0,??DataTable17_1
   \   000000A2   0x7802             LDRB     R2,[R0, #+0]
   \   000000A4   0x....             LDR      R0,??DataTable12
   \   000000A6   0x7C01             LDRB     R1,[R0, #+16]
   \   000000A8   0x200F             MOVS     R0,#+15
   \   000000AA   0x.... 0x....      BL       man_error_set
    993          				// 中止する。
    994          				mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x....             LDR      R1,??DataTable12
   \   000000B2   0x7408             STRB     R0,[R1, #+16]
    995          				// callback関数で異常終了通知
    996          				mid_GPS_res_callbacl(MID_GPS_STATUS_NG);
   \   000000B4   0x2000             MOVS     R0,#+0
   \   000000B6   0x43C0             MVNS     R0,R0            ;; #-1
   \   000000B8   0x.... 0x....      BL       mid_GPS_res_callbacl
   \   000000BC   0xE002             B        ??mid_GPS_main_10
    997          			}
    998          			else {
    999          				// リトライ要求
   1000          				mid_gps_work.retry_req = 1;
   \                     ??mid_GPS_main_9: (+1)
   \   000000BE   0x2001             MOVS     R0,#+1
   \   000000C0   0x....             LDR      R1,??DataTable12
   \   000000C2   0x6308             STR      R0,[R1, #+48]
   1001          			}
   1002          			mid_gps_work.resp_info.flag = 0;
   \                     ??mid_GPS_main_10: (+1)
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x....             LDR      R1,??DataTable12
   \   000000C8   0x6348             STR      R0,[R1, #+52]
   1003          			break;
   \   000000CA   0xE011             B        ??mid_GPS_main_0
   1004          
   1005          		default:
   1006          			// エラー登録
   1007          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, mid_gps_work.resp_info.cmdsts);
   \                     ??mid_GPS_main_4: (+1)
   \   000000CC   0x....             LDR      R3,??DataTable19  ;; 0x3ef
   \   000000CE   0x....             LDR      R0,??DataTable17_1
   \   000000D0   0x7802             LDRB     R2,[R0, #+0]
   \   000000D2   0x....             LDR      R0,??DataTable12
   \   000000D4   0x7C01             LDRB     R1,[R0, #+16]
   \   000000D6   0x200F             MOVS     R0,#+15
   \   000000D8   0x.... 0x....      BL       man_error_set
   1008          			// 中止する。
   1009          			mid_gps_work.sequence = MID_GPS_SEQ_READY;
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x....             LDR      R1,??DataTable12
   \   000000E0   0x7408             STRB     R0,[R1, #+16]
   1010          			// callback関数で異常終了通知
   1011          			mid_GPS_res_callbacl(MID_GPS_STATUS_NG);
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x43C0             MVNS     R0,R0            ;; #-1
   \   000000E6   0x.... 0x....      BL       mid_GPS_res_callbacl
   1012          			mid_gps_work.resp_info.flag = 0;
   \   000000EA   0x2000             MOVS     R0,#+0
   \   000000EC   0x....             LDR      R1,??DataTable12
   \   000000EE   0x6348             STR      R0,[R1, #+52]
   1013          			break;
   1014          		}
   1015          	}
   1016          
   1017          	// コマンド再送信処理
   1018          	if (mid_gps_work.retry_req != 0) {
   \                     ??mid_GPS_main_0: (+1)
   \   000000F0   0x....             LDR      R0,??DataTable12
   \   000000F2   0x6B00             LDR      R0,[R0, #+48]
   \   000000F4   0x2800             CMP      R0,#+0
   \   000000F6   0xD00F             BEQ      ??mid_GPS_main_11
   1019          		// NMEA受信中はコマンドを発行しない
   1020          		if ( ctrl_CXD5600GF_check_nmea_recv() == 0) {
   \   000000F8   0x.... 0x....      BL       ctrl_CXD5600GF_check_nmea_recv
   \   000000FC   0x2800             CMP      R0,#+0
   \   000000FE   0xD10B             BNE      ??mid_GPS_main_11
   1021          			// コマンド再送信
   1022          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000100   0x....             LDR      R0,??DataTable12
   \   00000102   0x7C00             LDRB     R0,[R0, #+16]
   \   00000104   0x.... 0x....      BL       mid_GPS_send_command
   1023          			mid_gps_work.retry++;
   \   00000108   0x....             LDR      R0,??DataTable12
   \   0000010A   0x6AC0             LDR      R0,[R0, #+44]
   \   0000010C   0x1C40             ADDS     R0,R0,#+1
   \   0000010E   0x....             LDR      R1,??DataTable12
   \   00000110   0x62C8             STR      R0,[R1, #+44]
   1024          			mid_gps_work.retry_req = 0;
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x....             LDR      R1,??DataTable12
   \   00000116   0x6308             STR      R0,[R1, #+48]
   1025          		}
   1026          	}
   1027          
   1028          }
   \                     ??mid_GPS_main_11: (+1)
   \   00000118   0xBD01             POP      {R0,PC}          ;; return
   1029          
   1030          
   1031          
   1032          /********************************************************************/
   1033          /*!
   1034           * \name	mid_GPS_req_ColdSart
   1035           * \brief	GPSコールドスタート開始処理
   1036           * \param	id       : ユニーク番号
   1037           *          callback : 完了を通知するcallback関数
   1038           * \return   0: 成功
   1039           *          -1:失敗
   1040           * \note	必要時に、呼ばれること
   1041           *          終了時にcallback関数が呼ばれます。
   1042           */
   1043          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1044          int32_t mid_GPS_req_ColdSart(int32_t id, func_gps_cmd callback)
   1045          {
   \                     mid_GPS_req_ColdSart: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1046          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1047          
   1048          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_ColdSart_0
   1049          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable16_1
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_ColdSart_1
   1050          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable16_1
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1051          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable16_1
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1052          
   1053          			// IDLEモード(GSTP)コマンド送信
   1054          			mid_gps_work.sequence = MID_GPS_SEQ_CS_RESP_GSTP;
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x....             LDR      R1,??DataTable16_1
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1055          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable16_1
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1056          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable16_1
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_ColdSart_0
   1057          		}
   1058          		else {
   1059          			// エラー登録
   1060          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_ColdSart_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable21  ;; 0x424
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable16_1
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1061          		}
   1062          	}
   1063          	
   1064          	return ret;
   \                     ??mid_GPS_req_ColdSart_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1065          }
   1066          
   1067          
   1068          /********************************************************************/
   1069          /*!
   1070           * \name	mid_GPS_req_HotSart
   1071           * \brief	GPSホットスタート開始処理
   1072           * \param	id       : ユニーク番号
   1073           *          callback : 完了を通知するcallback関数
   1074           * \return   0: 成功
   1075           *          -1:失敗
   1076           * \note	必要時に、呼ばれること
   1077           *          終了時にcallback関数が呼ばれます。
   1078           */
   1079          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1080          int32_t mid_GPS_req_HotSart(int32_t id, func_gps_cmd callback)
   1081          {
   \                     mid_GPS_req_HotSart: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1082          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1083          
   1084          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01B             BEQ      ??mid_GPS_req_HotSart_0
   1085          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable16_1
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_HotSart_1
   1086          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable16_1
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1087          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable16_1
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1088          
   1089          			// FLASH復帰(BRES)コマンド送信
   1090          			mid_gps_work.sequence = MID_GPS_SEQ_HS_RESP_BRES;
   \   0000001C   0x2007             MOVS     R0,#+7
   \   0000001E   0x....             LDR      R1,??DataTable16_1
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1091          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable16_1
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1092          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable16_1
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE007             B        ??mid_GPS_req_HotSart_0
   1093          		}
   1094          		else {
   1095          			// エラー登録
   1096          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_HotSart_1: (+1)
   \   00000034   0x2389             MOVS     R3,#+137
   \   00000036   0x00DB             LSLS     R3,R3,#+3        ;; #+1096
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x....             LDR      R0,??DataTable16_1
   \   0000003C   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003E   0x200F             MOVS     R0,#+15
   \   00000040   0x.... 0x....      BL       man_error_set
   1097          		}
   1098          	}
   1099          	
   1100          	return ret;
   \                     ??mid_GPS_req_HotSart_0: (+1)
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xBD10             POP      {R4,PC}          ;; return
   1101          }
   1102          
   1103          
   1104          /********************************************************************/
   1105          /*!
   1106           * \name	mid_GPS_req_PowerOff
   1107           * \brief	GPS 電源OFF開始処理
   1108           * \param	id       : ユニーク番号
   1109           *          callback : 完了を通知するcallback関数
   1110           * \return   0: 成功
   1111           *          -1:失敗
   1112           * \note	必要時に、呼ばれること
   1113           *          終了時にcallback関数が呼ばれます。
   1114           */
   1115          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1116          int32_t mid_GPS_req_PowerOff(int32_t id, func_gps_cmd callback)
   1117          {
   \                     mid_GPS_req_PowerOff: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1118          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1119          
   1120          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_PowerOff_0
   1121          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable16_1
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_PowerOff_1
   1122          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable16_1
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1123          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable16_1
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1124          
   1125          			// IDLEモード(GSTP)コマンド送信
   1126          			mid_gps_work.sequence = MID_GPS_SEQ_OF_RESP_GSTP;
   \   0000001C   0x200E             MOVS     R0,#+14
   \   0000001E   0x....             LDR      R1,??DataTable16_1
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1127          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable16_1
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1128          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable16_1
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_PowerOff_0
   1129          		}
   1130          		else {
   1131          			// エラー登録
   1132          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_PowerOff_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable23  ;; 0x46c
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable16_1
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1133          		}
   1134          	}
   1135          	
   1136          	return ret;
   \                     ??mid_GPS_req_PowerOff_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1137          }
   1138          
   1139          
   1140          /********************************************************************/
   1141          /*!
   1142           * \name	mid_GPS_req_Sleep
   1143           * \brief	GPS SLEEP開始処理
   1144           * \param	id       : ユニーク番号
   1145           *          callback : 完了を通知するcallback関数
   1146           * \return   0: 成功
   1147           *          -1:失敗
   1148           * \note	必要時に、呼ばれること
   1149           *          終了時にcallback関数が呼ばれます。
   1150           *          未使用
   1151           */
   1152          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1153          int32_t mid_GPS_req_Sleep(int32_t id, func_gps_cmd callback)
   1154          {
   \                     mid_GPS_req_Sleep: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1155          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1156          
   1157          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_Sleep_0
   1158          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable16_1
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_Sleep_1
   1159          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable16_1
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1160          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable16_1
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1161          
   1162          			// IDLEモード(GSTP)コマンド送信
   1163          			mid_gps_work.sequence = MID_GPS_SEQ_SP_RESP_GSTP;
   \   0000001C   0x2010             MOVS     R0,#+16
   \   0000001E   0x....             LDR      R1,??DataTable16_1
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1164          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable16_1
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1165          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable16_1
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_Sleep_0
   1166          		}
   1167          		else {
   1168          			// エラー登録
   1169          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_Sleep_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable24  ;; 0x491
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable16_1
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1170          		}
   1171          	}
   1172          	
   1173          	return ret;
   \                     ??mid_GPS_req_Sleep_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1174          }
   1175          
   1176          
   1177          /********************************************************************/
   1178          /*!
   1179           * \name	mid_GPS_req_WakeUp
   1180           * \brief	GPS WAKE UP開始処理
   1181           * \param	id       : ユニーク番号
   1182           *          callback : 完了を通知するcallback関数
   1183           * \return   0: 成功
   1184           *          -1:失敗
   1185           * \note	必要時に、呼ばれること
   1186           *          終了時にcallback関数が呼ばれます。
   1187           */
   1188          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1189          int32_t mid_GPS_req_WakeUp(int32_t id, func_gps_cmd callback)
   1190          {
   \                     mid_GPS_req_WakeUp: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1191          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1192          
   1193          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_WakeUp_0
   1194          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable16_1
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_WakeUp_1
   1195          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable16_1
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1196          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable16_1
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1197          
   1198          			// 起床(WUP)コマンド送信
   1199          			mid_gps_work.sequence = MID_GPS_SEQ_WU_RESP_WUP;
   \   0000001C   0x2013             MOVS     R0,#+19
   \   0000001E   0x....             LDR      R1,??DataTable16_1
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1200          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable16_1
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1201          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable16_1
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_WakeUp_0
   1202          		}
   1203          		else {
   1204          			// エラー登録
   1205          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_WakeUp_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable25  ;; 0x4b5
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable16_1
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1206          		}
   1207          	}
   1208          	
   1209          	return ret;
   \                     ??mid_GPS_req_WakeUp_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1210          }
   1211          
   1212          
   1213          
   1214          /********************************************************************/
   1215          /*!
   1216           * \name	mid_GPS_req_Idle
   1217           * \brief	GPS Idle開始処理
   1218           * \param	id       : ユニーク番号
   1219           *          callback : 完了を通知するcallback関数
   1220           * \return   0: 成功
   1221           *          -1:失敗
   1222           * \note	必要時に、呼ばれること
   1223           *          終了時にcallback関数が呼ばれます。
   1224           */
   1225          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1226          int32_t mid_GPS_req_Idle(int32_t id, func_gps_cmd callback)
   1227          {
   \                     mid_GPS_req_Idle: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1228          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1229          
   1230          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_Idle_0
   1231          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable26
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_Idle_1
   1232          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable26
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1233          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1234          
   1235          			// IDLEモード(GSTP)コマンド送信
   1236          			mid_gps_work.sequence = MID_GPS_SEQ_IL_RESP_GSTP;
   \   0000001C   0x2016             MOVS     R0,#+22
   \   0000001E   0x....             LDR      R1,??DataTable26
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1237          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable26
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1238          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable26
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_Idle_0
   1239          		}
   1240          		else {
   1241          			// エラー登録
   1242          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_Idle_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable26_1  ;; 0x4da
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable26
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1243          		}
   1244          	}
   1245          	
   1246          	return ret;
   \                     ??mid_GPS_req_Idle_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1247          }
   1248          
   1249          
   1250          /********************************************************************/
   1251          /*!
   1252           * \name	mid_GPS_req_Exec
   1253           * \brief	GPS Exec開始処理
   1254           * \param	id       : ユニーク番号
   1255           *          callback : 完了を通知するcallback関数
   1256           * \return   0: 成功
   1257           *          -1:失敗
   1258           * \note	必要時に、呼ばれること
   1259           *          終了時にcallback関数が呼ばれます。
   1260           */
   1261          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1262          int32_t mid_GPS_req_Exec(int32_t id, func_gps_cmd callback)
   1263          {
   \                     mid_GPS_req_Exec: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1264          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1265          
   1266          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_Exec_0
   1267          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable26
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_Exec_1
   1268          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable26
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1269          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1270          
   1271          			// EXECモード(GSP)コマンド送信
   1272          			mid_gps_work.sequence = MID_GPS_SEQ_EX_RESP_GSP;
   \   0000001C   0x2017             MOVS     R0,#+23
   \   0000001E   0x....             LDR      R1,??DataTable26
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1273          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable26
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1274          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable26
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_Exec_0
   1275          		}
   1276          		else {
   1277          			// エラー登録
   1278          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_Exec_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable27  ;; 0x4fe
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable26
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1279          		}
   1280          	}
   1281          	
   1282          	return ret;
   \                     ??mid_GPS_req_Exec_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1283          }
   1284          
   1285          
   1286          /********************************************************************/
   1287          /*!
   1288           * \name	mid_GPS_req_Erase
   1289           * \brief	GPS ERASE実行処理
   1290           * \param	id       : ユニーク番号
   1291           *          callback : 完了を通知するcallback関数
   1292           * \return   0: 成功
   1293           *          -1:失敗
   1294           * \note	必要時に、呼ばれること
   1295           *          終了時にcallback関数が呼ばれます。
   1296           */
   1297          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1298          int32_t mid_GPS_req_Erase(int32_t id, func_gps_cmd callback)
   1299          {
   \                     mid_GPS_req_Erase: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1300          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1301          
   1302          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_Erase_0
   1303          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable26
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_Erase_1
   1304          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable26
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1305          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1306          
   1307          			// FERコマンド送信
   1308          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_FER;
   \   0000001C   0x2018             MOVS     R0,#+24
   \   0000001E   0x....             LDR      R1,??DataTable26
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1309          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable26
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1310          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable26
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_Erase_0
   1311          		}
   1312          		else {
   1313          			// エラー登録
   1314          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_Erase_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable28  ;; 0x522
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable26
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1315          		}
   1316          	}
   1317          	
   1318          	return ret;
   \                     ??mid_GPS_req_Erase_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1319          }
   1320          
   1321          
   1322          /********************************************************************/
   1323          /*!
   1324           * \name	mid_GPS_req_Updater
   1325           * \brief	GPS Updater注入処理
   1326           * \param	data     : updater
   1327           *          length   : updater長
   1328           *          id       : ユニーク番号
   1329           *          callback : 完了を通知するcallback関数
   1330           * \return   0: 成功
   1331           *          -1:失敗
   1332           * \note	必要時に、呼ばれること
   1333           *          終了時にcallback関数が呼ばれます。
   1334           *          応答はMID_GPS_STATUS_OK    : [cmd] Ready
   1335           *                MID_GPS_STATUS_NG    : 上記以外
   1336           */
   1337          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1338          int32_t mid_GPS_req_Updater(uint8_t *data, int32_t length, int32_t id, func_gps_cmd callback)
   1339          {
   \                     mid_GPS_req_Updater: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1340          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1341          
   1342          	if (callback != NULL) {
   \   00000006   0x001D             MOVS     R5,R3
   \   00000008   0x2D00             CMP      R5,#+0
   \   0000000A   0xD01E             BEQ      ??mid_GPS_req_Updater_0
   1343          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R5,??DataTable26
   \   0000000E   0x7C2D             LDRB     R5,[R5, #+16]
   \   00000010   0x2D00             CMP      R5,#+0
   \   00000012   0xD113             BNE      ??mid_GPS_req_Updater_1
   1344          			mid_gps_work.request.data = data;
   \   00000014   0x....             LDR      R4,??DataTable26
   \   00000016   0x6060             STR      R0,[R4, #+4]
   1345          			mid_gps_work.request.length = length;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x6081             STR      R1,[R0, #+8]
   1346          			mid_gps_work.request.id = id;
   \   0000001C   0x....             LDR      R0,??DataTable26
   \   0000001E   0x6002             STR      R2,[R0, #+0]
   1347          			mid_gps_work.request.callback = callback;
   \   00000020   0x....             LDR      R0,??DataTable26
   \   00000022   0x60C3             STR      R3,[R0, #+12]
   1348          
   1349          			// UDLコマンド送信
   1350          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_UDL;
   \   00000024   0x2019             MOVS     R0,#+25
   \   00000026   0x....             LDR      R1,??DataTable26
   \   00000028   0x7408             STRB     R0,[R1, #+16]
   1351          			mid_gps_work.retry = 0;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR      R1,??DataTable26
   \   0000002E   0x62C8             STR      R0,[R1, #+44]
   1352          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000030   0x....             LDR      R0,??DataTable26
   \   00000032   0x7C00             LDRB     R0,[R0, #+16]
   \   00000034   0x.... 0x....      BL       mid_GPS_send_command
   \   00000038   0x0004             MOVS     R4,R0
   \   0000003A   0xE006             B        ??mid_GPS_req_Updater_0
   1353          		}
   1354          		else {
   1355          			// エラー登録
   1356          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_Updater_1: (+1)
   \   0000003C   0x....             LDR      R3,??DataTable30  ;; 0x54c
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x....             LDR      R0,??DataTable26
   \   00000042   0x7C01             LDRB     R1,[R0, #+16]
   \   00000044   0x200F             MOVS     R0,#+15
   \   00000046   0x.... 0x....      BL       man_error_set
   1357          		}
   1358          	}
   1359          	
   1360          	return ret;
   \                     ??mid_GPS_req_Updater_0: (+1)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1361          }
   1362          
   1363          /********************************************************************/
   1364          /*!
   1365           * \name	mid_GPS_req_UDL
   1366           * \brief	UDLコマンド送信処理
   1367           * \param	id       : ユニーク番号
   1368           *          callback : 完了を通知するcallback関数
   1369           * \return   0: 成功
   1370           *          -1:失敗
   1371           * \note	必要時に、呼ばれること
   1372           *          終了時にcallback関数が呼ばれます。
   1373           *          応答はMID_GPS_STATUS_OK    : [cmd] Ready
   1374           *                MID_GPS_STATUS_NG    : 上記以外
   1375           */
   1376          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1377          int32_t mid_GPS_req_UDL(int32_t id, func_gps_cmd callback)
   1378          {
   \                     mid_GPS_req_UDL: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1379          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1380          
   1381          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_UDL_0
   1382          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable26
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_UDL_1
   1383          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable26
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1384          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1385          
   1386          			// UDLコマンド送信
   1387          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_UDL2;
   \   0000001C   0x2021             MOVS     R0,#+33
   \   0000001E   0x....             LDR      R1,??DataTable26
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1388          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable26
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1389          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable26
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_UDL_0
   1390          		}
   1391          		else {
   1392          			// エラー登録
   1393          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_UDL_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable30_1  ;; 0x571
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable26
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1394          		}
   1395          	}
   1396          	
   1397          	return ret;
   \                     ??mid_GPS_req_UDL_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1398          }
   1399          
   1400          
   1401          /********************************************************************/
   1402          /*!
   1403           * \name	mid_GPS_req_FDL
   1404           * \brief	FDLコマンド送信処理
   1405           * \param	id       : ユニーク番号
   1406           *          callback : 完了を通知するcallback関数
   1407           * \return   0: 成功
   1408           *          -1:失敗
   1409           * \note	必要時に、呼ばれること
   1410           *          終了時にcallback関数が呼ばれます。
   1411           *          応答はMID_GPS_STATUS_OK    : [cmd] Ready
   1412           *                MID_GPS_STATUS_NG    : 上記以外
   1413           */
   1414          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1415          int32_t mid_GPS_req_FDL(int32_t id, func_gps_cmd callback)
   1416          {
   \                     mid_GPS_req_FDL: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1417          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1418          
   1419          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_FDL_0
   1420          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable26
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_FDL_1
   1421          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable26
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1422          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1423          
   1424          			// UDLコマンド送信
   1425          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_FDL2;
   \   0000001C   0x2022             MOVS     R0,#+34
   \   0000001E   0x....             LDR      R1,??DataTable26
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1426          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable26
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1427          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable26
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_FDL_0
   1428          		}
   1429          		else {
   1430          			// エラー登録
   1431          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_FDL_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable30_2  ;; 0x597
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable26
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1432          		}
   1433          	}
   1434          	
   1435          	return ret;
   \                     ??mid_GPS_req_FDL_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1436          }
   1437          
   1438          
   1439          
   1440          /********************************************************************/
   1441          /*!
   1442           * \name	mid_GPS_req_Config
   1443           * \brief	GPS UConfig注入処理
   1444           * \param	data     : config
   1445           *          length   : config長
   1446           *          id       : ユニーク番号
   1447           *          callback : 完了を通知するcallback関数
   1448           * \return   0: 成功
   1449           *          -1:失敗
   1450           * \note	必要時に、呼ばれること
   1451           *          終了時にcallback関数が呼ばれます。
   1452           *          応答はMID_GPS_STATUS_OK    : [cmd] Ready
   1453           *                MID_GPS_STATUS_NG    : 上記以外
   1454           */
   1455          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1456          int32_t mid_GPS_req_Config(uint8_t *data, int32_t length, int32_t id, func_gps_cmd callback)
   1457          {
   \                     mid_GPS_req_Config: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1458          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1459          
   1460          	if (callback != NULL) {
   \   00000006   0x001D             MOVS     R5,R3
   \   00000008   0x2D00             CMP      R5,#+0
   \   0000000A   0xD01E             BEQ      ??mid_GPS_req_Config_0
   1461          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R5,??DataTable26
   \   0000000E   0x7C2D             LDRB     R5,[R5, #+16]
   \   00000010   0x2D00             CMP      R5,#+0
   \   00000012   0xD113             BNE      ??mid_GPS_req_Config_1
   1462          			mid_gps_work.request.data = data;
   \   00000014   0x....             LDR      R4,??DataTable26
   \   00000016   0x6060             STR      R0,[R4, #+4]
   1463          			mid_gps_work.request.length = length;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x6081             STR      R1,[R0, #+8]
   1464          			mid_gps_work.request.id = id;
   \   0000001C   0x....             LDR      R0,??DataTable26
   \   0000001E   0x6002             STR      R2,[R0, #+0]
   1465          			mid_gps_work.request.callback = callback;
   \   00000020   0x....             LDR      R0,??DataTable26
   \   00000022   0x60C3             STR      R3,[R0, #+12]
   1466          
   1467          			// FDLコマンド送信
   1468          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_FDL;
   \   00000024   0x201B             MOVS     R0,#+27
   \   00000026   0x....             LDR      R1,??DataTable26
   \   00000028   0x7408             STRB     R0,[R1, #+16]
   1469          			mid_gps_work.retry = 0;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR      R1,??DataTable26
   \   0000002E   0x62C8             STR      R0,[R1, #+44]
   1470          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000030   0x....             LDR      R0,??DataTable26
   \   00000032   0x7C00             LDRB     R0,[R0, #+16]
   \   00000034   0x.... 0x....      BL       mid_GPS_send_command
   \   00000038   0x0004             MOVS     R4,R0
   \   0000003A   0xE006             B        ??mid_GPS_req_Config_0
   1471          		}
   1472          		else {
   1473          			// エラー登録
   1474          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_Config_1: (+1)
   \   0000003C   0x....             LDR      R3,??DataTable30_3  ;; 0x5c2
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x....             LDR      R0,??DataTable26
   \   00000042   0x7C01             LDRB     R1,[R0, #+16]
   \   00000044   0x200F             MOVS     R0,#+15
   \   00000046   0x.... 0x....      BL       man_error_set
   1475          		}
   1476          	}
   1477          	
   1478          	return ret;
   \                     ??mid_GPS_req_Config_0: (+1)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1479          }
   1480          
   1481          
   1482          /********************************************************************/
   1483          /*!
   1484           * \name	mid_GPS_req_Firmware
   1485           * \brief	GPS Firmware注入処理
   1486           * \param	data     : Firmware
   1487           *          length   : Firmware長
   1488           *          id       : ユニーク番号
   1489           *          callback : 完了を通知するcallback関数
   1490           * \return   0: 成功
   1491           *          -1:失敗
   1492           * \note	必要時に、呼ばれること
   1493           *          終了時にcallback関数が呼ばれます。
   1494           *          応答はMID_GPS_STATUS_OK    : [cmd] Ready
   1495           *                MID_GPS_STATUS_RETRY : [fdl] Resnd
   1496           *                MID_GPS_STATUS_NG    : 上記以外
   1497           */
   1498          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1499          int32_t mid_GPS_req_Firmware(uint8_t *data, int32_t length, int32_t id, func_gps_cmd callback)
   1500          {
   \                     mid_GPS_req_Firmware: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1501          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1502          
   1503          	if (callback != NULL) {
   \   00000006   0x001D             MOVS     R5,R3
   \   00000008   0x2D00             CMP      R5,#+0
   \   0000000A   0xD01E             BEQ      ??mid_GPS_req_Firmware_0
   1504          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R5,??DataTable26
   \   0000000E   0x7C2D             LDRB     R5,[R5, #+16]
   \   00000010   0x2D00             CMP      R5,#+0
   \   00000012   0xD113             BNE      ??mid_GPS_req_Firmware_1
   1505          			mid_gps_work.request.data = data;
   \   00000014   0x....             LDR      R4,??DataTable26
   \   00000016   0x6060             STR      R0,[R4, #+4]
   1506          			mid_gps_work.request.length = length;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x6081             STR      R1,[R0, #+8]
   1507          			mid_gps_work.request.id = id;
   \   0000001C   0x....             LDR      R0,??DataTable26
   \   0000001E   0x6002             STR      R2,[R0, #+0]
   1508          			mid_gps_work.request.callback = callback;
   \   00000020   0x....             LDR      R0,??DataTable26
   \   00000022   0x60C3             STR      R3,[R0, #+12]
   1509          
   1510          			// FDLコマンド送信
   1511          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_FIRMWARE;
   \   00000024   0x201D             MOVS     R0,#+29
   \   00000026   0x....             LDR      R1,??DataTable26
   \   00000028   0x7408             STRB     R0,[R1, #+16]
   1512          			mid_gps_work.retry = 0;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR      R1,??DataTable26
   \   0000002E   0x62C8             STR      R0,[R1, #+44]
   1513          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000030   0x....             LDR      R0,??DataTable26
   \   00000032   0x7C00             LDRB     R0,[R0, #+16]
   \   00000034   0x.... 0x....      BL       mid_GPS_send_command
   \   00000038   0x0004             MOVS     R4,R0
   \   0000003A   0xE006             B        ??mid_GPS_req_Firmware_0
   1514          		}
   1515          		else {
   1516          			// エラー登録
   1517          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_Firmware_1: (+1)
   \   0000003C   0x....             LDR      R3,??DataTable30_4  ;; 0x5ed
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x....             LDR      R0,??DataTable26
   \   00000042   0x7C01             LDRB     R1,[R0, #+16]
   \   00000044   0x200F             MOVS     R0,#+15
   \   00000046   0x.... 0x....      BL       man_error_set
   1518          		}
   1519          	}
   1520          	
   1521          	return ret;
   \                     ??mid_GPS_req_Firmware_0: (+1)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1522          }
   1523          
   1524          
   1525          /********************************************************************/
   1526          /*!
   1527           * \name	mid_GPS_req_Packet_next
   1528           * \brief	Packetデータ送信処理
   1529           * \param	data     : Packetデータ
   1530           *          length   : Packetデータ長
   1531           *          id       : ユニーク番号
   1532           *          callback : 完了を通知するcallback関数
   1533           * \return   0: 成功
   1534           *          -1:失敗
   1535           * \note	必要時に、呼ばれること
   1536           *          送信完了時にcallback関数が呼ばれます。
   1537           *          応答はMID_GPS_STATUS_OK    : 成功
   1538           *                MID_GPS_STATUS_NG    : 失敗
   1539           */
   1540          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1541          int32_t mid_GPS_req_Packet_next(uint8_t *data, int32_t length, int32_t id, func_gps_cmd callback)
   1542          {
   \                     mid_GPS_req_Packet_next: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1543          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1544          
   1545          	if (callback != NULL) {
   \   00000006   0x001D             MOVS     R5,R3
   \   00000008   0x2D00             CMP      R5,#+0
   \   0000000A   0xD01E             BEQ      ??mid_GPS_req_Packet_next_0
   1546          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R5,??DataTable26
   \   0000000E   0x7C2D             LDRB     R5,[R5, #+16]
   \   00000010   0x2D00             CMP      R5,#+0
   \   00000012   0xD113             BNE      ??mid_GPS_req_Packet_next_1
   1547          			mid_gps_work.request.data = data;
   \   00000014   0x....             LDR      R4,??DataTable26
   \   00000016   0x6060             STR      R0,[R4, #+4]
   1548          			mid_gps_work.request.length = length;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x6081             STR      R1,[R0, #+8]
   1549          			mid_gps_work.request.id = id;
   \   0000001C   0x....             LDR      R0,??DataTable26
   \   0000001E   0x6002             STR      R2,[R0, #+0]
   1550          			mid_gps_work.request.callback = callback;
   \   00000020   0x....             LDR      R0,??DataTable26
   \   00000022   0x60C3             STR      R3,[R0, #+12]
   1551          
   1552          			// Packetデータ送信
   1553          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_PKT_NEXT;
   \   00000024   0x201F             MOVS     R0,#+31
   \   00000026   0x....             LDR      R1,??DataTable26
   \   00000028   0x7408             STRB     R0,[R1, #+16]
   1554          			mid_gps_work.retry = 0;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR      R1,??DataTable26
   \   0000002E   0x62C8             STR      R0,[R1, #+44]
   1555          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000030   0x....             LDR      R0,??DataTable26
   \   00000032   0x7C00             LDRB     R0,[R0, #+16]
   \   00000034   0x.... 0x....      BL       mid_GPS_send_command
   \   00000038   0x0004             MOVS     R4,R0
   \   0000003A   0xE006             B        ??mid_GPS_req_Packet_next_0
   1556          		}
   1557          		else {
   1558          			// エラー登録
   1559          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_Packet_next_1: (+1)
   \   0000003C   0x....             LDR      R3,??DataTable30_5  ;; 0x617
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x....             LDR      R0,??DataTable26
   \   00000042   0x7C01             LDRB     R1,[R0, #+16]
   \   00000044   0x200F             MOVS     R0,#+15
   \   00000046   0x.... 0x....      BL       man_error_set
   1560          		}
   1561          	}
   1562          	
   1563          	return ret;
   \                     ??mid_GPS_req_Packet_next_0: (+1)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1564          }
   1565          
   1566          
   1567          /********************************************************************/
   1568          /*!
   1569           * \name	mid_GPS_req_Packet_end
   1570           * \brief	Packetデータ送信&応答待ち処理
   1571           * \param	data     : Packetデータ
   1572           *          length   : Packetデータ長
   1573           *          id       : ユニーク番号
   1574           *          callback : 完了を通知するcallback関数
   1575           * \return   0: 成功
   1576           *          -1:失敗
   1577           * \note	必要時に、呼ばれること
   1578           *          終了時にcallback関数が呼ばれます。
   1579           *          応答はMID_GPS_STATUS_OK    : [cmd] Ready
   1580           *                MID_GPS_STATUS_RETRY : [fdl] Resnd
   1581           *                MID_GPS_STATUS_NG    : 上記以外
   1582           */
   1583          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1584          int32_t mid_GPS_req_Packet_end(uint8_t *data, int32_t length, int32_t id, func_gps_cmd callback)
   1585          {
   \                     mid_GPS_req_Packet_end: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1586          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1587          
   1588          	if (callback != NULL) {
   \   00000006   0x001D             MOVS     R5,R3
   \   00000008   0x2D00             CMP      R5,#+0
   \   0000000A   0xD01E             BEQ      ??mid_GPS_req_Packet_end_0
   1589          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R5,??DataTable26
   \   0000000E   0x7C2D             LDRB     R5,[R5, #+16]
   \   00000010   0x2D00             CMP      R5,#+0
   \   00000012   0xD113             BNE      ??mid_GPS_req_Packet_end_1
   1590          			mid_gps_work.request.data = data;
   \   00000014   0x....             LDR      R4,??DataTable26
   \   00000016   0x6060             STR      R0,[R4, #+4]
   1591          			mid_gps_work.request.length = length;
   \   00000018   0x....             LDR      R0,??DataTable26
   \   0000001A   0x6081             STR      R1,[R0, #+8]
   1592          			mid_gps_work.request.id = id;
   \   0000001C   0x....             LDR      R0,??DataTable26
   \   0000001E   0x6002             STR      R2,[R0, #+0]
   1593          			mid_gps_work.request.callback = callback;
   \   00000020   0x....             LDR      R0,??DataTable26
   \   00000022   0x60C3             STR      R3,[R0, #+12]
   1594          
   1595          			// FDLコマンド送信
   1596          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_PKT_END;
   \   00000024   0x2020             MOVS     R0,#+32
   \   00000026   0x....             LDR      R1,??DataTable26
   \   00000028   0x7408             STRB     R0,[R1, #+16]
   1597          			mid_gps_work.retry = 0;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR      R1,??DataTable26
   \   0000002E   0x62C8             STR      R0,[R1, #+44]
   1598          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000030   0x....             LDR      R0,??DataTable26
   \   00000032   0x7C00             LDRB     R0,[R0, #+16]
   \   00000034   0x.... 0x....      BL       mid_GPS_send_command
   \   00000038   0x0004             MOVS     R4,R0
   \   0000003A   0xE006             B        ??mid_GPS_req_Packet_end_0
   1599          		}
   1600          		else {
   1601          			// エラー登録
   1602          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_Packet_end_1: (+1)
   \   0000003C   0x....             LDR      R3,??DataTable30_6  ;; 0x642
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x....             LDR      R0,??DataTable26
   \   00000042   0x7C01             LDRB     R1,[R0, #+16]
   \   00000044   0x200F             MOVS     R0,#+15
   \   00000046   0x.... 0x....      BL       man_error_set
   1603          		}
   1604          	}
   1605          	
   1606          	return ret;
   \                     ??mid_GPS_req_Packet_end_0: (+1)
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1607          }
   1608          
   1609          
   1610          
   1611          
   1612          
   1613          /********************************************************************/
   1614          /*!
   1615           * \name	mid_GPS_req_OtaRetry
   1616           * \brief	GPS OTA リトライ準備実行処理
   1617           * \param	id       : ユニーク番号
   1618           *          callback : 完了を通知するcallback関数
   1619           * \return   0: 成功
   1620           *          -1:失敗
   1621           * \note	必要時に、呼ばれること
   1622           *          終了時にcallback関数が呼ばれます。
   1623           */
   1624          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1625          int32_t mid_GPS_req_OtaRetry(int32_t id, func_gps_cmd callback)
   1626          {
   \                     mid_GPS_req_OtaRetry: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1627          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1628          
   1629          	if (callback != NULL) {
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD01A             BEQ      ??mid_GPS_req_OtaRetry_0
   1630          		if (mid_gps_work.sequence == MID_GPS_SEQ_READY) {
   \   0000000C   0x....             LDR      R2,??DataTable30_7
   \   0000000E   0x7C12             LDRB     R2,[R2, #+16]
   \   00000010   0x2A00             CMP      R2,#+0
   \   00000012   0xD10F             BNE      ??mid_GPS_req_OtaRetry_1
   1631          			mid_gps_work.request.id = id;
   \   00000014   0x....             LDR      R2,??DataTable30_7
   \   00000016   0x6010             STR      R0,[R2, #+0]
   1632          			mid_gps_work.request.callback = callback;
   \   00000018   0x....             LDR      R0,??DataTable30_7
   \   0000001A   0x60C1             STR      R1,[R0, #+12]
   1633          
   1634          			// FUDコマンド送信
   1635          			mid_gps_work.sequence = MID_GPS_SEQ_FW_RESP_FUD;
   \   0000001C   0x201E             MOVS     R0,#+30
   \   0000001E   0x....             LDR      R1,??DataTable30_7
   \   00000020   0x7408             STRB     R0,[R1, #+16]
   1636          			mid_gps_work.retry = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x....             LDR      R1,??DataTable30_7
   \   00000026   0x62C8             STR      R0,[R1, #+44]
   1637          			ret = mid_GPS_send_command(mid_gps_work.sequence);
   \   00000028   0x....             LDR      R0,??DataTable30_7
   \   0000002A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000002C   0x.... 0x....      BL       mid_GPS_send_command
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0xE006             B        ??mid_GPS_req_OtaRetry_0
   1638          		}
   1639          		else {
   1640          			// エラー登録
   1641          			man_error_setting(MAN_ERROR_MID_GPS, mid_gps_work.sequence, 0);
   \                     ??mid_GPS_req_OtaRetry_1: (+1)
   \   00000034   0x....             LDR      R3,??DataTable30_8  ;; 0x669
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x....             LDR      R0,??DataTable30_7
   \   0000003A   0x7C01             LDRB     R1,[R0, #+16]
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0x.... 0x....      BL       man_error_set
   1642          		}
   1643          	}
   1644          	
   1645          	return ret;
   \                     ??mid_GPS_req_OtaRetry_0: (+1)
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1646          }
   1647          
   1648          
   1649          /********************************************************************/
   1650          /*!
   1651           * \name	mid_GPS_req_NmeaStart
   1652           * \brief	NMEA通知開始処理
   1653           * \param	id       : ユニーク番号
   1654           *          callback : 完了を通知するcallback関数
   1655           * \return   0: 成功
   1656           *          -1:失敗
   1657           * \note	必要時に、呼ばれること
   1658           *          NMEA取得時にcallback関数が呼ばれます。
   1659           */
   1660          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1661          int32_t mid_GPS_req_NmeaStart(int32_t id, func_gps_nmea callback)
   1662          {
   \                     mid_GPS_req_NmeaStart: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1663          	return (ctrl_CXD5600GF_nmea_start(id, callback));
   \   00000002   0x.... 0x....      BL       ctrl_CXD5600GF_nmea_start
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
   1664          }
   1665          
   1666          
   1667          /********************************************************************/
   1668          /*!
   1669           * \name	mid_GPS_req_NmeaStop
   1670           * \brief	NMEA通知終了処理
   1671           * \param	id       : ユニーク番号
   1672           *          callback : 完了を通知するcallback関数
   1673           * \return  
   1674           * \note	必要時に、呼ばれること
   1675           *          終了時にcallback関数が呼ばれます。
   1676           */
   1677          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1678          int32_t mid_GPS_req_NmeaStop( void )
   1679          {
   \                     mid_GPS_req_NmeaStop: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1680          	return (ctrl_CXD5600GF_nmea_stop());
   \   00000002   0x.... 0x....      BL       ctrl_CXD5600GF_nmea_stop
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
   1681          }
   1682          
   1683          
   1684          /********************************************************************/
   1685          /*!
   1686           * \name	mid_GPS_get_NmeaResult
   1687           * \brief	NMEA判定結果の取得処理
   1688           * \param	result    : NMEA判定結果
   1689           * \return  
   1690           * \note	
   1691           */
   1692          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1693          void mid_GPS_get_NmeaResult( nmea_result_info_t *result )
   1694          {
   \                     mid_GPS_get_NmeaResult: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1695          	ctrl_CXD5600GF_nmea_result(result);
   \   00000002   0x.... 0x....      BL       ctrl_CXD5600GF_nmea_result
   1696          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
   1697          
   1698          
   1699          /********************************************************************/
   1700          /*!
   1701           * \name	mid_GPS_get_version
   1702           * \brief	GPSバージョンの取得処理
   1703           * \param	data    : GPSバージョン情報
   1704           *          length  : データ長
   1705           * \return   0: 成功
   1706           *          -1:失敗
   1707           * \note	未取得時は失敗が帰ります。
   1708           *          コールドスタート, ホットスタート後に呼び出してください。
   1709           */
   1710          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1711          int32_t mid_GPS_get_version( uint8_t *data, int32_t *length )
   1712          {
   \                     mid_GPS_get_version: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   1713          	int32_t	ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   1714          	
   1715          	if ( (data != NULL) && (length != NULL) && (mid_gps_work.resp_info.ver_len != 0) ) {
   \   0000000A   0x2D00             CMP      R5,#+0
   \   0000000C   0xD00F             BEQ      ??mid_GPS_get_version_0
   \   0000000E   0x2C00             CMP      R4,#+0
   \   00000010   0xD00D             BEQ      ??mid_GPS_get_version_0
   \   00000012   0x....             LDR      R1,??DataTable30_7
   \   00000014   0x6D09             LDR      R1,[R1, #+80]
   \   00000016   0x2900             CMP      R1,#+0
   \   00000018   0xD009             BEQ      ??mid_GPS_get_version_0
   1716          		memcpy(data, &mid_gps_work.resp_info.version[0], mid_gps_work.resp_info.ver_len);
   \   0000001A   0x....             LDR      R0,??DataTable30_7
   \   0000001C   0x6D02             LDR      R2,[R0, #+80]
   \   0000001E   0x....             LDR      R1,??DataTable30_9
   \   00000020   0x0028             MOVS     R0,R5
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy
   1717          		*length = mid_gps_work.resp_info.ver_len;
   \   00000026   0x....             LDR      R0,??DataTable30_7
   \   00000028   0x6D00             LDR      R0,[R0, #+80]
   \   0000002A   0x6020             STR      R0,[R4, #+0]
   1718          		ret = 0;
   \   0000002C   0x2000             MOVS     R0,#+0
   1719          	}
   1720          
   1721          	return ret;
   \                     ??mid_GPS_get_version_0: (+1)
   \   0000002E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1722          }
   1723          
   1724          
   1725          /********************************************************************/
   1726          /*!
   1727           * \name	mid_GPS_get_status
   1728           * \brief	GPS の状態を取得する
   1729           * \param	なし
   1730           * \return   0: 要求待ち
   1731           *           1: 実行中
   1732           * \note	必要時に、呼ばれること
   1733           */
   1734          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1735          int32_t mid_GPS_get_status( void )
   1736          {
   \                     mid_GPS_get_status: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1737          	int32_t	ret=0;
   \   00000002   0x2400             MOVS     R4,#+0
   1738          
   1739          	// GPS制御
   1740          	if (mid_gps_work.sequence != MID_GPS_SEQ_READY) {
   \   00000004   0x....             LDR      R0,??DataTable30_7
   \   00000006   0x7C00             LDRB     R0,[R0, #+16]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD000             BEQ      ??mid_GPS_get_status_0
   1741          		ret = 1;
   \   0000000C   0x2401             MOVS     R4,#+1
   1742          	}
   1743          	// NMEA受信中は実行中とする
   1744          	if (ctrl_CXD5600GF_check_nmea_recv() != 0 ) {
   \                     ??mid_GPS_get_status_0: (+1)
   \   0000000E   0x.... 0x....      BL       ctrl_CXD5600GF_check_nmea_recv
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD000             BEQ      ??mid_GPS_get_status_1
   1745          		ret = 1;
   \   00000016   0x2401             MOVS     R4,#+1
   1746          	}
   1747          
   1748          	return ret;
   \                     ??mid_GPS_get_status_1: (+1)
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
   1749          }
   1750          
   1751          /********************************************************************/
   1752          /*!
   1753           * \name	mid_GPS_set_RecvNotiResp
   1754           * \brief	OTA終了受信時に通知する関数登録処理
   1755           * \param	id       : ユニーク番号
   1756           *          callback : 受信データを通知するcallback関数
   1757           * \return   0: 成功
   1758           *          -1:失敗
   1759           * \note	
   1760           */
   1761          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1762          int32_t mid_GPS_set_RecvNotiResp(int32_t id, func_gps_noti_resp callback)
   1763          {
   \                     mid_GPS_set_RecvNotiResp: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   1764          	int32_t		ret=-1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1765          
   1766          	if (callback != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??mid_GPS_set_RecvNotiResp_0
   1767          		mid_gps_work.recv_noti_resp.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable30_7
   \   00000010   0x6142             STR      R2,[R0, #+20]
   1768          		mid_gps_work.recv_noti_resp.callback = callback;
   \   00000012   0x....             LDR      R0,??DataTable30_7
   \   00000014   0x6181             STR      R1,[R0, #+24]
   1769          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   1770          	}
   1771          	
   1772          	return ret;
   \                     ??mid_GPS_set_RecvNotiResp_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   1773          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     cmd_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     cmd_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     data_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     mid_gps_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     mid_gps_work+0x38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     mid_gps_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     mid_gps_work+0x44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     cmd_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     mid_GPS_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     mid_GPS_callback2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     mid_GPS_callback4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x0000024D         DC32     0x24d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     mid_gps_work+0x44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     mid_gps_work+0x1C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     mid_gps_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x0000037F         DC32     0x37f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   0x........         DC32     mid_gps_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     mid_GPS_callback_noti

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x........         DC32     mid_gps_work+0x38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x000003BE         DC32     0x3be

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x000003CF         DC32     0x3cf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x000003EF         DC32     0x3ef

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x00000424         DC32     0x424

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x0000046C         DC32     0x46c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x00000491         DC32     0x491

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   0x000004B5         DC32     0x4b5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   0x........         DC32     mid_gps_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_1:
   \   00000000   0x000004DA         DC32     0x4da

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x000004FE         DC32     0x4fe

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x00000522         DC32     0x522

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   0x0000054C         DC32     0x54c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_1:
   \   00000000   0x00000571         DC32     0x571

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_2:
   \   00000000   0x00000597         DC32     0x597

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_3:
   \   00000000   0x000005C2         DC32     0x5c2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_4:
   \   00000000   0x000005ED         DC32     0x5ed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_5:
   \   00000000   0x00000617         DC32     0x617

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_6:
   \   00000000   0x00000642         DC32     0x642

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_7:
   \   00000000   0x........         DC32     mid_gps_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_8:
   \   00000000   0x00000669         DC32     0x669

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_9:
   \   00000000   0x........         DC32     mid_gps_work+0x44

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x40 0x47          DC8 "@GSTP\015\012"
   \              0x53 0x54    
   \              0x50 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x5B 0x47          DC8 "[GSTP] Done"
   \              0x53 0x54    
   \              0x50 0x5D    
   \              0x20 0x44    
   \              0x6F 0x6E    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x5B 0x47          DC8 "[GSTP] Err"
   \              0x53 0x54    
   \              0x50 0x5D    
   \              0x20 0x45    
   \              0x72 0x72    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x40 0x56          DC8 "@VER\015\012"
   \              0x45 0x52    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x5B 0x56          DC8 "[VER] Done"
   \              0x45 0x52    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x5B 0x56          DC8 "[VER] Err"
   \              0x45 0x52    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x40 0x42          DC8 "@BSSL 0x340FF\015\012"
   \              0x53 0x53    
   \              0x4C 0x20    
   \              0x30 0x78    
   \              0x33 0x34    
   \              0x30 0x46    
   \              0x46 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x5B 0x42          DC8 "[BSSL] Done"
   \              0x53 0x53    
   \              0x4C 0x5D    
   \              0x20 0x44    
   \              0x6F 0x6E    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x5B 0x42          DC8 "[BSSL] Err"
   \              0x53 0x53    
   \              0x4C 0x5D    
   \              0x20 0x45    
   \              0x72 0x72    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x40 0x47          DC8 "@GNS 0x3B\015\012"
   \              0x4E 0x53    
   \              0x20 0x30    
   \              0x78 0x33    
   \              0x42 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x5B 0x47          DC8 "[GNS] Done"
   \              0x4E 0x53    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x5B 0x47          DC8 "[GNS] Err"
   \              0x4E 0x53    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x40 0x49          DC8 "@ISIC 4\015\012"
   \              0x53 0x49    
   \              0x43 0x20    
   \              0x34 0x0D    
   \              0x0A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x5B 0x49          DC8 "[ISIC] Done"
   \              0x53 0x49    
   \              0x43 0x5D    
   \              0x20 0x44    
   \              0x6F 0x6E    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x5B 0x49          DC8 "[ISIC] Err"
   \              0x53 0x49    
   \              0x43 0x5D    
   \              0x20 0x45    
   \              0x72 0x72    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x40 0x47          DC8 "@GCD\015\012"
   \              0x43 0x44    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x5B 0x47          DC8 "[GCD] Done"
   \              0x43 0x44    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x40 0x42          DC8 "@BRES\015\012"
   \              0x52 0x45    
   \              0x53 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_18:
   \   00000000   0x5B 0x42          DC8 "[BRES] Done"
   \              0x52 0x45    
   \              0x53 0x5D    
   \              0x20 0x44    
   \              0x6F 0x6E    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x5B 0x42          DC8 "[BRES] Err"
   \              0x52 0x45    
   \              0x53 0x5D    
   \              0x20 0x45    
   \              0x72 0x72    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x40 0x47          DC8 "@GTIM 2017 08 09 16 00 30\015\012"
   \              0x54 0x49    
   \              0x4D 0x20    
   \              0x32 0x30    
   \              0x31 0x37    
   \              0x20 0x30    
   \              0x38 0x20    
   \              0x30 0x39    
   \              0x20 0x31    
   \              0x36 0x20    
   \              0x30 0x30    
   \              0x20 0x33    
   \              0x30 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x5B 0x47          DC8 "[GTIM] Done"
   \              0x54 0x49    
   \              0x4D 0x5D    
   \              0x20 0x44    
   \              0x6F 0x6E    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0x5B 0x47          DC8 "[GTIM] Err"
   \              0x54 0x49    
   \              0x4D 0x5D    
   \              0x20 0x45    
   \              0x72 0x72    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_23:
   \   00000000   0x40 0x47          DC8 "@GSP\015\012"
   \              0x53 0x50    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \   00000000   0x5B 0x47          DC8 "[GSP] Done"
   \              0x53 0x50    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_25:
   \   00000000   0x5B 0x47          DC8 "[GSP] Err"
   \              0x53 0x50    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_26:
   \   00000000   0x40 0x42          DC8 "@BUP\015\012"
   \              0x55 0x50    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_27:
   \   00000000   0x5B 0x42          DC8 "[BUP] Done"
   \              0x55 0x50    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_28:
   \   00000000   0x5B 0x42          DC8 "[BUP] Err"
   \              0x55 0x50    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_29:
   \   00000000   0x40 0x53          DC8 "@SLP 1\015\012"
   \              0x4C 0x50    
   \              0x20 0x31    
   \              0x0D 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_30:
   \   00000000   0x5B 0x53          DC8 "[SLP] Done"
   \              0x4C 0x50    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_31:
   \   00000000   0x5B 0x53          DC8 "[SLP] Err"
   \              0x4C 0x50    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_32:
   \   00000000   0x40 0x57          DC8 "@WUP\015\012"
   \              0x55 0x50    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_33:
   \   00000000   0x5B 0x57          DC8 "[WUP] Done"
   \              0x55 0x50    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_34:
   \   00000000   0x5B 0x57          DC8 "[WUP] Err"
   \              0x55 0x50    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_35:
   \   00000000   0x40 0x46          DC8 "@FER\015\012"
   \              0x45 0x52    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_36:
   \   00000000   0x5B 0x46          DC8 "[FER] Done"
   \              0x45 0x52    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_37:
   \   00000000   0x5B 0x46          DC8 "[FER] Err"
   \              0x45 0x52    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_38:
   \   00000000   0x40 0x75          DC8 "@udl\015\012"
   \              0x64 0x6C    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_39:
   \   00000000   0x5B 0x63          DC8 "[cmd] Ready"
   \              0x6D 0x64    
   \              0x5D 0x20    
   \              0x52 0x65    
   \              0x61 0x64    
   \              0x79 0x00    

   \                                 In section .rodata, align 4
   \                     ?_40:
   \   00000000   0x5B 0x75          DC8 "[udl] Err"
   \              0x64 0x6C    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_41:
   \   00000000   0x40 0x66          DC8 "@fdl\015\012"
   \              0x64 0x6C    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_42:
   \   00000000   0x5B 0x66          DC8 "[fdl] Err"
   \              0x64 0x6C    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_43:
   \   00000000   0x5B 0x66          DC8 "[fdl] Resnd"
   \              0x64 0x6C    
   \              0x5D 0x20    
   \              0x52 0x65    
   \              0x73 0x6E    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_44:
   \   00000000   0x40 0x66          DC8 "@fud\015\012"
   \              0x75 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_45:
   \   00000000   0x5B 0x66          DC8 "[fud] Done"
   \              0x75 0x64    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_46:
   \   00000000   0x5B 0x66          DC8 "[fud] Err"
   \              0x75 0x64    
   \              0x5D 0x20    
   \              0x45 0x72    
   \              0x72 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_47:
   \   00000000   0x5B 0x75          DC8 "[udl] Done-"
   \              0x64 0x6C    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x2D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_48:
   \   00000000   0x5B 0x66          DC8 "[fdl] Done-"
   \              0x64 0x6C    
   \              0x5D 0x20    
   \              0x44 0x6F    
   \              0x6E 0x65    
   \              0x2D 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   mid_GPS_callback
        16   -> mid_GPS_resp_check
      24   mid_GPS_callback2
        24   -> mid_GPS_resp_check2
       8   mid_GPS_callback4
         8   -> mid_GPS_resp_check4
      16   mid_GPS_callback_noti
        16   -- Indirect call
        16   -> memcmp
        16   -> strlen
       8   mid_GPS_get_NmeaResult
         8   -> ctrl_CXD5600GF_nmea_result
      12   mid_GPS_get_errcode
       8   mid_GPS_get_status
         8   -> ctrl_CXD5600GF_check_nmea_recv
      16   mid_GPS_get_version
        16   -> __aeabi_memcpy
       8   mid_GPS_init
         8   -> __aeabi_memset
         8   -> ctrl_CXD5600GF_init
         8   -> ctrl_CXD5600GF_set_noti
       8   mid_GPS_main
         8   -> ctrl_CXD5600GF_check_nmea_recv
         8   -> man_error_set
         8   -> mid_GPS_res_callbacl
         8   -> mid_GPS_response
         8   -> mid_GPS_send_command
       8   mid_GPS_req_ColdSart
         8   -> man_error_set
         8   -> mid_GPS_send_command
      16   mid_GPS_req_Config
        16   -> man_error_set
        16   -> mid_GPS_send_command
       8   mid_GPS_req_Erase
         8   -> man_error_set
         8   -> mid_GPS_send_command
       8   mid_GPS_req_Exec
         8   -> man_error_set
         8   -> mid_GPS_send_command
       8   mid_GPS_req_FDL
         8   -> man_error_set
         8   -> mid_GPS_send_command
      16   mid_GPS_req_Firmware
        16   -> man_error_set
        16   -> mid_GPS_send_command
       8   mid_GPS_req_HotSart
         8   -> man_error_set
         8   -> mid_GPS_send_command
       8   mid_GPS_req_Idle
         8   -> man_error_set
         8   -> mid_GPS_send_command
       8   mid_GPS_req_NmeaStart
         8   -> ctrl_CXD5600GF_nmea_start
       8   mid_GPS_req_NmeaStop
         8   -> ctrl_CXD5600GF_nmea_stop
       8   mid_GPS_req_OtaRetry
         8   -> man_error_set
         8   -> mid_GPS_send_command
      16   mid_GPS_req_Packet_end
        16   -> man_error_set
        16   -> mid_GPS_send_command
      16   mid_GPS_req_Packet_next
        16   -> man_error_set
        16   -> mid_GPS_send_command
       8   mid_GPS_req_PowerOff
         8   -> man_error_set
         8   -> mid_GPS_send_command
       8   mid_GPS_req_Sleep
         8   -> man_error_set
         8   -> mid_GPS_send_command
       8   mid_GPS_req_UDL
         8   -> man_error_set
         8   -> mid_GPS_send_command
      16   mid_GPS_req_Updater
        16   -> man_error_set
        16   -> mid_GPS_send_command
       8   mid_GPS_req_WakeUp
         8   -> man_error_set
         8   -> mid_GPS_send_command
       8   mid_GPS_res_callbacl
         8   -- Indirect call
      24   mid_GPS_resp_check
        24   -> ctrl_CXD5600GF_clear_buffer
        24   -> man_error_set
        24   -> memcmp
        24   -> mid_GPS_get_errcode
        24   -> strlen
      32   mid_GPS_resp_check2
        32   -> __aeabi_memcpy
        32   -> man_error_set
        32   -> memcmp
        32   -> mid_GPS_get_errcode
        32   -> strlen
       4   mid_GPS_resp_check4
      16   mid_GPS_response
        16   -> __aeabi_memcpy
        16   -> ctrl_CXD5600GF_check_nmea_recv
        16   -> man_error_set
        16   -> mid_GPS_res_callbacl
        16   -> mid_GPS_send_command
      80   mid_GPS_send_command
        80   -> __aeabi_memcpy
        80   -> ctrl_CXD5600GF_cmd
        80   -> ctrl_CXD5600GF_cmd2
        80   -> ctrl_CXD5600GF_data
        80   -> ctrl_CXD5600GF_data_non_ack
        80   -> gm_time
        80   -> man_error_set
        80   -> man_rtc_get_clock
        80   -> num_to_bcd
        80   -> strlen
       4   mid_GPS_set_RecvNotiResp


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable12
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable19
       4  ??DataTable21
       4  ??DataTable23
       4  ??DataTable24
       4  ??DataTable25
       4  ??DataTable26
       4  ??DataTable26_1
       4  ??DataTable27
       4  ??DataTable28
       4  ??DataTable30
       4  ??DataTable30_1
       4  ??DataTable30_2
       4  ??DataTable30_3
       4  ??DataTable30_4
       4  ??DataTable30_5
       4  ??DataTable30_6
       4  ??DataTable30_7
       4  ??DataTable30_8
       4  ??DataTable30_9
       4  ??DataTable4
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       8  ?_0
      12  ?_1
      12  ?_10
      12  ?_11
      12  ?_12
      12  ?_13
      12  ?_14
       8  ?_15
      12  ?_16
       8  ?_17
      12  ?_18
      12  ?_19
      12  ?_2
      28  ?_20
      12  ?_21
      12  ?_22
       8  ?_23
      12  ?_24
      12  ?_25
       8  ?_26
      12  ?_27
      12  ?_28
      12  ?_29
       8  ?_3
      12  ?_30
      12  ?_31
       8  ?_32
      12  ?_33
      12  ?_34
       8  ?_35
      12  ?_36
      12  ?_37
       8  ?_38
      12  ?_39
      12  ?_4
      12  ?_40
       8  ?_41
      12  ?_42
      12  ?_43
       8  ?_44
      12  ?_45
      12  ?_46
      12  ?_47
      12  ?_48
      12  ?_5
      16  ?_6
      12  ?_7
      12  ?_8
      12  ?_9
    1088  cmd_tbl
      16  data_tbl
      40  mid_GPS_callback
      32  mid_GPS_callback2
      24  mid_GPS_callback4
      80  mid_GPS_callback_noti
       8  mid_GPS_get_NmeaResult
      40  mid_GPS_get_errcode
      28  mid_GPS_get_status
      48  mid_GPS_get_version
      28  mid_GPS_init
     282  mid_GPS_main
      70  mid_GPS_req_ColdSart
      78  mid_GPS_req_Config
      70  mid_GPS_req_Erase
      70  mid_GPS_req_Exec
      70  mid_GPS_req_FDL
      78  mid_GPS_req_Firmware
      72  mid_GPS_req_HotSart
      70  mid_GPS_req_Idle
       8  mid_GPS_req_NmeaStart
       8  mid_GPS_req_NmeaStop
      70  mid_GPS_req_OtaRetry
      78  mid_GPS_req_Packet_end
      78  mid_GPS_req_Packet_next
      70  mid_GPS_req_PowerOff
      70  mid_GPS_req_Sleep
      70  mid_GPS_req_UDL
      78  mid_GPS_req_Updater
      70  mid_GPS_req_WakeUp
      30  mid_GPS_res_callbacl
     334  mid_GPS_resp_check
     312  mid_GPS_resp_check2
      32  mid_GPS_resp_check4
     938  mid_GPS_response
     338  mid_GPS_send_command
      26  mid_GPS_set_RecvNotiResp
      84  mid_gps_work

 
    84 bytes in section .bss
 1 668 bytes in section .rodata
 3 958 bytes in section .text
 
 3 958 bytes of CODE  memory
 1 668 bytes of CONST memory
    84 bytes of DATA  memory

Errors: none
Warnings: none
