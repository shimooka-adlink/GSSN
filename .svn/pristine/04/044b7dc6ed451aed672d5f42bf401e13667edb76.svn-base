###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       17/May/2019  13:32:04
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\driver\usb\drv_usbd_user_cdc_acm.c
#    Command line =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\driver\usb\drv_usbd_user_cdc_acm.c
#        -D __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_B -lCN
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        -lA
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List\drv_usbd_user_cdc_acm.lst
#    Object file  =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj\drv_usbd_user_cdc_acm.o
#
###############################################################################

C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\driver\usb\drv_usbd_user_cdc_acm.c
      1          /* CMSIS-DAP Interface Firmware
      2           * Copyright (c) 2009-2013 ARM Limited
      3           *
      4           * Licensed under the Apache License, Version 2.0 (the "License");
      5           * you may not use this file except in compliance with the License.
      6           * You may obtain a copy of the License at
      7           *
      8           *     http://www.apache.org/licenses/LICENSE-2.0
      9           *
     10           * Unless required by applicable law or agreed to in writing, software
     11           * distributed under the License is distributed on an "AS IS" BASIS,
     12           * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     13           * See the License for the specific language governing permissions and
     14           * limitations under the License.
     15           */
     16          #include <RTL.h>
     17          #include "rl_usb.h"
     18          
     19          #include "uart.h"
     20          
     21          
     22          #pragma section = "DRV_PRG_BLOCK"
     23          
     24          

   \                                 In section .bss, align 4
     25          UART_Configuration UART_Config;
   \                     UART_Config:
   \   00000000                      DS8 8
     26          
     27          
     28          /** \brief  Vitual COM Port initialization
     29          
     30              The function inititalizes the hardware resources of the port used as
     31              the Virtual COM Port.
     32              この関数は、仮想COMポートとして使用されるポートのハードウェアリソースを初期化します。
     33          
     34              \return             0        Function failed.
     35              \return             1        Function succeeded.
     36           */

   \                                 In section .text, align 2, keep-with-next
     37          int32_t USBD_CDC_ACM_PortInitialize (void) 
     38          {
     39          
     40            UART_Config.Baudrate    = 96000;
   \                     USBD_CDC_ACM_PortInitialize: (+1)
   \   00000000   0x....             LDR      R0,??DataTable2  ;; 0x17700
   \   00000002   0x....             LDR      R1,??DataTable2_1
   \   00000004   0x6008             STR      R0,[R1, #+0]
     41            UART_Config.DataBits    = (UART_DataBits) UART_DATA_BITS_7;
   \   00000006   0x2007             MOVS     R0,#+7
   \   00000008   0x....             LDR      R1,??DataTable2_1
   \   0000000A   0x7108             STRB     R0,[R1, #+4]
     42            UART_Config.Parity      = (UART_Parity)   UART_PARITY_NONE;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x....             LDR      R1,??DataTable2_1
   \   00000010   0x7148             STRB     R0,[R1, #+5]
     43            UART_Config.StopBits    = (UART_StopBits) UART_STOP_BITS_1;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR      R1,??DataTable2_1
   \   00000016   0x7188             STRB     R0,[R1, #+6]
     44            UART_Config.FlowControl = UART_FLOW_CONTROL_NONE;  
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x....             LDR      R1,??DataTable2_1
   \   0000001C   0x71C8             STRB     R0,[R1, #+7]
     45          
     46            return 1;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x4770             BX       LR               ;; return
     47          }
     48          
     49          
     50          /** \brief  Vitual COM Port uninitialization
     51          
     52              The function uninititalizes/releases the hardware resources of the port used
     53              as the Virtual COM Port.
     54              この機能は、仮想COMポートとして使用されるポートのハードウェアリソースを初期化/解除します。
     55          
     56              \return             0        Function failed.
     57              \return             1        Function succeeded.
     58           */

   \                                 In section .text, align 2, keep-with-next
     59          int32_t USBD_CDC_ACM_PortUninitialize (void) 
     60          {
     61              
     62            return 1;
   \                     USBD_CDC_ACM_PortUninitialize: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x4770             BX       LR               ;; return
     63          }
     64          
     65          
     66          /** \brief  Vitual COM Port reset
     67          
     68              The function resets the internal states of the port used
     69              as the Virtual COM Port.
     70              この関数は、仮想COMポートとして使用されるポートの内部状態をリセットします。
     71          
     72              \return             0        Function failed.
     73              \return             1        Function succeeded.
     74           */

   \                                 In section .text, align 2, keep-with-next
     75          int32_t USBD_CDC_ACM_PortReset (void) 
     76          {
     77              //return (serial_reset ());
     78            return 1;
   \                     USBD_CDC_ACM_PortReset: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x4770             BX       LR               ;; return
     79          }
     80          
     81          
     82          /** \brief  Virtual COM Port change communication settings
     83          
     84              The function changes communication settings of the port used as the
     85              Virtual COM Port.
     86              この機能は、仮想COMポートとして使用されるポートの通信設定を変更します。
     87          
     88              \param [in]         line_coding  Pointer to the loaded CDC_LINE_CODING structure.
     89              \return             0        Function failed.
     90              \return             1        Function succeeded.
     91           */

   \                                 In section .text, align 2, keep-with-next
     92          int32_t USBD_CDC_ACM_PortSetLineCoding (CDC_LINE_CODING *line_coding) 
     93          {
   \                     USBD_CDC_ACM_PortSetLineCoding: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     94              UART_Config.Baudrate    = line_coding->dwDTERate;
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       __aeabi_uread4
   \   0000000A   0x....             LDR      R1,??DataTable2_1
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     95              UART_Config.DataBits    = (UART_DataBits) line_coding->bDataBits;
   \   0000000E   0x79A0             LDRB     R0,[R4, #+6]
   \   00000010   0x....             LDR      R1,??DataTable2_1
   \   00000012   0x7108             STRB     R0,[R1, #+4]
     96              UART_Config.Parity      = (UART_Parity)   line_coding->bParityType;
   \   00000014   0x7960             LDRB     R0,[R4, #+5]
   \   00000016   0x....             LDR      R1,??DataTable2_1
   \   00000018   0x7148             STRB     R0,[R1, #+5]
     97              UART_Config.StopBits    = (UART_StopBits) line_coding->bCharFormat;
   \   0000001A   0x7920             LDRB     R0,[R4, #+4]
   \   0000001C   0x....             LDR      R1,??DataTable2_1
   \   0000001E   0x7188             STRB     R0,[R1, #+6]
     98              UART_Config.FlowControl = UART_FLOW_CONTROL_NONE;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x....             LDR      R1,??DataTable2_1
   \   00000024   0x71C8             STRB     R0,[R1, #+7]
     99          
    100              //return (serial_set_configuration (&UART_Config));
    101              return 1;
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0xBD10             POP      {R4,PC}          ;; return
    102          }
    103          
    104          
    105          /** \brief  Vitual COM Port retrieve communication settings
    106          
    107              The function retrieves communication settings of the port used as the
    108              Virtual COM Port.
    109              この関数は、仮想COMポートとして使用されるポートの通信設定を取得します。
    110          
    111              \param [in]         line_coding  Pointer to the CDC_LINE_CODING structure.
    112              \return             0        Function failed.
    113              \return             1        Function succeeded.
    114           */

   \                                 In section .text, align 2, keep-with-next
    115          int32_t USBD_CDC_ACM_PortGetLineCoding (CDC_LINE_CODING *line_coding) 
    116          {
   \                     USBD_CDC_ACM_PortGetLineCoding: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    117              //if (serial_get_configuration (&UART_Config)) {
    118              if (1) {
    119                  line_coding->dwDTERate   = UART_Config.Baudrate;
   \   00000004   0x0021             MOVS     R1,R4
   \   00000006   0x....             LDR      R0,??DataTable2_1
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x.... 0x....      BL       __aeabi_uwrite4
    120                  line_coding->bDataBits   = UART_Config.DataBits;
   \   0000000E   0x....             LDR      R0,??DataTable2_1
   \   00000010   0x7900             LDRB     R0,[R0, #+4]
   \   00000012   0x71A0             STRB     R0,[R4, #+6]
    121                  line_coding->bParityType = UART_Config.Parity;
   \   00000014   0x....             LDR      R0,??DataTable2_1
   \   00000016   0x7940             LDRB     R0,[R0, #+5]
   \   00000018   0x7160             STRB     R0,[R4, #+5]
    122                  line_coding->bCharFormat = UART_Config.StopBits;
   \   0000001A   0x....             LDR      R0,??DataTable2_1
   \   0000001C   0x7980             LDRB     R0,[R0, #+6]
   \   0000001E   0x7120             STRB     R0,[R4, #+4]
    123                  return (1);
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xBD10             POP      {R4,PC}          ;; return
    124              }
    125          
    126              return (0);
    127          }
    128          
    129          /** \brief  Virtual COM Port set control line state
    130          
    131              The function sets control line state on the port used as the
    132              Virtual COM Port.
    133          	この機能は、仮想COMポートとして使用されるポートの制御回線状態を設定します。
    134          
    135              \param [in]         ctrl_bmp Control line settings bitmap (
    136                                    0. bit - DTR state,
    137                                    1. bit - RTS state).
    138              \return             0        Function failed.
    139              \return             1        Function succeeded.
    140           */

   \                                 In section .text, align 2, keep-with-next
    141          int32_t USBD_CDC_ACM_PortSetControlLineState (uint16_t ctrl_bmp) 
    142          {
    143              return (1);
   \                     USBD_CDC_ACM_PortSetControlLineState: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x4770             BX       LR               ;; return
    144          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x00017700         DC32     0x17700

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     UART_Config

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   USBD_CDC_ACM_PortGetLineCoding
         8 __aeabi_uwrite4
       0   USBD_CDC_ACM_PortInitialize
       0   USBD_CDC_ACM_PortReset
       0   USBD_CDC_ACM_PortSetControlLineState
       8   USBD_CDC_ACM_PortSetLineCoding
         8 __aeabi_uread4
       0   USBD_CDC_ACM_PortUninitialize


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       8  UART_Config
      36  USBD_CDC_ACM_PortGetLineCoding
      34  USBD_CDC_ACM_PortInitialize
       4  USBD_CDC_ACM_PortReset
       4  USBD_CDC_ACM_PortSetControlLineState
      42  USBD_CDC_ACM_PortSetLineCoding
       4  USBD_CDC_ACM_PortUninitialize

 
   8 bytes in section .bss
 132 bytes in section .text
 
 132 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
