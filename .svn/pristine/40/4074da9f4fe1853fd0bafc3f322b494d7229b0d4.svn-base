###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       17/May/2019  13:31:50
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\middle\mid_HTTP.c
#    Command line =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\middle\mid_HTTP.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_A -lCN
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List
#        -lA
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List\mid_HTTP.lst
#    Object file  =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\Obj\mid_HTTP.o
#
###############################################################################

C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\middle\mid_HTTP.c
      1          
      2          
      3          /**
      4            ******************************************************************************
      5            * @file    mid_HTTP.c
      6            * @author  コア
      7            * @version V1.0
      8            * @date    2017.10.2
      9            * @brief   LTE, HTTP. FTPを制御する。
     10            ******************************************************************************
     11            $Id: mid_HTTP.c 256 2018-08-02 01:06:38Z shitaoka $
     12            * @attention
     13            *
     14            *****************************************************************************
     15          */ 
     16          
     17          #include <string.h>
     18          #include <stdio.h>
     19          #include <stdlib.h>
     20          #include "board.h"
     21          
     22          #include "system_manager.h"
     23          #include "ctrl_SM7500JE.h"
     24          #include "gnss_gw_common.h"
     25          #include "mid_HTTP.h"
     26          #include "man_error.h"
     27          #include "man_data.h"
     28          #include "man_usb.h"
     29          #include "man_memory.h"
     30          
     31          #pragma section = "MID_PRG_BLOCK"
     32          
     33          
     34          #define	MID_HTTP_SND_DATA_MAX		MAN_DATA_HTTP_MAX_SIZE
     35          #define	MID_HTTP_SND_BUFF_MAX		(MID_HTTP_SND_DATA_MAX+20)
     36          #define	MID_HTTP_RCV_DATA_MAX		5000
     37          
     38          
     39          #define	MID_HTTP_RETRY_MAX				1				// HTTPコマンドのリトライ回数
     40          
     41          // numeric code
     42          #define	MID_HTTP_NUMERIC_CODE_0			0				// コマンド実行、エラーなし、リセット後ウェイクアップ
     43          #define	MID_HTTP_NUMERIC_CODE_1			1				// リンクが確立しました
     44          #define	MID_HTTP_NUMERIC_CODE_2			2				// リングを検出しました
     45          #define	MID_HTTP_NUMERIC_CODE_3			3				// リンクが確立されていないか切断されている
     46          #define	MID_HTTP_NUMERIC_CODE_4			4				// 無効なコマンドまたはコマンドラインが長すぎます
     47          #define	MID_HTTP_NUMERIC_CODE_6			6				// ダイヤルトーンなし、ダイヤル不可、間違ったモード
     48          #define	MID_HTTP_NUMERIC_CODE_7			7				// リモートステーションがビジー状態
     49          #define	MID_HTTP_NUMERIC_CODE_8			8				// 接続完了タイムアウト
     50          
     51          
     52          // SM7500JEからのコマンド応答結果
     53          typedef enum {
     54          	// 発生の可能性がある
     55          	MID_HTTP_CMDSTS_OK,					// 正常受信
     56          
     57          	// リトライするエラー
     58          	MID_HTTP_CMDSTS_ERR,				// ERR受信
     59          	MID_HTTP_CMDSTS_TIMEOUT,			// タイムアウト
     60          	MID_HTTP_CMDSTS_LENERR,				// データ長異常
     61          
     62          	// 発生しない(処理中止)
     63          	MID_HTTP_CMDSTS_UNKNOWN,			// 未知の応答データ
     64          	MID_HTTP_CMDSTS_FAULT,				// status異常
     65          	MID_HTTP_CMDSTS_IDERR,				// ID異常
     66                  MID_HTTP_CMDSTS_RESTART,                        // 再起動
     67          
     68          } mid_http_cmdsts_def;
     69          
     70          
     71          
     72          
     73          
     74          
     75          // HTTP制御シーケンス
     76          typedef enum {
     77          	MID_HTTP_SEQ_READY,						// 00 : 待ち
     78          	MID_HTTP_SEQ_INIT_RESP_ATE0,			// 01 : 初期化         エコーバック無効
     79          	MID_HTTP_SEQ_INIT_RESP_CMEE,			// 02 :                エラー結果コードで数値を使用可能にする
     80          	MID_HTTP_SEQ_INIT_RESP_CTZUC,			// 03 :                時間と時刻の自動更新確認
     81          	MID_HTTP_SEQ_INIT_RESP_CTZUS,	 		// 04 :                時間と時刻の自動更新有効設定
     82          	MID_HTTP_SEQ_INIT_RESP_CCLK,			// 05 :                現在時刻取得
     83          	MID_HTTP_SEQ_INIT_RESP_CPINC,	 		// 06 :                SIM PINの状態を問い合わせる
     84          	MID_HTTP_SEQ_INIT_RESP_CSQ,				// 07 :                無線電波の確認
     85          	MID_HTTP_SEQ_INIT_RESP_CPINS,			// 08 :                PIN設定
     86          	MID_HTTP_SEQ_INIT_RESP_SIMEI,			// 09 :                IMEI取得
     87          	MID_HTTP_SEQ_INIT_RESP_CSCLK,			// 10 :                DTR端子によるsleepモードを有効にする
     88          	MID_HTTP_SEQ_INIT_RESP_AUTOCSQ,			// 11 :                CSQ自動レポートを有効にする
     89          	MID_HTTP_SEQ_INIT_RESP_CGMR,			// 12 :                リビジョン取得
     90          	MID_HTTP_SEQ_INIT_RESP_IPADDR,			// 13 :                IPアドレス取得(net open後に有効)
     91          
     92          	MID_HTTP_SEQ_LTE_RESP_CGDCONT,			// 14 : LTE            パケット発信時の接続先(APN)の設定
     93          	MID_HTTP_SEQ_LTE_RESP_CGAUTH,	 		// 15 :                PDPコンテキスト認証パラメータを設定
     94          	MID_HTTP_SEQ_LTE_RESP_CSOCKSETPN,		// 16 :                PDPコンテキストのプロファイル番号を設定
     95          	MID_HTTP_SEQ_LTE_RESP_NETOPEN,			// 17 :                ソケット生成
     96          	MID_HTTP_SEQ_LTE_RESP_NETCLOSE, 		// 18 :                ソケット切断
     97          	MID_HTTP_SEQ_LTE_RESP_STBY_IN, 			// 19 :                低消費電力状態
     98          	MID_HTTP_SEQ_LTE_RESP_STBY_OUT, 		// 20 :                通常消費電力状態
     99          	MID_HTTP_SEQ_LTE_RESP_CSQ, 				// 21 :                無線電波の確認
    100          	MID_HTTP_SEQ_LTE_RESP_RESET, 			// 22 :                リセット
    101          
    102          	MID_HTTP_SEQ_UDP_RESP_CIPOPEN, 			// 23 : UDP            マルチソケットモードで接続を確立する
    103          	MID_HTTP_SEQ_UDP_RESP_CIPSEND, 			// 24 :                UDP接続を介してデータを送信する
    104          	MID_HTTP_SEQ_UDP_RESP_CIPSEND2, 		// 25 :                UDP接続を介してデータを送信する
    105          	MID_HTTP_SEQ_UDP_RESP_CIPCLOSE, 		// 26 :                UDPソケットを閉じる
    106          
    107          	MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN, 		// 27 : HTTP client    マルチソケットモードで接続を確立する
    108          	MID_HTTP_SEQ_CLIENT_RESP_CIPSEND, 		// 28 :                TCP接続を介してデータを送信する
    109          	MID_HTTP_SEQ_CLIENT_RESP_CIPSEND2, 		// 29 :                TCP接続を介してデータを送信する
    110          	MID_HTTP_SEQ_CLIENT_RESP_CIPCLOSE, 		// 30 :                TCPソケットを閉じる
    111          
    112          	MID_HTTP_SEQ_SERVER_RESP_START, 		// 31 : HTTP server    サーバ開始
    113          	MID_HTTP_SEQ_SERVER_RESP_CIPSEND, 		// 32 :                TCP接続を介してデータを送信する
    114          	MID_HTTP_SEQ_SERVER_RESP_CIPSEND2, 		// 33 :                TCP接続を介してデータを送信する
    115          	MID_HTTP_SEQ_SERVER_RESP_STOP, 			// 34 :                サーバ停止
    116          
    117          	MID_HTTP_SEQ_FTP_RESP_FSCD,				// 35 : FTP            cd c:\  
    118          	MID_HTTP_SEQ_FTP_RESP_FSDEL,			// 36 :                rm *.*
    119          	MID_HTTP_SEQ_FTP_RESP_CGSOCKCONT,		// 37 :                APN情報 :: APN名設定
    120          	MID_HTTP_SEQ_FTP_RESP_CSOCKSETPN,		// 38 :                プロファイル番号設定
    121          	MID_HTTP_SEQ_FTP_RESP_CSOCKAUTH,		// 39 :                APN情報 :: ユーザID, パスワード
    122          	MID_HTTP_SEQ_FTP_RESP_CFTPSERV,			// 40 :                IPアドレス
    123          	MID_HTTP_SEQ_FTP_RESP_CFTPPORT,			// 41 :                ポート番号
    124          	MID_HTTP_SEQ_FTP_RESP_CFTPMODE,			// 42 :                パッシブ
    125          	MID_HTTP_SEQ_FTP_RESP_CFTPTYPE,			// 43 :                FTP binaryタイプ
    126          	MID_HTTP_SEQ_FTP_RESP_CFTPUN,			// 44 :                ユーザID
    127          	MID_HTTP_SEQ_FTP_RESP_CFTPPW,			// 45 :                パスワード
    128          	MID_HTTP_SEQ_FTP_RESP_CFTPGETFILE,		// 46 :                get file
    129          	MID_HTTP_SEQ_FTP_RESP_ATE0,				// 47 :                エコーバック無効
    130          
    131          	MID_HTTP_SEQ_FILE_RESP_CFTRANTX,		// 48 : FILE           get
    132          	MID_HTTP_SEQ_RETRY_RESP_CCLK,			// 49 :                現在時刻取得
    133          	MID_HTTP_SEQ_INIT_RESP_CPSI,			// 50 :                基準信号受信電力
    134          	MID_HTTP_SEQ_LTE_RESP_CPSI,				// 51 :                基準信号受信電力
    135                  MID_HTTP_SEQ_LTE_POWER_OFF,                   // 52 :                 Power-OFF
    136          	MID_HTTP_SEQ_LTE_RESP_CFOTASWITCH,		// 53 :                SIM7500が自動でファームウェアをアップデートする機能を無効にする
    137                  MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN_CDNSGIP,       // 54 :                DNSサーバーからIPアドレスを取得(CIPOPEN)
    138                  MID_HTTP_SEQ_UDP_RESP_CIPSEND_CDNSGIP,          // 55 :                DNSサーバーからIPアドレスを取得(CIPSEND)
    139          	MID_HTTP_SEQ_LTE_RESP_AT,		        // 56 :                SIM7500が自動でファームウェアをアップデートする機能を無効にする
    140          } mid_http_seq_def;
    141          
    142          
    143          // HTTP受信データコマンド部
    144          typedef enum {
    145          	MID_HTTP_RECV_RECV,					// "RECV FROM:10.0.0.30:51774"
    146          	MID_HTTP_RECV_IPD,					// "+IPD17"
    147          	MID_HTTP_RECV_IPCLOSE,				// "+IPCLOSE: 5,1"
    148          	MID_HTTP_RECV_CLIENT,				// "+CLIENT: 5,0,10.0.0.30:51774"
    149          	MID_HTTP_RECV_CIPCLOSE,				// "+CIPCLOSE: 2,0"
    150          	MID_HTTP_RECV_CIPOPEN,				// "+CIPOPEN: 2,0"
    151          	MID_HTTP_RECV_PBDONE,				// "PB DONE"
    152          	MID_HTTP_RECV_NETCLOSE,				// "+NETCLOSE: 0"
    153          	MID_HTTP_RECV_CFTRANTX,				// "+CFTRANTX: DATA,512"
    154          	MID_HTTP_RECV_CFTRANTX_0,			// "+CFTRANTX: 0"
    155          	MID_HTTP_RECV_CFTPGETFILE,			// "+CFTPGETFILE: 0"
    156          	MID_HTTP_RECV_CIPERROR,				// "+CIPERROR: 4"
    157          	MID_HTTP_RECV_SIMCARD,				// "+SIMCARD: NOT AVAILABLE"
    158          	MID_HTTP_RECV_MAX,					// 
    159          } mid_http_recv_def;
    160          
    161          
    162          
    163          #define	MID_HTTP_RECV_SEQ_READY			0		// 待ち状態
    164          
    165          #define	MID_HTTP_RECV_SEQ_RECV_FROM		1		// HTTP client "RECV FROM:10.0.0.30:80"
    166          
    167          
    168          
    169          
    170          
    171          
    172          // HTTP client用シーケンス
    173          #define	MID_HTTP_RECV_SEQ_CLIENT_RECV	1		// HTTP client "RECV FROM:10.0.0.30:80"
    174          #define	MID_HTTP_RECV_SEQ_CLIENT_IPD	2		//             "+IPD113"
    175          #define	MID_HTTP_RECV_SEQ_CLIENT_DATA	3		//             <data>"
    176          
    177          // HTTP server用シーケンス
    178          #define	MID_HTTP_RECV_SEQ_SEVER_CLIENT	1		// HTTP server "+CLIENT: 5,0,10.0.0.30:51774"
    179          #define	MID_HTTP_RECV_SEQ_SEVER_RECV	2		//             "RECV FROM:10.0.0.30:51774"
    180          #define	MID_HTTP_RECV_SEQ_SEVER_IPD		3		//             "+IPD17"
    181          #define	MID_HTTP_RECV_SEQ_SEVER_DATA	4		//             "POST / HTTP/1.1"
    182          #define	MID_HTTP_RECV_SEQ_SEVER_RECV2	5		//             "RECV FROM:10.0.0.30:51766"
    183          #define	MID_HTTP_RECV_SEQ_SEVER_IPD2	6		//             "+IPD62"
    184          #define	MID_HTTP_RECV_SEQ_SEVER_DATA2	7		//             "<data>"
    185          #define	MID_HTTP_RECV_SEQ_SEVER_IPCLOSE	8		//             "+IPCLOSE: 5,1"
    186          
    187          // FTP用シーケンス
    188          #define	MID_HTTP_RECV_SEQ_FILE_NON		0		// FILE
    189          #define	MID_HTTP_RECV_SEQ_FILE_RECV		1		//             "+CFTRANTX: DATA,512"
    190          #define	MID_HTTP_RECV_SEQ_FILE_DATA		2		//             <data>"
    191          
    192          
    193          // status
    194          #define	MID_HTTP_STATUS_LTE				0x01			// LTE接続中
    195          #define	MID_HTTP_STATUS_UDP				0x02			// UDP送信中
    196          #define	MID_HTTP_STATUS_CLIENT			0x04			// HTTP CLIENT 接続中
    197          #define	MID_HTTP_STATUS_SERVER			0x08			// HTTP SERVER 接続中
    198          #define	MID_HTTP_STATUS_CLOSE			0x10			// HTTP SERVER CLOSE中
    199          
    200          
    201          typedef struct _mid_http_resp_info_t {
    202          	int32_t					flag;				// 応答ありフラグ
    203          	mid_http_cmdsts_def		cmdsts;				// コマンドステータス
    204          	int32_t					id;					// 応答ID
    205          	int32_t					errcode;			// エラーコード
    206          
    207          	mid_http_get_info_t		get_info;			// 取得した情報
    208          	mid_http_get_data_t		get_data;			// 通知データ情報
    209          
    210          	uint8_t					data[50];
    211          } mid_http_resp_info_t;
    212          
    213          
    214          // 要求
    215          typedef struct _mid_http_req_info_t {
    216          	uint8_t					data[MID_HTTP_SND_DATA_MAX];
    217          	int32_t					length;				// データ長
    218          	int32_t					num;				// 番号
    219          	int32_t					id;					// ユニークID
    220          	func_http_cmd			callback;			// 結果を通知するcallback関数
    221          } mid_http_req_info_t;
    222          
    223          // 受信データ通知先情報
    224          typedef struct _mid_http_noti_info_t {
    225          	int32_t					id;					// ユニークID
    226          	func_http_noti			callback;			// 受信データを通知するcallback関数
    227          } mid_http_noti_info_t;
    228          
    229          // 受信データ情報
    230          typedef struct _mid_http_recv_info_t {
    231          	mid_http_recv_def		type;				// 受信データ種別
    232          	int32_t					client_seq;			// HTTP client用シーケンス
    233          	int32_t					server_seq;			// HTTP server用シーケンス
    234          	int32_t					ftp_seq;			// FTP用シーケンス
    235          	int32_t					ipd_len;			// IPDで指定されたデータ長
    236          	int32_t					data_len;			// CFTRANTX: DATAで指定されたデータ長
    237          	int32_t					link_num;			// CLIENTで通知されたlink_num
    238          
    239          	uint8_t					data[MID_HTTP_RCV_DATA_MAX];	// 受信データ
    240          	int32_t					length;				// 受信データ長
    241          	int32_t					rcv_len;
    242          
    243          	int32_t					count;
    244          	int32_t					count2;
    245          } mid_http_recv_info_t;
    246          
    247          /************************************************************************/
    248          /* definition of variables                                              */
    249          /************************************************************************/
    250          
    251          // HTTPワーク
    252          typedef struct _mid_http_work_t {
    253          	uint32_t				status;				// NETWORK状態
    254          	mid_http_req_info_t		request;			// 要求
    255          
    256          	mid_http_noti_info_t	recv_noti;			// 受信データ通知先情報
    257          	mid_http_recv_info_t	recv_data;			// 受信データ情報
    258          
    259          	mid_http_seq_def		sequence;			// シーケンス
    260          	mid_http_cmdsts_def		cmdsts;				// コマンドステータス
    261          
    262          	uint8_t					snd_buff[MID_HTTP_SND_BUFF_MAX];		// 送信バッファ
    263          
    264          	uint32_t				retry;				// リトライ回数
    265          	mid_http_resp_info_t	resp_info;			// 応答結果
    266          	uint8_t					err_buff[100];
    267          	
    268          	uint8_t					buff[100];
    269          } mid_http_work_t;
    270          

   \                                 In section .bss, align 4
    271          static mid_http_work_t		mid_http_work;		// HTTP用変数
   \                     mid_http_work:
   \   00000000                      DS8 7688
    272          
    273          #define IP_ADDRRESS_SIZE 16
    274          // UDP Send 用テーブル
    275          typedef struct _mid_http_udpsend_t {
    276                uint8_t       *data;
    277                int32_t       length;
    278                int32_t       id;
    279                func_http_cmd callback;
    280                char          ip_addr[IP_ADDRRESS_SIZE];
    281          } mid_http_udpsend_t;
    282          

   \                                 In section .bss, align 4
    283          static mid_http_udpsend_t	mid_http_udpsend_work;
   \                     mid_http_udpsend_work:
   \   00000000                      DS8 32
    284          
    285          // コマンド・レスポンステーブル
    286          typedef struct _ctrl_sm7500_cmd_tbl_t {
    287          	int32_t		id;				// シーケンス
    288          	uint8_t		*resp_ok1;		// 正常応答1
    289          	uint8_t		*resp_ok2;		// 正常応答2
    290          	uint8_t		*resp_ng;		// エラー応答
    291          	uint8_t		type;			// 0:< / 1:応答 / 2:応答
    292          	uint32_t	timeout;		// time out時間
    293          	uint32_t	ready;			// ready('>')待ち
    294          	uint32_t	special;		// 正常応答1のみでもOK扱いとする
    295          } ctrl_sm7500_cmd_tbl_t;
    296          
    297          

   \                                 In section .rodata, align 4
    298          static const ctrl_sm7500_cmd_tbl_t cmd_tbl[] = {
   \                     cmd_tbl:
   \   00000000   0x00000001         DC32 1, ?_0, ?_1, ?_2
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000010   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000014   0x000003E8         DC32 1000, 0, 0, 2, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000002   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000030   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000034   0x000003E8         DC32 1000, 0, 0, 3, ?_3, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000003   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000050   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000054   0x000003E8         DC32 1000, 0, 0, 4, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000004   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000070   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000074   0x000003E8         DC32 1000, 0, 0, 5, ?_1, ?_4, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000005   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000090   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000094   0x000007D0         DC32 2000, 0, 0, 6, ?_5, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000006   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000B0   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   000000B4   0x000003E8         DC32 1000, 0, 0, 7, ?_6, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000007   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000000D0   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   000000D4   0x000003E8         DC32 1000, 0, 0, 8, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000008   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000000F0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000000F4   0x000003E8         DC32 1000, 0, 0, 9, ?_7, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000009   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000110   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000114   0x000003E8         DC32 1000, 0, 0, 10, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000000A   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000130   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000134   0x000003E8         DC32 1000, 0, 0, 11, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000000B   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000150   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000154   0x000003E8         DC32 1000, 0, 0, 12, ?_8, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000000C   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000170   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000174   0x000003E8         DC32 1000, 0, 0, 13, ?_9, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000000D   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000190   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000194   0x000003E8         DC32 1000, 0, 0, 14, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000000E   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000001B0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000001B4   0x000003E8         DC32 1000, 0, 0, 15, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000000F   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000001D0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000001D4   0x000003E8         DC32 1000, 0, 0, 16, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000010   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000001F0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000001F4   0x000003E8         DC32 1000, 0, 0, 17, ?_1, ?_10, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000011   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000210   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000214   0x000003E8         DC32 1000, 0, 0, 18, ?_1, ?_11, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000012   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000230   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000234   0x000007D0         DC32 2000, 0, 0, 19, ?_12, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000013   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000250   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000254   0x000007D0         DC32 2000, 0, 0, 20, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000014   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000270   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000274   0x000007D0         DC32 2000, 0, 0, 21, ?_6, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000015   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000290   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000294   0x000007D0         DC32 2000, 0, 0, 22, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000016   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000002B0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000002B4   0x000007D0         DC32 2000, 0, 0, 23, ?_13, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000017   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000002D0   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   000002D4   0x00000FA0         DC32 4000, 0, 1, 24, ?_14, 0H, ?_2
   \              0x00000000   
   \              0x00000001   
   \              0x00000018   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000002F0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000002F4   0x000007D0         DC32 2000, 1, 0, 25, ?_1, ?_15, ?_2
   \              0x00000001   
   \              0x00000000   
   \              0x00000019   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000310   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000314   0x00002710         DC32 10000, 1, 0, 26, ?_16, ?_1, ?_2
   \              0x00000001   
   \              0x00000000   
   \              0x0000001A   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000330   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000334   0x000007D0         DC32 2000, 0, 1, 27, ?_17, ?_1, ?_2
   \              0x00000000   
   \              0x00000001   
   \              0x0000001B   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000350   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000354   0x00000FA0         DC32 4000, 0, 1, 28, ?_14, 0H, ?_2
   \              0x00000000   
   \              0x00000001   
   \              0x0000001C   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000370   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000374   0x000003E8         DC32 1000, 1, 0, 29, ?_1, ?_15, ?_2
   \              0x00000001   
   \              0x00000000   
   \              0x0000001D   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000390   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000394   0x00002710         DC32 10000, 1, 0, 30, ?_1, 0H, ?_2
   \              0x00000001   
   \              0x00000000   
   \              0x0000001E   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000003B0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000003B4   0x000003E8         DC32 1000, 0, 0, 31, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000001F   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000003D0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000003D4   0x000003E8         DC32 1000, 0, 0, 32, ?_14, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000020   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000003F0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   000003F4   0x000003E8         DC32 1000, 1, 0, 33, ?_1, ?_15, ?_2
   \              0x00000001   
   \              0x00000000   
   \              0x00000021   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000410   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000414   0x000003E8         DC32 1000, 1, 0, 34, ?_18, ?_1, ?_2
   \              0x00000001   
   \              0x00000000   
   \              0x00000022   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000430   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000434   0x000003E8         DC32 1000, 0, 1, 35, ?_19, ?_1, ?_2
   \              0x00000000   
   \              0x00000001   
   \              0x00000023   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000450   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000454   0x000003E8         DC32 1000, 0, 0, 36, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000024   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000470   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000474   0x000003E8         DC32 1000, 0, 0, 37, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000025   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000490   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000494   0x000003E8         DC32 1000, 0, 0, 38, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000026   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000004B0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000004B4   0x000003E8         DC32 1000, 0, 0, 39, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000027   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000004D0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000004D4   0x000003E8         DC32 1000, 0, 0, 40, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000028   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000004F0   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   000004F4   0x000003E8         DC32 1000, 0, 0, 41, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000029   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000510   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000514   0x000003E8         DC32 1000, 0, 0, 42, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000002A   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000530   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000534   0x000003E8         DC32 1000, 0, 0, 43, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000002B   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000550   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000554   0x000003E8         DC32 1000, 0, 0, 44, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000002C   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000570   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000574   0x000003E8         DC32 1000, 0, 0, 45, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000002D   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000590   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000594   0x000003E8         DC32 1000, 0, 0, 46, ?_1, ?_20, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000002E   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000005B0   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   000005B4   0x00009C40         DC32 40000, 0, 0, 47, ?_0, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x0000002F   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000005D0   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   000005D4   0x000003E8         DC32 1000, 0, 0, 48, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000030   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   000005F0   0x03 0x00          DC8 3, 0, 0, 0
   \              0x00 0x00    
   \   000005F4   0x000003E8         DC32 1000, 0, 0, 49, ?_1, ?_4, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000031   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000610   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000614   0x000007D0         DC32 2000, 0, 0, 50, ?_21, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000032   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000630   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000634   0x000007D0         DC32 2000, 0, 0, 51, ?_21, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000033   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000650   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000654   0x000007D0         DC32 2000, 0, 0, 52, ?_1, 0H, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000034   
   \              0x........   
   \              0x00000000   
   \              0x........   
   \   00000670   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000674   0x000003E8         DC32 1000, 0, 0, 53, ?_22, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000035   
   \              0x........   
   \              0x........   
   \              0x........   
   \   00000690   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000694   0x000001F4         DC32 500, 0, 0, 54, ?_23, ?_1, ?_2
   \              0x00000000   
   \              0x00000000   
   \              0x00000036   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000006B0   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   000006B4   0x000003E8         DC32 1000, 2, 0, 55, ?_24, ?_1, ?_2
   \              0x00000002   
   \              0x00000000   
   \              0x00000037   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000006D0   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   000006D4   0x000003E8         DC32 1000, 2, 0, 56, ?_25, ?_1, ?_2
   \              0x00000002   
   \              0x00000000   
   \              0x00000038   
   \              0x........   
   \              0x........   
   \              0x........   
   \   000006F0   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   000006F4   0x000001F4         DC32 500, 0, 0
   \              0x00000000   
   \              0x00000000   
    299          	{MID_HTTP_SEQ_INIT_RESP_ATE0,			"ATE0\r",					"OK",				"ERROR",		2,	1000,	0,	0},
    300          	{MID_HTTP_SEQ_INIT_RESP_CMEE,			"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    301          	{MID_HTTP_SEQ_INIT_RESP_CTZUC,	 		"+CTZU: ",					"OK",				"ERROR",		2,	1000,	0,	0},
    302          	{MID_HTTP_SEQ_INIT_RESP_CTZUS,	 		"OK",						 NULL,				"ERROR",		1,	1000,	0,	0},
    303          	{MID_HTTP_SEQ_INIT_RESP_CCLK,	 		"OK",						"+CCLK: ",			"ERROR",		2,	2000,	0,	0},
    304          	{MID_HTTP_SEQ_INIT_RESP_CPINC,	 		"+CPIN: READY",				"OK",				"ERROR",		2,	1000,	0,	0},
    305          	{MID_HTTP_SEQ_INIT_RESP_CSQ,	 		"+CSQ:",					"OK",				"ERROR",		2,	1000,	0,	0},
    306          	{MID_HTTP_SEQ_INIT_RESP_CPINS,	 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    307          	{MID_HTTP_SEQ_INIT_RESP_SIMEI,	 		"+SIMEI: ",					"OK",				"ERROR",		2,	1000,	0,	0},
    308          	{MID_HTTP_SEQ_INIT_RESP_CSCLK,	 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    309          	{MID_HTTP_SEQ_INIT_RESP_AUTOCSQ,		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    310          	{MID_HTTP_SEQ_INIT_RESP_CGMR,			"+CGMR:",					"OK",				"ERROR",		2,	1000,	0,	0},
    311          	{MID_HTTP_SEQ_INIT_RESP_IPADDR,			"+IPADDR:",					"OK",				"ERROR",		2,	1000,	0,	0},
    312          
    313          	{MID_HTTP_SEQ_LTE_RESP_CGDCONT, 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    314          	{MID_HTTP_SEQ_LTE_RESP_CGAUTH,	 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    315          	{MID_HTTP_SEQ_LTE_RESP_CSOCKSETPN,		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    316          	{MID_HTTP_SEQ_LTE_RESP_NETOPEN,			"OK",						"+NETOPEN: 0",		"ERROR",		2,	1000,	0,	0},
    317          	{MID_HTTP_SEQ_LTE_RESP_NETCLOSE, 		"OK",						"+NETCLOSE: 0",		"ERROR",		2,	2000,	0,	0},
    318          	{MID_HTTP_SEQ_LTE_RESP_STBY_IN, 		"+SIMCARD: NOT AVAILABLE",	"OK",				"ERROR",		2,	2000,	0,	0},
    319          	{MID_HTTP_SEQ_LTE_RESP_STBY_OUT, 		"OK",						NULL,				"ERROR",		1,	2000,	0,	0},
    320          	{MID_HTTP_SEQ_LTE_RESP_CSQ, 			"+CSQ:",					"OK",				"ERROR",		2,	2000,	0,	0},
    321          	{MID_HTTP_SEQ_LTE_RESP_RESET, 			"OK",						NULL,				"ERROR",		1,	2000,	0,	0},
    322          
    323          	{MID_HTTP_SEQ_UDP_RESP_CIPOPEN, 		"+CIPOPEN: 1,0",			"OK",				"ERROR",		2,	4000,	0,	1},
    324          	{MID_HTTP_SEQ_UDP_RESP_CIPSEND, 		">",						NULL,				"ERROR",		0,	2000,	1,	0},
    325          	{MID_HTTP_SEQ_UDP_RESP_CIPSEND2, 		"OK",						"+CIPSEND:",		"ERROR",		2,	10000,	1,	0},
    326          	{MID_HTTP_SEQ_UDP_RESP_CIPCLOSE, 		"+CIPCLOSE:",				"OK",				"ERROR",		2,	2000,	0,	1},
    327          
    328          	{MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN, 		"+CIPOPEN: 2,0",			"OK",				"ERROR",		2,	4000,	0,	1},
    329          	{MID_HTTP_SEQ_CLIENT_RESP_CIPSEND, 		">",						NULL,				"ERROR",		0,	1000,	1,	0},
    330          	{MID_HTTP_SEQ_CLIENT_RESP_CIPSEND2, 	"OK",						"+CIPSEND:",		"ERROR",		2,	10000,	1,	0},
    331          	{MID_HTTP_SEQ_CLIENT_RESP_CIPCLOSE, 	"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    332          
    333          	{MID_HTTP_SEQ_SERVER_RESP_START, 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    334          	{MID_HTTP_SEQ_SERVER_RESP_CIPSEND, 		">",						NULL,				"ERROR",		0,	1000,	1,	0},
    335          	{MID_HTTP_SEQ_SERVER_RESP_CIPSEND2, 	"OK",						"+CIPSEND:",		"ERROR",		2,	1000,	1,	0},
    336          	{MID_HTTP_SEQ_SERVER_RESP_STOP, 		"+SERVERSTOP: 0,0",			"OK",				"ERROR",		2,	1000,	0,	1},
    337          
    338          	{MID_HTTP_SEQ_FTP_RESP_FSCD, 			"+FSCD: C:/",				"OK",				"ERROR",		2,	1000,	0,	0},
    339          	{MID_HTTP_SEQ_FTP_RESP_FSDEL, 			"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    340          
    341          	{MID_HTTP_SEQ_FTP_RESP_CGSOCKCONT,		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    342          	{MID_HTTP_SEQ_FTP_RESP_CSOCKSETPN, 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    343          	{MID_HTTP_SEQ_FTP_RESP_CSOCKAUTH,		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    344          	{MID_HTTP_SEQ_FTP_RESP_CFTPSERV, 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    345          	{MID_HTTP_SEQ_FTP_RESP_CFTPPORT, 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    346          	{MID_HTTP_SEQ_FTP_RESP_CFTPMODE, 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    347          	{MID_HTTP_SEQ_FTP_RESP_CFTPTYPE, 		"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    348          	{MID_HTTP_SEQ_FTP_RESP_CFTPUN, 			"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    349          	{MID_HTTP_SEQ_FTP_RESP_CFTPPW, 			"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    350          	{MID_HTTP_SEQ_FTP_RESP_CFTPGETFILE, 	"OK",						"+CFTPGETFILE: 0",	"ERROR",		2,	40000,	0,	0},
    351          	{MID_HTTP_SEQ_FTP_RESP_ATE0,			"ATE0\r",					"OK",				"ERROR",		2,	1000,	0,	0},
    352          
    353          	{MID_HTTP_SEQ_FILE_RESP_CFTRANTX,	 	"OK",						NULL			,	"ERROR",		3,	1000,	0,	0},
    354          	{MID_HTTP_SEQ_RETRY_RESP_CCLK,	 		"OK",						"+CCLK: ",			"ERROR",		2,	2000,	0,	0},
    355          	
    356          	{MID_HTTP_SEQ_INIT_RESP_CPSI,	 		"+CPSI: ",					"OK",				"ERROR",		2,	2000,	0,	0},
    357          	{MID_HTTP_SEQ_LTE_RESP_CPSI, 			"+CPSI: ",					"OK",				"ERROR",		2,	2000,	0,	0},
    358          	{MID_HTTP_SEQ_LTE_POWER_OFF, 			"OK",						NULL,				"ERROR",		1,	1000,	0,	0},
    359                  {MID_HTTP_SEQ_LTE_RESP_CFOTASWITCH, 	"AT+CFOTASWITCH=0",			"OK",				"ERROR",		2,	500,	0,	0},
    360          	{MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN_CDNSGIP,         "+CDNSGIP: 1",                                              "OK",           "ERROR",                2,      1000,   2,      0},        
    361          	{MID_HTTP_SEQ_UDP_RESP_CIPSEND_CDNSGIP,         "+CDNSGIP: ",                                              "OK",           "ERROR",                2,      1000,   2,      0},        
    362          	{MID_HTTP_SEQ_LTE_RESP_AT, 	"AT\r",			"OK",				"ERROR",		2,	500,	0,	0},
    363          };
    364          
    365          
    366          // コマンド・例外レスポンステーブル
    367          typedef struct _ctrl_sm7500_cmd_except_tbl_t {
    368          	int32_t		id;				// シーケンス
    369          	uint8_t		*resp_ok1;		// 正常応答1
    370          	uint8_t		*resp_ok2;		// 正常応答2
    371          } ctrl_sm7500_cmd_except_tbl_t;
    372          
    373          static const ctrl_sm7500_cmd_except_tbl_t cmd_except_tbl[] = {
    374          	{MID_HTTP_SEQ_LTE_RESP_NETOPEN,			"+IP ERROR: Network is already opened",		"ERROR"},
    375          	{MID_HTTP_SEQ_UDP_RESP_CIPOPEN,			"+CIPERROR: 7",								"ERROR"},
    376          	{MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN,		"+CIPERROR: 7",								"ERROR"},
    377          	{MID_HTTP_SEQ_SERVER_RESP_START,		"+CIPERROR: 7",								"ERROR"},
    378          };
    379          
    380          
    381          

   \                                 In section .rodata, align 4
    382          static const char sim_cpin_tbl[MID_HTTP_CPIN_MAX][15] = {
   \                     sim_cpin_tbl:
   \   00000000   0x52 0x45          DC8 "READY"
   \              0x41 0x44    
   \              0x59 0x00    
   \   00000006   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000000F   0x53 0x49          DC8 "SIM PIN"
   \              0x4D 0x20    
   \              0x50 0x49    
   \              0x4E 0x00    
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000001E   0x53 0x49          DC8 "SIM PUK"
   \              0x4D 0x20    
   \              0x50 0x55    
   \              0x4B 0x00    
   \   00000026   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002D   0x50 0x48          DC8 "PH-SIM PIN"
   \              0x2D 0x53    
   \              0x49 0x4D    
   \              0x20 0x50    
   \              0x49 0x4E    
   \              0x00         
   \   00000038   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   0000003C   0x53 0x49          DC8 "SIM PIN2"
   \              0x4D 0x20    
   \              0x50 0x49    
   \              0x4E 0x32    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000004B   0x53 0x49          DC8 "SIM PUK2"
   \              0x4D 0x20    
   \              0x50 0x55    
   \              0x4B 0x32    
   \              0x00         
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000005A   0x50 0x48          DC8 "PH-NET PIN"
   \              0x2D 0x4E    
   \              0x45 0x54    
   \              0x20 0x50    
   \              0x49 0x4E    
   \              0x00         
   \   00000065   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    383          	"READY",
    384          	"SIM PIN",
    385          	"SIM PUK",
    386          	"PH-SIM PIN",
    387          	"SIM PIN2",
    388          	"SIM PUK2",
    389          	"PH-NET PIN"
    390          };
    391          
    392          // 受信データ コマンド部テーブル
    393          typedef struct _ctrl_sm7500_recv_cmd_tbl_t {
    394          	mid_http_recv_def		type;			// データ種別
    395          	uint8_t					*cmd;			// 判定文字列
    396          } ctrl_sm7500_recv_cmd_tbl_t;
    397          

   \                                 In section .rodata, align 4
    398          static const ctrl_sm7500_recv_cmd_tbl_t recv_cmd_tbl[] = {
   \                     recv_cmd_tbl:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0x........         DC32 ?_26
   \   00000008   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   0000000C   0x........         DC32 ?_27
   \   00000010   0x02 0x00          DC8 2, 0, 0, 0
   \              0x00 0x00    
   \   00000014   0x........         DC32 ?_28
   \   00000018   0x03 0x00          DC8 3, 0, 0, 0
   \              0x00 0x00    
   \   0000001C   0x........         DC32 ?_29
   \   00000020   0x04 0x00          DC8 4, 0, 0, 0
   \              0x00 0x00    
   \   00000024   0x........         DC32 ?_30
   \   00000028   0x05 0x00          DC8 5, 0, 0, 0
   \              0x00 0x00    
   \   0000002C   0x........         DC32 ?_31
   \   00000030   0x06 0x00          DC8 6, 0, 0, 0
   \              0x00 0x00    
   \   00000034   0x........         DC32 ?_32
   \   00000038   0x07 0x00          DC8 7, 0, 0, 0
   \              0x00 0x00    
   \   0000003C   0x........         DC32 ?_33
   \   00000040   0x08 0x00          DC8 8, 0, 0, 0
   \              0x00 0x00    
   \   00000044   0x........         DC32 ?_34
   \   00000048   0x09 0x00          DC8 9, 0, 0, 0
   \              0x00 0x00    
   \   0000004C   0x........         DC32 ?_35
   \   00000050   0x0A 0x00          DC8 10, 0, 0, 0
   \              0x00 0x00    
   \   00000054   0x........         DC32 ?_36
   \   00000058   0x0B 0x00          DC8 11, 0, 0, 0
   \              0x00 0x00    
   \   0000005C   0x........         DC32 ?_37
   \   00000060   0x0C 0x00          DC8 12, 0, 0, 0
   \              0x00 0x00    
   \   00000064   0x........         DC32 ?_12
    399          	{MID_HTTP_RECV_RECV,			"RECV FROM:"},
    400          	{MID_HTTP_RECV_IPD,				"+IPD"},
    401          	{MID_HTTP_RECV_IPCLOSE,			"+IPCLOSE:"},
    402          	{MID_HTTP_RECV_CLIENT,			"+CLIENT:"},
    403          	{MID_HTTP_RECV_CIPCLOSE,		"+CIPCLOSE"},
    404          	{MID_HTTP_RECV_CIPOPEN,			"+CIPOPEN:"},
    405          	{MID_HTTP_RECV_PBDONE,			"PB DONE"},
    406          	{MID_HTTP_RECV_NETCLOSE,		"+NETCLOSE:"},
    407          	{MID_HTTP_RECV_CFTRANTX,		"+CFTRANTX: DATA,"},
    408          	{MID_HTTP_RECV_CFTRANTX_0,		"+CFTRANTX: 0"},
    409          	{MID_HTTP_RECV_CFTPGETFILE,		"+CFTPGETFILE: "},
    410          	{MID_HTTP_RECV_CIPERROR,		"+CIPERROR: "},
    411          	{MID_HTTP_RECV_SIMCARD,			"+SIMCARD: NOT AVAILABLE"},
    412          };
    413          
    414          static void mid_HTTP_resp_check(uint8_t *data, int32_t length, int32_t id, int32_t status);
    415          static void mid_HTTP_resp_check2(uint8_t *data1, int32_t length1, uint8_t *data2, int32_t length2, int32_t id, int32_t status);
    416          
    417          /********************************************************************/
    418          /*!
    419           * \name	man_http_check_FQDN
    420           * \brief	IPアドレス文字列がFQDNか否かをチェックする
    421           * \param	IPアドレス文字列
    422           * \return      1: FQDN 0:IPアドレス
    423           * \note	HTTPのAT+CIPOPEN発行前に呼ばれること
    424           */
    425          /********************************************************************/
    426          

   \                                 In section .text, align 2, keep-with-next
    427          int man_http_check_FQDN(char *ipaddr)
    428          {
   \                     man_http_check_FQDN: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
    429            int total = strlen(ipaddr);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       strlen
    430            char *ipaddrstrp;
    431            int number=0;
   \   0000000A   0x2300             MOVS     R3,#+0
    432            int part=0;
   \   0000000C   0x2100             MOVS     R1,#+0
    433            int separator;
    434            int i = 0;
   \   0000000E   0x2100             MOVS     R1,#+0
    435            int ii=0;
   \   00000010   0x2100             MOVS     R1,#+0
    436            int ret=0;
   \   00000012   0x2100             MOVS     R1,#+0
    437            int period=0;
   \   00000014   0x2200             MOVS     R2,#+0
    438          
    439            for(i=0;i < total;i++)
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0xE004             B        ??man_http_check_FQDN_0
    440            {
    441                if(((ipaddr[i] < '0') ||  (ipaddr[i] > '9')) && (ipaddr[i] !='.')) // 数字又は'.'では無い
    442                {
    443                  return 1;
    444                }
    445                if(ipaddr[i] =='.') // データが'.'
   \                     ??man_http_check_FQDN_1: (+1)
   \   0000001A   0x5C63             LDRB     R3,[R4, R1]
   \   0000001C   0x2B2E             CMP      R3,#+46
   \   0000001E   0xD100             BNE      ??man_http_check_FQDN_2
    446                {
    447                  period++;
   \   00000020   0x1C52             ADDS     R2,R2,#+1
    448                }
   \                     ??man_http_check_FQDN_2: (+1)
   \   00000022   0x1C49             ADDS     R1,R1,#+1
   \                     ??man_http_check_FQDN_0: (+1)
   \   00000024   0x4281             CMP      R1,R0
   \   00000026   0xDA08             BGE      ??man_http_check_FQDN_3
   \   00000028   0x5C63             LDRB     R3,[R4, R1]
   \   0000002A   0x3B30             SUBS     R3,R3,#+48
   \   0000002C   0x2B0A             CMP      R3,#+10
   \   0000002E   0xD3F4             BCC      ??man_http_check_FQDN_1
   \   00000030   0x5C63             LDRB     R3,[R4, R1]
   \   00000032   0x2B2E             CMP      R3,#+46
   \   00000034   0xD0F1             BEQ      ??man_http_check_FQDN_1
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0xE027             B        ??man_http_check_FQDN_4
    449            }
    450            if(period != 3)
   \                     ??man_http_check_FQDN_3: (+1)
   \   0000003A   0x2A03             CMP      R2,#+3
   \   0000003C   0xD001             BEQ      ??man_http_check_FQDN_5
    451            {
    452              return 1;
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0xE023             B        ??man_http_check_FQDN_4
    453            }
    454            i=0;
   \                     ??man_http_check_FQDN_5: (+1)
   \   00000042   0x2100             MOVS     R1,#+0
    455            while(i < total)
   \                     ??man_http_check_FQDN_6: (+1)
   \   00000044   0x4281             CMP      R1,R0
   \   00000046   0xDA1F             BGE      ??man_http_check_FQDN_7
    456            {
    457              separator=0;
   \   00000048   0x2500             MOVS     R5,#+0
    458              ipaddrstrp = &ipaddr[i];
   \   0000004A   0x1862             ADDS     R2,R4,R1
    459              number=0;
   \   0000004C   0x2300             MOVS     R3,#+0
    460              for(int ii = 0;ii < 4; ii++)
   \   0000004E   0x2600             MOVS     R6,#+0
   \   00000050   0xE002             B        ??man_http_check_FQDN_8
    461              {
    462                if(ipaddrstrp[ii] == 0)
    463                {
    464                  if(number == 0) // 数字が入ってない
    465                  {
    466                    return 1;
    467                  }
    468                  else
    469                  {
    470                    return 0;
    471                  }
    472                }
    473                else if(ipaddrstrp[ii] =='.')
    474                {
    475                  if(number == 0) // 数字が入ってない
    476                  {
    477                    return 1;
    478                  }
    479                  else
    480                  {
    481                   separator=1;
    482                   i++;
    483                   break;
    484                  }
    485                }
    486                else
    487                {
    488                  number=1;
   \                     ??man_http_check_FQDN_9: (+1)
   \   00000052   0x2301             MOVS     R3,#+1
    489                  i++;
   \   00000054   0x1C49             ADDS     R1,R1,#+1
    490                }
   \   00000056   0x1C76             ADDS     R6,R6,#+1
   \                     ??man_http_check_FQDN_8: (+1)
   \   00000058   0x2E04             CMP      R6,#+4
   \   0000005A   0xDA11             BGE      ??man_http_check_FQDN_10
   \   0000005C   0x5D97             LDRB     R7,[R2, R6]
   \   0000005E   0x2F00             CMP      R7,#+0
   \   00000060   0xD105             BNE      ??man_http_check_FQDN_11
   \   00000062   0x2B00             CMP      R3,#+0
   \   00000064   0xD101             BNE      ??man_http_check_FQDN_12
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0xE00F             B        ??man_http_check_FQDN_4
   \                     ??man_http_check_FQDN_12: (+1)
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0xE00D             B        ??man_http_check_FQDN_4
   \                     ??man_http_check_FQDN_11: (+1)
   \   0000006E   0x5D97             LDRB     R7,[R2, R6]
   \   00000070   0x2F2E             CMP      R7,#+46
   \   00000072   0xD1EE             BNE      ??man_http_check_FQDN_9
   \   00000074   0x2B00             CMP      R3,#+0
   \   00000076   0xD101             BNE      ??man_http_check_FQDN_13
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0xE006             B        ??man_http_check_FQDN_4
   \                     ??man_http_check_FQDN_13: (+1)
   \   0000007C   0x2501             MOVS     R5,#+1
   \   0000007E   0x1C49             ADDS     R1,R1,#+1
    491              }
    492              if(separator == 0)
   \                     ??man_http_check_FQDN_10: (+1)
   \   00000080   0x2D00             CMP      R5,#+0
   \   00000082   0xD1DF             BNE      ??man_http_check_FQDN_6
    493              {
    494                return 1;
   \   00000084   0x2001             MOVS     R0,#+1
   \   00000086   0xE000             B        ??man_http_check_FQDN_4
    495              }
    496            }
    497            return 0;
   \                     ??man_http_check_FQDN_7: (+1)
   \   00000088   0x2000             MOVS     R0,#+0
   \                     ??man_http_check_FQDN_4: (+1)
   \   0000008A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    498          }
    499          
    500          /********************************************************************/
    501          /*	callback関数                                                    */
    502          /********************************************************************/
    503          
    504          /********************************************************************/
    505          /*!
    506           * \name	mid_HTTP_callback
    507           * \brief	callback処理
    508           * \param	data   : 受信データ
    509           *          length : データ長
    510           *          id     : ユニークID
    511           *          status : 受信結果
    512           * \return  なし
    513           * \note	必要時に、呼ばれること
    514           */
    515          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    516          static void mid_HTTP_callback(uint8_t *data, int32_t length, int32_t id, int32_t status)
    517          {
   \                     mid_HTTP_callback: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    518          	if ( (cmd_tbl[id-1].type == 0) || (cmd_tbl[id-1].type == 1) ) {
   \   00000002   0x....             LDR      R4,??DataTable1
   \   00000004   0x2520             MOVS     R5,#+32
   \   00000006   0x4355             MULS     R5,R2,R5
   \   00000008   0x1964             ADDS     R4,R4,R5
   \   0000000A   0x3C10             SUBS     R4,R4,#+16
   \   0000000C   0x7824             LDRB     R4,[R4, #+0]
   \   0000000E   0x2C00             CMP      R4,#+0
   \   00000010   0xD007             BEQ      ??mid_HTTP_callback_0
   \   00000012   0x....             LDR      R4,??DataTable1
   \   00000014   0x2520             MOVS     R5,#+32
   \   00000016   0x4355             MULS     R5,R2,R5
   \   00000018   0x1964             ADDS     R4,R4,R5
   \   0000001A   0x3C10             SUBS     R4,R4,#+16
   \   0000001C   0x7824             LDRB     R4,[R4, #+0]
   \   0000001E   0x2C01             CMP      R4,#+1
   \   00000020   0xD102             BNE      ??mid_HTTP_callback_1
    519          		mid_HTTP_resp_check(data, length, id, status);
   \                     ??mid_HTTP_callback_0: (+1)
   \   00000022   0x.... 0x....      BL       mid_HTTP_resp_check
   \   00000026   0xE007             B        ??mid_HTTP_callback_2
    520          	}
    521          	else {
    522          		mid_http_work.resp_info.id = id;
   \                     ??mid_HTTP_callback_1: (+1)
   \   00000028   0x....             LDR      R0,??DataTable1_1
   \   0000002A   0x6002             STR      R2,[R0, #+0]
    523          		mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_FAULT;
   \   0000002C   0x2005             MOVS     R0,#+5
   \   0000002E   0x....             LDR      R1,??DataTable1_2
   \   00000030   0x7008             STRB     R0,[R1, #+0]
    524          		mid_http_work.resp_info.flag = 1;
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x....             LDR      R1,??DataTable1_3
   \   00000036   0x6008             STR      R0,[R1, #+0]
    525          	}
    526          }
   \                     ??mid_HTTP_callback_2: (+1)
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    527          
    528          
    529          /********************************************************************/
    530          /*!
    531           * \name	mid_HTTP_callback2
    532           * \brief	callback2処理
    533           * \param	data1   : 受信データ
    534           *          length1 : データ長
    535           *          data2   : 受信データ
    536           *          length2 : データ長
    537           *          id      : ユニークID
    538           *          status  : 受信結果
    539           * \return  なし
    540           * \note	必要時に、呼ばれること
    541           */
    542          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    543          static void mid_HTTP_callback2(uint8_t *data1, int32_t length1, uint8_t *data2, int32_t length2, int32_t id, int32_t status)
    544          {
   \                     mid_HTTP_callback2: (+1)
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
   \   00000002   0x9C06             LDR      R4,[SP, #+24]
    545          	if (cmd_tbl[id-1].type == 2) {
   \   00000004   0x....             LDR      R5,??DataTable1
   \   00000006   0x2620             MOVS     R6,#+32
   \   00000008   0x4366             MULS     R6,R4,R6
   \   0000000A   0x19AD             ADDS     R5,R5,R6
   \   0000000C   0x3D10             SUBS     R5,R5,#+16
   \   0000000E   0x782D             LDRB     R5,[R5, #+0]
   \   00000010   0x2D02             CMP      R5,#+2
   \   00000012   0xD105             BNE      ??mid_HTTP_callback2_0
    546          		mid_HTTP_resp_check2(data1, length1, data2, length2, id, status);
   \   00000014   0x9D07             LDR      R5,[SP, #+28]
   \   00000016   0x9501             STR      R5,[SP, #+4]
   \   00000018   0x9400             STR      R4,[SP, #+0]
   \   0000001A   0x.... 0x....      BL       mid_HTTP_resp_check2
   \   0000001E   0xE007             B        ??mid_HTTP_callback2_1
    547          	}
    548          	else {
    549          		mid_http_work.resp_info.id = id;
   \                     ??mid_HTTP_callback2_0: (+1)
   \   00000020   0x....             LDR      R0,??DataTable1_1
   \   00000022   0x6004             STR      R4,[R0, #+0]
    550          		mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_FAULT;
   \   00000024   0x2005             MOVS     R0,#+5
   \   00000026   0x....             LDR      R1,??DataTable1_2
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    551          		mid_http_work.resp_info.flag = 1;
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x....             LDR      R1,??DataTable1_3
   \   0000002E   0x6008             STR      R0,[R1, #+0]
    552          	}
    553          }
   \                     ??mid_HTTP_callback2_1: (+1)
   \   00000030   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    554          
    555          
    556          /********************************************************************/
    557          /*!
    558           * \name	mid_HTTP_callback3
    559           * \brief	callback処理
    560           * \param	data   : 受信データ
    561           *          length : データ長
    562           *          id     : ユニークID
    563           *          status : 受信結果
    564           * \return  なし
    565           * \note	必要時に、呼ばれること
    566           *
    567           *          HTTP client  :: "RECV FROM:10.0.0.30:80"         -> MID_HTTP_RECV_SEQ_CLIENT_RECV
    568           *                          "+IPD113"                        -> MID_HTTP_RECV_SEQ_CLIENT_IPD
    569           *                          "<rcv data>"                     -> MID_HTTP_RECV_SEQ_READY
    570           *
    571           *          HTTP server  :: "+CLIENT: 5,0,10.0.0.30:51774"   -> MID_HTTP_RECV_SEQ_SEVER_CLIENT
    572           *                          "RECV FROM:10.0.0.30:51774"      -> MID_HTTP_RECV_SEQ_SEVER_RECV
    573           *                          "+IPD17"                         -> MID_HTTP_RECV_SEQ_SEVER_IPD
    574           *                          "POST / HTTP/1.1"                -> MID_HTTP_RECV_SEQ_SEVER_DATA
    575           *                          "RECV FROM:10.0.0.30:51766"      -> MID_HTTP_RECV_SEQ_SEVER_RECV2
    576           *                          "+IPD62"                         -> MID_HTTP_RECV_SEQ_SEVER_IPD2
    577           *                          "<rcv data>"                     -> MID_HTTP_RECV_SEQ_READY
    578           *
    579           *          FILE get     :: "+CFTRANTX: DATA,512"            -> MID_HTTP_RECV_SEQ_FILE_RECV
    580           *                          "<rcv data>"                     -> MID_HTTP_RECV_SEQ_FILE_DATA
    581           *                          "+CFTRANTX: 0"
    582           */
    583          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
    584          static void mid_HTTP_callback3(uint8_t *data, int32_t length, int32_t id, int32_t status)
    585          {
   \                     mid_HTTP_callback3: (+1)
   \   00000000   0xB5F2             PUSH     {R1,R4-R7,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0006             MOVS     R6,R0
    586          	int32_t					i;
    587          	mid_http_recv_def		type=MID_HTTP_RECV_MAX;
   \   00000006   0x200D             MOVS     R0,#+13
   \   00000008   0x4669             MOV      R1,SP
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
    588          	int32_t					ipd_len;
    589          	mid_http_recv_info_t	*recv = &mid_http_work.recv_data;
   \   0000000C   0x4DAE             LDR      R5,??mid_HTTP_callback3_0
    590          	mid_http_noti_info_t	*noti = &mid_http_work.recv_noti;
   \   0000000E   0x4CAF             LDR      R4,??mid_HTTP_callback3_0+0x4
    591          	int32_t					link_num;
    592          	int32_t					numeric_code;
    593          	int32_t					state=0;
   \   00000010   0x2000             MOVS     R0,#+0
    594          	uint32_t				rcv_data;
    595          	int32_t					err_num;
    596          	int32_t					data_len;
    597          
    598          	if (status == CTRL_SM7500JE_STATUS_OK) {
   \   00000012   0x2B00             CMP      R3,#+0
   \   00000014   0xD000             BEQ      .+4
   \   00000016   0xE289             B        ??mid_HTTP_callback3_1
    599          
    600          		// コマンド部を判断する
    601          		// FILE GETには文字コードが含まれておりコマンド部と一致するため、除外する
    602          		if (recv->ftp_seq != MID_HTTP_RECV_SEQ_FILE_RECV) {
   \   00000018   0x68E8             LDR      R0,[R5, #+12]
   \   0000001A   0x2801             CMP      R0,#+1
   \   0000001C   0xD019             BEQ      ??mid_HTTP_callback3_2
    603          			for (i=0; i<MID_HTTP_RECV_MAX; i++) {
   \   0000001E   0x2700             MOVS     R7,#+0
   \   00000020   0xE000             B        ??mid_HTTP_callback3_3
   \                     ??mid_HTTP_callback3_4: (+1)
   \   00000022   0x1C7F             ADDS     R7,R7,#+1
   \                     ??mid_HTTP_callback3_3: (+1)
   \   00000024   0x2F0D             CMP      R7,#+13
   \   00000026   0xDA17             BGE      ??mid_HTTP_callback3_5
    604          				if ( (memcmp(data, recv_cmd_tbl[i].cmd, strlen((const char *)recv_cmd_tbl[i].cmd)) == 0) ) {
   \   00000028   0x48A9             LDR      R0,??mid_HTTP_callback3_0+0x8
   \   0000002A   0x2108             MOVS     R1,#+8
   \   0000002C   0x4379             MULS     R1,R7,R1
   \   0000002E   0x1840             ADDS     R0,R0,R1
   \   00000030   0x6840             LDR      R0,[R0, #+4]
   \   00000032   0x.... 0x....      BL       strlen
   \   00000036   0x0002             MOVS     R2,R0
   \   00000038   0x48A5             LDR      R0,??mid_HTTP_callback3_0+0x8
   \   0000003A   0x2108             MOVS     R1,#+8
   \   0000003C   0x4379             MULS     R1,R7,R1
   \   0000003E   0x1840             ADDS     R0,R0,R1
   \   00000040   0x6841             LDR      R1,[R0, #+4]
   \   00000042   0x0030             MOVS     R0,R6
   \   00000044   0x.... 0x....      BL       memcmp
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD1EA             BNE      ??mid_HTTP_callback3_4
    605          					type = (mid_http_recv_def)i;
   \   0000004C   0x4668             MOV      R0,SP
   \   0000004E   0x7007             STRB     R7,[R0, #+0]
    606          					break;
   \   00000050   0xE002             B        ??mid_HTTP_callback3_5
    607          				}
    608          			}
    609          		}
    610          		else {
    611          			type = MID_HTTP_RECV_MAX;
   \                     ??mid_HTTP_callback3_2: (+1)
   \   00000052   0x200D             MOVS     R0,#+13
   \   00000054   0x4669             MOV      R1,SP
   \   00000056   0x7008             STRB     R0,[R1, #+0]
    612          		}
    613          		
    614          		switch (type) {
   \                     ??mid_HTTP_callback3_5: (+1)
   \   00000058   0x4668             MOV      R0,SP
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD01F             BEQ      ??mid_HTTP_callback3_6
   \   00000060   0x2802             CMP      R0,#+2
   \   00000062   0xD063             BEQ      ??mid_HTTP_callback3_7
   \   00000064   0xD339             BCC      ??mid_HTTP_callback3_8
   \   00000066   0x2804             CMP      R0,#+4
   \   00000068   0xD100             BNE      .+4
   \   0000006A   0xE086             B        ??mid_HTTP_callback3_9
   \   0000006C   0xD200             BCS      .+4
   \   0000006E   0xE0D7             B        ??mid_HTTP_callback3_10
   \   00000070   0x2806             CMP      R0,#+6
   \   00000072   0xD100             BNE      .+4
   \   00000074   0xE0FB             B        ??mid_HTTP_callback3_11
   \   00000076   0xD200             BCS      .+4
   \   00000078   0xE09B             B        ??mid_HTTP_callback3_12
   \   0000007A   0x2808             CMP      R0,#+8
   \   0000007C   0xD100             BNE      .+4
   \   0000007E   0xE12B             B        ??mid_HTTP_callback3_13
   \   00000080   0xD200             BCS      .+4
   \   00000082   0xE0FE             B        ??mid_HTTP_callback3_14
   \   00000084   0x280A             CMP      R0,#+10
   \   00000086   0xD100             BNE      .+4
   \   00000088   0xE166             B        ??mid_HTTP_callback3_15
   \   0000008A   0xD200             BCS      .+4
   \   0000008C   0xE154             B        ??mid_HTTP_callback3_16
   \   0000008E   0x280C             CMP      R0,#+12
   \   00000090   0xD100             BNE      .+4
   \   00000092   0xE1B9             B        ??mid_HTTP_callback3_17
   \   00000094   0xD200             BCS      .+4
   \   00000096   0xE19B             B        ??mid_HTTP_callback3_18
   \   00000098   0x280D             CMP      R0,#+13
   \   0000009A   0xD100             BNE      .+4
   \   0000009C   0xE1BE             B        ??mid_HTTP_callback3_19
   \   0000009E   0xE245             B        ??mid_HTTP_callback3_20
    615          		case MID_HTTP_RECV_RECV:			// "RECV FROM:"
    616          			// HTTP server使用中
    617          			if ( (mid_http_work.status & MID_HTTP_STATUS_SERVER) != 0) {
   \                     ??mid_HTTP_callback3_6: (+1)
   \   000000A0   0x488C             LDR      R0,??mid_HTTP_callback3_0+0xC
   \   000000A2   0x7800             LDRB     R0,[R0, #+0]
   \   000000A4   0x0700             LSLS     R0,R0,#+28
   \   000000A6   0xD50B             BPL      ??mid_HTTP_callback3_21
    618          				if (recv->server_seq == MID_HTTP_RECV_SEQ_SEVER_CLIENT) {
   \   000000A8   0x68A8             LDR      R0,[R5, #+8]
   \   000000AA   0x2801             CMP      R0,#+1
   \   000000AC   0xD102             BNE      ??mid_HTTP_callback3_22
    619          					recv->server_seq = MID_HTTP_RECV_SEQ_SEVER_RECV;
   \   000000AE   0x2002             MOVS     R0,#+2
   \   000000B0   0x60A8             STR      R0,[R5, #+8]
   \   000000B2   0xE00E             B        ??mid_HTTP_callback3_23
    620          				}
    621          				else if (recv->server_seq == MID_HTTP_RECV_SEQ_SEVER_DATA) {
   \                     ??mid_HTTP_callback3_22: (+1)
   \   000000B4   0x68A8             LDR      R0,[R5, #+8]
   \   000000B6   0x2804             CMP      R0,#+4
   \   000000B8   0xD10B             BNE      ??mid_HTTP_callback3_23
    622          					recv->server_seq = MID_HTTP_RECV_SEQ_SEVER_RECV2;
   \   000000BA   0x2005             MOVS     R0,#+5
   \   000000BC   0x60A8             STR      R0,[R5, #+8]
   \   000000BE   0xE008             B        ??mid_HTTP_callback3_23
    623          				}
    624          			}
    625          
    626          			else {
    627          				// HTTP client使用中
    628          				if ( (mid_http_work.status & MID_HTTP_STATUS_CLIENT) != 0) {
   \                     ??mid_HTTP_callback3_21: (+1)
   \   000000C0   0x4884             LDR      R0,??mid_HTTP_callback3_0+0xC
   \   000000C2   0x7800             LDRB     R0,[R0, #+0]
   \   000000C4   0x0740             LSLS     R0,R0,#+29
   \   000000C6   0xD504             BPL      ??mid_HTTP_callback3_23
    629          					if (recv->client_seq == MID_HTTP_RECV_SEQ_READY) {
   \   000000C8   0x6868             LDR      R0,[R5, #+4]
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD101             BNE      ??mid_HTTP_callback3_23
    630          						recv->client_seq = MID_HTTP_RECV_SEQ_CLIENT_RECV;
   \   000000CE   0x2001             MOVS     R0,#+1
   \   000000D0   0x6068             STR      R0,[R5, #+4]
    631          					}
    632          				}
    633          			}
    634          			recv->type = type;
   \                     ??mid_HTTP_callback3_23: (+1)
   \   000000D2   0x4668             MOV      R0,SP
   \   000000D4   0x7800             LDRB     R0,[R0, #+0]
   \   000000D6   0x7028             STRB     R0,[R5, #+0]
    635          			break;
   \   000000D8   0xE228             B        ??mid_HTTP_callback3_1
    636          
    637          		case MID_HTTP_RECV_IPD:				// "+IPD"
    638          			if (recv->client_seq == MID_HTTP_RECV_SEQ_CLIENT_RECV) {
   \                     ??mid_HTTP_callback3_8: (+1)
   \   000000DA   0x6868             LDR      R0,[R5, #+4]
   \   000000DC   0x2801             CMP      R0,#+1
   \   000000DE   0xD102             BNE      ??mid_HTTP_callback3_24
    639          				recv->client_seq = MID_HTTP_RECV_SEQ_CLIENT_IPD;
   \   000000E0   0x2002             MOVS     R0,#+2
   \   000000E2   0x6068             STR      R0,[R5, #+4]
   \   000000E4   0xE00A             B        ??mid_HTTP_callback3_25
    640          			}
    641          			else if (recv->server_seq == MID_HTTP_RECV_SEQ_SEVER_RECV) {
   \                     ??mid_HTTP_callback3_24: (+1)
   \   000000E6   0x68A8             LDR      R0,[R5, #+8]
   \   000000E8   0x2802             CMP      R0,#+2
   \   000000EA   0xD102             BNE      ??mid_HTTP_callback3_26
    642          				recv->server_seq = MID_HTTP_RECV_SEQ_SEVER_IPD;
   \   000000EC   0x2003             MOVS     R0,#+3
   \   000000EE   0x60A8             STR      R0,[R5, #+8]
   \   000000F0   0xE004             B        ??mid_HTTP_callback3_25
    643          			}
    644          			else if (recv->server_seq == MID_HTTP_RECV_SEQ_SEVER_RECV2) {
   \                     ??mid_HTTP_callback3_26: (+1)
   \   000000F2   0x68A8             LDR      R0,[R5, #+8]
   \   000000F4   0x2805             CMP      R0,#+5
   \   000000F6   0xD101             BNE      ??mid_HTTP_callback3_25
    645          				recv->server_seq = MID_HTTP_RECV_SEQ_SEVER_IPD2;
   \   000000F8   0x2006             MOVS     R0,#+6
   \   000000FA   0x60A8             STR      R0,[R5, #+8]
    646          			}
    647          
    648          			ipd_len = 0;
   \                     ??mid_HTTP_callback3_25: (+1)
   \   000000FC   0x2000             MOVS     R0,#+0
    649          			if (length <= 10) {
   \   000000FE   0x9902             LDR      R1,[SP, #+8]
   \   00000100   0x290B             CMP      R1,#+11
   \   00000102   0xDA0B             BGE      ??mid_HTTP_callback3_27
    650          				for (i=4; i<length-2; i++) {
   \   00000104   0x2704             MOVS     R7,#+4
   \   00000106   0xE005             B        ??mid_HTTP_callback3_28
    651          					ipd_len *= 10;
   \                     ??mid_HTTP_callback3_29: (+1)
   \   00000108   0x210A             MOVS     R1,#+10
   \   0000010A   0x4348             MULS     R0,R1,R0
    652          					ipd_len += data[i]-'0';
   \   0000010C   0x5DF1             LDRB     R1,[R6, R7]
   \   0000010E   0x3930             SUBS     R1,R1,#+48
   \   00000110   0x1840             ADDS     R0,R0,R1
    653          				}
   \   00000112   0x1C7F             ADDS     R7,R7,#+1
   \                     ??mid_HTTP_callback3_28: (+1)
   \   00000114   0x9902             LDR      R1,[SP, #+8]
   \   00000116   0x1E89             SUBS     R1,R1,#+2
   \   00000118   0x428F             CMP      R7,R1
   \   0000011A   0xDBF5             BLT      ??mid_HTTP_callback3_29
    654          			}
    655          			recv->ipd_len = ipd_len;
   \                     ??mid_HTTP_callback3_27: (+1)
   \   0000011C   0x6128             STR      R0,[R5, #+16]
    656          			recv->type = type;
   \   0000011E   0x4668             MOV      R0,SP
   \   00000120   0x7800             LDRB     R0,[R0, #+0]
   \   00000122   0x7028             STRB     R0,[R5, #+0]
    657          			recv->length = 0;
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x49B7             LDR      R1,??mid_HTTP_callback3_30  ;; 0x13a4
   \   00000128   0x5068             STR      R0,[R5, R1]
    658          			break;
   \   0000012A   0xE1FF             B        ??mid_HTTP_callback3_1
    659          
    660          		case MID_HTTP_RECV_IPCLOSE:			// "+IPCLOSE:"
    661          			link_num = data[10] - '0';
   \                     ??mid_HTTP_callback3_7: (+1)
   \   0000012C   0x7AB7             LDRB     R7,[R6, #+10]
   \   0000012E   0x3F30             SUBS     R7,R7,#+48
    662          			numeric_code = data[12] - '0';
   \   00000130   0x7B30             LDRB     R0,[R6, #+12]
   \   00000132   0x3830             SUBS     R0,R0,#+48
   \   00000134   0x9001             STR      R0,[SP, #+4]
    663          
    664          			// HTTP server
    665          			if (link_num == recv->link_num) {
   \   00000136   0x69A8             LDR      R0,[R5, #+24]
   \   00000138   0x4287             CMP      R7,R0
   \   0000013A   0xD112             BNE      ??mid_HTTP_callback3_31
    666          				// HTTP server CLOSE中終了
    667          				mid_http_work.status &= ~MID_HTTP_STATUS_CLOSE;
   \   0000013C   0x4865             LDR      R0,??mid_HTTP_callback3_0+0xC
   \   0000013E   0x6800             LDR      R0,[R0, #+0]
   \   00000140   0x2110             MOVS     R1,#+16
   \   00000142   0x4388             BICS     R0,R0,R1
   \   00000144   0x4963             LDR      R1,??mid_HTTP_callback3_0+0xC
   \   00000146   0x6008             STR      R0,[R1, #+0]
    668          				recv->type = type;
   \   00000148   0x4668             MOV      R0,SP
   \   0000014A   0x7800             LDRB     R0,[R0, #+0]
   \   0000014C   0x7028             STRB     R0,[R5, #+0]
    669          				// server close通知
    670          				if (noti->callback != NULL) {
   \   0000014E   0x6860             LDR      R0,[R4, #+4]
   \   00000150   0x2800             CMP      R0,#+0
   \   00000152   0xD011             BEQ      ??mid_HTTP_callback3_32
    671          					noti->callback(data, length, noti->id, MID_HTTP_STATE_SERVER_IPCLOSE);
   \   00000154   0x230A             MOVS     R3,#+10
   \   00000156   0x6822             LDR      R2,[R4, #+0]
   \   00000158   0x9902             LDR      R1,[SP, #+8]
   \   0000015A   0x0030             MOVS     R0,R6
   \   0000015C   0x6864             LDR      R4,[R4, #+4]
   \   0000015E   0x47A0             BLX      R4
   \   00000160   0xE00A             B        ??mid_HTTP_callback3_32
    672          				}
    673          			}
    674          
    675          			// "+IPCLOSE: 2,0"
    676          			else if (link_num == 2) {
   \                     ??mid_HTTP_callback3_31: (+1)
   \   00000162   0x2F02             CMP      R7,#+2
   \   00000164   0xD108             BNE      ??mid_HTTP_callback3_32
    677          				// client close通知
    678          				if (noti->callback != NULL) {
   \   00000166   0x6860             LDR      R0,[R4, #+4]
   \   00000168   0x2800             CMP      R0,#+0
   \   0000016A   0xD005             BEQ      ??mid_HTTP_callback3_32
    679          					noti->callback(data, length, noti->id, MID_HTTP_STATE_CLIENT_IPCLOSE);
   \   0000016C   0x2314             MOVS     R3,#+20
   \   0000016E   0x6822             LDR      R2,[R4, #+0]
   \   00000170   0x9902             LDR      R1,[SP, #+8]
   \   00000172   0x0030             MOVS     R0,R6
   \   00000174   0x6864             LDR      R4,[R4, #+4]
   \   00000176   0x47A0             BLX      R4
    680          				}
    681          			}
    682          			break;
   \                     ??mid_HTTP_callback3_32: (+1)
   \   00000178   0xE1D8             B        ??mid_HTTP_callback3_1
    683          
    684          		case MID_HTTP_RECV_CIPCLOSE:
    685          			link_num = data[11] - '0';
   \                     ??mid_HTTP_callback3_9: (+1)
   \   0000017A   0x7AF7             LDRB     R7,[R6, #+11]
   \   0000017C   0x3F30             SUBS     R7,R7,#+48
    686          			numeric_code = data[13] - '0';
   \   0000017E   0x7B70             LDRB     R0,[R6, #+13]
   \   00000180   0x3830             SUBS     R0,R0,#+48
   \   00000182   0x9001             STR      R0,[SP, #+4]
    687          
    688          			// HTTP client
    689          			if (link_num == 2) {
   \   00000184   0x2F02             CMP      R7,#+2
   \   00000186   0xD108             BNE      ??mid_HTTP_callback3_33
    690          				// client close通知
    691          				if (noti->callback != NULL) {
   \   00000188   0x6860             LDR      R0,[R4, #+4]
   \   0000018A   0x2800             CMP      R0,#+0
   \   0000018C   0xD005             BEQ      ??mid_HTTP_callback3_33
    692          					noti->callback(data, length, noti->id, MID_HTTP_STATE_CLIENT_CIPCLOSE);
   \   0000018E   0x2315             MOVS     R3,#+21
   \   00000190   0x6822             LDR      R2,[R4, #+0]
   \   00000192   0x9902             LDR      R1,[SP, #+8]
   \   00000194   0x0030             MOVS     R0,R6
   \   00000196   0x6865             LDR      R5,[R4, #+4]
   \   00000198   0x47A8             BLX      R5
    693          				}
    694          			}
    695          			// udp client
    696          			if (link_num == 1) {
   \                     ??mid_HTTP_callback3_33: (+1)
   \   0000019A   0x2F01             CMP      R7,#+1
   \   0000019C   0xD108             BNE      ??mid_HTTP_callback3_34
    697          				// udp close通知
    698          				if (noti->callback != NULL) {
   \   0000019E   0x6860             LDR      R0,[R4, #+4]
   \   000001A0   0x2800             CMP      R0,#+0
   \   000001A2   0xD005             BEQ      ??mid_HTTP_callback3_34
    699          					noti->callback(data, length, noti->id, MID_HTTP_STATE_UDP_CIPCLOSE);
   \   000001A4   0x231F             MOVS     R3,#+31
   \   000001A6   0x6822             LDR      R2,[R4, #+0]
   \   000001A8   0x9902             LDR      R1,[SP, #+8]
   \   000001AA   0x0030             MOVS     R0,R6
   \   000001AC   0x6864             LDR      R4,[R4, #+4]
   \   000001AE   0x47A0             BLX      R4
    700          				}
    701          			}
    702          			break;
   \                     ??mid_HTTP_callback3_34: (+1)
   \   000001B0   0xE1BC             B        ??mid_HTTP_callback3_1
    703          
    704          		case MID_HTTP_RECV_CIPOPEN:
    705          			link_num = data[10] - '0';
   \                     ??mid_HTTP_callback3_12: (+1)
   \   000001B2   0x7AB7             LDRB     R7,[R6, #+10]
   \   000001B4   0x3F30             SUBS     R7,R7,#+48
    706          			numeric_code = data[12] - '0';
   \   000001B6   0x7B30             LDRB     R0,[R6, #+12]
   \   000001B8   0x3830             SUBS     R0,R0,#+48
   \   000001BA   0x9001             STR      R0,[SP, #+4]
    707          			// HTTP client
    708          			if ( (link_num == 2) && (numeric_code == 0) ) {
   \   000001BC   0x2F02             CMP      R7,#+2
   \   000001BE   0xD10C             BNE      ??mid_HTTP_callback3_35
   \   000001C0   0x9801             LDR      R0,[SP, #+4]
   \   000001C2   0x2800             CMP      R0,#+0
   \   000001C4   0xD109             BNE      ??mid_HTTP_callback3_35
    709          				// client open通知
    710          				if (noti->callback != NULL) {
   \   000001C6   0x6860             LDR      R0,[R4, #+4]
   \   000001C8   0x2800             CMP      R0,#+0
   \   000001CA   0xD028             BEQ      ??mid_HTTP_callback3_36
    711          					noti->callback(data, length, noti->id, MID_HTTP_STATE_CLIENT_CIPOPEN);
   \   000001CC   0x2316             MOVS     R3,#+22
   \   000001CE   0x6822             LDR      R2,[R4, #+0]
   \   000001D0   0x9902             LDR      R1,[SP, #+8]
   \   000001D2   0x0030             MOVS     R0,R6
   \   000001D4   0x6864             LDR      R4,[R4, #+4]
   \   000001D6   0x47A0             BLX      R4
   \   000001D8   0xE021             B        ??mid_HTTP_callback3_36
    712          				}
    713          			}
    714          			// UDP
    715          			else if ( (link_num == 1) && (numeric_code == 0) ) {
   \                     ??mid_HTTP_callback3_35: (+1)
   \   000001DA   0x2F01             CMP      R7,#+1
   \   000001DC   0xD10C             BNE      ??mid_HTTP_callback3_37
   \   000001DE   0x9801             LDR      R0,[SP, #+4]
   \   000001E0   0x2800             CMP      R0,#+0
   \   000001E2   0xD109             BNE      ??mid_HTTP_callback3_37
    716          				// client open通知
    717          				if (noti->callback != NULL) {
   \   000001E4   0x6860             LDR      R0,[R4, #+4]
   \   000001E6   0x2800             CMP      R0,#+0
   \   000001E8   0xD019             BEQ      ??mid_HTTP_callback3_36
    718          					noti->callback(data, length, noti->id, MID_HTTP_STATE_UDP_CIPOPEN);
   \   000001EA   0x2320             MOVS     R3,#+32
   \   000001EC   0x6822             LDR      R2,[R4, #+0]
   \   000001EE   0x9902             LDR      R1,[SP, #+8]
   \   000001F0   0x0030             MOVS     R0,R6
   \   000001F2   0x6864             LDR      R4,[R4, #+4]
   \   000001F4   0x47A0             BLX      R4
   \   000001F6   0xE012             B        ??mid_HTTP_callback3_36
    719          				}
    720          			}
    721          			else {
    722          				mid_http_work.resp_info.get_data.err_num = (mid_http_err_code_def)numeric_code;
   \                     ??mid_HTTP_callback3_37: (+1)
   \   000001F8   0x9801             LDR      R0,[SP, #+4]
   \   000001FA   0x49AB             LDR      R1,??mid_HTTP_callback3_38
   \   000001FC   0x7008             STRB     R0,[R1, #+0]
    723          				// エラーコードを通知
    724          				if (noti->callback != NULL) {
   \   000001FE   0x6860             LDR      R0,[R4, #+4]
   \   00000200   0x2800             CMP      R0,#+0
   \   00000202   0xD005             BEQ      ??mid_HTTP_callback3_39
    725          					noti->callback(data, length, noti->id, MID_HTTP_STATE_LTE_DATA_ERROR);
   \   00000204   0x232C             MOVS     R3,#+44
   \   00000206   0x6822             LDR      R2,[R4, #+0]
   \   00000208   0x9902             LDR      R1,[SP, #+8]
   \   0000020A   0x0030             MOVS     R0,R6
   \   0000020C   0x6864             LDR      R4,[R4, #+4]
   \   0000020E   0x47A0             BLX      R4
    726          				}
    727          				// 異常値を登録する
    728          				man_error_setting(MAN_ERROR_MID_HTTP, link_num, numeric_code);
   \                     ??mid_HTTP_callback3_39: (+1)
   \   00000210   0x23B6             MOVS     R3,#+182
   \   00000212   0x009B             LSLS     R3,R3,#+2        ;; #+728
   \   00000214   0x9A01             LDR      R2,[SP, #+4]
   \   00000216   0x0039             MOVS     R1,R7
   \   00000218   0x2010             MOVS     R0,#+16
   \   0000021A   0x.... 0x....      BL       man_error_set
    729          			}
    730          			break;
   \                     ??mid_HTTP_callback3_36: (+1)
   \   0000021E   0xE185             B        ??mid_HTTP_callback3_1
    731          
    732          		case MID_HTTP_RECV_CLIENT:			// "+CLIENT:"
    733          			if ( ('0' <= data[9]) && (data[9] <= '9') && (data[10] == ',') ) {
   \                     ??mid_HTTP_callback3_10: (+1)
   \   00000220   0x7A70             LDRB     R0,[R6, #+9]
   \   00000222   0x3830             SUBS     R0,R0,#+48
   \   00000224   0x280A             CMP      R0,#+10
   \   00000226   0xD206             BCS      ??mid_HTTP_callback3_40
   \   00000228   0x7AB0             LDRB     R0,[R6, #+10]
   \   0000022A   0x282C             CMP      R0,#+44
   \   0000022C   0xD103             BNE      ??mid_HTTP_callback3_40
    734          				recv->link_num = data[9]-'0';
   \   0000022E   0x7A70             LDRB     R0,[R6, #+9]
   \   00000230   0x3830             SUBS     R0,R0,#+48
   \   00000232   0x61A8             STR      R0,[R5, #+24]
   \   00000234   0xE012             B        ??mid_HTTP_callback3_41
    735          			}
    736          			else if ( ('0' <= data[9]) && (data[9] <= '9') && ('0' <= data[10]) && (data[10] <= '9') && (data[11] == ',') ) {
   \                     ??mid_HTTP_callback3_40: (+1)
   \   00000236   0x7A70             LDRB     R0,[R6, #+9]
   \   00000238   0x3830             SUBS     R0,R0,#+48
   \   0000023A   0x280A             CMP      R0,#+10
   \   0000023C   0xD20E             BCS      ??mid_HTTP_callback3_41
   \   0000023E   0x7AB0             LDRB     R0,[R6, #+10]
   \   00000240   0x3830             SUBS     R0,R0,#+48
   \   00000242   0x280A             CMP      R0,#+10
   \   00000244   0xD20A             BCS      ??mid_HTTP_callback3_41
   \   00000246   0x7AF0             LDRB     R0,[R6, #+11]
   \   00000248   0x282C             CMP      R0,#+44
   \   0000024A   0xD107             BNE      ??mid_HTTP_callback3_41
    737          				recv->link_num = (data[9]-'0') * 10 + (data[10]-'0');
   \   0000024C   0x7A70             LDRB     R0,[R6, #+9]
   \   0000024E   0x210A             MOVS     R1,#+10
   \   00000250   0x4348             MULS     R0,R1,R0
   \   00000252   0x7AB1             LDRB     R1,[R6, #+10]
   \   00000254   0x1840             ADDS     R0,R0,R1
   \   00000256   0x....             LDR      R1,??DataTable2  ;; 0xfffffdf0
   \   00000258   0x1840             ADDS     R0,R0,R1
   \   0000025A   0x61A8             STR      R0,[R5, #+24]
    738          			}
    739          			recv->server_seq = MID_HTTP_RECV_SEQ_SEVER_CLIENT;
   \                     ??mid_HTTP_callback3_41: (+1)
   \   0000025C   0x2001             MOVS     R0,#+1
   \   0000025E   0x60A8             STR      R0,[R5, #+8]
    740          			// HTTP server使用中
    741          			mid_http_work.status |= MID_HTTP_STATUS_SERVER;
   \   00000260   0x481C             LDR      R0,??mid_HTTP_callback3_0+0xC
   \   00000262   0x6800             LDR      R0,[R0, #+0]
   \   00000264   0x2108             MOVS     R1,#+8
   \   00000266   0x4301             ORRS     R1,R1,R0
   \   00000268   0x481A             LDR      R0,??mid_HTTP_callback3_0+0xC
   \   0000026A   0x6001             STR      R1,[R0, #+0]
    742          			break;
   \   0000026C   0xE15E             B        ??mid_HTTP_callback3_1
    743          
    744          		case MID_HTTP_RECV_PBDONE:
    745          			// lte pb done通知
    746          			if (noti->callback != NULL) {
   \                     ??mid_HTTP_callback3_11: (+1)
   \   0000026E   0x6860             LDR      R0,[R4, #+4]
   \   00000270   0x2800             CMP      R0,#+0
   \   00000272   0xD005             BEQ      ??mid_HTTP_callback3_42
    747          				noti->callback(data, length, noti->id, MID_HTTP_STATE_LTE_PBDONE);
   \   00000274   0x2329             MOVS     R3,#+41
   \   00000276   0x6822             LDR      R2,[R4, #+0]
   \   00000278   0x9902             LDR      R1,[SP, #+8]
   \   0000027A   0x0030             MOVS     R0,R6
   \   0000027C   0x6864             LDR      R4,[R4, #+4]
   \   0000027E   0x47A0             BLX      R4
    748          			}
    749          			break;
   \                     ??mid_HTTP_callback3_42: (+1)
   \   00000280   0xE154             B        ??mid_HTTP_callback3_1
    750          
    751          		case MID_HTTP_RECV_NETCLOSE:
    752          			// lte netclose通知
    753          			err_num = -1;
   \                     ??mid_HTTP_callback3_14: (+1)
   \   00000282   0x2500             MOVS     R5,#+0
   \   00000284   0x43ED             MVNS     R5,R5            ;; #-1
    754          			if ( ('0' <= data[11]) && (data[11] <= '9') ) {
   \   00000286   0x7AF0             LDRB     R0,[R6, #+11]
   \   00000288   0x3830             SUBS     R0,R0,#+48
   \   0000028A   0x280A             CMP      R0,#+10
   \   0000028C   0xD201             BCS      ??mid_HTTP_callback3_43
    755          				err_num = data[11]-'0';
   \   0000028E   0x7AF5             LDRB     R5,[R6, #+11]
   \   00000290   0x3D30             SUBS     R5,R5,#+48
    756          			}
    757          			
    758          			if (noti->callback != NULL) {
   \                     ??mid_HTTP_callback3_43: (+1)
   \   00000292   0x6860             LDR      R0,[R4, #+4]
   \   00000294   0x2800             CMP      R0,#+0
   \   00000296   0xD016             BEQ      ??mid_HTTP_callback3_44
    759          				// 成功 or 既に実施済み
    760          				if ( (err_num == 0) || (err_num == 2) ) {
   \   00000298   0x2D00             CMP      R5,#+0
   \   0000029A   0xD001             BEQ      ??mid_HTTP_callback3_45
   \   0000029C   0x2D02             CMP      R5,#+2
   \   0000029E   0xD106             BNE      ??mid_HTTP_callback3_46
    761          					noti->callback(data, length, noti->id, MID_HTTP_STATE_LTE_NETCLOSE_OK);
   \                     ??mid_HTTP_callback3_45: (+1)
   \   000002A0   0x232A             MOVS     R3,#+42
   \   000002A2   0x6822             LDR      R2,[R4, #+0]
   \   000002A4   0x9902             LDR      R1,[SP, #+8]
   \   000002A6   0x0030             MOVS     R0,R6
   \   000002A8   0x6864             LDR      R4,[R4, #+4]
   \   000002AA   0x47A0             BLX      R4
   \   000002AC   0xE00B             B        ??mid_HTTP_callback3_44
    762          				}
    763          				else {
    764          					noti->callback(data, length, noti->id, MID_HTTP_STATE_LTE_NETCLOSE_NG);
   \                     ??mid_HTTP_callback3_46: (+1)
   \   000002AE   0x232B             MOVS     R3,#+43
   \   000002B0   0x6822             LDR      R2,[R4, #+0]
   \   000002B2   0x9902             LDR      R1,[SP, #+8]
   \   000002B4   0x0030             MOVS     R0,R6
   \   000002B6   0x6864             LDR      R4,[R4, #+4]
   \   000002B8   0x47A0             BLX      R4
    765          					man_error_setting(MAN_ERROR_MID_HTTP, err_num, 0);
   \   000002BA   0x....             LDR      R3,??DataTable2_1  ;; 0x2fd
   \   000002BC   0x2200             MOVS     R2,#+0
   \   000002BE   0x0029             MOVS     R1,R5
   \   000002C0   0x2010             MOVS     R0,#+16
   \   000002C2   0x.... 0x....      BL       man_error_set
    766          				}
    767          			}
    768          			break;
   \                     ??mid_HTTP_callback3_44: (+1)
   \   000002C6   0xE131             B        ??mid_HTTP_callback3_1
   \                     ??mid_HTTP_callback3_0:
   \   000002C8   0x........         DC32     mid_http_work+0x47C
   \   000002CC   0x........         DC32     mid_http_work+0x474
   \   000002D0   0x........         DC32     recv_cmd_tbl
   \   000002D4   0x........         DC32     mid_http_work
    769          
    770          		// "+CFTRANTX: DATA,512"
    771          		case MID_HTTP_RECV_CFTRANTX:
    772          
    773          			recv->count2++;
   \                     ??mid_HTTP_callback3_13: (+1)
   \   000002D8   0x....             LDR      R0,??DataTable2_2  ;; 0x13b0
   \   000002DA   0x5828             LDR      R0,[R5, R0]
   \   000002DC   0x1C40             ADDS     R0,R0,#+1
   \   000002DE   0x....             LDR      R1,??DataTable2_2  ;; 0x13b0
   \   000002E0   0x5068             STR      R0,[R5, R1]
    774          			data_len = 0;
   \   000002E2   0x2000             MOVS     R0,#+0
    775          			// 受信データ数を取り出す
    776          			if ( ('0' <= data[16]) && (data[16] <= '9') ) {
   \   000002E4   0x7C31             LDRB     R1,[R6, #+16]
   \   000002E6   0x3930             SUBS     R1,R1,#+48
   \   000002E8   0x290A             CMP      R1,#+10
   \   000002EA   0xD21C             BCS      ??mid_HTTP_callback3_47
    777          				data_len = data[16] - '0';
   \   000002EC   0x7C30             LDRB     R0,[R6, #+16]
   \   000002EE   0x3830             SUBS     R0,R0,#+48
    778          				if ( ('0' <= data[17]) && (data[17] <= '9') ) {
   \   000002F0   0x7C71             LDRB     R1,[R6, #+17]
   \   000002F2   0x3930             SUBS     R1,R1,#+48
   \   000002F4   0x290A             CMP      R1,#+10
   \   000002F6   0xD216             BCS      ??mid_HTTP_callback3_47
    779          					data_len *= 10;
   \   000002F8   0x210A             MOVS     R1,#+10
   \   000002FA   0x4348             MULS     R0,R1,R0
    780          					data_len += (data[17] - '0');
   \   000002FC   0x7C71             LDRB     R1,[R6, #+17]
   \   000002FE   0x3930             SUBS     R1,R1,#+48
   \   00000300   0x1840             ADDS     R0,R0,R1
    781          
    782          					if ( ('0' <= data[18]) && (data[18] <= '9') ) {
   \   00000302   0x7CB1             LDRB     R1,[R6, #+18]
   \   00000304   0x3930             SUBS     R1,R1,#+48
   \   00000306   0x290A             CMP      R1,#+10
   \   00000308   0xD20D             BCS      ??mid_HTTP_callback3_47
    783          						data_len *= 10;
   \   0000030A   0x210A             MOVS     R1,#+10
   \   0000030C   0x4348             MULS     R0,R1,R0
    784          						data_len += (data[18] - '0');
   \   0000030E   0x7CB1             LDRB     R1,[R6, #+18]
   \   00000310   0x3930             SUBS     R1,R1,#+48
   \   00000312   0x1840             ADDS     R0,R0,R1
    785          
    786          						if ( ('0' <= data[19]) && (data[19] <= '9') ) {
   \   00000314   0x7CF1             LDRB     R1,[R6, #+19]
   \   00000316   0x3930             SUBS     R1,R1,#+48
   \   00000318   0x290A             CMP      R1,#+10
   \   0000031A   0xD204             BCS      ??mid_HTTP_callback3_47
    787          							data_len *= 10;
   \   0000031C   0x210A             MOVS     R1,#+10
   \   0000031E   0x4348             MULS     R0,R1,R0
    788          							data_len += (data[19] - '0');
   \   00000320   0x7CF1             LDRB     R1,[R6, #+19]
   \   00000322   0x3930             SUBS     R1,R1,#+48
   \   00000324   0x1840             ADDS     R0,R0,R1
    789          						}
    790          					}
    791          				}
    792          			}
    793          
    794          			if (data_len != 0) {
   \                     ??mid_HTTP_callback3_47: (+1)
   \   00000326   0x2800             CMP      R0,#+0
   \   00000328   0xD005             BEQ      ??mid_HTTP_callback3_48
    795          				recv->ftp_seq = MID_HTTP_RECV_SEQ_FILE_RECV;
   \   0000032A   0x2101             MOVS     R1,#+1
   \   0000032C   0x60E9             STR      R1,[R5, #+12]
    796          				recv->data_len = data_len;
   \   0000032E   0x6168             STR      R0,[R5, #+20]
    797          				recv->rcv_len = 0;
   \   00000330   0x2000             MOVS     R0,#+0
   \   00000332   0x....             LDR      R1,??DataTable2_3  ;; 0x13a8
   \   00000334   0x5068             STR      R0,[R5, R1]
    798          			}
    799          
    800          #ifdef GNSS_DEBUG_MID_HTTP 
    801          			int32_t		length;
    802          			sprintf((char *)&mid_http_work.buff[0], "DATA(%d)\n", data_len);
    803          			length = strlen((char const *)&mid_http_work.buff[0]);
    804          			man_usb_data_send(&mid_http_work.buff[0], length);
    805          #endif
    806          			break;
   \                     ??mid_HTTP_callback3_48: (+1)
   \   00000336   0xE0F9             B        ??mid_HTTP_callback3_1
    807          
    808          		// "+CFTRANTX: 0"
    809          		case MID_HTTP_RECV_CFTRANTX_0:
    810          			// 受信データがあれば上位に通知
    811          			if ( recv->ftp_seq == MID_HTTP_RECV_SEQ_FILE_DATA ) {
   \                     ??mid_HTTP_callback3_16: (+1)
   \   00000338   0x68E8             LDR      R0,[R5, #+12]
   \   0000033A   0x2802             CMP      R0,#+2
   \   0000033C   0xD109             BNE      ??mid_HTTP_callback3_49
    812          				if (noti->callback != NULL) {
   \   0000033E   0x6860             LDR      R0,[R4, #+4]
   \   00000340   0x2800             CMP      R0,#+0
   \   00000342   0xD006             BEQ      ??mid_HTTP_callback3_49
    813          					noti->callback(&recv->data[0], 0, noti->id, MID_HTTP_STATE_FILE_GET_END);
   \   00000344   0x2333             MOVS     R3,#+51
   \   00000346   0x6822             LDR      R2,[R4, #+0]
   \   00000348   0x2100             MOVS     R1,#+0
   \   0000034A   0x0028             MOVS     R0,R5
   \   0000034C   0x301C             ADDS     R0,R0,#+28
   \   0000034E   0x6864             LDR      R4,[R4, #+4]
   \   00000350   0x47A0             BLX      R4
    814          				}
    815          			}
    816          
    817          			recv->ftp_seq = MID_HTTP_RECV_SEQ_FILE_NON;
   \                     ??mid_HTTP_callback3_49: (+1)
   \   00000352   0x2000             MOVS     R0,#+0
   \   00000354   0x60E8             STR      R0,[R5, #+12]
    818          
    819          #ifdef GNSS_DEBUG_MID_HTTP 
    820          			sprintf((char *)&mid_http_work.buff[0], "DATA(0)\n");
    821          			length = strlen((char const *)&mid_http_work.buff[0]);
    822          			man_usb_data_send(&mid_http_work.buff[0], length);
    823          #endif
    824          			break;
   \   00000356   0xE0E9             B        ??mid_HTTP_callback3_1
    825          
    826          		// "+CFTPGETFILE: 0"
    827          		case MID_HTTP_RECV_CFTPGETFILE:
    828          			err_num = -1;
   \                     ??mid_HTTP_callback3_15: (+1)
   \   00000358   0x2500             MOVS     R5,#+0
   \   0000035A   0x43ED             MVNS     R5,R5            ;; #-1
    829          			// エラーコードを取り出す
    830          			if ( ('0' <= data[14]) && (data[14] <= '9') ) {
   \   0000035C   0x7BB0             LDRB     R0,[R6, #+14]
   \   0000035E   0x3830             SUBS     R0,R0,#+48
   \   00000360   0x280A             CMP      R0,#+10
   \   00000362   0xD213             BCS      ??mid_HTTP_callback3_50
    831          				err_num = data[14] - '0';
   \   00000364   0x7BB5             LDRB     R5,[R6, #+14]
   \   00000366   0x3D30             SUBS     R5,R5,#+48
    832          				if ( ('0' <= data[15]) && (data[15] <= '9') ) {
   \   00000368   0x7BF0             LDRB     R0,[R6, #+15]
   \   0000036A   0x3830             SUBS     R0,R0,#+48
   \   0000036C   0x280A             CMP      R0,#+10
   \   0000036E   0xD20D             BCS      ??mid_HTTP_callback3_50
    833          					err_num *= 10;
   \   00000370   0x200A             MOVS     R0,#+10
   \   00000372   0x4345             MULS     R5,R0,R5
    834          					err_num += data[15] - '0';
   \   00000374   0x7BF0             LDRB     R0,[R6, #+15]
   \   00000376   0x3830             SUBS     R0,R0,#+48
   \   00000378   0x182D             ADDS     R5,R5,R0
    835          					if ( ('0' <= data[16]) && (data[16] <= '9') ) {
   \   0000037A   0x7C30             LDRB     R0,[R6, #+16]
   \   0000037C   0x3830             SUBS     R0,R0,#+48
   \   0000037E   0x280A             CMP      R0,#+10
   \   00000380   0xD204             BCS      ??mid_HTTP_callback3_50
    836          						err_num *= 10;
   \   00000382   0x200A             MOVS     R0,#+10
   \   00000384   0x4345             MULS     R5,R0,R5
    837          						err_num += data[16] - '0';
   \   00000386   0x7C30             LDRB     R0,[R6, #+16]
   \   00000388   0x3830             SUBS     R0,R0,#+48
   \   0000038A   0x182D             ADDS     R5,R5,R0
    838          					}
    839          				}
    840          			}
    841          			// FTP GET完了通知
    842          			if (noti->callback != NULL) {
   \                     ??mid_HTTP_callback3_50: (+1)
   \   0000038C   0x6860             LDR      R0,[R4, #+4]
   \   0000038E   0x2800             CMP      R0,#+0
   \   00000390   0xD01D             BEQ      ??mid_HTTP_callback3_51
    843          				if (err_num == 0) {
   \   00000392   0x2D00             CMP      R5,#+0
   \   00000394   0xD106             BNE      ??mid_HTTP_callback3_52
    844          					noti->callback(data, length, noti->id, MID_HTTP_STATE_FTP_GET_OK);
   \   00000396   0x2334             MOVS     R3,#+52
   \   00000398   0x6822             LDR      R2,[R4, #+0]
   \   0000039A   0x9902             LDR      R1,[SP, #+8]
   \   0000039C   0x0030             MOVS     R0,R6
   \   0000039E   0x6864             LDR      R4,[R4, #+4]
   \   000003A0   0x47A0             BLX      R4
   \   000003A2   0xE014             B        ??mid_HTTP_callback3_51
    845          				}
    846          				else if (err_num == 213) {
   \                     ??mid_HTTP_callback3_52: (+1)
   \   000003A4   0x2DD5             CMP      R5,#+213
   \   000003A6   0xD106             BNE      ??mid_HTTP_callback3_53
    847          					noti->callback(data, length, noti->id, MID_HTTP_STATE_FTP_GET_NOFILE);
   \   000003A8   0x2336             MOVS     R3,#+54
   \   000003AA   0x6822             LDR      R2,[R4, #+0]
   \   000003AC   0x9902             LDR      R1,[SP, #+8]
   \   000003AE   0x0030             MOVS     R0,R6
   \   000003B0   0x6864             LDR      R4,[R4, #+4]
   \   000003B2   0x47A0             BLX      R4
   \   000003B4   0xE00B             B        ??mid_HTTP_callback3_51
    848          				}
    849          				else {
    850          					noti->callback(data, length, noti->id, MID_HTTP_STATE_FTP_GET_NG);
   \                     ??mid_HTTP_callback3_53: (+1)
   \   000003B6   0x2335             MOVS     R3,#+53
   \   000003B8   0x6822             LDR      R2,[R4, #+0]
   \   000003BA   0x9902             LDR      R1,[SP, #+8]
   \   000003BC   0x0030             MOVS     R0,R6
   \   000003BE   0x6864             LDR      R4,[R4, #+4]
   \   000003C0   0x47A0             BLX      R4
    851          					man_error_setting(MAN_ERROR_MID_HTTP, err_num, 0);
   \   000003C2   0x....             LDR      R3,??DataTable2_4  ;; 0x353
   \   000003C4   0x2200             MOVS     R2,#+0
   \   000003C6   0x0029             MOVS     R1,R5
   \   000003C8   0x2010             MOVS     R0,#+16
   \   000003CA   0x.... 0x....      BL       man_error_set
    852          				}
    853          			}
    854          			break;
   \                     ??mid_HTTP_callback3_51: (+1)
   \   000003CE   0xE0AD             B        ??mid_HTTP_callback3_1
    855          
    856          		// "+CIPERROR: 4"
    857          		case MID_HTTP_RECV_CIPERROR:
    858          			if ( ('0' <= data[11]) && (data[11] <= '9') ) {
   \                     ??mid_HTTP_callback3_18: (+1)
   \   000003D0   0x7AF0             LDRB     R0,[R6, #+11]
   \   000003D2   0x3830             SUBS     R0,R0,#+48
   \   000003D4   0x280A             CMP      R0,#+10
   \   000003D6   0xD213             BCS      ??mid_HTTP_callback3_54
    859          				mid_http_work.resp_info.get_data.err_num = (mid_http_err_code_def)(data[11]-'0');
   \   000003D8   0x7AF0             LDRB     R0,[R6, #+11]
   \   000003DA   0x3830             SUBS     R0,R0,#+48
   \   000003DC   0x4932             LDR      R1,??mid_HTTP_callback3_38
   \   000003DE   0x7008             STRB     R0,[R1, #+0]
    860          				// エラーコードを通知
    861          				if (noti->callback != NULL) {
   \   000003E0   0x6860             LDR      R0,[R4, #+4]
   \   000003E2   0x2800             CMP      R0,#+0
   \   000003E4   0xD005             BEQ      ??mid_HTTP_callback3_55
    862          					noti->callback(data, length, noti->id, MID_HTTP_STATE_LTE_DATA_ERROR);
   \   000003E6   0x232C             MOVS     R3,#+44
   \   000003E8   0x6822             LDR      R2,[R4, #+0]
   \   000003EA   0x9902             LDR      R1,[SP, #+8]
   \   000003EC   0x0030             MOVS     R0,R6
   \   000003EE   0x6864             LDR      R4,[R4, #+4]
   \   000003F0   0x47A0             BLX      R4
    863          				}
    864          				// 異常値を登録する
    865          				man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.resp_info.get_data.err_num, 0);
   \                     ??mid_HTTP_callback3_55: (+1)
   \   000003F2   0x....             LDR      R3,??DataTable3  ;; 0x361
   \   000003F4   0x2200             MOVS     R2,#+0
   \   000003F6   0x482C             LDR      R0,??mid_HTTP_callback3_38
   \   000003F8   0x7801             LDRB     R1,[R0, #+0]
   \   000003FA   0x2010             MOVS     R0,#+16
   \   000003FC   0x.... 0x....      BL       man_error_set
    866          			}
    867          			break;
   \                     ??mid_HTTP_callback3_54: (+1)
   \   00000400   0xE094             B        ??mid_HTTP_callback3_1
   \   00000402   0xBF00             Nop      
   \                     ??mid_HTTP_callback3_30:
   \   00000404   0x000013A4         DC32     0x13a4
    868          
    869          		case MID_HTTP_RECV_SIMCARD:
    870          			// lte simcard not available 通知
    871          			if (noti->callback != NULL) {
   \                     ??mid_HTTP_callback3_17: (+1)
   \   00000408   0x6860             LDR      R0,[R4, #+4]
   \   0000040A   0x2800             CMP      R0,#+0
   \   0000040C   0xD005             BEQ      ??mid_HTTP_callback3_56
    872          				noti->callback(data, length, noti->id, MID_HTTP_STATE_LTE_SIMCARD);
   \   0000040E   0x232D             MOVS     R3,#+45
   \   00000410   0x6822             LDR      R2,[R4, #+0]
   \   00000412   0x9902             LDR      R1,[SP, #+8]
   \   00000414   0x0030             MOVS     R0,R6
   \   00000416   0x6864             LDR      R4,[R4, #+4]
   \   00000418   0x47A0             BLX      R4
    873          			}
    874          			break;
   \                     ??mid_HTTP_callback3_56: (+1)
   \   0000041A   0xE087             B        ??mid_HTTP_callback3_1
    875          
    876          		case MID_HTTP_RECV_MAX:
    877          
    878          
    879          			if ( (recv->client_seq == MID_HTTP_RECV_SEQ_CLIENT_IPD)
    880          				 || (recv->server_seq == MID_HTTP_RECV_SEQ_SEVER_IPD)
    881          				 || (recv->server_seq == MID_HTTP_RECV_SEQ_SEVER_IPD2) ) {
   \                     ??mid_HTTP_callback3_19: (+1)
   \   0000041C   0x6868             LDR      R0,[R5, #+4]
   \   0000041E   0x2802             CMP      R0,#+2
   \   00000420   0xD005             BEQ      ??mid_HTTP_callback3_57
   \   00000422   0x68A8             LDR      R0,[R5, #+8]
   \   00000424   0x2803             CMP      R0,#+3
   \   00000426   0xD002             BEQ      ??mid_HTTP_callback3_57
   \   00000428   0x68A8             LDR      R0,[R5, #+8]
   \   0000042A   0x2806             CMP      R0,#+6
   \   0000042C   0xD14D             BNE      ??mid_HTTP_callback3_58
    882          
    883          				if ( (recv->length + length) < MID_HTTP_RCV_DATA_MAX ) {
   \                     ??mid_HTTP_callback3_57: (+1)
   \   0000042E   0x....             LDR      R0,??DataTable3_1  ;; 0x13a4
   \   00000430   0x5828             LDR      R0,[R5, R0]
   \   00000432   0x9902             LDR      R1,[SP, #+8]
   \   00000434   0x1840             ADDS     R0,R0,R1
   \   00000436   0x....             LDR      R1,??DataTable3_2  ;; 0x1388
   \   00000438   0x4288             CMP      R0,R1
   \   0000043A   0xDA76             BGE      ??mid_HTTP_callback3_59
    884          					memcpy(&recv->data[recv->length], data, length);
   \   0000043C   0x9A02             LDR      R2,[SP, #+8]
   \   0000043E   0x0031             MOVS     R1,R6
   \   00000440   0x....             LDR      R0,??DataTable3_1  ;; 0x13a4
   \   00000442   0x5828             LDR      R0,[R5, R0]
   \   00000444   0x1828             ADDS     R0,R5,R0
   \   00000446   0x0006             MOVS     R6,R0
   \   00000448   0x361C             ADDS     R6,R6,#+28
   \   0000044A   0x0030             MOVS     R0,R6
   \   0000044C   0x.... 0x....      BL       __aeabi_memcpy
    885          					recv->length += length;
   \   00000450   0x....             LDR      R0,??DataTable3_1  ;; 0x13a4
   \   00000452   0x5828             LDR      R0,[R5, R0]
   \   00000454   0x9902             LDR      R1,[SP, #+8]
   \   00000456   0x1840             ADDS     R0,R0,R1
   \   00000458   0x....             LDR      R1,??DataTable3_1  ;; 0x13a4
   \   0000045A   0x5068             STR      R0,[R5, R1]
    886          					if ( recv->ipd_len <= recv->length )  {
   \   0000045C   0x....             LDR      R0,??DataTable3_1  ;; 0x13a4
   \   0000045E   0x5828             LDR      R0,[R5, R0]
   \   00000460   0x6929             LDR      R1,[R5, #+16]
   \   00000462   0x4288             CMP      R0,R1
   \   00000464   0xDB61             BLT      ??mid_HTTP_callback3_59
    887          						if (noti->callback != NULL) {
   \   00000466   0x6860             LDR      R0,[R4, #+4]
   \   00000468   0x2800             CMP      R0,#+0
   \   0000046A   0xD007             BEQ      ??mid_HTTP_callback3_60
    888          							noti->callback(&recv->data[0], recv->length, noti->id, MID_HTTP_STATE_RECEIVE_DATA);
   \   0000046C   0x2301             MOVS     R3,#+1
   \   0000046E   0x6822             LDR      R2,[R4, #+0]
   \   00000470   0x....             LDR      R0,??DataTable3_1  ;; 0x13a4
   \   00000472   0x5829             LDR      R1,[R5, R0]
   \   00000474   0x0028             MOVS     R0,R5
   \   00000476   0x301C             ADDS     R0,R0,#+28
   \   00000478   0x6864             LDR      R4,[R4, #+4]
   \   0000047A   0x47A0             BLX      R4
    889          						}
    890          						if (recv->server_seq == MID_HTTP_RECV_SEQ_SEVER_IPD2) {
   \                     ??mid_HTTP_callback3_60: (+1)
   \   0000047C   0x68A8             LDR      R0,[R5, #+8]
   \   0000047E   0x2806             CMP      R0,#+6
   \   00000480   0xD114             BNE      ??mid_HTTP_callback3_61
    891          							// HTTP server使用終了
    892          							mid_http_work.status &= ~MID_HTTP_STATUS_SERVER;
   \   00000482   0x....             LDR      R0,??DataTable3_3
   \   00000484   0x6800             LDR      R0,[R0, #+0]
   \   00000486   0x2108             MOVS     R1,#+8
   \   00000488   0x4388             BICS     R0,R0,R1
   \   0000048A   0x....             LDR      R1,??DataTable3_3
   \   0000048C   0x6008             STR      R0,[R1, #+0]
    893          							// HTTP server CLOSE中
    894          							mid_http_work.status |= MID_HTTP_STATUS_CLOSE;
   \   0000048E   0x....             LDR      R0,??DataTable3_3
   \   00000490   0x6800             LDR      R0,[R0, #+0]
   \   00000492   0x2110             MOVS     R1,#+16
   \   00000494   0x4301             ORRS     R1,R1,R0
   \   00000496   0x....             LDR      R0,??DataTable3_3
   \   00000498   0x6001             STR      R1,[R0, #+0]
    895          							recv->server_seq = MID_HTTP_RECV_SEQ_READY;
   \   0000049A   0x2000             MOVS     R0,#+0
   \   0000049C   0x60A8             STR      R0,[R5, #+8]
    896          							recv->type = type;
   \   0000049E   0x4668             MOV      R0,SP
   \   000004A0   0x7800             LDRB     R0,[R0, #+0]
   \   000004A2   0x7028             STRB     R0,[R5, #+0]
   \   000004A4   0xE041             B        ??mid_HTTP_callback3_59
   \   000004A6   0xBF00             Nop      
   \                     ??mid_HTTP_callback3_38:
   \   000004A8   0x........         DC32     mid_http_work+0x1CF0
    897          						}
    898          						else if (recv->server_seq == MID_HTTP_RECV_SEQ_SEVER_IPD) {
   \                     ??mid_HTTP_callback3_61: (+1)
   \   000004AC   0x68A8             LDR      R0,[R5, #+8]
   \   000004AE   0x2803             CMP      R0,#+3
   \   000004B0   0xD105             BNE      ??mid_HTTP_callback3_62
    899          							recv->server_seq = MID_HTTP_RECV_SEQ_SEVER_DATA;
   \   000004B2   0x2004             MOVS     R0,#+4
   \   000004B4   0x60A8             STR      R0,[R5, #+8]
    900          							recv->type = type;
   \   000004B6   0x4668             MOV      R0,SP
   \   000004B8   0x7800             LDRB     R0,[R0, #+0]
   \   000004BA   0x7028             STRB     R0,[R5, #+0]
   \   000004BC   0xE035             B        ??mid_HTTP_callback3_59
    901          						}
    902          						else {
    903          							recv->client_seq = MID_HTTP_RECV_SEQ_READY;
   \                     ??mid_HTTP_callback3_62: (+1)
   \   000004BE   0x2000             MOVS     R0,#+0
   \   000004C0   0x6068             STR      R0,[R5, #+4]
    904          							recv->type = type;
   \   000004C2   0x4668             MOV      R0,SP
   \   000004C4   0x7800             LDRB     R0,[R0, #+0]
   \   000004C6   0x7028             STRB     R0,[R5, #+0]
   \   000004C8   0xE02F             B        ??mid_HTTP_callback3_59
    905          						}
    906          					}
    907          				}
    908          			}
    909          
    910          			// FILE GET
    911          			else if (recv->ftp_seq == MID_HTTP_RECV_SEQ_FILE_RECV) {
   \                     ??mid_HTTP_callback3_58: (+1)
   \   000004CA   0x68E8             LDR      R0,[R5, #+12]
   \   000004CC   0x2801             CMP      R0,#+1
   \   000004CE   0xD12C             BNE      ??mid_HTTP_callback3_59
    912          				if ( (recv->rcv_len + length) < MID_HTTP_RCV_DATA_MAX ) {
   \   000004D0   0x....             LDR      R0,??DataTable2_3  ;; 0x13a8
   \   000004D2   0x5828             LDR      R0,[R5, R0]
   \   000004D4   0x9902             LDR      R1,[SP, #+8]
   \   000004D6   0x1840             ADDS     R0,R0,R1
   \   000004D8   0x....             LDR      R1,??DataTable3_2  ;; 0x1388
   \   000004DA   0x4288             CMP      R0,R1
   \   000004DC   0xDA25             BGE      ??mid_HTTP_callback3_59
    913          					memcpy(&recv->data[recv->rcv_len], data, length);
   \   000004DE   0x9A02             LDR      R2,[SP, #+8]
   \   000004E0   0x0031             MOVS     R1,R6
   \   000004E2   0x....             LDR      R0,??DataTable2_3  ;; 0x13a8
   \   000004E4   0x5828             LDR      R0,[R5, R0]
   \   000004E6   0x1828             ADDS     R0,R5,R0
   \   000004E8   0x0006             MOVS     R6,R0
   \   000004EA   0x361C             ADDS     R6,R6,#+28
   \   000004EC   0x0030             MOVS     R0,R6
   \   000004EE   0x.... 0x....      BL       __aeabi_memcpy
    914          					recv->rcv_len += length;
   \   000004F2   0x....             LDR      R0,??DataTable2_3  ;; 0x13a8
   \   000004F4   0x5828             LDR      R0,[R5, R0]
   \   000004F6   0x9902             LDR      R1,[SP, #+8]
   \   000004F8   0x1840             ADDS     R0,R0,R1
   \   000004FA   0x....             LDR      R1,??DataTable2_3  ;; 0x13a8
   \   000004FC   0x5068             STR      R0,[R5, R1]
    915          					// 指定サイズ分受信した
    916          					if (recv->rcv_len >= recv->data_len + 2) {//表示されるデータ数はCR+LF分を含まないため、文字数追加
   \   000004FE   0x....             LDR      R0,??DataTable2_3  ;; 0x13a8
   \   00000500   0x5828             LDR      R0,[R5, R0]
   \   00000502   0x6969             LDR      R1,[R5, #+20]
   \   00000504   0x1C89             ADDS     R1,R1,#+2
   \   00000506   0x4288             CMP      R0,R1
   \   00000508   0xDB0F             BLT      ??mid_HTTP_callback3_59
    917          						// 受信データを通知
    918          						if (noti->callback != NULL) {
   \   0000050A   0x6860             LDR      R0,[R4, #+4]
   \   0000050C   0x2800             CMP      R0,#+0
   \   0000050E   0xD007             BEQ      ??mid_HTTP_callback3_63
    919          							noti->callback(&recv->data[0], recv->rcv_len, noti->id, MID_HTTP_STATE_FILE_GET);
   \   00000510   0x2332             MOVS     R3,#+50
   \   00000512   0x6822             LDR      R2,[R4, #+0]
   \   00000514   0x....             LDR      R0,??DataTable2_3  ;; 0x13a8
   \   00000516   0x5829             LDR      R1,[R5, R0]
   \   00000518   0x0028             MOVS     R0,R5
   \   0000051A   0x301C             ADDS     R0,R0,#+28
   \   0000051C   0x6864             LDR      R4,[R4, #+4]
   \   0000051E   0x47A0             BLX      R4
    920          						}
    921          						recv->rcv_len = 0;
   \                     ??mid_HTTP_callback3_63: (+1)
   \   00000520   0x2000             MOVS     R0,#+0
   \   00000522   0x....             LDR      R1,??DataTable2_3  ;; 0x13a8
   \   00000524   0x5068             STR      R0,[R5, R1]
    922          						recv->ftp_seq = MID_HTTP_RECV_SEQ_FILE_DATA;
   \   00000526   0x2002             MOVS     R0,#+2
   \   00000528   0x60E8             STR      R0,[R5, #+12]
    923          					}
    924          				}
    925          			}
    926          
    927          			break;
   \                     ??mid_HTTP_callback3_59: (+1)
   \   0000052A   0xE7FF             B        ??mid_HTTP_callback3_1
    928          
    929          		default:
    930          			break;
    931          		}		
    932          	}
    933          	// ありえない
    934          	else {
    935          	}
    936          }
   \                     ??mid_HTTP_callback3_20: (+1)
   \                     ??mid_HTTP_callback3_1: (+1)
   \   0000052C   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return
    937          
    938          
    939          /********************************************************************/
    940          /*	static関数                                                      */
    941          /********************************************************************/
    942          
    943          
    944          /********************************************************************/
    945          /*!
    946           * \name	mid_HTTP_get_errcode
    947           * \brief	エラーコードを取得する
    948           * \param	data    : エラーコード(ASCII)の先頭
    949           *          length  : データ長
    950           *          errcode : エラーコード(num)
    951           * \return  なし
    952           * \note	必要時に、呼ばれること
    953           */
    954          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    955          static void mid_HTTP_get_errcode(uint8_t *data, int32_t length, int32_t	*errcode)
    956          {
   \                     mid_HTTP_get_errcode: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
    957          	int32_t		code=0;
   \   00000002   0x2300             MOVS     R3,#+0
    958          	int32_t		i;
    959          
    960          	for (i=0; i<length; i++) {
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0xE005             B        ??mid_HTTP_get_errcode_0
    961          		if ( (data[i] == ASCII_CR) || (data[i] == ASCII_LF) ) break;
    962          		code *= 10;
   \                     ??mid_HTTP_get_errcode_1: (+1)
   \   00000008   0x250A             MOVS     R5,#+10
   \   0000000A   0x436B             MULS     R3,R5,R3
    963          		code += (data[i] - '0');
   \   0000000C   0x5D05             LDRB     R5,[R0, R4]
   \   0000000E   0x3D30             SUBS     R5,R5,#+48
   \   00000010   0x195B             ADDS     R3,R3,R5
   \   00000012   0x1C64             ADDS     R4,R4,#+1
   \                     ??mid_HTTP_get_errcode_0: (+1)
   \   00000014   0x428C             CMP      R4,R1
   \   00000016   0xDA05             BGE      ??mid_HTTP_get_errcode_2
   \   00000018   0x5D05             LDRB     R5,[R0, R4]
   \   0000001A   0x2D0D             CMP      R5,#+13
   \   0000001C   0xD002             BEQ      ??mid_HTTP_get_errcode_3
   \   0000001E   0x5D05             LDRB     R5,[R0, R4]
   \   00000020   0x2D0A             CMP      R5,#+10
   \   00000022   0xD1F1             BNE      ??mid_HTTP_get_errcode_1
    964          	}
    965          
    966          	*errcode = code;
   \                     ??mid_HTTP_get_errcode_3: (+1)
   \                     ??mid_HTTP_get_errcode_2: (+1)
   \   00000024   0x6013             STR      R3,[R2, #+0]
    967          }
   \   00000026   0xBD30             POP      {R4,R5,PC}       ;; return
    968          
    969          
    970          /********************************************************************/
    971          /*!
    972           * \name	mid_HTTP_resp_check
    973           * \brief	コマンド応答チェック
    974           * \param	data   : 受信データ
    975           *          length : データ長
    976           *          id     : ユニークID
    977           *          status : 受信結果
    978           * \return  なし
    979           * \note	必要時に、呼ばれること
    980           */
    981          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    982          static void mid_HTTP_resp_check(uint8_t *data, int32_t length, int32_t id, int32_t status)
    983          {
   \                     mid_HTTP_resp_check: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    984          	int32_t		errcode;
    985          	int32_t		pos;
    986          	uint32_t	rcv_data;
    987          	uint32_t	rcv_data2;
    988          
    989          	if (status == CTRL_SM7500JE_STATUS_OK) {
   \   0000000A   0x2E00             CMP      R6,#+0
   \   0000000C   0xD000             BEQ      .+4
   \   0000000E   0xE095             B        ??mid_HTTP_resp_check_0
    990          		
    991          		// 応答が resp_ok1
    992          		if (memcmp(data, cmd_tbl[id-1].resp_ok1, strlen((const char *)cmd_tbl[id-1].resp_ok1)) == 0) {
   \   00000010   0x....             LDR      R0,??DataTable3_4
   \   00000012   0x2120             MOVS     R1,#+32
   \   00000014   0x4369             MULS     R1,R5,R1
   \   00000016   0x1840             ADDS     R0,R0,R1
   \   00000018   0x381C             SUBS     R0,R0,#+28
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       strlen
   \   00000020   0x0002             MOVS     R2,R0
   \   00000022   0x....             LDR      R0,??DataTable3_4
   \   00000024   0x2120             MOVS     R1,#+32
   \   00000026   0x4369             MULS     R1,R5,R1
   \   00000028   0x1840             ADDS     R0,R0,R1
   \   0000002A   0x381C             SUBS     R0,R0,#+28
   \   0000002C   0x6801             LDR      R1,[R0, #+0]
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x.... 0x....      BL       memcmp
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD103             BNE      ??mid_HTTP_resp_check_1
    993          			mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_OK;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x....             LDR      R1,??DataTable3_5
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
   \   0000003E   0xE095             B        ??mid_HTTP_resp_check_2
    994          		}
    995          		// 応答が resp_ng
    996          		else if (memcmp(data, cmd_tbl[id-1].resp_ng, strlen((const char *)cmd_tbl[id-1].resp_ng)) == 0) {
   \                     ??mid_HTTP_resp_check_1: (+1)
   \   00000040   0x....             LDR      R0,??DataTable3_4
   \   00000042   0x2120             MOVS     R1,#+32
   \   00000044   0x4369             MULS     R1,R5,R1
   \   00000046   0x1840             ADDS     R0,R0,R1
   \   00000048   0x3814             SUBS     R0,R0,#+20
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x.... 0x....      BL       strlen
   \   00000050   0x0002             MOVS     R2,R0
   \   00000052   0x....             LDR      R0,??DataTable3_4
   \   00000054   0x2120             MOVS     R1,#+32
   \   00000056   0x4369             MULS     R1,R5,R1
   \   00000058   0x1840             ADDS     R0,R0,R1
   \   0000005A   0x3814             SUBS     R0,R0,#+20
   \   0000005C   0x6801             LDR      R1,[R0, #+0]
   \   0000005E   0x0020             MOVS     R0,R4
   \   00000060   0x.... 0x....      BL       memcmp
   \   00000064   0x2800             CMP      R0,#+0
   \   00000066   0xD13C             BNE      ??mid_HTTP_resp_check_3
    997          			pos = strlen((const char *)cmd_tbl[id-1].resp_ng);
   \   00000068   0x....             LDR      R0,??DataTable3_4
   \   0000006A   0x2120             MOVS     R1,#+32
   \   0000006C   0x4369             MULS     R1,R5,R1
   \   0000006E   0x1840             ADDS     R0,R0,R1
   \   00000070   0x3814             SUBS     R0,R0,#+20
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0x.... 0x....      BL       strlen
    998          			mid_HTTP_get_errcode(&data[pos+1], length - pos, &errcode);
   \   00000078   0x466A             MOV      R2,SP
   \   0000007A   0x1A39             SUBS     R1,R7,R0
   \   0000007C   0x1820             ADDS     R0,R4,R0
   \   0000007E   0x1C40             ADDS     R0,R0,#+1
   \   00000080   0x.... 0x....      BL       mid_HTTP_get_errcode
    999          			mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \   00000084   0x2001             MOVS     R0,#+1
   \   00000086   0x....             LDR      R1,??DataTable3_5
   \   00000088   0x7008             STRB     R0,[R1, #+0]
   1000          			mid_http_work.resp_info.errcode = errcode;
   \   0000008A   0x9800             LDR      R0,[SP, #+0]
   \   0000008C   0x....             LDR      R1,??DataTable3_6
   \   0000008E   0x6008             STR      R0,[R1, #+0]
   1001          			// エラー登録
   1002          			rcv_data = (data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3];
   \   00000090   0x7820             LDRB     R0,[R4, #+0]
   \   00000092   0x0600             LSLS     R0,R0,#+24
   \   00000094   0x7861             LDRB     R1,[R4, #+1]
   \   00000096   0x0409             LSLS     R1,R1,#+16
   \   00000098   0x1840             ADDS     R0,R0,R1
   \   0000009A   0x78A1             LDRB     R1,[R4, #+2]
   \   0000009C   0x0209             LSLS     R1,R1,#+8
   \   0000009E   0x1840             ADDS     R0,R0,R1
   \   000000A0   0x78E1             LDRB     R1,[R4, #+3]
   \   000000A2   0x1841             ADDS     R1,R0,R1
   1003          			man_error_setting(MAN_ERROR_MID_HTTP, id, rcv_data);
   \   000000A4   0x....             LDR      R3,??DataTable3_7  ;; 0x3eb
   \   000000A6   0x000A             MOVS     R2,R1
   \   000000A8   0x0029             MOVS     R1,R5
   \   000000AA   0x2010             MOVS     R0,#+16
   \   000000AC   0x.... 0x....      BL       man_error_set
   1004          			rcv_data = (data[4] << 24) + (data[5] << 16) + (data[6] << 8) + data[7];
   \   000000B0   0x7920             LDRB     R0,[R4, #+4]
   \   000000B2   0x0600             LSLS     R0,R0,#+24
   \   000000B4   0x7961             LDRB     R1,[R4, #+5]
   \   000000B6   0x0409             LSLS     R1,R1,#+16
   \   000000B8   0x1840             ADDS     R0,R0,R1
   \   000000BA   0x79A1             LDRB     R1,[R4, #+6]
   \   000000BC   0x0209             LSLS     R1,R1,#+8
   \   000000BE   0x1840             ADDS     R0,R0,R1
   \   000000C0   0x79E1             LDRB     R1,[R4, #+7]
   \   000000C2   0x1841             ADDS     R1,R0,R1
   1005          			rcv_data2 = (data[8] << 24) + (data[9] << 16) + (data[10] << 8) + data[11];
   \   000000C4   0x7A20             LDRB     R0,[R4, #+8]
   \   000000C6   0x0600             LSLS     R0,R0,#+24
   \   000000C8   0x7A62             LDRB     R2,[R4, #+9]
   \   000000CA   0x0412             LSLS     R2,R2,#+16
   \   000000CC   0x1880             ADDS     R0,R0,R2
   \   000000CE   0x7AA2             LDRB     R2,[R4, #+10]
   \   000000D0   0x0212             LSLS     R2,R2,#+8
   \   000000D2   0x1880             ADDS     R0,R0,R2
   \   000000D4   0x7AE2             LDRB     R2,[R4, #+11]
   \   000000D6   0x1882             ADDS     R2,R0,R2
   1006          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data, rcv_data2);
   \   000000D8   0x....             LDR      R3,??DataTable3_8  ;; 0x3ee
   \   000000DA   0x2010             MOVS     R0,#+16
   \   000000DC   0x.... 0x....      BL       man_error_set
   \   000000E0   0xE044             B        ??mid_HTTP_resp_check_2
   1007          		}
   1008          		// その他の応答
   1009          		else {
   1010          			mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_UNKNOWN;
   \                     ??mid_HTTP_resp_check_3: (+1)
   \   000000E2   0x2004             MOVS     R0,#+4
   \   000000E4   0x....             LDR      R1,??DataTable3_5
   \   000000E6   0x7008             STRB     R0,[R1, #+0]
   1011          			// エラー登録
   1012          			rcv_data = (data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3];
   \   000000E8   0x7820             LDRB     R0,[R4, #+0]
   \   000000EA   0x0600             LSLS     R0,R0,#+24
   \   000000EC   0x7861             LDRB     R1,[R4, #+1]
   \   000000EE   0x0409             LSLS     R1,R1,#+16
   \   000000F0   0x1840             ADDS     R0,R0,R1
   \   000000F2   0x78A1             LDRB     R1,[R4, #+2]
   \   000000F4   0x0209             LSLS     R1,R1,#+8
   \   000000F6   0x1840             ADDS     R0,R0,R1
   \   000000F8   0x78E1             LDRB     R1,[R4, #+3]
   \   000000FA   0x1841             ADDS     R1,R0,R1
   1013          			man_error_setting(MAN_ERROR_MID_HTTP, status, rcv_data);
   \   000000FC   0x....             LDR      R3,??DataTable3_9  ;; 0x3f5
   \   000000FE   0x000A             MOVS     R2,R1
   \   00000100   0x0031             MOVS     R1,R6
   \   00000102   0x2010             MOVS     R0,#+16
   \   00000104   0x.... 0x....      BL       man_error_set
   1014          			rcv_data = (data[4] << 24) + (data[5] << 16) + (data[6] << 8) + data[7];
   \   00000108   0x7920             LDRB     R0,[R4, #+4]
   \   0000010A   0x0600             LSLS     R0,R0,#+24
   \   0000010C   0x7961             LDRB     R1,[R4, #+5]
   \   0000010E   0x0409             LSLS     R1,R1,#+16
   \   00000110   0x1840             ADDS     R0,R0,R1
   \   00000112   0x79A1             LDRB     R1,[R4, #+6]
   \   00000114   0x0209             LSLS     R1,R1,#+8
   \   00000116   0x1840             ADDS     R0,R0,R1
   \   00000118   0x79E1             LDRB     R1,[R4, #+7]
   \   0000011A   0x1841             ADDS     R1,R0,R1
   1015          			rcv_data2 = (data[8] << 24) + (data[9] << 16) + (data[10] << 8) + data[11];
   \   0000011C   0x7A20             LDRB     R0,[R4, #+8]
   \   0000011E   0x0600             LSLS     R0,R0,#+24
   \   00000120   0x7A62             LDRB     R2,[R4, #+9]
   \   00000122   0x0412             LSLS     R2,R2,#+16
   \   00000124   0x1880             ADDS     R0,R0,R2
   \   00000126   0x7AA2             LDRB     R2,[R4, #+10]
   \   00000128   0x0212             LSLS     R2,R2,#+8
   \   0000012A   0x1880             ADDS     R0,R0,R2
   \   0000012C   0x7AE2             LDRB     R2,[R4, #+11]
   \   0000012E   0x1882             ADDS     R2,R0,R2
   1016          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data, rcv_data2);
   \   00000130   0x23FE             MOVS     R3,#+254
   \   00000132   0x009B             LSLS     R3,R3,#+2        ;; #+1016
   \   00000134   0x2010             MOVS     R0,#+16
   \   00000136   0x.... 0x....      BL       man_error_set
   \   0000013A   0xE017             B        ??mid_HTTP_resp_check_2
   1017          		}
   1018          	}
   1019          
   1020          	// 無応答
   1021          	else if (status == CTRL_SM7500JE_STATUS_TIMEOUT) {
   \                     ??mid_HTTP_resp_check_0: (+1)
   \   0000013C   0x2000             MOVS     R0,#+0
   \   0000013E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000140   0x4286             CMP      R6,R0
   \   00000142   0xD10A             BNE      ??mid_HTTP_resp_check_4
   1022          		mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_TIMEOUT;
   \   00000144   0x2002             MOVS     R0,#+2
   \   00000146   0x....             LDR      R1,??DataTable3_5
   \   00000148   0x7008             STRB     R0,[R1, #+0]
   1023          		// エラー登録
   1024          		man_error_setting(MAN_ERROR_MID_HTTP, status, id);
   \   0000014A   0x2380             MOVS     R3,#+128
   \   0000014C   0x00DB             LSLS     R3,R3,#+3        ;; #+1024
   \   0000014E   0x002A             MOVS     R2,R5
   \   00000150   0x0031             MOVS     R1,R6
   \   00000152   0x2010             MOVS     R0,#+16
   \   00000154   0x.... 0x....      BL       man_error_set
   \   00000158   0xE008             B        ??mid_HTTP_resp_check_2
   1025          	}
   1026          
   1027          	// 異常
   1028          	else {
   1029          		mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_FAULT;
   \                     ??mid_HTTP_resp_check_4: (+1)
   \   0000015A   0x2005             MOVS     R0,#+5
   \   0000015C   0x....             LDR      R1,??DataTable3_5
   \   0000015E   0x7008             STRB     R0,[R1, #+0]
   1030          		// エラー登録
   1031          		man_error_setting(MAN_ERROR_MID_HTTP, status, id);
   \   00000160   0x....             LDR      R3,??DataTable3_10  ;; 0x407
   \   00000162   0x002A             MOVS     R2,R5
   \   00000164   0x0031             MOVS     R1,R6
   \   00000166   0x2010             MOVS     R0,#+16
   \   00000168   0x.... 0x....      BL       man_error_set
   1032          	}
   1033          
   1034          	mid_http_work.resp_info.id = id;
   \                     ??mid_HTTP_resp_check_2: (+1)
   \   0000016C   0x....             LDR      R0,??DataTable3_11
   \   0000016E   0x6005             STR      R5,[R0, #+0]
   1035          	// 受信済み
   1036          	mid_http_work.resp_info.flag = 1;
   \   00000170   0x2001             MOVS     R0,#+1
   \   00000172   0x....             LDR      R1,??DataTable3_12
   \   00000174   0x6008             STR      R0,[R1, #+0]
   1037          }
   \   00000176   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1038          
   1039          
   1040          /********************************************************************/
   1041          /*!
   1042           * \name	mid_HTTP_resp_check2
   1043           * \brief	応答チェック(２応答コマンド用)
   1044           * \param	data1   : 受信データ
   1045           *          length1 : データ長
   1046           *          data2   : 受信データ
   1047           *          length2 : データ長
   1048           *          id      : ユニークID
   1049           *          status  : 受信結果
   1050           * \return  なし
   1051           * \note	必要時に、呼ばれること
   1052           */
   1053          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
   1054          static void mid_HTTP_resp_check2(uint8_t *data1, int32_t length1, uint8_t *data2, int32_t length2, int32_t id, int32_t status)
   1055          {
   \                     mid_HTTP_resp_check2: (+1)
   \   00000000   0xB5FA             PUSH     {R1,R3-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x0017             MOVS     R7,R2
   1056          	int32_t		errcode;
   1057          	int32_t		pos;
   1058          	int32_t		ret=-1;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x43C0             MVNS     R0,R0            ;; #-1
   1059          	uint8_t		*ptr1;
   1060          	uint8_t		*ptr2;
   1061          	int32_t		loop;
   1062          	int32_t		i,j;
   1063          	int32_t		num;
   1064          	int32_t		len;
   1065          	int32_t		except=-1;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000010   0x980B             LDR      R0,[SP, #+44]
   1066          	int32_t		loop_max;
   1067          	uint32_t	rcv_data1, 	rcv_data2;
   1068          
   1069          	if (status == CTRL_SM7500JE_STATUS_OK) {
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD001             BEQ      .+6
   \   00000016   0xF000 0xFE72      BL       ??mid_HTTP_resp_check2_0
   1070          
   1071          		// 応答1が resp_ok1, 応答2が resp_ok2
   1072          		if ( memcmp(data1, cmd_tbl[id-1].resp_ok1, strlen((const char *)cmd_tbl[id-1].resp_ok1)) == 0) {
   \   0000001A   0x48E1             LDR      R0,??mid_HTTP_resp_check2_1
   \   0000001C   0x990A             LDR      R1,[SP, #+40]
   \   0000001E   0x2220             MOVS     R2,#+32
   \   00000020   0x4351             MULS     R1,R2,R1
   \   00000022   0x1840             ADDS     R0,R0,R1
   \   00000024   0x381C             SUBS     R0,R0,#+28
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x.... 0x....      BL       strlen
   \   0000002C   0x0002             MOVS     R2,R0
   \   0000002E   0x48DC             LDR      R0,??mid_HTTP_resp_check2_1
   \   00000030   0x990A             LDR      R1,[SP, #+40]
   \   00000032   0x2320             MOVS     R3,#+32
   \   00000034   0x4359             MULS     R1,R3,R1
   \   00000036   0x1840             ADDS     R0,R0,R1
   \   00000038   0x381C             SUBS     R0,R0,#+28
   \   0000003A   0x6801             LDR      R1,[R0, #+0]
   \   0000003C   0x0028             MOVS     R0,R5
   \   0000003E   0x.... 0x....      BL       memcmp
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD000             BEQ      .+4
   \   00000046   0xE097             B        ??mid_HTTP_resp_check2_2
   1073          			if (memcmp(data2, cmd_tbl[id-1].resp_ok2, strlen((const char *)cmd_tbl[id-1].resp_ok2)) == 0) {
   \   00000048   0x48D5             LDR      R0,??mid_HTTP_resp_check2_1
   \   0000004A   0x990A             LDR      R1,[SP, #+40]
   \   0000004C   0x2220             MOVS     R2,#+32
   \   0000004E   0x4351             MULS     R1,R2,R1
   \   00000050   0x1840             ADDS     R0,R0,R1
   \   00000052   0x3818             SUBS     R0,R0,#+24
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x.... 0x....      BL       strlen
   \   0000005A   0x0002             MOVS     R2,R0
   \   0000005C   0x48D0             LDR      R0,??mid_HTTP_resp_check2_1
   \   0000005E   0x990A             LDR      R1,[SP, #+40]
   \   00000060   0x2320             MOVS     R3,#+32
   \   00000062   0x4359             MULS     R1,R3,R1
   \   00000064   0x1840             ADDS     R0,R0,R1
   \   00000066   0x3818             SUBS     R0,R0,#+24
   \   00000068   0x6801             LDR      R1,[R0, #+0]
   \   0000006A   0x0038             MOVS     R0,R7
   \   0000006C   0x.... 0x....      BL       memcmp
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xD105             BNE      ??mid_HTTP_resp_check2_3
   1074          				mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_OK;
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x49CB             LDR      R1,??mid_HTTP_resp_check2_1+0x4
   \   00000078   0x7008             STRB     R0,[R1, #+0]
   1075          				ptr1 = data1;
   \   0000007A   0x002C             MOVS     R4,R5
   1076          				ptr2 = data2;
   \   0000007C   0x9701             STR      R7,[SP, #+4]
   \   0000007E   0xE2AC             B        ??mid_HTTP_resp_check2_4
   1077          			}
   1078          			else {
   1079          				if (cmd_tbl[id-1].special == 1) {
   \                     ??mid_HTTP_resp_check2_3: (+1)
   \   00000080   0x48C7             LDR      R0,??mid_HTTP_resp_check2_1
   \   00000082   0x990A             LDR      R1,[SP, #+40]
   \   00000084   0x2220             MOVS     R2,#+32
   \   00000086   0x4351             MULS     R1,R2,R1
   \   00000088   0x1840             ADDS     R0,R0,R1
   \   0000008A   0x1F00             SUBS     R0,R0,#+4
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x2801             CMP      R0,#+1
   \   00000090   0xD105             BNE      ??mid_HTTP_resp_check2_5
   1080          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_OK;
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x49C3             LDR      R1,??mid_HTTP_resp_check2_1+0x4
   \   00000096   0x7008             STRB     R0,[R1, #+0]
   1081          					ptr1 = data1;
   \   00000098   0x002C             MOVS     R4,R5
   1082          					ptr2 = data2;
   \   0000009A   0x9701             STR      R7,[SP, #+4]
   \   0000009C   0xE29D             B        ??mid_HTTP_resp_check2_4
   1083          				}
   1084          				else {
   1085          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_5: (+1)
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0x49C0             LDR      R1,??mid_HTTP_resp_check2_1+0x4
   \   000000A2   0x7008             STRB     R0,[R1, #+0]
   1086          					// エラー登録
   1087          					rcv_data1 = (data1[0] << 24) + (data1[1] << 16) + (data1[2] << 8) + data1[3];
   \   000000A4   0x7828             LDRB     R0,[R5, #+0]
   \   000000A6   0x0600             LSLS     R0,R0,#+24
   \   000000A8   0x7869             LDRB     R1,[R5, #+1]
   \   000000AA   0x0409             LSLS     R1,R1,#+16
   \   000000AC   0x1840             ADDS     R0,R0,R1
   \   000000AE   0x78A9             LDRB     R1,[R5, #+2]
   \   000000B0   0x0209             LSLS     R1,R1,#+8
   \   000000B2   0x1840             ADDS     R0,R0,R1
   \   000000B4   0x78E9             LDRB     R1,[R5, #+3]
   \   000000B6   0x1841             ADDS     R1,R0,R1
   1088          					rcv_data2 = (data2[0] << 24) + (data2[1] << 16) + (data2[2] << 8) + data2[3];
   \   000000B8   0x7838             LDRB     R0,[R7, #+0]
   \   000000BA   0x0600             LSLS     R0,R0,#+24
   \   000000BC   0x787A             LDRB     R2,[R7, #+1]
   \   000000BE   0x0412             LSLS     R2,R2,#+16
   \   000000C0   0x1880             ADDS     R0,R0,R2
   \   000000C2   0x78BA             LDRB     R2,[R7, #+2]
   \   000000C4   0x0212             LSLS     R2,R2,#+8
   \   000000C6   0x1880             ADDS     R0,R0,R2
   \   000000C8   0x78FA             LDRB     R2,[R7, #+3]
   \   000000CA   0x1882             ADDS     R2,R0,R2
   1089          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   000000CC   0x4BB6             LDR      R3,??mid_HTTP_resp_check2_1+0x8  ;; 0x441
   \   000000CE   0x2010             MOVS     R0,#+16
   \   000000D0   0x.... 0x....      BL       man_error_set
   1090          
   1091          					rcv_data1 = (data1[4] << 24) + (data1[5] << 16) + (data1[6] << 8) + data1[7];
   \   000000D4   0x7928             LDRB     R0,[R5, #+4]
   \   000000D6   0x0600             LSLS     R0,R0,#+24
   \   000000D8   0x7969             LDRB     R1,[R5, #+5]
   \   000000DA   0x0409             LSLS     R1,R1,#+16
   \   000000DC   0x1840             ADDS     R0,R0,R1
   \   000000DE   0x79A9             LDRB     R1,[R5, #+6]
   \   000000E0   0x0209             LSLS     R1,R1,#+8
   \   000000E2   0x1840             ADDS     R0,R0,R1
   \   000000E4   0x79E9             LDRB     R1,[R5, #+7]
   \   000000E6   0x1841             ADDS     R1,R0,R1
   1092          					rcv_data2 = (data2[4] << 24) + (data2[5] << 16) + (data2[6] << 8) + data2[7];
   \   000000E8   0x7938             LDRB     R0,[R7, #+4]
   \   000000EA   0x0600             LSLS     R0,R0,#+24
   \   000000EC   0x797A             LDRB     R2,[R7, #+5]
   \   000000EE   0x0412             LSLS     R2,R2,#+16
   \   000000F0   0x1880             ADDS     R0,R0,R2
   \   000000F2   0x79BA             LDRB     R2,[R7, #+6]
   \   000000F4   0x0212             LSLS     R2,R2,#+8
   \   000000F6   0x1880             ADDS     R0,R0,R2
   \   000000F8   0x79FA             LDRB     R2,[R7, #+7]
   \   000000FA   0x1882             ADDS     R2,R0,R2
   1093          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   000000FC   0x4BAB             LDR      R3,??mid_HTTP_resp_check2_1+0xC  ;; 0x445
   \   000000FE   0x2010             MOVS     R0,#+16
   \   00000100   0x.... 0x....      BL       man_error_set
   1094          
   1095          					rcv_data1 = (data1[8] << 24) + (data1[9] << 16) + (data1[10] << 8) + data1[11];
   \   00000104   0x7A28             LDRB     R0,[R5, #+8]
   \   00000106   0x0600             LSLS     R0,R0,#+24
   \   00000108   0x7A69             LDRB     R1,[R5, #+9]
   \   0000010A   0x0409             LSLS     R1,R1,#+16
   \   0000010C   0x1840             ADDS     R0,R0,R1
   \   0000010E   0x7AA9             LDRB     R1,[R5, #+10]
   \   00000110   0x0209             LSLS     R1,R1,#+8
   \   00000112   0x1840             ADDS     R0,R0,R1
   \   00000114   0x7AE9             LDRB     R1,[R5, #+11]
   \   00000116   0x1841             ADDS     R1,R0,R1
   1096          					rcv_data2 = (data2[8] << 24) + (data2[9] << 16) + (data2[10] << 8) + data2[11];
   \   00000118   0x7A38             LDRB     R0,[R7, #+8]
   \   0000011A   0x0600             LSLS     R0,R0,#+24
   \   0000011C   0x7A7A             LDRB     R2,[R7, #+9]
   \   0000011E   0x0412             LSLS     R2,R2,#+16
   \   00000120   0x1880             ADDS     R0,R0,R2
   \   00000122   0x7ABA             LDRB     R2,[R7, #+10]
   \   00000124   0x0212             LSLS     R2,R2,#+8
   \   00000126   0x1880             ADDS     R0,R0,R2
   \   00000128   0x7AFA             LDRB     R2,[R7, #+11]
   \   0000012A   0x1882             ADDS     R2,R0,R2
   1097          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   0000012C   0x4BA0             LDR      R3,??mid_HTTP_resp_check2_1+0x10  ;; 0x449
   \   0000012E   0x2010             MOVS     R0,#+16
   \   00000130   0x.... 0x....      BL       man_error_set
   1098          
   1099          					// 最後のエラーはログに残す
   1100          					if( (length1+length1 ) < 100) {
   \   00000134   0x9803             LDR      R0,[SP, #+12]
   \   00000136   0x9903             LDR      R1,[SP, #+12]
   \   00000138   0x1840             ADDS     R0,R0,R1
   \   0000013A   0x2864             CMP      R0,#+100
   \   0000013C   0xDB00             BLT      .+4
   \   0000013E   0xE24C             B        ??mid_HTTP_resp_check2_4
   1101          						memset(&mid_http_work.err_buff[0], 0, 100);
   \   00000140   0x2164             MOVS     R1,#+100
   \   00000142   0x2200             MOVS     R2,#+0
   \   00000144   0x489B             LDR      R0,??mid_HTTP_resp_check2_1+0x14
   \   00000146   0x9000             STR      R0,[SP, #+0]
   \   00000148   0x9800             LDR      R0,[SP, #+0]
   \   0000014A   0x.... 0x....      BL       __aeabi_memset
   \   0000014E   0x9800             LDR      R0,[SP, #+0]
   1102          						memcpy(&mid_http_work.err_buff[0], &data1[0], length1);
   \   00000150   0x9A03             LDR      R2,[SP, #+12]
   \   00000152   0x0029             MOVS     R1,R5
   \   00000154   0x4897             LDR      R0,??mid_HTTP_resp_check2_1+0x14
   \   00000156   0x9000             STR      R0,[SP, #+0]
   \   00000158   0x9800             LDR      R0,[SP, #+0]
   \   0000015A   0x.... 0x....      BL       __aeabi_memcpy
   \   0000015E   0x9800             LDR      R0,[SP, #+0]
   1103          						memcpy(&mid_http_work.err_buff[length1], &data2[0], length2);
   \   00000160   0x9A04             LDR      R2,[SP, #+16]
   \   00000162   0x0039             MOVS     R1,R7
   \   00000164   0x48E3             LDR      R0,??mid_HTTP_resp_check2_6
   \   00000166   0x9B03             LDR      R3,[SP, #+12]
   \   00000168   0x18C0             ADDS     R0,R0,R3
   \   0000016A   0x23EA             MOVS     R3,#+234
   \   0000016C   0x015B             LSLS     R3,R3,#+5        ;; #+7488
   \   0000016E   0x18C7             ADDS     R7,R0,R3
   \   00000170   0x0038             MOVS     R0,R7
   \   00000172   0x.... 0x....      BL       __aeabi_memcpy
   1104          					}
   1105          
   1106          				}
   1107          			}
   1108          		}
   \   00000176   0xE230             B        ??mid_HTTP_resp_check2_4
   1109          
   1110          		// 応答1が resp_ok2, 応答2が resp_ok1
   1111          		else if (memcmp(data1, cmd_tbl[id-1].resp_ok2, strlen((const char *)cmd_tbl[id-1].resp_ok2)) == 0) {
   \                     ??mid_HTTP_resp_check2_2: (+1)
   \   00000178   0x4889             LDR      R0,??mid_HTTP_resp_check2_1
   \   0000017A   0x990A             LDR      R1,[SP, #+40]
   \   0000017C   0x2220             MOVS     R2,#+32
   \   0000017E   0x4351             MULS     R1,R2,R1
   \   00000180   0x1840             ADDS     R0,R0,R1
   \   00000182   0x3818             SUBS     R0,R0,#+24
   \   00000184   0x6800             LDR      R0,[R0, #+0]
   \   00000186   0x.... 0x....      BL       strlen
   \   0000018A   0x0002             MOVS     R2,R0
   \   0000018C   0x4884             LDR      R0,??mid_HTTP_resp_check2_1
   \   0000018E   0x990A             LDR      R1,[SP, #+40]
   \   00000190   0x2320             MOVS     R3,#+32
   \   00000192   0x4359             MULS     R1,R3,R1
   \   00000194   0x1840             ADDS     R0,R0,R1
   \   00000196   0x3818             SUBS     R0,R0,#+24
   \   00000198   0x6801             LDR      R1,[R0, #+0]
   \   0000019A   0x0028             MOVS     R0,R5
   \   0000019C   0x.... 0x....      BL       memcmp
   \   000001A0   0x2800             CMP      R0,#+0
   \   000001A2   0xD000             BEQ      .+4
   \   000001A4   0xE088             B        ??mid_HTTP_resp_check2_7
   1112          			if (memcmp(data2, cmd_tbl[id-1].resp_ok1, strlen((const char *)cmd_tbl[id-1].resp_ok1)) == 0) {
   \   000001A6   0x487E             LDR      R0,??mid_HTTP_resp_check2_1
   \   000001A8   0x990A             LDR      R1,[SP, #+40]
   \   000001AA   0x2220             MOVS     R2,#+32
   \   000001AC   0x4351             MULS     R1,R2,R1
   \   000001AE   0x1840             ADDS     R0,R0,R1
   \   000001B0   0x381C             SUBS     R0,R0,#+28
   \   000001B2   0x6800             LDR      R0,[R0, #+0]
   \   000001B4   0x.... 0x....      BL       strlen
   \   000001B8   0x0002             MOVS     R2,R0
   \   000001BA   0x4879             LDR      R0,??mid_HTTP_resp_check2_1
   \   000001BC   0x990A             LDR      R1,[SP, #+40]
   \   000001BE   0x2320             MOVS     R3,#+32
   \   000001C0   0x4359             MULS     R1,R3,R1
   \   000001C2   0x1840             ADDS     R0,R0,R1
   \   000001C4   0x381C             SUBS     R0,R0,#+28
   \   000001C6   0x6801             LDR      R1,[R0, #+0]
   \   000001C8   0x0038             MOVS     R0,R7
   \   000001CA   0x.... 0x....      BL       memcmp
   \   000001CE   0x2800             CMP      R0,#+0
   \   000001D0   0xD105             BNE      ??mid_HTTP_resp_check2_8
   1113          				mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_OK;
   \   000001D2   0x2000             MOVS     R0,#+0
   \   000001D4   0x4973             LDR      R1,??mid_HTTP_resp_check2_1+0x4
   \   000001D6   0x7008             STRB     R0,[R1, #+0]
   1114          				ptr1 = data2;
   \   000001D8   0x003C             MOVS     R4,R7
   1115          				ptr2 = data1;
   \   000001DA   0x9501             STR      R5,[SP, #+4]
   \   000001DC   0xE1FD             B        ??mid_HTTP_resp_check2_4
   1116          			}
   1117          			else {
   1118          				mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_8: (+1)
   \   000001DE   0x2001             MOVS     R0,#+1
   \   000001E0   0x4970             LDR      R1,??mid_HTTP_resp_check2_1+0x4
   \   000001E2   0x7008             STRB     R0,[R1, #+0]
   1119          				// エラー登録
   1120          				rcv_data1 = (data1[0] << 24) + (data1[1] << 16) + (data1[2] << 8) + data1[3];
   \   000001E4   0x7828             LDRB     R0,[R5, #+0]
   \   000001E6   0x0600             LSLS     R0,R0,#+24
   \   000001E8   0x7869             LDRB     R1,[R5, #+1]
   \   000001EA   0x0409             LSLS     R1,R1,#+16
   \   000001EC   0x1840             ADDS     R0,R0,R1
   \   000001EE   0x78A9             LDRB     R1,[R5, #+2]
   \   000001F0   0x0209             LSLS     R1,R1,#+8
   \   000001F2   0x1840             ADDS     R0,R0,R1
   \   000001F4   0x78E9             LDRB     R1,[R5, #+3]
   \   000001F6   0x1841             ADDS     R1,R0,R1
   1121          				rcv_data2 = (data2[0] << 24) + (data2[1] << 16) + (data2[2] << 8) + data2[3];
   \   000001F8   0x7838             LDRB     R0,[R7, #+0]
   \   000001FA   0x0600             LSLS     R0,R0,#+24
   \   000001FC   0x787A             LDRB     R2,[R7, #+1]
   \   000001FE   0x0412             LSLS     R2,R2,#+16
   \   00000200   0x1880             ADDS     R0,R0,R2
   \   00000202   0x78BA             LDRB     R2,[R7, #+2]
   \   00000204   0x0212             LSLS     R2,R2,#+8
   \   00000206   0x1880             ADDS     R0,R0,R2
   \   00000208   0x78FA             LDRB     R2,[R7, #+3]
   \   0000020A   0x1882             ADDS     R2,R0,R2
   1122          				man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   0000020C   0x4BBA             LDR      R3,??mid_HTTP_resp_check2_6+0x4  ;; 0x462
   \   0000020E   0x2010             MOVS     R0,#+16
   \   00000210   0x.... 0x....      BL       man_error_set
   1123          
   1124          				rcv_data1 = (data1[4] << 24) + (data1[5] << 16) + (data1[6] << 8) + data1[7];
   \   00000214   0x7928             LDRB     R0,[R5, #+4]
   \   00000216   0x0600             LSLS     R0,R0,#+24
   \   00000218   0x7969             LDRB     R1,[R5, #+5]
   \   0000021A   0x0409             LSLS     R1,R1,#+16
   \   0000021C   0x1840             ADDS     R0,R0,R1
   \   0000021E   0x79A9             LDRB     R1,[R5, #+6]
   \   00000220   0x0209             LSLS     R1,R1,#+8
   \   00000222   0x1840             ADDS     R0,R0,R1
   \   00000224   0x79E9             LDRB     R1,[R5, #+7]
   \   00000226   0x1841             ADDS     R1,R0,R1
   1125          				rcv_data2 = (data2[4] << 24) + (data2[5] << 16) + (data2[6] << 8) + data2[7];
   \   00000228   0x7938             LDRB     R0,[R7, #+4]
   \   0000022A   0x0600             LSLS     R0,R0,#+24
   \   0000022C   0x797A             LDRB     R2,[R7, #+5]
   \   0000022E   0x0412             LSLS     R2,R2,#+16
   \   00000230   0x1880             ADDS     R0,R0,R2
   \   00000232   0x79BA             LDRB     R2,[R7, #+6]
   \   00000234   0x0212             LSLS     R2,R2,#+8
   \   00000236   0x1880             ADDS     R0,R0,R2
   \   00000238   0x79FA             LDRB     R2,[R7, #+7]
   \   0000023A   0x1882             ADDS     R2,R0,R2
   1126          				man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   0000023C   0x4BAF             LDR      R3,??mid_HTTP_resp_check2_6+0x8  ;; 0x466
   \   0000023E   0x2010             MOVS     R0,#+16
   \   00000240   0x.... 0x....      BL       man_error_set
   1127          
   1128          				rcv_data1 = (data1[8] << 24) + (data1[9] << 16) + (data1[10] << 8) + data1[11];
   \   00000244   0x7A28             LDRB     R0,[R5, #+8]
   \   00000246   0x0600             LSLS     R0,R0,#+24
   \   00000248   0x7A69             LDRB     R1,[R5, #+9]
   \   0000024A   0x0409             LSLS     R1,R1,#+16
   \   0000024C   0x1840             ADDS     R0,R0,R1
   \   0000024E   0x7AA9             LDRB     R1,[R5, #+10]
   \   00000250   0x0209             LSLS     R1,R1,#+8
   \   00000252   0x1840             ADDS     R0,R0,R1
   \   00000254   0x7AE9             LDRB     R1,[R5, #+11]
   \   00000256   0x1841             ADDS     R1,R0,R1
   1129          				rcv_data2 = (data2[8] << 24) + (data2[9] << 16) + (data2[10] << 8) + data2[11];
   \   00000258   0x7A38             LDRB     R0,[R7, #+8]
   \   0000025A   0x0600             LSLS     R0,R0,#+24
   \   0000025C   0x7A7A             LDRB     R2,[R7, #+9]
   \   0000025E   0x0412             LSLS     R2,R2,#+16
   \   00000260   0x1880             ADDS     R0,R0,R2
   \   00000262   0x7ABA             LDRB     R2,[R7, #+10]
   \   00000264   0x0212             LSLS     R2,R2,#+8
   \   00000266   0x1880             ADDS     R0,R0,R2
   \   00000268   0x7AFA             LDRB     R2,[R7, #+11]
   \   0000026A   0x1882             ADDS     R2,R0,R2
   1130          				man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   0000026C   0x4BA4             LDR      R3,??mid_HTTP_resp_check2_6+0xC  ;; 0x46a
   \   0000026E   0x2010             MOVS     R0,#+16
   \   00000270   0x.... 0x....      BL       man_error_set
   1131          
   1132          				// 最後のエラーはログに残す
   1133          				if( (length1+length1 ) < 100) {
   \   00000274   0x9803             LDR      R0,[SP, #+12]
   \   00000276   0x9903             LDR      R1,[SP, #+12]
   \   00000278   0x1840             ADDS     R0,R0,R1
   \   0000027A   0x2864             CMP      R0,#+100
   \   0000027C   0xDB00             BLT      .+4
   \   0000027E   0xE1AC             B        ??mid_HTTP_resp_check2_4
   1134          					memset(&mid_http_work.err_buff[0], 0, 100);
   \   00000280   0x2164             MOVS     R1,#+100
   \   00000282   0x2200             MOVS     R2,#+0
   \   00000284   0x484B             LDR      R0,??mid_HTTP_resp_check2_1+0x14
   \   00000286   0x9000             STR      R0,[SP, #+0]
   \   00000288   0x9800             LDR      R0,[SP, #+0]
   \   0000028A   0x.... 0x....      BL       __aeabi_memset
   \   0000028E   0x9800             LDR      R0,[SP, #+0]
   1135          					memcpy(&mid_http_work.err_buff[0], &data1[0], length1);
   \   00000290   0x9A03             LDR      R2,[SP, #+12]
   \   00000292   0x0029             MOVS     R1,R5
   \   00000294   0x4847             LDR      R0,??mid_HTTP_resp_check2_1+0x14
   \   00000296   0x9000             STR      R0,[SP, #+0]
   \   00000298   0x9800             LDR      R0,[SP, #+0]
   \   0000029A   0x.... 0x....      BL       __aeabi_memcpy
   \   0000029E   0x9800             LDR      R0,[SP, #+0]
   1136          					memcpy(&mid_http_work.err_buff[length1], &data2[0], length2);
   \   000002A0   0x9A04             LDR      R2,[SP, #+16]
   \   000002A2   0x0039             MOVS     R1,R7
   \   000002A4   0x4893             LDR      R0,??mid_HTTP_resp_check2_6
   \   000002A6   0x9B03             LDR      R3,[SP, #+12]
   \   000002A8   0x18C0             ADDS     R0,R0,R3
   \   000002AA   0x23EA             MOVS     R3,#+234
   \   000002AC   0x015B             LSLS     R3,R3,#+5        ;; #+7488
   \   000002AE   0x18C7             ADDS     R7,R0,R3
   \   000002B0   0x0038             MOVS     R0,R7
   \   000002B2   0x.... 0x....      BL       __aeabi_memcpy
   1137          				}
   1138          
   1139          			}
   1140          		}
   \   000002B6   0xE190             B        ??mid_HTTP_resp_check2_4
   1141          
   1142          		// 応答1が resp_ng
   1143          		else if (memcmp(data1, cmd_tbl[id-1].resp_ng, strlen((const char *)cmd_tbl[id-1].resp_ng)) == 0) {
   \                     ??mid_HTTP_resp_check2_7: (+1)
   \   000002B8   0x4839             LDR      R0,??mid_HTTP_resp_check2_1
   \   000002BA   0x990A             LDR      R1,[SP, #+40]
   \   000002BC   0x2220             MOVS     R2,#+32
   \   000002BE   0x4351             MULS     R1,R2,R1
   \   000002C0   0x1840             ADDS     R0,R0,R1
   \   000002C2   0x3814             SUBS     R0,R0,#+20
   \   000002C4   0x6800             LDR      R0,[R0, #+0]
   \   000002C6   0x.... 0x....      BL       strlen
   \   000002CA   0x0002             MOVS     R2,R0
   \   000002CC   0x4834             LDR      R0,??mid_HTTP_resp_check2_1
   \   000002CE   0x990A             LDR      R1,[SP, #+40]
   \   000002D0   0x2320             MOVS     R3,#+32
   \   000002D2   0x4359             MULS     R1,R3,R1
   \   000002D4   0x1840             ADDS     R0,R0,R1
   \   000002D6   0x3814             SUBS     R0,R0,#+20
   \   000002D8   0x6801             LDR      R1,[R0, #+0]
   \   000002DA   0x0028             MOVS     R0,R5
   \   000002DC   0x.... 0x....      BL       memcmp
   \   000002E0   0x2800             CMP      R0,#+0
   \   000002E2   0xD17A             BNE      ??mid_HTTP_resp_check2_9
   1144          			mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \   000002E4   0x2001             MOVS     R0,#+1
   \   000002E6   0x492F             LDR      R1,??mid_HTTP_resp_check2_1+0x4
   \   000002E8   0x7008             STRB     R0,[R1, #+0]
   1145          			// エラー登録
   1146          			rcv_data1 = (data1[0] << 24) + (data1[1] << 16) + (data1[2] << 8) + data1[3];
   \   000002EA   0x7828             LDRB     R0,[R5, #+0]
   \   000002EC   0x0600             LSLS     R0,R0,#+24
   \   000002EE   0x7869             LDRB     R1,[R5, #+1]
   \   000002F0   0x0409             LSLS     R1,R1,#+16
   \   000002F2   0x1840             ADDS     R0,R0,R1
   \   000002F4   0x78A9             LDRB     R1,[R5, #+2]
   \   000002F6   0x0209             LSLS     R1,R1,#+8
   \   000002F8   0x1840             ADDS     R0,R0,R1
   \   000002FA   0x78E9             LDRB     R1,[R5, #+3]
   \   000002FC   0x1841             ADDS     R1,R0,R1
   1147          			rcv_data2 = (data2[0] << 24) + (data2[1] << 16) + (data2[2] << 8) + data2[3];
   \   000002FE   0x7838             LDRB     R0,[R7, #+0]
   \   00000300   0x0600             LSLS     R0,R0,#+24
   \   00000302   0x787A             LDRB     R2,[R7, #+1]
   \   00000304   0x0412             LSLS     R2,R2,#+16
   \   00000306   0x1880             ADDS     R0,R0,R2
   \   00000308   0x78BA             LDRB     R2,[R7, #+2]
   \   0000030A   0x0212             LSLS     R2,R2,#+8
   \   0000030C   0x1880             ADDS     R0,R0,R2
   \   0000030E   0x78FA             LDRB     R2,[R7, #+3]
   \   00000310   0x1882             ADDS     R2,R0,R2
   1148          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000312   0x4BD2             LDR      R3,??mid_HTTP_resp_check2_10  ;; 0x47c
   \   00000314   0x2010             MOVS     R0,#+16
   \   00000316   0x.... 0x....      BL       man_error_set
   1149          
   1150          			rcv_data1 = (data1[4] << 24) + (data1[5] << 16) + (data1[6] << 8) + data1[7];
   \   0000031A   0x7928             LDRB     R0,[R5, #+4]
   \   0000031C   0x0600             LSLS     R0,R0,#+24
   \   0000031E   0x7969             LDRB     R1,[R5, #+5]
   \   00000320   0x0409             LSLS     R1,R1,#+16
   \   00000322   0x1840             ADDS     R0,R0,R1
   \   00000324   0x79A9             LDRB     R1,[R5, #+6]
   \   00000326   0x0209             LSLS     R1,R1,#+8
   \   00000328   0x1840             ADDS     R0,R0,R1
   \   0000032A   0x79E9             LDRB     R1,[R5, #+7]
   \   0000032C   0x1841             ADDS     R1,R0,R1
   1151          			rcv_data2 = (data2[4] << 24) + (data2[5] << 16) + (data2[6] << 8) + data2[7];
   \   0000032E   0x7938             LDRB     R0,[R7, #+4]
   \   00000330   0x0600             LSLS     R0,R0,#+24
   \   00000332   0x797A             LDRB     R2,[R7, #+5]
   \   00000334   0x0412             LSLS     R2,R2,#+16
   \   00000336   0x1880             ADDS     R0,R0,R2
   \   00000338   0x79BA             LDRB     R2,[R7, #+6]
   \   0000033A   0x0212             LSLS     R2,R2,#+8
   \   0000033C   0x1880             ADDS     R0,R0,R2
   \   0000033E   0x79FA             LDRB     R2,[R7, #+7]
   \   00000340   0x1882             ADDS     R2,R0,R2
   1152          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000342   0x2390             MOVS     R3,#+144
   \   00000344   0x00DB             LSLS     R3,R3,#+3        ;; #+1152
   \   00000346   0x2010             MOVS     R0,#+16
   \   00000348   0x.... 0x....      BL       man_error_set
   1153          
   1154          			rcv_data1 = (data1[8] << 24) + (data1[9] << 16) + (data1[10] << 8) + data1[11];
   \   0000034C   0x7A28             LDRB     R0,[R5, #+8]
   \   0000034E   0x0600             LSLS     R0,R0,#+24
   \   00000350   0x7A69             LDRB     R1,[R5, #+9]
   \   00000352   0x0409             LSLS     R1,R1,#+16
   \   00000354   0x1840             ADDS     R0,R0,R1
   \   00000356   0x7AA9             LDRB     R1,[R5, #+10]
   \   00000358   0x0209             LSLS     R1,R1,#+8
   \   0000035A   0x1840             ADDS     R0,R0,R1
   \   0000035C   0x7AE9             LDRB     R1,[R5, #+11]
   \   0000035E   0x1841             ADDS     R1,R0,R1
   1155          			rcv_data2 = (data2[8] << 24) + (data2[9] << 16) + (data2[10] << 8) + data2[11];
   \   00000360   0x7A38             LDRB     R0,[R7, #+8]
   \   00000362   0x0600             LSLS     R0,R0,#+24
   \   00000364   0x7A7A             LDRB     R2,[R7, #+9]
   \   00000366   0x0412             LSLS     R2,R2,#+16
   \   00000368   0x1880             ADDS     R0,R0,R2
   \   0000036A   0x7ABA             LDRB     R2,[R7, #+10]
   \   0000036C   0x0212             LSLS     R2,R2,#+8
   \   0000036E   0x1880             ADDS     R0,R0,R2
   \   00000370   0x7AFA             LDRB     R2,[R7, #+11]
   \   00000372   0x1882             ADDS     R2,R0,R2
   1156          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000374   0x4BBA             LDR      R3,??mid_HTTP_resp_check2_10+0x4  ;; 0x484
   \   00000376   0x2010             MOVS     R0,#+16
   \   00000378   0x.... 0x....      BL       man_error_set
   1157          
   1158          			// 最後のエラーはログに残す
   1159          			if( (length1+length1 ) < 100) {
   \   0000037C   0x9803             LDR      R0,[SP, #+12]
   \   0000037E   0x9903             LDR      R1,[SP, #+12]
   \   00000380   0x1840             ADDS     R0,R0,R1
   \   00000382   0x2864             CMP      R0,#+100
   \   00000384   0xDB00             BLT      .+4
   \   00000386   0xE128             B        ??mid_HTTP_resp_check2_4
   1160          				memset(&mid_http_work.err_buff[0], 0, 100);
   \   00000388   0x2164             MOVS     R1,#+100
   \   0000038A   0x2200             MOVS     R2,#+0
   \   0000038C   0x4809             LDR      R0,??mid_HTTP_resp_check2_1+0x14
   \   0000038E   0x9000             STR      R0,[SP, #+0]
   \   00000390   0x9800             LDR      R0,[SP, #+0]
   \   00000392   0x.... 0x....      BL       __aeabi_memset
   \   00000396   0x9800             LDR      R0,[SP, #+0]
   1161          				memcpy(&mid_http_work.err_buff[0], &data1[0], length1);
   \   00000398   0x9A03             LDR      R2,[SP, #+12]
   \   0000039A   0x0029             MOVS     R1,R5
   \   0000039C   0x4805             LDR      R0,??mid_HTTP_resp_check2_1+0x14
   \   0000039E   0xE00B             B.N      ??mid_HTTP_resp_check2_11
   \                     ??mid_HTTP_resp_check2_1:
   \   000003A0   0x........         DC32     cmd_tbl
   \   000003A4   0x........         DC32     mid_http_work+0x1CB0
   \   000003A8   0x00000441         DC32     0x441
   \   000003AC   0x00000445         DC32     0x445
   \   000003B0   0x00000449         DC32     0x449
   \   000003B4   0x........         DC32     mid_http_work+0x1D40
   \                     ??mid_HTTP_resp_check2_11: (+1)
   \   000003B8   0x9000             STR      R0,[SP, #+0]
   \   000003BA   0x9800             LDR      R0,[SP, #+0]
   \   000003BC   0x.... 0x....      BL       __aeabi_memcpy
   \   000003C0   0x9800             LDR      R0,[SP, #+0]
   1162          				memcpy(&mid_http_work.err_buff[length1], &data2[0], length2);
   \   000003C2   0x9A04             LDR      R2,[SP, #+16]
   \   000003C4   0x0039             MOVS     R1,R7
   \   000003C6   0x484B             LDR      R0,??mid_HTTP_resp_check2_6
   \   000003C8   0x9B03             LDR      R3,[SP, #+12]
   \   000003CA   0x18C0             ADDS     R0,R0,R3
   \   000003CC   0x23EA             MOVS     R3,#+234
   \   000003CE   0x015B             LSLS     R3,R3,#+5        ;; #+7488
   \   000003D0   0x18C7             ADDS     R7,R0,R3
   \   000003D2   0x0038             MOVS     R0,R7
   \   000003D4   0x.... 0x....      BL       __aeabi_memcpy
   1163          			}
   1164          
   1165          		}
   \   000003D8   0xE0FF             B        ??mid_HTTP_resp_check2_4
   1166          
   1167          		// 応答2が resp_ng
   1168          		else if (memcmp(data2, cmd_tbl[id-1].resp_ng, strlen((const char *)cmd_tbl[id-1].resp_ng)) == 0) {
   \                     ??mid_HTTP_resp_check2_9: (+1)
   \   000003DA   0x48D4             LDR      R0,??mid_HTTP_resp_check2_12
   \   000003DC   0x990A             LDR      R1,[SP, #+40]
   \   000003DE   0x2220             MOVS     R2,#+32
   \   000003E0   0x4351             MULS     R1,R2,R1
   \   000003E2   0x1840             ADDS     R0,R0,R1
   \   000003E4   0x3814             SUBS     R0,R0,#+20
   \   000003E6   0x6800             LDR      R0,[R0, #+0]
   \   000003E8   0x.... 0x....      BL       strlen
   \   000003EC   0x0002             MOVS     R2,R0
   \   000003EE   0x48CF             LDR      R0,??mid_HTTP_resp_check2_12
   \   000003F0   0x990A             LDR      R1,[SP, #+40]
   \   000003F2   0x2320             MOVS     R3,#+32
   \   000003F4   0x4359             MULS     R1,R3,R1
   \   000003F6   0x1840             ADDS     R0,R0,R1
   \   000003F8   0x3814             SUBS     R0,R0,#+20
   \   000003FA   0x6801             LDR      R1,[R0, #+0]
   \   000003FC   0x0038             MOVS     R0,R7
   \   000003FE   0x.... 0x....      BL       memcmp
   \   00000402   0x2800             CMP      R0,#+0
   \   00000404   0xD000             BEQ      .+4
   \   00000406   0xE07D             B        ??mid_HTTP_resp_check2_13
   1169          			memcpy(&mid_http_work.resp_info.data[0], data1, length1);
   \   00000408   0x9A03             LDR      R2,[SP, #+12]
   \   0000040A   0x0029             MOVS     R1,R5
   \   0000040C   0x48D1             LDR      R0,??mid_HTTP_resp_check2_14
   \   0000040E   0x9000             STR      R0,[SP, #+0]
   \   00000410   0x9800             LDR      R0,[SP, #+0]
   \   00000412   0x.... 0x....      BL       __aeabi_memcpy
   \   00000416   0x9800             LDR      R0,[SP, #+0]
   1170          			mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \   00000418   0x2001             MOVS     R0,#+1
   \   0000041A   0x49CF             LDR      R1,??mid_HTTP_resp_check2_14+0x4
   \   0000041C   0x7008             STRB     R0,[R1, #+0]
   1171          			// エラー登録
   1172          			rcv_data1 = (data1[0] << 24) + (data1[1] << 16) + (data1[2] << 8) + data1[3];
   \   0000041E   0x7828             LDRB     R0,[R5, #+0]
   \   00000420   0x0600             LSLS     R0,R0,#+24
   \   00000422   0x7869             LDRB     R1,[R5, #+1]
   \   00000424   0x0409             LSLS     R1,R1,#+16
   \   00000426   0x1840             ADDS     R0,R0,R1
   \   00000428   0x78A9             LDRB     R1,[R5, #+2]
   \   0000042A   0x0209             LSLS     R1,R1,#+8
   \   0000042C   0x1840             ADDS     R0,R0,R1
   \   0000042E   0x78E9             LDRB     R1,[R5, #+3]
   \   00000430   0x1841             ADDS     R1,R0,R1
   1173          			rcv_data2 = (data2[0] << 24) + (data2[1] << 16) + (data2[2] << 8) + data2[3];
   \   00000432   0x7838             LDRB     R0,[R7, #+0]
   \   00000434   0x0600             LSLS     R0,R0,#+24
   \   00000436   0x787A             LDRB     R2,[R7, #+1]
   \   00000438   0x0412             LSLS     R2,R2,#+16
   \   0000043A   0x1880             ADDS     R0,R0,R2
   \   0000043C   0x78BA             LDRB     R2,[R7, #+2]
   \   0000043E   0x0212             LSLS     R2,R2,#+8
   \   00000440   0x1880             ADDS     R0,R0,R2
   \   00000442   0x78FA             LDRB     R2,[R7, #+3]
   \   00000444   0x1882             ADDS     R2,R0,R2
   1174          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000446   0x4BD9             LDR      R3,??mid_HTTP_resp_check2_15  ;; 0x496
   \   00000448   0x2010             MOVS     R0,#+16
   \   0000044A   0x.... 0x....      BL       man_error_set
   1175          
   1176          			rcv_data1 = (data1[4] << 24) + (data1[5] << 16) + (data1[6] << 8) + data1[7];
   \   0000044E   0x7928             LDRB     R0,[R5, #+4]
   \   00000450   0x0600             LSLS     R0,R0,#+24
   \   00000452   0x7969             LDRB     R1,[R5, #+5]
   \   00000454   0x0409             LSLS     R1,R1,#+16
   \   00000456   0x1840             ADDS     R0,R0,R1
   \   00000458   0x79A9             LDRB     R1,[R5, #+6]
   \   0000045A   0x0209             LSLS     R1,R1,#+8
   \   0000045C   0x1840             ADDS     R0,R0,R1
   \   0000045E   0x79E9             LDRB     R1,[R5, #+7]
   \   00000460   0x1841             ADDS     R1,R0,R1
   1177          			rcv_data2 = (data2[4] << 24) + (data2[5] << 16) + (data2[6] << 8) + data2[7];
   \   00000462   0x7938             LDRB     R0,[R7, #+4]
   \   00000464   0x0600             LSLS     R0,R0,#+24
   \   00000466   0x797A             LDRB     R2,[R7, #+5]
   \   00000468   0x0412             LSLS     R2,R2,#+16
   \   0000046A   0x1880             ADDS     R0,R0,R2
   \   0000046C   0x79BA             LDRB     R2,[R7, #+6]
   \   0000046E   0x0212             LSLS     R2,R2,#+8
   \   00000470   0x1880             ADDS     R0,R0,R2
   \   00000472   0x79FA             LDRB     R2,[R7, #+7]
   \   00000474   0x1882             ADDS     R2,R0,R2
   1178          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000476   0x4BCE             LDR      R3,??mid_HTTP_resp_check2_15+0x4  ;; 0x49a
   \   00000478   0x2010             MOVS     R0,#+16
   \   0000047A   0x.... 0x....      BL       man_error_set
   1179          
   1180          			rcv_data1 = (data1[8] << 24) + (data1[9] << 16) + (data1[10] << 8) + data1[11];
   \   0000047E   0x7A28             LDRB     R0,[R5, #+8]
   \   00000480   0x0600             LSLS     R0,R0,#+24
   \   00000482   0x7A69             LDRB     R1,[R5, #+9]
   \   00000484   0x0409             LSLS     R1,R1,#+16
   \   00000486   0x1840             ADDS     R0,R0,R1
   \   00000488   0x7AA9             LDRB     R1,[R5, #+10]
   \   0000048A   0x0209             LSLS     R1,R1,#+8
   \   0000048C   0x1840             ADDS     R0,R0,R1
   \   0000048E   0x7AE9             LDRB     R1,[R5, #+11]
   \   00000490   0x1841             ADDS     R1,R0,R1
   1181          			rcv_data2 = (data2[8] << 24) + (data2[9] << 16) + (data2[16] << 8) + data2[11];
   \   00000492   0x7A38             LDRB     R0,[R7, #+8]
   \   00000494   0x0600             LSLS     R0,R0,#+24
   \   00000496   0x7A7A             LDRB     R2,[R7, #+9]
   \   00000498   0x0412             LSLS     R2,R2,#+16
   \   0000049A   0x1880             ADDS     R0,R0,R2
   \   0000049C   0x7C3A             LDRB     R2,[R7, #+16]
   \   0000049E   0x0212             LSLS     R2,R2,#+8
   \   000004A0   0x1880             ADDS     R0,R0,R2
   \   000004A2   0x7AFA             LDRB     R2,[R7, #+11]
   \   000004A4   0x1882             ADDS     R2,R0,R2
   1182          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   000004A6   0x4BC3             LDR      R3,??mid_HTTP_resp_check2_15+0x8  ;; 0x49e
   \   000004A8   0x2010             MOVS     R0,#+16
   \   000004AA   0x.... 0x....      BL       man_error_set
   1183          
   1184          			// 最後のエラーはログに残す
   1185          			if( (length1+length1 ) < 100) {
   \   000004AE   0x9803             LDR      R0,[SP, #+12]
   \   000004B0   0x9903             LDR      R1,[SP, #+12]
   \   000004B2   0x1840             ADDS     R0,R0,R1
   \   000004B4   0x2864             CMP      R0,#+100
   \   000004B6   0xDB00             BLT      .+4
   \   000004B8   0xE08F             B        ??mid_HTTP_resp_check2_4
   1186          				memset(&mid_http_work.err_buff[0], 0, 100);
   \   000004BA   0x2164             MOVS     R1,#+100
   \   000004BC   0x2200             MOVS     R2,#+0
   \   000004BE   0x48BE             LDR      R0,??mid_HTTP_resp_check2_15+0xC
   \   000004C0   0x9000             STR      R0,[SP, #+0]
   \   000004C2   0x9800             LDR      R0,[SP, #+0]
   \   000004C4   0x.... 0x....      BL       __aeabi_memset
   \   000004C8   0x9800             LDR      R0,[SP, #+0]
   1187          				memcpy(&mid_http_work.err_buff[0], &data1[0], length1);
   \   000004CA   0x9A03             LDR      R2,[SP, #+12]
   \   000004CC   0x0029             MOVS     R1,R5
   \   000004CE   0x48BA             LDR      R0,??mid_HTTP_resp_check2_15+0xC
   \   000004D0   0x9000             STR      R0,[SP, #+0]
   \   000004D2   0x9800             LDR      R0,[SP, #+0]
   \   000004D4   0x.... 0x....      BL       __aeabi_memcpy
   \   000004D8   0x9800             LDR      R0,[SP, #+0]
   1188          				memcpy(&mid_http_work.err_buff[length1], &data2[0], length2);
   \   000004DA   0x9A04             LDR      R2,[SP, #+16]
   \   000004DC   0x0039             MOVS     R1,R7
   \   000004DE   0x4805             LDR      R0,??mid_HTTP_resp_check2_6
   \   000004E0   0x9B03             LDR      R3,[SP, #+12]
   \   000004E2   0x18C0             ADDS     R0,R0,R3
   \   000004E4   0x23EA             MOVS     R3,#+234
   \   000004E6   0x015B             LSLS     R3,R3,#+5        ;; #+7488
   \   000004E8   0x18C7             ADDS     R7,R0,R3
   \   000004EA   0x0038             MOVS     R0,R7
   \   000004EC   0x.... 0x....      BL       __aeabi_memcpy
   1189          			}
   1190          		}
   \   000004F0   0xE073             B        ??mid_HTTP_resp_check2_4
   \   000004F2   0xBF00             Nop      
   \                     ??mid_HTTP_resp_check2_6:
   \   000004F4   0x........         DC32     mid_http_work
   \   000004F8   0x00000462         DC32     0x462
   \   000004FC   0x00000466         DC32     0x466
   \   00000500   0x0000046A         DC32     0x46a
   1191          
   1192          		// その他の応答
   1193          		else {
   1194          
   1195          			mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_UNKNOWN;
   \                     ??mid_HTTP_resp_check2_13: (+1)
   \   00000504   0x2004             MOVS     R0,#+4
   \   00000506   0x4994             LDR      R1,??mid_HTTP_resp_check2_14+0x4
   \   00000508   0x7008             STRB     R0,[R1, #+0]
   1196          			// エラー登録
   1197          			rcv_data1 = (data1[0] << 24) + (data1[1] << 16) + (data1[2] << 8) + data1[3];
   \   0000050A   0x7828             LDRB     R0,[R5, #+0]
   \   0000050C   0x0600             LSLS     R0,R0,#+24
   \   0000050E   0x7869             LDRB     R1,[R5, #+1]
   \   00000510   0x0409             LSLS     R1,R1,#+16
   \   00000512   0x1840             ADDS     R0,R0,R1
   \   00000514   0x78A9             LDRB     R1,[R5, #+2]
   \   00000516   0x0209             LSLS     R1,R1,#+8
   \   00000518   0x1840             ADDS     R0,R0,R1
   \   0000051A   0x78E9             LDRB     R1,[R5, #+3]
   \   0000051C   0x1841             ADDS     R1,R0,R1
   1198          			rcv_data2 = (data2[0] << 24) + (data2[1] << 16) + (data2[2] << 8) + data2[3];
   \   0000051E   0x7838             LDRB     R0,[R7, #+0]
   \   00000520   0x0600             LSLS     R0,R0,#+24
   \   00000522   0x787A             LDRB     R2,[R7, #+1]
   \   00000524   0x0412             LSLS     R2,R2,#+16
   \   00000526   0x1880             ADDS     R0,R0,R2
   \   00000528   0x78BA             LDRB     R2,[R7, #+2]
   \   0000052A   0x0212             LSLS     R2,R2,#+8
   \   0000052C   0x1880             ADDS     R0,R0,R2
   \   0000052E   0x78FA             LDRB     R2,[R7, #+3]
   \   00000530   0x1882             ADDS     R2,R0,R2
   1199          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000532   0x4BC4             LDR      R3,??mid_HTTP_resp_check2_16  ;; 0x4af
   \   00000534   0x2010             MOVS     R0,#+16
   \   00000536   0x.... 0x....      BL       man_error_set
   1200          
   1201          			rcv_data1 = (data1[4] << 24) + (data1[5] << 16) + (data1[6] << 8) + data1[7];
   \   0000053A   0x7928             LDRB     R0,[R5, #+4]
   \   0000053C   0x0600             LSLS     R0,R0,#+24
   \   0000053E   0x7969             LDRB     R1,[R5, #+5]
   \   00000540   0x0409             LSLS     R1,R1,#+16
   \   00000542   0x1840             ADDS     R0,R0,R1
   \   00000544   0x79A9             LDRB     R1,[R5, #+6]
   \   00000546   0x0209             LSLS     R1,R1,#+8
   \   00000548   0x1840             ADDS     R0,R0,R1
   \   0000054A   0x79E9             LDRB     R1,[R5, #+7]
   \   0000054C   0x1841             ADDS     R1,R0,R1
   1202          			rcv_data2 = (data2[4] << 24) + (data2[5] << 16) + (data2[6] << 8) + data2[7];
   \   0000054E   0x7938             LDRB     R0,[R7, #+4]
   \   00000550   0x0600             LSLS     R0,R0,#+24
   \   00000552   0x797A             LDRB     R2,[R7, #+5]
   \   00000554   0x0412             LSLS     R2,R2,#+16
   \   00000556   0x1880             ADDS     R0,R0,R2
   \   00000558   0x79BA             LDRB     R2,[R7, #+6]
   \   0000055A   0x0212             LSLS     R2,R2,#+8
   \   0000055C   0x1880             ADDS     R0,R0,R2
   \   0000055E   0x79FA             LDRB     R2,[R7, #+7]
   \   00000560   0x1882             ADDS     R2,R0,R2
   1203          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000562   0x4BB9             LDR      R3,??mid_HTTP_resp_check2_16+0x4  ;; 0x4b3
   \   00000564   0x2010             MOVS     R0,#+16
   \   00000566   0x.... 0x....      BL       man_error_set
   1204          
   1205          			rcv_data1 = (data1[8] << 24) + (data1[9] << 16) + (data1[10] << 8) + data1[11];
   \   0000056A   0x7A28             LDRB     R0,[R5, #+8]
   \   0000056C   0x0600             LSLS     R0,R0,#+24
   \   0000056E   0x7A69             LDRB     R1,[R5, #+9]
   \   00000570   0x0409             LSLS     R1,R1,#+16
   \   00000572   0x1840             ADDS     R0,R0,R1
   \   00000574   0x7AA9             LDRB     R1,[R5, #+10]
   \   00000576   0x0209             LSLS     R1,R1,#+8
   \   00000578   0x1840             ADDS     R0,R0,R1
   \   0000057A   0x7AE9             LDRB     R1,[R5, #+11]
   \   0000057C   0x1841             ADDS     R1,R0,R1
   1206          			rcv_data2 = (data2[8] << 24) + (data2[9] << 16) + (data2[10] << 8) + data2[11];
   \   0000057E   0x7A38             LDRB     R0,[R7, #+8]
   \   00000580   0x0600             LSLS     R0,R0,#+24
   \   00000582   0x7A7A             LDRB     R2,[R7, #+9]
   \   00000584   0x0412             LSLS     R2,R2,#+16
   \   00000586   0x1880             ADDS     R0,R0,R2
   \   00000588   0x7ABA             LDRB     R2,[R7, #+10]
   \   0000058A   0x0212             LSLS     R2,R2,#+8
   \   0000058C   0x1880             ADDS     R0,R0,R2
   \   0000058E   0x7AFA             LDRB     R2,[R7, #+11]
   \   00000590   0x1882             ADDS     R2,R0,R2
   1207          			man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000592   0x4BCC             LDR      R3,??mid_HTTP_resp_check2_17  ;; 0x4b7
   \   00000594   0x2010             MOVS     R0,#+16
   \   00000596   0x.... 0x....      BL       man_error_set
   1208          
   1209          			// 最後のエラーはログに残す
   1210          			if( (length1+length1 ) < 100) {
   \   0000059A   0x9803             LDR      R0,[SP, #+12]
   \   0000059C   0x9903             LDR      R1,[SP, #+12]
   \   0000059E   0x1840             ADDS     R0,R0,R1
   \   000005A0   0x2864             CMP      R0,#+100
   \   000005A2   0xDA1A             BGE      ??mid_HTTP_resp_check2_4
   1211          				memset(&mid_http_work.err_buff[0], 0, 100);
   \   000005A4   0x2164             MOVS     R1,#+100
   \   000005A6   0x2200             MOVS     R2,#+0
   \   000005A8   0x4883             LDR      R0,??mid_HTTP_resp_check2_15+0xC
   \   000005AA   0x9000             STR      R0,[SP, #+0]
   \   000005AC   0x9800             LDR      R0,[SP, #+0]
   \   000005AE   0x.... 0x....      BL       __aeabi_memset
   \   000005B2   0x9800             LDR      R0,[SP, #+0]
   1212          				memcpy(&mid_http_work.err_buff[0], &data1[0], length1);
   \   000005B4   0x9A03             LDR      R2,[SP, #+12]
   \   000005B6   0x0029             MOVS     R1,R5
   \   000005B8   0x487F             LDR      R0,??mid_HTTP_resp_check2_15+0xC
   \   000005BA   0x9000             STR      R0,[SP, #+0]
   \   000005BC   0x9800             LDR      R0,[SP, #+0]
   \   000005BE   0x.... 0x....      BL       __aeabi_memcpy
   \   000005C2   0x9800             LDR      R0,[SP, #+0]
   1213          				memcpy(&mid_http_work.err_buff[length1], &data2[0], length2);
   \   000005C4   0x9A04             LDR      R2,[SP, #+16]
   \   000005C6   0x0039             MOVS     R1,R7
   \   000005C8   0x48BF             LDR      R0,??mid_HTTP_resp_check2_17+0x4
   \   000005CA   0x9B03             LDR      R3,[SP, #+12]
   \   000005CC   0x18C0             ADDS     R0,R0,R3
   \   000005CE   0x23EA             MOVS     R3,#+234
   \   000005D0   0x015B             LSLS     R3,R3,#+5        ;; #+7488
   \   000005D2   0x18C7             ADDS     R7,R0,R3
   \   000005D4   0x0038             MOVS     R0,R7
   \   000005D6   0x.... 0x....      BL       __aeabi_memcpy
   1214          			}
   1215          		}
   1216          		
   1217          		// 必要な情報を取り出す
   1218          		if (mid_http_work.resp_info.cmdsts == MID_HTTP_CMDSTS_OK) {
   \                     ??mid_HTTP_resp_check2_4: (+1)
   \   000005DA   0x485F             LDR      R0,??mid_HTTP_resp_check2_14+0x4
   \   000005DC   0x7800             LDRB     R0,[R0, #+0]
   \   000005DE   0x2800             CMP      R0,#+0
   \   000005E0   0xD001             BEQ      .+6
   \   000005E2   0xF000 0xFBF5      BL       ??mid_HTTP_resp_check2_18
   1219          			
   1220          			switch (id) {
   \   000005E6   0x980A             LDR      R0,[SP, #+40]
   \   000005E8   0x1EC0             SUBS     R0,R0,#+3
   \   000005EA   0xD01E             BEQ      ??mid_HTTP_resp_check2_19
   \   000005EC   0x1E80             SUBS     R0,R0,#+2
   \   000005EE   0xD039             BEQ      ??mid_HTTP_resp_check2_20
   \   000005F0   0x1E40             SUBS     R0,R0,#+1
   \   000005F2   0xD100             BNE      .+4
   \   000005F4   0xE22A             B        ??mid_HTTP_resp_check2_21
   \   000005F6   0x1E40             SUBS     R0,R0,#+1
   \   000005F8   0xD100             BNE      .+4
   \   000005FA   0xE25F             B        ??mid_HTTP_resp_check2_22
   \   000005FC   0x1E80             SUBS     R0,R0,#+2
   \   000005FE   0xD100             BNE      .+4
   \   00000600   0xE298             B        ??mid_HTTP_resp_check2_23
   \   00000602   0x1EC0             SUBS     R0,R0,#+3
   \   00000604   0xD100             BNE      .+4
   \   00000606   0xE2C1             B        ??mid_HTTP_resp_check2_24
   \   00000608   0x1E40             SUBS     R0,R0,#+1
   \   0000060A   0xD100             BNE      .+4
   \   0000060C   0xE2E6             B        ??mid_HTTP_resp_check2_25
   \   0000060E   0x3808             SUBS     R0,R0,#+8
   \   00000610   0xD100             BNE      .+4
   \   00000612   0xE317             B        ??mid_HTTP_resp_check2_26
   \   00000614   0x381C             SUBS     R0,R0,#+28
   \   00000616   0xD025             BEQ      ??mid_HTTP_resp_check2_20
   \   00000618   0x1E40             SUBS     R0,R0,#+1
   \   0000061A   0x2801             CMP      R0,#+1
   \   0000061C   0xD800             BHI      .+4
   \   0000061E   0xE0CD             B        ??mid_HTTP_resp_check2_27
   \   00000620   0x1F00             SUBS     R0,R0,#+4
   \   00000622   0x2801             CMP      R0,#+1
   \   00000624   0xD800             BHI      .+4
   \   00000626   0xE349             B        ??mid_HTTP_resp_check2_28
   \   00000628   0xE368             B        ??mid_HTTP_resp_check2_29
   1221          			// +CTZU: 0 or +CTZU: 1
   1222          			case MID_HTTP_SEQ_INIT_RESP_CTZUC:
   1223          				if (ptr1[7] == '0') {
   \                     ??mid_HTTP_resp_check2_19: (+1)
   \   0000062A   0x79E0             LDRB     R0,[R4, #+7]
   \   0000062C   0x2830             CMP      R0,#+48
   \   0000062E   0xD103             BNE      ??mid_HTTP_resp_check2_30
   1224          					mid_http_work.resp_info.get_info.ctzuc_q = MID_HTTP_GET_CTZUC_0;
   \   00000630   0x2001             MOVS     R0,#+1
   \   00000632   0x49C0             LDR      R1,??mid_HTTP_resp_check2_31
   \   00000634   0x6008             STR      R0,[R1, #+0]
   \   00000636   0xE010             B        ??mid_HTTP_resp_check2_32
   1225          				}
   1226          				else if (ptr1[7] == '1') {
   \                     ??mid_HTTP_resp_check2_30: (+1)
   \   00000638   0x79E0             LDRB     R0,[R4, #+7]
   \   0000063A   0x2831             CMP      R0,#+49
   \   0000063C   0xD103             BNE      ??mid_HTTP_resp_check2_33
   1227          					mid_http_work.resp_info.get_info.ctzuc_q = MID_HTTP_GET_CTZUC_1;
   \   0000063E   0x2002             MOVS     R0,#+2
   \   00000640   0x49BC             LDR      R1,??mid_HTTP_resp_check2_31
   \   00000642   0x6008             STR      R0,[R1, #+0]
   \   00000644   0xE009             B        ??mid_HTTP_resp_check2_32
   1228          				}
   1229          				else {
   1230          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_33: (+1)
   \   00000646   0x2001             MOVS     R0,#+1
   \   00000648   0x4943             LDR      R1,??mid_HTTP_resp_check2_14+0x4
   \   0000064A   0x7008             STRB     R0,[R1, #+0]
   1231          					// エラー登録
   1232          					man_error_setting(MAN_ERROR_MID_HTTP, id, ptr1[7]);
   \   0000064C   0x239A             MOVS     R3,#+154
   \   0000064E   0x00DB             LSLS     R3,R3,#+3        ;; #+1232
   \   00000650   0x79E2             LDRB     R2,[R4, #+7]
   \   00000652   0x990A             LDR      R1,[SP, #+40]
   \   00000654   0x2010             MOVS     R0,#+16
   \   00000656   0x.... 0x....      BL       man_error_set
   1233          				}
   1234          				break;
   \                     ??mid_HTTP_resp_check2_32: (+1)
   \   0000065A   0xE3B9             B        ??mid_HTTP_resp_check2_18
   \                     ??mid_HTTP_resp_check2_10:
   \   0000065C   0x0000047C         DC32     0x47c
   \   00000660   0x00000484         DC32     0x484
   1235          
   1236          			// +CCLK: "17/11/06,12:31:40+36"
   1237          			case MID_HTTP_SEQ_INIT_RESP_CCLK:
   1238          			case MID_HTTP_SEQ_RETRY_RESP_CCLK:
   1239          				if ( ('0' <= ptr2[8]) && (ptr2[8] <= '9')				// year
   1240          					 && ('0' <= ptr2[9]) && (ptr2[9] <= '9')			// year
   1241          					 && ('0' <= ptr2[11]) && (ptr2[11] <= '9')			// month
   1242          					 && ('0' <= ptr2[12]) && (ptr2[12] <= '9')			// month
   1243          					 && ('0' <= ptr2[14]) && (ptr2[14] <= '9')			// day
   1244          					 && ('0' <= ptr2[15]) && (ptr2[15] <= '9')			// day
   1245          					 && ('0' <= ptr2[17]) && (ptr2[17] <= '9')			// hour
   1246          					 && ('0' <= ptr2[18]) && (ptr2[18] <= '9')			// hour
   1247          					 && ('0' <= ptr2[20]) && (ptr2[20] <= '9')			// minute
   1248          					 && ('0' <= ptr2[21]) && (ptr2[21] <= '9')			// minute
   1249          					 && ('0' <= ptr2[23]) && (ptr2[23] <= '9')			// seconds
   1250          					 && ('0' <= ptr2[24]) && (ptr2[24] <= '9') ) {		// seconds
   \                     ??mid_HTTP_resp_check2_20: (+1)
   \   00000664   0x9801             LDR      R0,[SP, #+4]
   \   00000666   0x7A00             LDRB     R0,[R0, #+8]
   \   00000668   0x3830             SUBS     R0,R0,#+48
   \   0000066A   0x280A             CMP      R0,#+10
   \   0000066C   0xD276             BCS      ??mid_HTTP_resp_check2_34
   \   0000066E   0x9801             LDR      R0,[SP, #+4]
   \   00000670   0x7A40             LDRB     R0,[R0, #+9]
   \   00000672   0x3830             SUBS     R0,R0,#+48
   \   00000674   0x280A             CMP      R0,#+10
   \   00000676   0xD271             BCS      ??mid_HTTP_resp_check2_34
   \   00000678   0x9801             LDR      R0,[SP, #+4]
   \   0000067A   0x7AC0             LDRB     R0,[R0, #+11]
   \   0000067C   0x3830             SUBS     R0,R0,#+48
   \   0000067E   0x280A             CMP      R0,#+10
   \   00000680   0xD26C             BCS      ??mid_HTTP_resp_check2_34
   \   00000682   0x9801             LDR      R0,[SP, #+4]
   \   00000684   0x7B00             LDRB     R0,[R0, #+12]
   \   00000686   0x3830             SUBS     R0,R0,#+48
   \   00000688   0x280A             CMP      R0,#+10
   \   0000068A   0xD267             BCS      ??mid_HTTP_resp_check2_34
   \   0000068C   0x9801             LDR      R0,[SP, #+4]
   \   0000068E   0x7B80             LDRB     R0,[R0, #+14]
   \   00000690   0x3830             SUBS     R0,R0,#+48
   \   00000692   0x280A             CMP      R0,#+10
   \   00000694   0xD262             BCS      ??mid_HTTP_resp_check2_34
   \   00000696   0x9801             LDR      R0,[SP, #+4]
   \   00000698   0x7BC0             LDRB     R0,[R0, #+15]
   \   0000069A   0x3830             SUBS     R0,R0,#+48
   \   0000069C   0x280A             CMP      R0,#+10
   \   0000069E   0xD25D             BCS      ??mid_HTTP_resp_check2_34
   \   000006A0   0x9801             LDR      R0,[SP, #+4]
   \   000006A2   0x7C40             LDRB     R0,[R0, #+17]
   \   000006A4   0x3830             SUBS     R0,R0,#+48
   \   000006A6   0x280A             CMP      R0,#+10
   \   000006A8   0xD258             BCS      ??mid_HTTP_resp_check2_34
   \   000006AA   0x9801             LDR      R0,[SP, #+4]
   \   000006AC   0x7C80             LDRB     R0,[R0, #+18]
   \   000006AE   0x3830             SUBS     R0,R0,#+48
   \   000006B0   0x280A             CMP      R0,#+10
   \   000006B2   0xD253             BCS      ??mid_HTTP_resp_check2_34
   \   000006B4   0x9801             LDR      R0,[SP, #+4]
   \   000006B6   0x7D00             LDRB     R0,[R0, #+20]
   \   000006B8   0x3830             SUBS     R0,R0,#+48
   \   000006BA   0x280A             CMP      R0,#+10
   \   000006BC   0xD24E             BCS      ??mid_HTTP_resp_check2_34
   \   000006BE   0x9801             LDR      R0,[SP, #+4]
   \   000006C0   0x7D40             LDRB     R0,[R0, #+21]
   \   000006C2   0x3830             SUBS     R0,R0,#+48
   \   000006C4   0x280A             CMP      R0,#+10
   \   000006C6   0xD249             BCS      ??mid_HTTP_resp_check2_34
   \   000006C8   0x9801             LDR      R0,[SP, #+4]
   \   000006CA   0x7DC0             LDRB     R0,[R0, #+23]
   \   000006CC   0x3830             SUBS     R0,R0,#+48
   \   000006CE   0x280A             CMP      R0,#+10
   \   000006D0   0xD244             BCS      ??mid_HTTP_resp_check2_34
   \   000006D2   0x9801             LDR      R0,[SP, #+4]
   \   000006D4   0x7E00             LDRB     R0,[R0, #+24]
   \   000006D6   0x3830             SUBS     R0,R0,#+48
   \   000006D8   0x280A             CMP      R0,#+10
   \   000006DA   0xD23F             BCS      ??mid_HTTP_resp_check2_34
   1251          
   1252          					bcd_to_num(&ptr2[8],  &mid_http_work.resp_info.get_info.clock.year);
   \   000006DC   0x49D3             LDR      R1,??mid_HTTP_resp_check2_35
   \   000006DE   0x9801             LDR      R0,[SP, #+4]
   \   000006E0   0x3008             ADDS     R0,R0,#+8
   \   000006E2   0x.... 0x....      BL       bcd_to_num
   1253          					bcd_to_num(&ptr2[11], &mid_http_work.resp_info.get_info.clock.month);
   \   000006E6   0x49D2             LDR      R1,??mid_HTTP_resp_check2_35+0x4
   \   000006E8   0x9801             LDR      R0,[SP, #+4]
   \   000006EA   0x300B             ADDS     R0,R0,#+11
   \   000006EC   0x.... 0x....      BL       bcd_to_num
   1254          					bcd_to_num(&ptr2[14], &mid_http_work.resp_info.get_info.clock.day);
   \   000006F0   0x49D0             LDR      R1,??mid_HTTP_resp_check2_35+0x8
   \   000006F2   0x9801             LDR      R0,[SP, #+4]
   \   000006F4   0x300E             ADDS     R0,R0,#+14
   \   000006F6   0x.... 0x....      BL       bcd_to_num
   1255          					bcd_to_num(&ptr2[17], &mid_http_work.resp_info.get_info.clock.hour);
   \   000006FA   0x49CF             LDR      R1,??mid_HTTP_resp_check2_35+0xC
   \   000006FC   0x9801             LDR      R0,[SP, #+4]
   \   000006FE   0x3011             ADDS     R0,R0,#+17
   \   00000700   0x.... 0x....      BL       bcd_to_num
   1256          					bcd_to_num(&ptr2[20], &mid_http_work.resp_info.get_info.clock.minute);
   \   00000704   0x49CD             LDR      R1,??mid_HTTP_resp_check2_35+0x10
   \   00000706   0x9801             LDR      R0,[SP, #+4]
   \   00000708   0x3014             ADDS     R0,R0,#+20
   \   0000070A   0x.... 0x....      BL       bcd_to_num
   1257          					bcd_to_num(&ptr2[23], &mid_http_work.resp_info.get_info.clock.seconds);
   \   0000070E   0x49CC             LDR      R1,??mid_HTTP_resp_check2_35+0x14
   \   00000710   0x9801             LDR      R0,[SP, #+4]
   \   00000712   0x3017             ADDS     R0,R0,#+23
   \   00000714   0x.... 0x....      BL       bcd_to_num
   1258          					
   1259          					// 2018年 〜 2069年までをOKとする
   1260          				 	if ( (18 <= mid_http_work.resp_info.get_info.clock.year) && (mid_http_work.resp_info.get_info.clock.year < 70) ) {
   \   00000718   0x48C4             LDR      R0,??mid_HTTP_resp_check2_35
   \   0000071A   0x2100             MOVS     R1,#+0
   \   0000071C   0x5640             LDRSB    R0,[R0, R1]
   \   0000071E   0x3812             SUBS     R0,R0,#+18
   \   00000720   0x2834             CMP      R0,#+52
   \   00000722   0xD205             BCS      ??mid_HTTP_resp_check2_36
   1261          						mid_http_work.resp_info.get_info.clock_flg = 1;
   \   00000724   0x2001             MOVS     R0,#+1
   \   00000726   0x49C7             LDR      R1,??mid_HTTP_resp_check2_35+0x18
   \   00000728   0x6008             STR      R0,[R1, #+0]
   \   0000072A   0xE03D             B        ??mid_HTTP_resp_check2_37
   \                     ??mid_HTTP_resp_check2_12:
   \   0000072C   0x........         DC32     cmd_tbl
   1262          				 	}
   1263          				 	else {
   1264          						mid_http_work.resp_info.get_info.clock_flg = 0;
   \                     ??mid_HTTP_resp_check2_36: (+1)
   \   00000730   0x2000             MOVS     R0,#+0
   \   00000732   0x49C4             LDR      R1,??mid_HTTP_resp_check2_35+0x18
   \   00000734   0x6008             STR      R0,[R1, #+0]
   1265          						mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \   00000736   0x2001             MOVS     R0,#+1
   \   00000738   0x4907             LDR      R1,??mid_HTTP_resp_check2_14+0x4
   \   0000073A   0x7008             STRB     R0,[R1, #+0]
   1266          						man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.resp_info.get_info.clock.year, mid_http_work.resp_info.get_info.clock.month);
   \   0000073C   0x4BC2             LDR      R3,??mid_HTTP_resp_check2_35+0x1C  ;; 0x4f2
   \   0000073E   0x48BC             LDR      R0,??mid_HTTP_resp_check2_35+0x4
   \   00000740   0x2100             MOVS     R1,#+0
   \   00000742   0x5642             LDRSB    R2,[R0, R1]
   \   00000744   0x48B9             LDR      R0,??mid_HTTP_resp_check2_35
   \   00000746   0x2100             MOVS     R1,#+0
   \   00000748   0x5641             LDRSB    R1,[R0, R1]
   \   0000074A   0x2010             MOVS     R0,#+16
   \   0000074C   0x.... 0x....      BL       man_error_set
   \   00000750   0xE02A             B        ??mid_HTTP_resp_check2_37
   \   00000752   0xBF00             Nop      
   \                     ??mid_HTTP_resp_check2_14:
   \   00000754   0x........         DC32     mid_http_work+0x1D0C
   \   00000758   0x........         DC32     mid_http_work+0x1CB0
   1267          				 	}
   1268          				}
   1269          				else {
   1270          					mid_http_work.resp_info.get_info.clock_flg = 0;
   \                     ??mid_HTTP_resp_check2_34: (+1)
   \   0000075C   0x2000             MOVS     R0,#+0
   \   0000075E   0x49B9             LDR      R1,??mid_HTTP_resp_check2_35+0x18
   \   00000760   0x6008             STR      R0,[R1, #+0]
   1271          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \   00000762   0x2001             MOVS     R0,#+1
   \   00000764   0x49D4             LDR      R1,??mid_HTTP_resp_check2_38
   \   00000766   0x7008             STRB     R0,[R1, #+0]
   1272          					// エラー登録
   1273          					rcv_data1 = (ptr2[8] << 24) + (ptr2[9] << 16) + (ptr2[11] << 8) + ptr2[12];
   \   00000768   0x9801             LDR      R0,[SP, #+4]
   \   0000076A   0x7A00             LDRB     R0,[R0, #+8]
   \   0000076C   0x0600             LSLS     R0,R0,#+24
   \   0000076E   0x9901             LDR      R1,[SP, #+4]
   \   00000770   0x7A49             LDRB     R1,[R1, #+9]
   \   00000772   0x0409             LSLS     R1,R1,#+16
   \   00000774   0x1840             ADDS     R0,R0,R1
   \   00000776   0x9901             LDR      R1,[SP, #+4]
   \   00000778   0x7AC9             LDRB     R1,[R1, #+11]
   \   0000077A   0x0209             LSLS     R1,R1,#+8
   \   0000077C   0x1840             ADDS     R0,R0,R1
   \   0000077E   0x9901             LDR      R1,[SP, #+4]
   \   00000780   0x7B09             LDRB     R1,[R1, #+12]
   \   00000782   0x1841             ADDS     R1,R0,R1
   1274          					rcv_data2 = (ptr2[14] << 24) + (ptr2[15] << 16) + (ptr2[17] << 8) + ptr2[18];
   \   00000784   0x9801             LDR      R0,[SP, #+4]
   \   00000786   0x7B80             LDRB     R0,[R0, #+14]
   \   00000788   0x0600             LSLS     R0,R0,#+24
   \   0000078A   0x9A01             LDR      R2,[SP, #+4]
   \   0000078C   0x7BD2             LDRB     R2,[R2, #+15]
   \   0000078E   0x0412             LSLS     R2,R2,#+16
   \   00000790   0x1880             ADDS     R0,R0,R2
   \   00000792   0x9A01             LDR      R2,[SP, #+4]
   \   00000794   0x7C52             LDRB     R2,[R2, #+17]
   \   00000796   0x0212             LSLS     R2,R2,#+8
   \   00000798   0x1880             ADDS     R0,R0,R2
   \   0000079A   0x9A01             LDR      R2,[SP, #+4]
   \   0000079C   0x7C92             LDRB     R2,[R2, #+18]
   \   0000079E   0x1882             ADDS     R2,R0,R2
   1275          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   000007A0   0x4BD4             LDR      R3,??mid_HTTP_resp_check2_39  ;; 0x4fb
   \   000007A2   0x2010             MOVS     R0,#+16
   \   000007A4   0x.... 0x....      BL       man_error_set
   1276          				}
   1277          				break;
   \                     ??mid_HTTP_resp_check2_37: (+1)
   \   000007A8   0xE312             B        ??mid_HTTP_resp_check2_18
   \   000007AA   0xBF00             Nop      
   \                     ??mid_HTTP_resp_check2_15:
   \   000007AC   0x00000496         DC32     0x496
   \   000007B0   0x0000049A         DC32     0x49a
   \   000007B4   0x0000049E         DC32     0x49e
   \   000007B8   0x........         DC32     mid_http_work+0x1D40
   1278          
   1279          			// +CPSI: LTE,Online,440-20,0x181D,24763905,148,EUTRAN-BAND1,475,4,4,-89,-856,-580,15
   1280          			// +CPSI: NO SERVICE,Online
   1281          			case MID_HTTP_SEQ_INIT_RESP_CPSI:
   1282          			case MID_HTTP_SEQ_LTE_RESP_CPSI:
   1283          				if ( memcmp(&data1[7], "LTE", 3) == 0 ) {
   \                     ??mid_HTTP_resp_check2_27: (+1)
   \   000007BC   0x2203             MOVS     R2,#+3
   \   000007BE   0xA1CE             ADR      R1,??mid_HTTP_resp_check2_39+0x4  ;; "LTE"
   \   000007C0   0x1DE8             ADDS     R0,R5,#+7
   \   000007C2   0x.... 0x....      BL       memcmp
   \   000007C6   0x2800             CMP      R0,#+0
   \   000007C8   0xD000             BEQ      .+4
   \   000007CA   0xE0FE             B        ??mid_HTTP_resp_check2_40
   1284          					for (loop=11,i=11,j=0; loop<length1-2; loop++) {
   \   000007CC   0x240B             MOVS     R4,#+11
   \   000007CE   0x260B             MOVS     R6,#+11
   \   000007D0   0x2700             MOVS     R7,#+0
   \   000007D2   0xE024             B        ??mid_HTTP_resp_check2_41
   1285          						if (data1[loop] == ',') {
   1286          							j++;
   1287          							switch(j) {
   1288          							case 1:			// Online
   1289          							case 2:			// 440-20
   1290          							case 3:			// 0x181D
   1291          							case 4:			// 24763905
   1292          							case 5:			// 148
   1293          							case 6:			// EUTRAN-BAND1
   1294          							case 7:			// 475
   1295          							case 8:			// 4
   1296          							case 9:			// 4
   1297          							case 10:		// -89
   1298          								i=loop+1;
   1299          								break;
   1300          							case 11:		// -856(RSRP)
   1301          								// ,, の場合はデータなし
   1302          								if (i != loop-1) {
   1303          									if (data1[i] == '-') {
   1304          										num = local_atoi(&data1[i+1], loop-i-1);
   1305          										if (num >= 0) {
   1306          											mid_http_work.resp_info.get_data.rsrp_raw = -num/10;
   1307          										}
   1308          										else {
   1309          											mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   1310          											// エラー登録
   1311          											rcv_data1 = (data1[i] << 24) + (data1[i+1] << 16) + (data1[i+2] << 8) + data1[i+3];
   1312          											rcv_data2 = (data1[i+4] << 24) + (data1[i+5] << 16) + (data1[i+6] << 8) + data1[i+7];
   1313          											man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   1314          										}
   1315          									}
   1316          									else {
   1317          										num = local_atoi(&data1[i], loop-i);
   1318          										if (num >= 0) {
   1319          											mid_http_work.resp_info.get_data.rsrp_raw = num/10;
   1320          										}
   1321          										else {
   1322          											mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   1323          											// エラー登録
   1324          											rcv_data1 = (data1[i] << 24) + (data1[i+1] << 16) + (data1[i+2] << 8) + data1[i+3];
   1325          											rcv_data2 = (data1[i+4] << 24) + (data1[i+5] << 16) + (data1[i+6] << 8) + data1[i+7];
   1326          											man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   1327          										}
   1328          									}
   1329          								}
   1330          								i=loop+1;
   1331          								break;
   1332          							case 12:		// -580(RSSI)
   1333          								// ,, の場合はデータなし
   1334          								if (i != loop-1) {
   1335          									if (data1[i] == '-') {
   1336          										num = local_atoi(&data1[i+1], loop-i-1);
   1337          										if (num >= 0) {
   1338          											mid_http_work.resp_info.get_data.rssi_raw = -num/10;
   1339          										}
   1340          										else {
   1341          											mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   1342          											// エラー登録
   1343          											rcv_data1 = (data1[i] << 24) + (data1[i+1] << 16) + (data1[i+2] << 8) + data1[i+3];
   1344          											rcv_data2 = (data1[i+4] << 24) + (data1[i+5] << 16) + (data1[i+6] << 8) + data1[i+7];
   1345          											man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   1346          										}
   1347          									}
   1348          									else {
   1349          										num = local_atoi(&data1[i], loop-i);
   1350          										if (num >= 0) {
   1351          											mid_http_work.resp_info.get_data.rssi_raw = num/10;
   1352          										}
   1353          										else {
   1354          											mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_42: (+1)
   \   000007D4   0x2001             MOVS     R0,#+1
   \   000007D6   0x49B8             LDR      R1,??mid_HTTP_resp_check2_38
   \   000007D8   0x7008             STRB     R0,[R1, #+0]
   1355          											// エラー登録
   1356          											rcv_data1 = (data1[i] << 24) + (data1[i+1] << 16) + (data1[i+2] << 8) + data1[i+3];
   \   000007DA   0x5DA8             LDRB     R0,[R5, R6]
   \   000007DC   0x0600             LSLS     R0,R0,#+24
   \   000007DE   0x19A9             ADDS     R1,R5,R6
   \   000007E0   0x7849             LDRB     R1,[R1, #+1]
   \   000007E2   0x0409             LSLS     R1,R1,#+16
   \   000007E4   0x1840             ADDS     R0,R0,R1
   \   000007E6   0x19A9             ADDS     R1,R5,R6
   \   000007E8   0x7889             LDRB     R1,[R1, #+2]
   \   000007EA   0x0209             LSLS     R1,R1,#+8
   \   000007EC   0x1840             ADDS     R0,R0,R1
   \   000007EE   0x19A9             ADDS     R1,R5,R6
   \   000007F0   0x78C9             LDRB     R1,[R1, #+3]
   \   000007F2   0x1841             ADDS     R1,R0,R1
   1357          											rcv_data2 = (data1[i+4] << 24) + (data1[i+5] << 16) + (data1[i+6] << 8) + data1[i+7];
   \   000007F4   0x19A8             ADDS     R0,R5,R6
   \   000007F6   0x7900             LDRB     R0,[R0, #+4]
   \   000007F8   0x0600             LSLS     R0,R0,#+24
   \   000007FA   0x19AA             ADDS     R2,R5,R6
   \   000007FC   0x7952             LDRB     R2,[R2, #+5]
   \   000007FE   0x0412             LSLS     R2,R2,#+16
   \   00000800   0x1880             ADDS     R0,R0,R2
   \   00000802   0x19AA             ADDS     R2,R5,R6
   \   00000804   0x7992             LDRB     R2,[R2, #+6]
   \   00000806   0x0212             LSLS     R2,R2,#+8
   \   00000808   0x1880             ADDS     R0,R0,R2
   \   0000080A   0x19AA             ADDS     R2,R5,R6
   \   0000080C   0x79D2             LDRB     R2,[R2, #+7]
   \   0000080E   0x1882             ADDS     R2,R0,R2
   1358          											man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000810   0x4BCF             LDR      R3,??mid_HTTP_resp_check2_43  ;; 0x54e
   \   00000812   0x2010             MOVS     R0,#+16
   \   00000814   0x.... 0x....      BL       man_error_set
   1359          										}
   1360          									}
   1361          								}
   1362          								i=loop+1;
   \                     ??mid_HTTP_resp_check2_44: (+1)
   \   00000818   0x0026             MOVS     R6,R4
   \   0000081A   0x1C76             ADDS     R6,R6,#+1
   1363          								break;
   \                     ??mid_HTTP_resp_check2_45: (+1)
   \   0000081C   0x1C64             ADDS     R4,R4,#+1
   \                     ??mid_HTTP_resp_check2_41: (+1)
   \   0000081E   0x9803             LDR      R0,[SP, #+12]
   \   00000820   0x1E80             SUBS     R0,R0,#+2
   \   00000822   0x4284             CMP      R4,R0
   \   00000824   0xDB00             BLT      .+4
   \   00000826   0xE100             B        ??mid_HTTP_resp_check2_46
   \   00000828   0x5D28             LDRB     R0,[R5, R4]
   \   0000082A   0x282C             CMP      R0,#+44
   \   0000082C   0xD1F6             BNE      ??mid_HTTP_resp_check2_45
   \   0000082E   0x1C7F             ADDS     R7,R7,#+1
   \   00000830   0x0038             MOVS     R0,R7
   \   00000832   0x1E40             SUBS     R0,R0,#+1
   \   00000834   0x2809             CMP      R0,#+9
   \   00000836   0xD909             BLS      ??mid_HTTP_resp_check2_47
   \   00000838   0x380A             SUBS     R0,R0,#+10
   \   0000083A   0xD00A             BEQ      ??mid_HTTP_resp_check2_48
   \   0000083C   0x1E40             SUBS     R0,R0,#+1
   \   0000083E   0xD100             BNE      .+4
   \   00000840   0xE07A             B        ??mid_HTTP_resp_check2_49
   \   00000842   0xE7EB             B        ??mid_HTTP_resp_check2_45
   \                     ??mid_HTTP_resp_check2_16:
   \   00000844   0x000004AF         DC32     0x4af
   \   00000848   0x000004B3         DC32     0x4b3
   \                     ??mid_HTTP_resp_check2_47: (+1)
   \   0000084C   0x0026             MOVS     R6,R4
   \   0000084E   0x1C76             ADDS     R6,R6,#+1
   \   00000850   0xE7E4             B        ??mid_HTTP_resp_check2_45
   \                     ??mid_HTTP_resp_check2_48: (+1)
   \   00000852   0x1E60             SUBS     R0,R4,#+1
   \   00000854   0x4286             CMP      R6,R0
   \   00000856   0xD069             BEQ      ??mid_HTTP_resp_check2_50
   \   00000858   0x5DA8             LDRB     R0,[R5, R6]
   \   0000085A   0x282D             CMP      R0,#+45
   \   0000085C   0xD136             BNE      ??mid_HTTP_resp_check2_51
   \   0000085E   0x1BA1             SUBS     R1,R4,R6
   \   00000860   0x1E49             SUBS     R1,R1,#+1
   \   00000862   0x19A8             ADDS     R0,R5,R6
   \   00000864   0x1C40             ADDS     R0,R0,#+1
   \   00000866   0x.... 0x....      BL       local_atoi
   \   0000086A   0x0001             MOVS     R1,R0
   \   0000086C   0x2900             CMP      R1,#+0
   \   0000086E   0xD406             BMI      ??mid_HTTP_resp_check2_52
   \   00000870   0x4248             RSBS     R0,R1,#+0
   \   00000872   0x210A             MOVS     R1,#+10
   \   00000874   0x.... 0x....      BL       __aeabi_idiv
   \   00000878   0x49D7             LDR      R1,??mid_HTTP_resp_check2_53
   \   0000087A   0x6008             STR      R0,[R1, #+0]
   \   0000087C   0xE056             B        ??mid_HTTP_resp_check2_50
   \                     ??mid_HTTP_resp_check2_52: (+1)
   \   0000087E   0x2001             MOVS     R0,#+1
   \   00000880   0x498D             LDR      R1,??mid_HTTP_resp_check2_38
   \   00000882   0x7008             STRB     R0,[R1, #+0]
   \   00000884   0x5DA8             LDRB     R0,[R5, R6]
   \   00000886   0x0600             LSLS     R0,R0,#+24
   \   00000888   0x19A9             ADDS     R1,R5,R6
   \   0000088A   0x7849             LDRB     R1,[R1, #+1]
   \   0000088C   0x0409             LSLS     R1,R1,#+16
   \   0000088E   0x1840             ADDS     R0,R0,R1
   \   00000890   0x19A9             ADDS     R1,R5,R6
   \   00000892   0x7889             LDRB     R1,[R1, #+2]
   \   00000894   0x0209             LSLS     R1,R1,#+8
   \   00000896   0x1840             ADDS     R0,R0,R1
   \   00000898   0x19A9             ADDS     R1,R5,R6
   \   0000089A   0x78C9             LDRB     R1,[R1, #+3]
   \   0000089C   0x1841             ADDS     R1,R0,R1
   \   0000089E   0x19A8             ADDS     R0,R5,R6
   \   000008A0   0x7900             LDRB     R0,[R0, #+4]
   \   000008A2   0x0600             LSLS     R0,R0,#+24
   \   000008A4   0x19AA             ADDS     R2,R5,R6
   \   000008A6   0x7952             LDRB     R2,[R2, #+5]
   \   000008A8   0x0412             LSLS     R2,R2,#+16
   \   000008AA   0x1880             ADDS     R0,R0,R2
   \   000008AC   0x19AA             ADDS     R2,R5,R6
   \   000008AE   0x7992             LDRB     R2,[R2, #+6]
   \   000008B0   0x0212             LSLS     R2,R2,#+8
   \   000008B2   0x1880             ADDS     R0,R0,R2
   \   000008B4   0x19AA             ADDS     R2,R5,R6
   \   000008B6   0x79D2             LDRB     R2,[R2, #+7]
   \   000008B8   0x1882             ADDS     R2,R0,R2
   \   000008BA   0x4BD2             LDR      R3,??mid_HTTP_resp_check2_54  ;; 0x521
   \   000008BC   0x2010             MOVS     R0,#+16
   \   000008BE   0x.... 0x....      BL       man_error_set
   \   000008C2   0xE033             B        ??mid_HTTP_resp_check2_50
   \                     ??mid_HTTP_resp_check2_17:
   \   000008C4   0x000004B7         DC32     0x4b7
   \   000008C8   0x........         DC32     mid_http_work
   \                     ??mid_HTTP_resp_check2_51: (+1)
   \   000008CC   0x1BA1             SUBS     R1,R4,R6
   \   000008CE   0x19A8             ADDS     R0,R5,R6
   \   000008D0   0x.... 0x....      BL       local_atoi
   \   000008D4   0x0001             MOVS     R1,R0
   \   000008D6   0x2900             CMP      R1,#+0
   \   000008D8   0xD406             BMI      ??mid_HTTP_resp_check2_55
   \   000008DA   0x0008             MOVS     R0,R1
   \   000008DC   0x210A             MOVS     R1,#+10
   \   000008DE   0x.... 0x....      BL       __aeabi_idiv
   \   000008E2   0x49BD             LDR      R1,??mid_HTTP_resp_check2_53
   \   000008E4   0x6008             STR      R0,[R1, #+0]
   \   000008E6   0xE021             B        ??mid_HTTP_resp_check2_50
   \                     ??mid_HTTP_resp_check2_55: (+1)
   \   000008E8   0x2001             MOVS     R0,#+1
   \   000008EA   0x4973             LDR      R1,??mid_HTTP_resp_check2_38
   \   000008EC   0x7008             STRB     R0,[R1, #+0]
   \   000008EE   0x5DA8             LDRB     R0,[R5, R6]
   \   000008F0   0x0600             LSLS     R0,R0,#+24
   \   000008F2   0x19A9             ADDS     R1,R5,R6
   \   000008F4   0x7849             LDRB     R1,[R1, #+1]
   \   000008F6   0x0409             LSLS     R1,R1,#+16
   \   000008F8   0x1840             ADDS     R0,R0,R1
   \   000008FA   0x19A9             ADDS     R1,R5,R6
   \   000008FC   0x7889             LDRB     R1,[R1, #+2]
   \   000008FE   0x0209             LSLS     R1,R1,#+8
   \   00000900   0x1840             ADDS     R0,R0,R1
   \   00000902   0x19A9             ADDS     R1,R5,R6
   \   00000904   0x78C9             LDRB     R1,[R1, #+3]
   \   00000906   0x1841             ADDS     R1,R0,R1
   \   00000908   0x19A8             ADDS     R0,R5,R6
   \   0000090A   0x7900             LDRB     R0,[R0, #+4]
   \   0000090C   0x0600             LSLS     R0,R0,#+24
   \   0000090E   0x19AA             ADDS     R2,R5,R6
   \   00000910   0x7952             LDRB     R2,[R2, #+5]
   \   00000912   0x0412             LSLS     R2,R2,#+16
   \   00000914   0x1880             ADDS     R0,R0,R2
   \   00000916   0x19AA             ADDS     R2,R5,R6
   \   00000918   0x7992             LDRB     R2,[R2, #+6]
   \   0000091A   0x0212             LSLS     R2,R2,#+8
   \   0000091C   0x1880             ADDS     R0,R0,R2
   \   0000091E   0x19AA             ADDS     R2,R5,R6
   \   00000920   0x79D2             LDRB     R2,[R2, #+7]
   \   00000922   0x1882             ADDS     R2,R0,R2
   \   00000924   0x4BC6             LDR      R3,??mid_HTTP_resp_check2_56  ;; 0x52e
   \   00000926   0x2010             MOVS     R0,#+16
   \   00000928   0x.... 0x....      BL       man_error_set
   \                     ??mid_HTTP_resp_check2_50: (+1)
   \   0000092C   0x0026             MOVS     R6,R4
   \   0000092E   0x1C76             ADDS     R6,R6,#+1
   \   00000930   0xE774             B        ??mid_HTTP_resp_check2_45
   \   00000932   0xBF00             Nop      
   \                     ??mid_HTTP_resp_check2_31:
   \   00000934   0x........         DC32     mid_http_work+0x1CBC
   \                     ??mid_HTTP_resp_check2_49: (+1)
   \   00000938   0x1E60             SUBS     R0,R4,#+1
   \   0000093A   0x4286             CMP      R6,R0
   \   0000093C   0xD100             BNE      .+4
   \   0000093E   0xE76B             B        ??mid_HTTP_resp_check2_44
   \   00000940   0x5DA8             LDRB     R0,[R5, R6]
   \   00000942   0x282D             CMP      R0,#+45
   \   00000944   0xD132             BNE      ??mid_HTTP_resp_check2_57
   \   00000946   0x1BA1             SUBS     R1,R4,R6
   \   00000948   0x1E49             SUBS     R1,R1,#+1
   \   0000094A   0x19A8             ADDS     R0,R5,R6
   \   0000094C   0x1C40             ADDS     R0,R0,#+1
   \   0000094E   0x.... 0x....      BL       local_atoi
   \   00000952   0x0001             MOVS     R1,R0
   \   00000954   0x2900             CMP      R1,#+0
   \   00000956   0xD406             BMI      ??mid_HTTP_resp_check2_58
   \   00000958   0x4248             RSBS     R0,R1,#+0
   \   0000095A   0x210A             MOVS     R1,#+10
   \   0000095C   0x.... 0x....      BL       __aeabi_idiv
   \   00000960   0x49D4             LDR      R1,??mid_HTTP_resp_check2_59
   \   00000962   0x6008             STR      R0,[R1, #+0]
   \   00000964   0xE758             B        ??mid_HTTP_resp_check2_44
   \                     ??mid_HTTP_resp_check2_58: (+1)
   \   00000966   0x2001             MOVS     R0,#+1
   \   00000968   0x4953             LDR      R1,??mid_HTTP_resp_check2_38
   \   0000096A   0x7008             STRB     R0,[R1, #+0]
   \   0000096C   0x5DA8             LDRB     R0,[R5, R6]
   \   0000096E   0x0600             LSLS     R0,R0,#+24
   \   00000970   0x19A9             ADDS     R1,R5,R6
   \   00000972   0x7849             LDRB     R1,[R1, #+1]
   \   00000974   0x0409             LSLS     R1,R1,#+16
   \   00000976   0x1840             ADDS     R0,R0,R1
   \   00000978   0x19A9             ADDS     R1,R5,R6
   \   0000097A   0x7889             LDRB     R1,[R1, #+2]
   \   0000097C   0x0209             LSLS     R1,R1,#+8
   \   0000097E   0x1840             ADDS     R0,R0,R1
   \   00000980   0x19A9             ADDS     R1,R5,R6
   \   00000982   0x78C9             LDRB     R1,[R1, #+3]
   \   00000984   0x1841             ADDS     R1,R0,R1
   \   00000986   0x19A8             ADDS     R0,R5,R6
   \   00000988   0x7900             LDRB     R0,[R0, #+4]
   \   0000098A   0x0600             LSLS     R0,R0,#+24
   \   0000098C   0x19AA             ADDS     R2,R5,R6
   \   0000098E   0x7952             LDRB     R2,[R2, #+5]
   \   00000990   0x0412             LSLS     R2,R2,#+16
   \   00000992   0x1880             ADDS     R0,R0,R2
   \   00000994   0x19AA             ADDS     R2,R5,R6
   \   00000996   0x7992             LDRB     R2,[R2, #+6]
   \   00000998   0x0212             LSLS     R2,R2,#+8
   \   0000099A   0x1880             ADDS     R0,R0,R2
   \   0000099C   0x19AA             ADDS     R2,R5,R6
   \   0000099E   0x79D2             LDRB     R2,[R2, #+7]
   \   000009A0   0x1882             ADDS     R2,R0,R2
   \   000009A2   0x4BC5             LDR      R3,??mid_HTTP_resp_check2_59+0x4  ;; 0x541
   \   000009A4   0x2010             MOVS     R0,#+16
   \   000009A6   0x.... 0x....      BL       man_error_set
   \   000009AA   0xE735             B        ??mid_HTTP_resp_check2_44
   \                     ??mid_HTTP_resp_check2_57: (+1)
   \   000009AC   0x1BA1             SUBS     R1,R4,R6
   \   000009AE   0x19A8             ADDS     R0,R5,R6
   \   000009B0   0x.... 0x....      BL       local_atoi
   \   000009B4   0x0001             MOVS     R1,R0
   \   000009B6   0x2900             CMP      R1,#+0
   \   000009B8   0xD500             BPL      .+4
   \   000009BA   0xE70B             B        ??mid_HTTP_resp_check2_42
   \   000009BC   0x0008             MOVS     R0,R1
   \   000009BE   0x210A             MOVS     R1,#+10
   \   000009C0   0x.... 0x....      BL       __aeabi_idiv
   \   000009C4   0x49BB             LDR      R1,??mid_HTTP_resp_check2_59
   \   000009C6   0x6008             STR      R0,[R1, #+0]
   \   000009C8   0xE726             B        ??mid_HTTP_resp_check2_44
   1364          							}
   1365          						}
   1366          					}
   1367          				}
   1368          				
   1369          				// +CPSI: NO SERVICE,Online 時は電波なし(-999)とする
   1370          				else if ( memcmp(&data1[7], "NO SERVICE", 10) == 0 ) {
   \                     ??mid_HTTP_resp_check2_40: (+1)
   \   000009CA   0x220A             MOVS     R2,#+10
   \   000009CC   0x49C9             LDR      R1,??mid_HTTP_resp_check2_60
   \   000009CE   0x1DE8             ADDS     R0,R5,#+7
   \   000009D0   0x.... 0x....      BL       memcmp
   \   000009D4   0x2800             CMP      R0,#+0
   \   000009D6   0xD106             BNE      ??mid_HTTP_resp_check2_61
   1371          					mid_http_work.resp_info.get_data.rsrp_raw = -999;
   \   000009D8   0x48C7             LDR      R0,??mid_HTTP_resp_check2_60+0x4  ;; 0xfffffc19
   \   000009DA   0x497F             LDR      R1,??mid_HTTP_resp_check2_53
   \   000009DC   0x6008             STR      R0,[R1, #+0]
   1372          					mid_http_work.resp_info.get_data.rssi_raw = -999;
   \   000009DE   0x48C6             LDR      R0,??mid_HTTP_resp_check2_60+0x4  ;; 0xfffffc19
   \   000009E0   0x49B4             LDR      R1,??mid_HTTP_resp_check2_59
   \   000009E2   0x6008             STR      R0,[R1, #+0]
   \   000009E4   0xE021             B        ??mid_HTTP_resp_check2_46
   1373          				}
   1374          				else {
   1375          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_61: (+1)
   \   000009E6   0x2001             MOVS     R0,#+1
   \   000009E8   0x4933             LDR      R1,??mid_HTTP_resp_check2_38
   \   000009EA   0x7008             STRB     R0,[R1, #+0]
   1376          					// エラー登録
   1377          					rcv_data1 = (data1[i] << 24) + (data1[i+1] << 16) + (data1[i+2] << 8) + data1[i+3];
   \   000009EC   0x5DA8             LDRB     R0,[R5, R6]
   \   000009EE   0x0600             LSLS     R0,R0,#+24
   \   000009F0   0x19A9             ADDS     R1,R5,R6
   \   000009F2   0x7849             LDRB     R1,[R1, #+1]
   \   000009F4   0x0409             LSLS     R1,R1,#+16
   \   000009F6   0x1840             ADDS     R0,R0,R1
   \   000009F8   0x19A9             ADDS     R1,R5,R6
   \   000009FA   0x7889             LDRB     R1,[R1, #+2]
   \   000009FC   0x0209             LSLS     R1,R1,#+8
   \   000009FE   0x1840             ADDS     R0,R0,R1
   \   00000A00   0x19A9             ADDS     R1,R5,R6
   \   00000A02   0x78C9             LDRB     R1,[R1, #+3]
   \   00000A04   0x1841             ADDS     R1,R0,R1
   1378          					rcv_data2 = (data1[i+4] << 24) + (data1[i+5] << 16) + (data1[i+6] << 8) + data1[i+7];
   \   00000A06   0x19A8             ADDS     R0,R5,R6
   \   00000A08   0x7900             LDRB     R0,[R0, #+4]
   \   00000A0A   0x0600             LSLS     R0,R0,#+24
   \   00000A0C   0x19AA             ADDS     R2,R5,R6
   \   00000A0E   0x7952             LDRB     R2,[R2, #+5]
   \   00000A10   0x0412             LSLS     R2,R2,#+16
   \   00000A12   0x1880             ADDS     R0,R0,R2
   \   00000A14   0x19AA             ADDS     R2,R5,R6
   \   00000A16   0x7992             LDRB     R2,[R2, #+6]
   \   00000A18   0x0212             LSLS     R2,R2,#+8
   \   00000A1A   0x1880             ADDS     R0,R0,R2
   \   00000A1C   0x19AA             ADDS     R2,R5,R6
   \   00000A1E   0x79D2             LDRB     R2,[R2, #+7]
   \   00000A20   0x1882             ADDS     R2,R0,R2
   1379          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000A22   0x4BCC             LDR      R3,??mid_HTTP_resp_check2_62  ;; 0x563
   \   00000A24   0x2010             MOVS     R0,#+16
   \   00000A26   0x.... 0x....      BL       man_error_set
   1380          				}
   1381          				break;
   \                     ??mid_HTTP_resp_check2_46: (+1)
   \   00000A2A   0xE1D1             B        ??mid_HTTP_resp_check2_18
   \                     ??mid_HTTP_resp_check2_35:
   \   00000A2C   0x........         DC32     mid_http_work+0x1CC0
   \   00000A30   0x........         DC32     mid_http_work+0x1CC1
   \   00000A34   0x........         DC32     mid_http_work+0x1CC2
   \   00000A38   0x........         DC32     mid_http_work+0x1CC3
   \   00000A3C   0x........         DC32     mid_http_work+0x1CC4
   \   00000A40   0x........         DC32     mid_http_work+0x1CC5
   \   00000A44   0x........         DC32     mid_http_work+0x1CC8
   \   00000A48   0x000004F2         DC32     0x4f2
   1382          
   1383          			// +CPIN: READY         : 準備OK
   1384          			// +CPIN: SIM PIN       : PIN入力待ち
   1385          			// +CPIN: SIM PUK       : PUK入力待ち
   1386          			// +CPIN: PH-SIM PIN    : SIMカードのパスワード待ち
   1387          			// +CPIN: SIM PIN2      : PIN2入力待ち
   1388          			// +CPIN: SIM PUK2      : PUK2入力待ち
   1389          			// +CPIN: PH-NET PIN    : network personalization パスワード 入力待ち
   1390          			case MID_HTTP_SEQ_INIT_RESP_CPINC:
   1391          				for (i=0; i<MID_HTTP_CPIN_MAX; i++) {
   \                     ??mid_HTTP_resp_check2_21: (+1)
   \   00000A4C   0x2600             MOVS     R6,#+0
   \   00000A4E   0xE000             B        ??mid_HTTP_resp_check2_63
   \                     ??mid_HTTP_resp_check2_64: (+1)
   \   00000A50   0x1C76             ADDS     R6,R6,#+1
   \                     ??mid_HTTP_resp_check2_63: (+1)
   \   00000A52   0x2E07             CMP      R6,#+7
   \   00000A54   0xDA11             BGE      ??mid_HTTP_resp_check2_65
   1392          					len = strlen((char const *)&sim_cpin_tbl[i]);
   \   00000A56   0x48CE             LDR      R0,??mid_HTTP_resp_check2_66
   \   00000A58   0x210F             MOVS     R1,#+15
   \   00000A5A   0x4371             MULS     R1,R6,R1
   \   00000A5C   0x1840             ADDS     R0,R0,R1
   \   00000A5E   0x.... 0x....      BL       strlen
   1393          					if ( memcmp(&ptr1[7], &sim_cpin_tbl[i][0], len ) == 0) {
   \   00000A62   0x0002             MOVS     R2,R0
   \   00000A64   0x48CA             LDR      R0,??mid_HTTP_resp_check2_66
   \   00000A66   0x210F             MOVS     R1,#+15
   \   00000A68   0x4371             MULS     R1,R6,R1
   \   00000A6A   0x1841             ADDS     R1,R0,R1
   \   00000A6C   0x1DE0             ADDS     R0,R4,#+7
   \   00000A6E   0x.... 0x....      BL       memcmp
   \   00000A72   0x2800             CMP      R0,#+0
   \   00000A74   0xD1EC             BNE      ??mid_HTTP_resp_check2_64
   1394          						mid_http_work.resp_info.get_info.cpin = i;
   \   00000A76   0x48C7             LDR      R0,??mid_HTTP_resp_check2_66+0x4
   \   00000A78   0x6006             STR      R6,[R0, #+0]
   1395          						break;
   1396          					}
   1397          				}
   1398          				if (i >= MID_HTTP_CPIN_MAX) {
   \                     ??mid_HTTP_resp_check2_65: (+1)
   \   00000A7A   0x2E07             CMP      R6,#+7
   \   00000A7C   0xDB1A             BLT      ??mid_HTTP_resp_check2_67
   1399          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \   00000A7E   0x2001             MOVS     R0,#+1
   \   00000A80   0x490D             LDR      R1,??mid_HTTP_resp_check2_38
   \   00000A82   0x7008             STRB     R0,[R1, #+0]
   1400          					// エラー登録
   1401          					rcv_data1 = (ptr1[7] << 24) + (ptr1[8] << 16) + (ptr1[9] << 8) + ptr1[10];
   \   00000A84   0x79E0             LDRB     R0,[R4, #+7]
   \   00000A86   0x0600             LSLS     R0,R0,#+24
   \   00000A88   0x7A21             LDRB     R1,[R4, #+8]
   \   00000A8A   0x0409             LSLS     R1,R1,#+16
   \   00000A8C   0x1840             ADDS     R0,R0,R1
   \   00000A8E   0x7A61             LDRB     R1,[R4, #+9]
   \   00000A90   0x0209             LSLS     R1,R1,#+8
   \   00000A92   0x1840             ADDS     R0,R0,R1
   \   00000A94   0x7AA1             LDRB     R1,[R4, #+10]
   \   00000A96   0x1841             ADDS     R1,R0,R1
   1402          					rcv_data2 = (ptr1[11] << 24) + (ptr1[12] << 16) + (ptr1[13] << 8) + ptr1[14];
   \   00000A98   0x7AE0             LDRB     R0,[R4, #+11]
   \   00000A9A   0x0600             LSLS     R0,R0,#+24
   \   00000A9C   0x7B22             LDRB     R2,[R4, #+12]
   \   00000A9E   0x0412             LSLS     R2,R2,#+16
   \   00000AA0   0x1880             ADDS     R0,R0,R2
   \   00000AA2   0x7B62             LDRB     R2,[R4, #+13]
   \   00000AA4   0x0212             LSLS     R2,R2,#+8
   \   00000AA6   0x1880             ADDS     R0,R0,R2
   \   00000AA8   0x7BA2             LDRB     R2,[R4, #+14]
   \   00000AAA   0x1882             ADDS     R2,R0,R2
   1403          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000AAC   0x4BCC             LDR      R3,??mid_HTTP_resp_check2_68  ;; 0x57b
   \   00000AAE   0x2010             MOVS     R0,#+16
   \   00000AB0   0x.... 0x....      BL       man_error_set
   1404          				}
   1405          				break;
   \                     ??mid_HTTP_resp_check2_67: (+1)
   \   00000AB4   0xE18C             B        ??mid_HTTP_resp_check2_18
   \   00000AB6   0xBF00             Nop      
   \                     ??mid_HTTP_resp_check2_38:
   \   00000AB8   0x........         DC32     mid_http_work+0x1CB0
   1406          
   1407          			// +CSQ: 31,99
   1408          			case MID_HTTP_SEQ_INIT_RESP_CSQ:
   1409          				if ( (ptr1[8] == ',') 
   1410          					&& ('0' <= ptr1[6]) && (ptr1[6] <= '9')
   1411          					&& ('0' <= ptr1[7]) && (ptr1[7] <= '9') ) {
   \                     ??mid_HTTP_resp_check2_22: (+1)
   \   00000ABC   0x7A20             LDRB     R0,[R4, #+8]
   \   00000ABE   0x282C             CMP      R0,#+44
   \   00000AC0   0xD10C             BNE      ??mid_HTTP_resp_check2_69
   \   00000AC2   0x79A0             LDRB     R0,[R4, #+6]
   \   00000AC4   0x3830             SUBS     R0,R0,#+48
   \   00000AC6   0x280A             CMP      R0,#+10
   \   00000AC8   0xD208             BCS      ??mid_HTTP_resp_check2_69
   \   00000ACA   0x79E0             LDRB     R0,[R4, #+7]
   \   00000ACC   0x3830             SUBS     R0,R0,#+48
   \   00000ACE   0x280A             CMP      R0,#+10
   \   00000AD0   0xD204             BCS      ??mid_HTTP_resp_check2_69
   1412          
   1413          					 bcd_to_num(&ptr1[6], (int8_t *)&mid_http_work.resp_info.get_info.rssi);
   \   00000AD2   0x....             LDR      R1,??DataTable4
   \   00000AD4   0x1DA0             ADDS     R0,R4,#+6
   \   00000AD6   0x.... 0x....      BL       bcd_to_num
   \   00000ADA   0xE02A             B        ??mid_HTTP_resp_check2_70
   1414          				}
   1415          				else if ( (ptr1[7] == ',')
   1416          					&& ('0' <= ptr1[6]) && (ptr1[6] <= '9') ) {
   \                     ??mid_HTTP_resp_check2_69: (+1)
   \   00000ADC   0x79E0             LDRB     R0,[R4, #+7]
   \   00000ADE   0x282C             CMP      R0,#+44
   \   00000AE0   0xD10C             BNE      ??mid_HTTP_resp_check2_71
   \   00000AE2   0x79A0             LDRB     R0,[R4, #+6]
   \   00000AE4   0x3830             SUBS     R0,R0,#+48
   \   00000AE6   0x280A             CMP      R0,#+10
   \   00000AE8   0xD208             BCS      ??mid_HTTP_resp_check2_71
   1417          
   1418          					mid_http_work.resp_info.get_info.rssi = ptr1[6] - '0';
   \   00000AEA   0x79A0             LDRB     R0,[R4, #+6]
   \   00000AEC   0x3830             SUBS     R0,R0,#+48
   \   00000AEE   0x....             LDR      R1,??DataTable4
   \   00000AF0   0x7008             STRB     R0,[R1, #+0]
   \   00000AF2   0xE01E             B        ??mid_HTTP_resp_check2_70
   \                     ??mid_HTTP_resp_check2_39:
   \   00000AF4   0x000004FB         DC32     0x4fb
   \   00000AF8   0x4C 0x54          DC8      "LTE"
   \              0x45 0x00    
   1419          				}
   1420          				else {
   1421          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_71: (+1)
   \   00000AFC   0x2001             MOVS     R0,#+1
   \   00000AFE   0x....             LDR      R1,??DataTable4_1
   \   00000B00   0x7008             STRB     R0,[R1, #+0]
   1422          					// エラー登録
   1423          					rcv_data1 = (ptr1[6] << 24) + (ptr1[7] << 16) + (ptr1[8] << 8) + ptr1[9];
   \   00000B02   0x79A0             LDRB     R0,[R4, #+6]
   \   00000B04   0x0600             LSLS     R0,R0,#+24
   \   00000B06   0x79E1             LDRB     R1,[R4, #+7]
   \   00000B08   0x0409             LSLS     R1,R1,#+16
   \   00000B0A   0x1840             ADDS     R0,R0,R1
   \   00000B0C   0x7A21             LDRB     R1,[R4, #+8]
   \   00000B0E   0x0209             LSLS     R1,R1,#+8
   \   00000B10   0x1840             ADDS     R0,R0,R1
   \   00000B12   0x7A61             LDRB     R1,[R4, #+9]
   \   00000B14   0x1841             ADDS     R1,R0,R1
   1424          					rcv_data2 = (ptr1[10] << 24) + (ptr1[11] << 16) + (ptr1[12] << 8) + ptr1[13];
   \   00000B16   0x7AA0             LDRB     R0,[R4, #+10]
   \   00000B18   0x0600             LSLS     R0,R0,#+24
   \   00000B1A   0x7AE2             LDRB     R2,[R4, #+11]
   \   00000B1C   0x0412             LSLS     R2,R2,#+16
   \   00000B1E   0x1880             ADDS     R0,R0,R2
   \   00000B20   0x7B22             LDRB     R2,[R4, #+12]
   \   00000B22   0x0212             LSLS     R2,R2,#+8
   \   00000B24   0x1880             ADDS     R0,R0,R2
   \   00000B26   0x7B62             LDRB     R2,[R4, #+13]
   \   00000B28   0x1882             ADDS     R2,R0,R2
   1425          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000B2A   0x....             LDR      R3,??DataTable4_2  ;; 0x591
   \   00000B2C   0x2010             MOVS     R0,#+16
   \   00000B2E   0x.... 0x....      BL       man_error_set
   1426          				}
   1427          				break;
   \                     ??mid_HTTP_resp_check2_70: (+1)
   \   00000B32   0xE14D             B        ??mid_HTTP_resp_check2_18
   1428          			
   1429          			// +SIMEI: 861479030001964
   1430          			case MID_HTTP_SEQ_INIT_RESP_SIMEI:
   1431          				if (length1 >= 8+MAN_DATA_IMEI_LENGTH) {
   \                     ??mid_HTTP_resp_check2_23: (+1)
   \   00000B34   0x9803             LDR      R0,[SP, #+12]
   \   00000B36   0x2817             CMP      R0,#+23
   \   00000B38   0xDB0C             BLT      ??mid_HTTP_resp_check2_72
   1432          					memcpy(&mid_http_work.resp_info.get_info.imei[0], &ptr1[8], MAN_DATA_IMEI_LENGTH);
   \   00000B3A   0x220F             MOVS     R2,#+15
   \   00000B3C   0x0021             MOVS     R1,R4
   \   00000B3E   0x3108             ADDS     R1,R1,#+8
   \   00000B40   0x....             LDR      R4,??DataTable4_3
   \   00000B42   0x0020             MOVS     R0,R4
   \   00000B44   0x.... 0x....      BL       __aeabi_memcpy
   1433          					// IMEI設定情報を登録する
   1434          					man_data_set_imei(&mid_http_work.resp_info.get_info.imei[0]);
   \   00000B48   0x....             LDR      R0,??DataTable4_3
   \   00000B4A   0x.... 0x....      BL       man_data_set_imei
   \   00000B4E   0xE01C             B        ??mid_HTTP_resp_check2_73
   \                     ??mid_HTTP_resp_check2_43:
   \   00000B50   0x0000054E         DC32     0x54e
   1435          				}
   1436          				else {
   1437          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_72: (+1)
   \   00000B54   0x2001             MOVS     R0,#+1
   \   00000B56   0x....             LDR      R1,??DataTable4_1
   \   00000B58   0x7008             STRB     R0,[R1, #+0]
   1438          					// エラー登録
   1439          					rcv_data1 = (ptr1[8] << 24) + (ptr1[9] << 16) + (ptr1[10] << 8) + ptr1[11];
   \   00000B5A   0x7A20             LDRB     R0,[R4, #+8]
   \   00000B5C   0x0600             LSLS     R0,R0,#+24
   \   00000B5E   0x7A61             LDRB     R1,[R4, #+9]
   \   00000B60   0x0409             LSLS     R1,R1,#+16
   \   00000B62   0x1840             ADDS     R0,R0,R1
   \   00000B64   0x7AA1             LDRB     R1,[R4, #+10]
   \   00000B66   0x0209             LSLS     R1,R1,#+8
   \   00000B68   0x1840             ADDS     R0,R0,R1
   \   00000B6A   0x7AE1             LDRB     R1,[R4, #+11]
   \   00000B6C   0x1841             ADDS     R1,R0,R1
   1440          					rcv_data2 = (ptr1[12] << 24) + (ptr1[13] << 16) + (ptr1[14] << 8) + ptr1[15];
   \   00000B6E   0x7B20             LDRB     R0,[R4, #+12]
   \   00000B70   0x0600             LSLS     R0,R0,#+24
   \   00000B72   0x7B62             LDRB     R2,[R4, #+13]
   \   00000B74   0x0412             LSLS     R2,R2,#+16
   \   00000B76   0x1880             ADDS     R0,R0,R2
   \   00000B78   0x7BA2             LDRB     R2,[R4, #+14]
   \   00000B7A   0x0212             LSLS     R2,R2,#+8
   \   00000B7C   0x1880             ADDS     R0,R0,R2
   \   00000B7E   0x7BE2             LDRB     R2,[R4, #+15]
   \   00000B80   0x1882             ADDS     R2,R0,R2
   1441          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000B82   0x....             LDR      R3,??DataTable4_4  ;; 0x5a1
   \   00000B84   0x2010             MOVS     R0,#+16
   \   00000B86   0x.... 0x....      BL       man_error_set
   1442          				}
   1443          				break;
   \                     ??mid_HTTP_resp_check2_73: (+1)
   \   00000B8A   0xE121             B        ??mid_HTTP_resp_check2_18
   1444          
   1445          			// +CGMR: LE11B03SIM7500JE
   1446          			case MID_HTTP_SEQ_INIT_RESP_CGMR:
   1447          				if (length1 >= 7+MAN_DATA_REVISION_LENGTH) {
   \                     ??mid_HTTP_resp_check2_24: (+1)
   \   00000B8C   0x9803             LDR      R0,[SP, #+12]
   \   00000B8E   0x2817             CMP      R0,#+23
   \   00000B90   0xDB06             BLT      ??mid_HTTP_resp_check2_74
   1448          					memcpy(&mid_http_work.resp_info.get_info.revision[0], &ptr1[7], MAN_DATA_REVISION_LENGTH);
   \   00000B92   0x2210             MOVS     R2,#+16
   \   00000B94   0x1DE1             ADDS     R1,R4,#+7
   \   00000B96   0x....             LDR      R4,??DataTable4_5
   \   00000B98   0x0020             MOVS     R0,R4
   \   00000B9A   0x.... 0x....      BL       __aeabi_memcpy
   1449          				}
   \   00000B9E   0xE01A             B        ??mid_HTTP_resp_check2_75
   1450          				else {
   1451          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_74: (+1)
   \   00000BA0   0x2001             MOVS     R0,#+1
   \   00000BA2   0x....             LDR      R1,??DataTable4_1
   \   00000BA4   0x7008             STRB     R0,[R1, #+0]
   1452          					// エラー登録
   1453          					rcv_data1 = (ptr1[8] << 24) + (ptr1[9] << 16) + (ptr1[10] << 8) + ptr1[11];
   \   00000BA6   0x7A20             LDRB     R0,[R4, #+8]
   \   00000BA8   0x0600             LSLS     R0,R0,#+24
   \   00000BAA   0x7A61             LDRB     R1,[R4, #+9]
   \   00000BAC   0x0409             LSLS     R1,R1,#+16
   \   00000BAE   0x1840             ADDS     R0,R0,R1
   \   00000BB0   0x7AA1             LDRB     R1,[R4, #+10]
   \   00000BB2   0x0209             LSLS     R1,R1,#+8
   \   00000BB4   0x1840             ADDS     R0,R0,R1
   \   00000BB6   0x7AE1             LDRB     R1,[R4, #+11]
   \   00000BB8   0x1841             ADDS     R1,R0,R1
   1454          					rcv_data2 = (ptr1[12] << 24) + (ptr1[13] << 16) + (ptr1[14] << 8) + ptr1[15];
   \   00000BBA   0x7B20             LDRB     R0,[R4, #+12]
   \   00000BBC   0x0600             LSLS     R0,R0,#+24
   \   00000BBE   0x7B62             LDRB     R2,[R4, #+13]
   \   00000BC0   0x0412             LSLS     R2,R2,#+16
   \   00000BC2   0x1880             ADDS     R0,R0,R2
   \   00000BC4   0x7BA2             LDRB     R2,[R4, #+14]
   \   00000BC6   0x0212             LSLS     R2,R2,#+8
   \   00000BC8   0x1880             ADDS     R0,R0,R2
   \   00000BCA   0x7BE2             LDRB     R2,[R4, #+15]
   \   00000BCC   0x1882             ADDS     R2,R0,R2
   1455          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000BCE   0x....             LDR      R3,??DataTable4_6  ;; 0x5af
   \   00000BD0   0x2010             MOVS     R0,#+16
   \   00000BD2   0x.... 0x....      BL       man_error_set
   1456          				}
   1457          				break;
   \                     ??mid_HTTP_resp_check2_75: (+1)
   \   00000BD6   0xE0FB             B        ??mid_HTTP_resp_check2_18
   \                     ??mid_HTTP_resp_check2_53:
   \   00000BD8   0x........         DC32     mid_http_work+0x1D08
   1458          
   1459          			// +IPADDR: ***.***.***.***
   1460          			case MID_HTTP_SEQ_INIT_RESP_IPADDR:
   1461          				// CR + LFはコピーしない
   1462          				if ( (length1-9-2) <= MAN_DATA_IP_LENGTH ) {
   \                     ??mid_HTTP_resp_check2_25: (+1)
   \   00000BDC   0x9803             LDR      R0,[SP, #+12]
   \   00000BDE   0x380B             SUBS     R0,R0,#+11
   \   00000BE0   0x2810             CMP      R0,#+16
   \   00000BE2   0xDA11             BGE      ??mid_HTTP_resp_check2_76
   1463          					memset(&mid_http_work.resp_info.get_data.ip[0], 0, MAN_DATA_IP_LENGTH+1);
   \   00000BE4   0x2110             MOVS     R1,#+16
   \   00000BE6   0x2200             MOVS     R2,#+0
   \   00000BE8   0x....             LDR      R5,??DataTable4_7
   \   00000BEA   0x0028             MOVS     R0,R5
   \   00000BEC   0x.... 0x....      BL       __aeabi_memset
   1464          					memcpy(&mid_http_work.resp_info.get_data.ip[0], &ptr1[9], length1-9-2);
   \   00000BF0   0x9A03             LDR      R2,[SP, #+12]
   \   00000BF2   0x3A0B             SUBS     R2,R2,#+11
   \   00000BF4   0x0021             MOVS     R1,R4
   \   00000BF6   0x3109             ADDS     R1,R1,#+9
   \   00000BF8   0x....             LDR      R4,??DataTable4_7
   \   00000BFA   0x0020             MOVS     R0,R4
   \   00000BFC   0x.... 0x....      BL       __aeabi_memcpy
   1465          				}
   \   00000C00   0xE01D             B        ??mid_HTTP_resp_check2_77
   \   00000C02   0xBF00             Nop      
   \                     ??mid_HTTP_resp_check2_54:
   \   00000C04   0x00000521         DC32     0x521
   1466          				else {
   1467          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_76: (+1)
   \   00000C08   0x2001             MOVS     R0,#+1
   \   00000C0A   0x....             LDR      R1,??DataTable4_1
   \   00000C0C   0x7008             STRB     R0,[R1, #+0]
   1468          					// エラー登録
   1469          					rcv_data1 = (ptr1[8] << 24) + (ptr1[9] << 16) + (ptr1[10] << 8) + ptr1[11];
   \   00000C0E   0x7A20             LDRB     R0,[R4, #+8]
   \   00000C10   0x0600             LSLS     R0,R0,#+24
   \   00000C12   0x7A61             LDRB     R1,[R4, #+9]
   \   00000C14   0x0409             LSLS     R1,R1,#+16
   \   00000C16   0x1840             ADDS     R0,R0,R1
   \   00000C18   0x7AA1             LDRB     R1,[R4, #+10]
   \   00000C1A   0x0209             LSLS     R1,R1,#+8
   \   00000C1C   0x1840             ADDS     R0,R0,R1
   \   00000C1E   0x7AE1             LDRB     R1,[R4, #+11]
   \   00000C20   0x1841             ADDS     R1,R0,R1
   1470          					rcv_data2 = (ptr1[12] << 24) + (ptr1[13] << 16) + (ptr1[14] << 8) + ptr1[15];
   \   00000C22   0x7B20             LDRB     R0,[R4, #+12]
   \   00000C24   0x0600             LSLS     R0,R0,#+24
   \   00000C26   0x7B62             LDRB     R2,[R4, #+13]
   \   00000C28   0x0412             LSLS     R2,R2,#+16
   \   00000C2A   0x1880             ADDS     R0,R0,R2
   \   00000C2C   0x7BA2             LDRB     R2,[R4, #+14]
   \   00000C2E   0x0212             LSLS     R2,R2,#+8
   \   00000C30   0x1880             ADDS     R0,R0,R2
   \   00000C32   0x7BE2             LDRB     R2,[R4, #+15]
   \   00000C34   0x1882             ADDS     R2,R0,R2
   1471          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000C36   0x....             LDR      R3,??DataTable4_8  ;; 0x5bf
   \   00000C38   0x2010             MOVS     R0,#+16
   \   00000C3A   0x.... 0x....      BL       man_error_set
   1472          				}
   1473          				break;
   \                     ??mid_HTTP_resp_check2_77: (+1)
   \   00000C3E   0xE0C7             B        ??mid_HTTP_resp_check2_18
   \                     ??mid_HTTP_resp_check2_56:
   \   00000C40   0x0000052E         DC32     0x52e
   1474          
   1475          			case MID_HTTP_SEQ_LTE_RESP_CSQ:
   1476          				if ( (ptr1[8] == ',') 
   1477          					&& ('0' <= ptr1[6]) && (ptr1[6] <= '9')
   1478          					&& ('0' <= ptr1[7]) && (ptr1[7] <= '9') ) {
   \                     ??mid_HTTP_resp_check2_26: (+1)
   \   00000C44   0x7A20             LDRB     R0,[R4, #+8]
   \   00000C46   0x282C             CMP      R0,#+44
   \   00000C48   0xD10C             BNE      ??mid_HTTP_resp_check2_78
   \   00000C4A   0x79A0             LDRB     R0,[R4, #+6]
   \   00000C4C   0x3830             SUBS     R0,R0,#+48
   \   00000C4E   0x280A             CMP      R0,#+10
   \   00000C50   0xD208             BCS      ??mid_HTTP_resp_check2_78
   \   00000C52   0x79E0             LDRB     R0,[R4, #+7]
   \   00000C54   0x3830             SUBS     R0,R0,#+48
   \   00000C56   0x280A             CMP      R0,#+10
   \   00000C58   0xD204             BCS      ??mid_HTTP_resp_check2_78
   1479          
   1480          					 bcd_to_num(&ptr1[6], (int8_t *)&mid_http_work.resp_info.get_data.rssi);
   \   00000C5A   0x....             LDR      R1,??DataTable4_9
   \   00000C5C   0x1DA0             ADDS     R0,R4,#+6
   \   00000C5E   0x.... 0x....      BL       bcd_to_num
   \   00000C62   0xE026             B        ??mid_HTTP_resp_check2_79
   1481          				}
   1482          				else if ( (ptr1[7] == ',')
   1483          					&& ('0' <= ptr1[6]) && (ptr1[6] <= '9') ) {
   \                     ??mid_HTTP_resp_check2_78: (+1)
   \   00000C64   0x79E0             LDRB     R0,[R4, #+7]
   \   00000C66   0x282C             CMP      R0,#+44
   \   00000C68   0xD108             BNE      ??mid_HTTP_resp_check2_80
   \   00000C6A   0x79A0             LDRB     R0,[R4, #+6]
   \   00000C6C   0x3830             SUBS     R0,R0,#+48
   \   00000C6E   0x280A             CMP      R0,#+10
   \   00000C70   0xD204             BCS      ??mid_HTTP_resp_check2_80
   1484          
   1485          					mid_http_work.resp_info.get_data.rssi = ptr1[6] - '0';
   \   00000C72   0x79A0             LDRB     R0,[R4, #+6]
   \   00000C74   0x3830             SUBS     R0,R0,#+48
   \   00000C76   0x....             LDR      R1,??DataTable4_9
   \   00000C78   0x7008             STRB     R0,[R1, #+0]
   \   00000C7A   0xE01A             B        ??mid_HTTP_resp_check2_79
   1486          				}
   1487          				else {
   1488          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_resp_check2_80: (+1)
   \   00000C7C   0x2001             MOVS     R0,#+1
   \   00000C7E   0x....             LDR      R1,??DataTable4_1
   \   00000C80   0x7008             STRB     R0,[R1, #+0]
   1489          					// エラー登録
   1490          					rcv_data1 = (ptr1[6] << 24) + (ptr1[7] << 16) + (ptr1[8] << 8) + ptr1[9];
   \   00000C82   0x79A0             LDRB     R0,[R4, #+6]
   \   00000C84   0x0600             LSLS     R0,R0,#+24
   \   00000C86   0x79E1             LDRB     R1,[R4, #+7]
   \   00000C88   0x0409             LSLS     R1,R1,#+16
   \   00000C8A   0x1840             ADDS     R0,R0,R1
   \   00000C8C   0x7A21             LDRB     R1,[R4, #+8]
   \   00000C8E   0x0209             LSLS     R1,R1,#+8
   \   00000C90   0x1840             ADDS     R0,R0,R1
   \   00000C92   0x7A61             LDRB     R1,[R4, #+9]
   \   00000C94   0x1841             ADDS     R1,R0,R1
   1491          					rcv_data2 = (ptr1[10] << 24) + (ptr1[11] << 16) + (ptr1[12] << 8) + ptr1[13];
   \   00000C96   0x7AA0             LDRB     R0,[R4, #+10]
   \   00000C98   0x0600             LSLS     R0,R0,#+24
   \   00000C9A   0x7AE2             LDRB     R2,[R4, #+11]
   \   00000C9C   0x0412             LSLS     R2,R2,#+16
   \   00000C9E   0x1880             ADDS     R0,R0,R2
   \   00000CA0   0x7B22             LDRB     R2,[R4, #+12]
   \   00000CA2   0x0212             LSLS     R2,R2,#+8
   \   00000CA4   0x1880             ADDS     R0,R0,R2
   \   00000CA6   0x7B62             LDRB     R2,[R4, #+13]
   \   00000CA8   0x1882             ADDS     R2,R0,R2
   1492          					man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000CAA   0x....             LDR      R3,??DataTable4_10  ;; 0x5d4
   \   00000CAC   0x2010             MOVS     R0,#+16
   \   00000CAE   0x.... 0x....      BL       man_error_set
   1493          				}
   1494          				break;
   \                     ??mid_HTTP_resp_check2_79: (+1)
   \   00000CB2   0xE08D             B        ??mid_HTTP_resp_check2_18
   \                     ??mid_HTTP_resp_check2_59:
   \   00000CB4   0x........         DC32     mid_http_work+0x1D04
   \   00000CB8   0x00000541         DC32     0x541
   1495                                          
   1496                                  case MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN_CDNSGIP:
   1497                                  case MID_HTTP_SEQ_UDP_RESP_CIPSEND_CDNSGIP:
   1498                                      ptr1=data1;
   \                     ??mid_HTTP_resp_check2_28: (+1)
   \   00000CBC   0x002C             MOVS     R4,R5
   1499                                     int num=0;
   \   00000CBE   0x2000             MOVS     R0,#+0
   \   00000CC0   0xE001             B        ??mid_HTTP_resp_check2_81
   1500                                     while(1)
   1501                                     {
   1502                                       if(*ptr1 == ',')
   1503                                       {
   1504                                         if(num >= 1)
   1505                                         {
   1506                                           break;
   1507                                         }
   1508                                         num++;
   \                     ??mid_HTTP_resp_check2_82: (+1)
   \   00000CC2   0x1C40             ADDS     R0,R0,#+1
   1509                                       }
   1510                                       ptr1++;
   \                     ??mid_HTTP_resp_check2_83: (+1)
   \   00000CC4   0x1C64             ADDS     R4,R4,#+1
   \                     ??mid_HTTP_resp_check2_81: (+1)
   \   00000CC6   0x7821             LDRB     R1,[R4, #+0]
   \   00000CC8   0x292C             CMP      R1,#+44
   \   00000CCA   0xD1FB             BNE      ??mid_HTTP_resp_check2_83
   \   00000CCC   0x2801             CMP      R0,#+1
   \   00000CCE   0xDBF8             BLT      ??mid_HTTP_resp_check2_82
   1511                                     }     
   1512                                     ptr1+=2;
   \   00000CD0   0x1CA4             ADDS     R4,R4,#+2
   1513                                     int i=0;
   \   00000CD2   0x2000             MOVS     R0,#+0
   \   00000CD4   0xE005             B        ??mid_HTTP_resp_check2_84
   1514                                     while(*ptr1 != '"')
   1515                                     {
   1516                                       mid_http_udpsend_work.ip_addr[i++] = *ptr1++;
   \                     ??mid_HTTP_resp_check2_85: (+1)
   \   00000CD6   0x7821             LDRB     R1,[R4, #+0]
   \   00000CD8   0x....             LDR      R2,??DataTable4_11
   \   00000CDA   0x1812             ADDS     R2,R2,R0
   \   00000CDC   0x7411             STRB     R1,[R2, #+16]
   \   00000CDE   0x1C64             ADDS     R4,R4,#+1
   \   00000CE0   0x1C40             ADDS     R0,R0,#+1
   1517                                     }
   \                     ??mid_HTTP_resp_check2_84: (+1)
   \   00000CE2   0x7821             LDRB     R1,[R4, #+0]
   \   00000CE4   0x2922             CMP      R1,#+34
   \   00000CE6   0xD1F6             BNE      ??mid_HTTP_resp_check2_85
   1518                                     mid_http_udpsend_work.ip_addr[i] = 0;
   \   00000CE8   0x2100             MOVS     R1,#+0
   \   00000CEA   0x....             LDR      R2,??DataTable4_11
   \   00000CEC   0x1810             ADDS     R0,R2,R0
   \   00000CEE   0x7401             STRB     R1,[R0, #+16]
   1519                                    break;
   \   00000CF0   0xE06E             B        ??mid_HTTP_resp_check2_18
   \   00000CF2   0xBF00             Nop      
   \                     ??mid_HTTP_resp_check2_60:
   \   00000CF4   0x........         DC32     ?_39
   \   00000CF8   0xFFFFFC19         DC32     0xfffffc19
   1520                                    
   1521          			default:
   1522          				break;
   \                     ??mid_HTTP_resp_check2_29: (+1)
   \   00000CFC   0xE068             B        ??mid_HTTP_resp_check2_18
   1523          			}
   1524          		}
   1525          	}
   1526          
   1527          	// 無応答
   1528          	else if (status == CTRL_SM7500JE_STATUS_TIMEOUT) {
   \                     ??mid_HTTP_resp_check2_0: (+1)
   \   00000CFE   0x2100             MOVS     R1,#+0
   \   00000D00   0x43C9             MVNS     R1,R1            ;; #-1
   \   00000D02   0x4288             CMP      R0,R1
   \   00000D04   0xD148             BNE      ??mid_HTTP_resp_check2_86
   1529          		mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_TIMEOUT;
   \   00000D06   0x2002             MOVS     R0,#+2
   \   00000D08   0x....             LDR      R1,??DataTable4_1
   \   00000D0A   0x7008             STRB     R0,[R1, #+0]
   1530          
   1531          		// コマンド1がOKの場合はOKと判断する
   1532          		if (cmd_tbl[id-1].special == 1) {
   \   00000D0C   0x....             LDR      R0,??DataTable4_12
   \   00000D0E   0x990A             LDR      R1,[SP, #+40]
   \   00000D10   0x2220             MOVS     R2,#+32
   \   00000D12   0x4351             MULS     R1,R2,R1
   \   00000D14   0x1840             ADDS     R0,R0,R1
   \   00000D16   0x1F00             SUBS     R0,R0,#+4
   \   00000D18   0x6800             LDR      R0,[R0, #+0]
   \   00000D1A   0x2801             CMP      R0,#+1
   \   00000D1C   0xD11C             BNE      ??mid_HTTP_resp_check2_87
   1533          			if ( memcmp(data1, cmd_tbl[id-1].resp_ok1, strlen((const char *)cmd_tbl[id-1].resp_ok1)) == 0) {
   \   00000D1E   0x....             LDR      R0,??DataTable4_12
   \   00000D20   0x990A             LDR      R1,[SP, #+40]
   \   00000D22   0x2220             MOVS     R2,#+32
   \   00000D24   0x4351             MULS     R1,R2,R1
   \   00000D26   0x1840             ADDS     R0,R0,R1
   \   00000D28   0x381C             SUBS     R0,R0,#+28
   \   00000D2A   0x6800             LDR      R0,[R0, #+0]
   \   00000D2C   0x.... 0x....      BL       strlen
   \   00000D30   0x0002             MOVS     R2,R0
   \   00000D32   0x....             LDR      R0,??DataTable4_12
   \   00000D34   0x990A             LDR      R1,[SP, #+40]
   \   00000D36   0x2320             MOVS     R3,#+32
   \   00000D38   0x4359             MULS     R1,R3,R1
   \   00000D3A   0x1840             ADDS     R0,R0,R1
   \   00000D3C   0x381C             SUBS     R0,R0,#+28
   \   00000D3E   0x6801             LDR      R1,[R0, #+0]
   \   00000D40   0x0028             MOVS     R0,R5
   \   00000D42   0x.... 0x....      BL       memcmp
   \   00000D46   0x2800             CMP      R0,#+0
   \   00000D48   0xD112             BNE      ??mid_HTTP_resp_check2_88
   1534          				mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_OK;
   \   00000D4A   0x2000             MOVS     R0,#+0
   \   00000D4C   0x....             LDR      R1,??DataTable4_1
   \   00000D4E   0x7008             STRB     R0,[R1, #+0]
   \   00000D50   0xE00E             B        ??mid_HTTP_resp_check2_88
   \   00000D52   0xBF00             Nop      
   \                     ??mid_HTTP_resp_check2_62:
   \   00000D54   0x00000563         DC32     0x563
   1535          			}
   1536          		}
   1537          		else if (cmd_tbl[id-1].special == 3) {   // SIM7500 再起動
   \                     ??mid_HTTP_resp_check2_87: (+1)
   \   00000D58   0x....             LDR      R0,??DataTable4_12
   \   00000D5A   0x990A             LDR      R1,[SP, #+40]
   \   00000D5C   0x2220             MOVS     R2,#+32
   \   00000D5E   0x4351             MULS     R1,R2,R1
   \   00000D60   0x1840             ADDS     R0,R0,R1
   \   00000D62   0x1F00             SUBS     R0,R0,#+4
   \   00000D64   0x6800             LDR      R0,[R0, #+0]
   \   00000D66   0x2803             CMP      R0,#+3
   \   00000D68   0xD102             BNE      ??mid_HTTP_resp_check2_88
   1538                            mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_RESTART;
   \   00000D6A   0x2007             MOVS     R0,#+7
   \   00000D6C   0x....             LDR      R1,??DataTable4_1
   \   00000D6E   0x7008             STRB     R0,[R1, #+0]
   1539          		}
   1540          
   1541          		// エラー登録
   1542          		rcv_data1 = (data1[0] << 24) + (data1[1] << 16) + (data1[2] << 8) + data1[3];
   \                     ??mid_HTTP_resp_check2_88: (+1)
   \   00000D70   0x7828             LDRB     R0,[R5, #+0]
   \   00000D72   0x0600             LSLS     R0,R0,#+24
   \   00000D74   0x7869             LDRB     R1,[R5, #+1]
   \   00000D76   0x0409             LSLS     R1,R1,#+16
   \   00000D78   0x1840             ADDS     R0,R0,R1
   \   00000D7A   0x78A9             LDRB     R1,[R5, #+2]
   \   00000D7C   0x0209             LSLS     R1,R1,#+8
   \   00000D7E   0x1840             ADDS     R0,R0,R1
   \   00000D80   0x78E9             LDRB     R1,[R5, #+3]
   \   00000D82   0x1841             ADDS     R1,R0,R1
   1543          		man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, id);
   \   00000D84   0x....             LDR      R3,??DataTable4_13  ;; 0x607
   \   00000D86   0x9A0A             LDR      R2,[SP, #+40]
   \   00000D88   0x2010             MOVS     R0,#+16
   \   00000D8A   0x.... 0x....      BL       man_error_set
   \   00000D8E   0xE01F             B        ??mid_HTTP_resp_check2_18
   \                     ??mid_HTTP_resp_check2_66:
   \   00000D90   0x........         DC32     sim_cpin_tbl
   \   00000D94   0x........         DC32     mid_http_work+0x1CCC
   1544          	}
   1545          
   1546          	// 異常
   1547          	else {
   1548          		mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_FAULT;
   \                     ??mid_HTTP_resp_check2_86: (+1)
   \   00000D98   0x2005             MOVS     R0,#+5
   \   00000D9A   0x....             LDR      R1,??DataTable4_1
   \   00000D9C   0x7008             STRB     R0,[R1, #+0]
   1549          		// エラー登録
   1550          		rcv_data1 = (data1[0] << 24) + (data1[1] << 16) + (data1[2] << 8) + data1[3];
   \   00000D9E   0x7828             LDRB     R0,[R5, #+0]
   \   00000DA0   0x0600             LSLS     R0,R0,#+24
   \   00000DA2   0x7869             LDRB     R1,[R5, #+1]
   \   00000DA4   0x0409             LSLS     R1,R1,#+16
   \   00000DA6   0x1840             ADDS     R0,R0,R1
   \   00000DA8   0x78A9             LDRB     R1,[R5, #+2]
   \   00000DAA   0x0209             LSLS     R1,R1,#+8
   \   00000DAC   0x1840             ADDS     R0,R0,R1
   \   00000DAE   0x78E9             LDRB     R1,[R5, #+3]
   \   00000DB0   0x1841             ADDS     R1,R0,R1
   1551          		rcv_data2 = (data2[0] << 24) + (data2[1] << 16) + (data2[2] << 8) + data2[3];
   \   00000DB2   0x7838             LDRB     R0,[R7, #+0]
   \   00000DB4   0x0600             LSLS     R0,R0,#+24
   \   00000DB6   0x787A             LDRB     R2,[R7, #+1]
   \   00000DB8   0x0412             LSLS     R2,R2,#+16
   \   00000DBA   0x1880             ADDS     R0,R0,R2
   \   00000DBC   0x78BA             LDRB     R2,[R7, #+2]
   \   00000DBE   0x0212             LSLS     R2,R2,#+8
   \   00000DC0   0x1880             ADDS     R0,R0,R2
   \   00000DC2   0x78FA             LDRB     R2,[R7, #+3]
   \   00000DC4   0x1882             ADDS     R2,R0,R2
   1552          		man_error_setting(MAN_ERROR_MID_HTTP, rcv_data1, rcv_data2);
   \   00000DC6   0x23C2             MOVS     R3,#+194
   \   00000DC8   0x00DB             LSLS     R3,R3,#+3        ;; #+1552
   \   00000DCA   0x2010             MOVS     R0,#+16
   \   00000DCC   0x.... 0x....      BL       man_error_set
   1553          	}
   1554          
   1555          	mid_http_work.resp_info.id = id;
   \                     ??mid_HTTP_resp_check2_18: (+1)
   \   00000DD0   0x980A             LDR      R0,[SP, #+40]
   \   00000DD2   0x....             LDR      R1,??DataTable4_14
   \   00000DD4   0x6008             STR      R0,[R1, #+0]
   1556          	// 受信済み
   1557          	mid_http_work.resp_info.flag = 1;
   \   00000DD6   0x2001             MOVS     R0,#+1
   \   00000DD8   0x....             LDR      R1,??DataTable4_15
   \   00000DDA   0x6008             STR      R0,[R1, #+0]
   1558          }
   \   00000DDC   0xB005             ADD      SP,SP,#+20
   \   00000DDE   0xBDF0             POP      {R4-R7,PC}       ;; return
   \                     ??mid_HTTP_resp_check2_68:
   \   00000DE0   0x0000057B         DC32     0x57b
   1559          
   1560          
   1561          
   1562          
   1563          
   1564          
   1565          /********************************************************************/
   1566          /*!
   1567           * \name	mid_HTTP_send_command
   1568           * \brief	HTTPコマンド送信処理
   1569           * \param	id        : ユニークID
   1570           * \return   0: 成功
   1571           *          -1:失敗
   1572           * \note	必要時に、呼ばれること
   1573           */
   1574          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
   1575          static int32_t mid_HTTP_send_command(int32_t id)
   1576          {
   \                     mid_HTTP_send_command: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x0006             MOVS     R6,R0
   1577          	int32_t				ret=0;
   \   00000006   0x2400             MOVS     R4,#+0
   1578          	int8_t				*data;
   1579          	int32_t				length;
   1580          	clock_info_t		jst_clock;
   1581          	clock_info_t		*utc_clock;
   1582          	int32_t				timeout;
   1583          	man_data_num_gprs_t			*gprs = man_data_get_setting_gprs();
   \   00000008   0x.... 0x....      BL       man_data_get_setting_gprs
   \   0000000C   0x0005             MOVS     R5,R0
   1584          	man_data_num_ftp_t			*ftp_info = man_data_get_ftp_info();
   \   0000000E   0x.... 0x....      BL       man_data_get_ftp_info
   \   00000012   0x0007             MOVS     R7,R0
   1585          
   1586          	// 送信バッファクリア
   1587          	memset(&mid_http_work.snd_buff[0], 0, MID_HTTP_SND_BUFF_MAX);
   \   00000014   0x49AB             LDR      R1,??mid_HTTP_send_command_0  ;; 0x474
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x48AB             LDR      R0,??mid_HTTP_send_command_0+0x4
   \   0000001A   0x9000             STR      R0,[SP, #+0]
   \   0000001C   0x9800             LDR      R0,[SP, #+0]
   \   0000001E   0x.... 0x....      BL       __aeabi_memset
   \   00000022   0x9800             LDR      R0,[SP, #+0]
   1588          	
   1589          	if (mid_http_work.resp_info.flag == 0) {
   \   00000024   0x48A9             LDR      R0,??mid_HTTP_send_command_0+0x8
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD000             BEQ      .+4
   \   0000002C   0xE248             B        ??mid_HTTP_send_command_1
   1590          		data = (int8_t *)&mid_http_work.snd_buff[0];
   \   0000002E   0x48A6             LDR      R0,??mid_HTTP_send_command_0+0x4
   1591          		timeout = cmd_tbl[id-1].timeout;
   \   00000030   0x49A7             LDR      R1,??mid_HTTP_send_command_0+0xC
   \   00000032   0x2220             MOVS     R2,#+32
   \   00000034   0x4372             MULS     R2,R6,R2
   \   00000036   0x1889             ADDS     R1,R1,R2
   \   00000038   0x390C             SUBS     R1,R1,#+12
   \   0000003A   0x6809             LDR      R1,[R1, #+0]
   \   0000003C   0x9101             STR      R1,[SP, #+4]
   1592          
   1593          		switch (id) {
   \   0000003E   0x2E01             CMP      R6,#+1
   \   00000040   0xD100             BNE      .+4
   \   00000042   0xE08C             B        ??mid_HTTP_send_command_2
   \   00000044   0xD200             BCS      .+4
   \   00000046   0xE1D1             B        ??mid_HTTP_send_command_3
   \   00000048   0x2E03             CMP      R6,#+3
   \   0000004A   0xD100             BNE      .+4
   \   0000004C   0xE08F             B        ??mid_HTTP_send_command_4
   \   0000004E   0xD200             BCS      .+4
   \   00000050   0xE089             B        ??mid_HTTP_send_command_5
   \   00000052   0x2E05             CMP      R6,#+5
   \   00000054   0xD100             BNE      .+4
   \   00000056   0xE092             B        ??mid_HTTP_send_command_6
   \   00000058   0xD200             BCS      .+4
   \   0000005A   0xE08C             B        ??mid_HTTP_send_command_7
   \   0000005C   0x2E07             CMP      R6,#+7
   \   0000005E   0xD100             BNE      .+4
   \   00000060   0xE095             B        ??mid_HTTP_send_command_8
   \   00000062   0xD200             BCS      .+4
   \   00000064   0xE08F             B        ??mid_HTTP_send_command_9
   \   00000066   0x2E09             CMP      R6,#+9
   \   00000068   0xD100             BNE      .+4
   \   0000006A   0xE098             B        ??mid_HTTP_send_command_10
   \   0000006C   0xD200             BCS      .+4
   \   0000006E   0xE092             B        ??mid_HTTP_send_command_11
   \   00000070   0x2E0B             CMP      R6,#+11
   \   00000072   0xD100             BNE      .+4
   \   00000074   0xE09B             B        ??mid_HTTP_send_command_12
   \   00000076   0xD200             BCS      .+4
   \   00000078   0xE095             B        ??mid_HTTP_send_command_13
   \   0000007A   0x2E0D             CMP      R6,#+13
   \   0000007C   0xD100             BNE      .+4
   \   0000007E   0xE09E             B        ??mid_HTTP_send_command_14
   \   00000080   0xD200             BCS      .+4
   \   00000082   0xE098             B        ??mid_HTTP_send_command_15
   \   00000084   0x2E0F             CMP      R6,#+15
   \   00000086   0xD100             BNE      .+4
   \   00000088   0xE0A2             B        ??mid_HTTP_send_command_16
   \   0000008A   0xD200             BCS      .+4
   \   0000008C   0xE09B             B        ??mid_HTTP_send_command_17
   \   0000008E   0x2E11             CMP      R6,#+17
   \   00000090   0xD100             BNE      .+4
   \   00000092   0xE0A9             B        ??mid_HTTP_send_command_18
   \   00000094   0xD200             BCS      .+4
   \   00000096   0xE0A3             B        ??mid_HTTP_send_command_19
   \   00000098   0x2E13             CMP      R6,#+19
   \   0000009A   0xD100             BNE      .+4
   \   0000009C   0xE0AC             B        ??mid_HTTP_send_command_20
   \   0000009E   0xD200             BCS      .+4
   \   000000A0   0xE0A6             B        ??mid_HTTP_send_command_21
   \   000000A2   0x2E15             CMP      R6,#+21
   \   000000A4   0xD100             BNE      .+4
   \   000000A6   0xE0AF             B        ??mid_HTTP_send_command_22
   \   000000A8   0xD200             BCS      .+4
   \   000000AA   0xE0A9             B        ??mid_HTTP_send_command_23
   \   000000AC   0x2E17             CMP      R6,#+23
   \   000000AE   0xD100             BNE      .+4
   \   000000B0   0xE0B2             B        ??mid_HTTP_send_command_24
   \   000000B2   0xD200             BCS      .+4
   \   000000B4   0xE0AC             B        ??mid_HTTP_send_command_25
   \   000000B6   0x2E19             CMP      R6,#+25
   \   000000B8   0xD100             BNE      .+4
   \   000000BA   0xE0BA             B        ??mid_HTTP_send_command_26
   \   000000BC   0xD200             BCS      .+4
   \   000000BE   0xE0B1             B        ??mid_HTTP_send_command_27
   \   000000C0   0x2E1B             CMP      R6,#+27
   \   000000C2   0xD100             BNE      .+4
   \   000000C4   0xE0CD             B        ??mid_HTTP_send_command_28
   \   000000C6   0xD200             BCS      .+4
   \   000000C8   0xE0C7             B        ??mid_HTTP_send_command_29
   \   000000CA   0x2E1D             CMP      R6,#+29
   \   000000CC   0xD100             BNE      .+4
   \   000000CE   0xE0D4             B        ??mid_HTTP_send_command_30
   \   000000D0   0xD200             BCS      .+4
   \   000000D2   0xE0CE             B        ??mid_HTTP_send_command_31
   \   000000D4   0x2E1F             CMP      R6,#+31
   \   000000D6   0xD100             BNE      .+4
   \   000000D8   0xE0E7             B        ??mid_HTTP_send_command_32
   \   000000DA   0xD200             BCS      .+4
   \   000000DC   0xE0E1             B        ??mid_HTTP_send_command_33
   \   000000DE   0x2E21             CMP      R6,#+33
   \   000000E0   0xD100             BNE      .+4
   \   000000E2   0xE0F7             B        ??mid_HTTP_send_command_34
   \   000000E4   0xD200             BCS      .+4
   \   000000E6   0xE0E4             B        ??mid_HTTP_send_command_35
   \   000000E8   0x2E23             CMP      R6,#+35
   \   000000EA   0xD100             BNE      .+4
   \   000000EC   0xE10A             B        ??mid_HTTP_send_command_36
   \   000000EE   0xD200             BCS      .+4
   \   000000F0   0xE104             B        ??mid_HTTP_send_command_37
   \   000000F2   0x2E25             CMP      R6,#+37
   \   000000F4   0xD100             BNE      .+4
   \   000000F6   0xE10D             B        ??mid_HTTP_send_command_38
   \   000000F8   0xD200             BCS      .+4
   \   000000FA   0xE107             B        ??mid_HTTP_send_command_39
   \   000000FC   0x2E27             CMP      R6,#+39
   \   000000FE   0xD100             BNE      .+4
   \   00000100   0xE111             B        ??mid_HTTP_send_command_40
   \   00000102   0xD200             BCS      .+4
   \   00000104   0xE10B             B        ??mid_HTTP_send_command_41
   \   00000106   0x2E29             CMP      R6,#+41
   \   00000108   0xD100             BNE      .+4
   \   0000010A   0xE119             B        ??mid_HTTP_send_command_42
   \   0000010C   0xD200             BCS      .+4
   \   0000010E   0xE112             B        ??mid_HTTP_send_command_43
   \   00000110   0x2E2B             CMP      R6,#+43
   \   00000112   0xD100             BNE      .+4
   \   00000114   0xE11E             B        ??mid_HTTP_send_command_44
   \   00000116   0xD200             BCS      .+4
   \   00000118   0xE118             B        ??mid_HTTP_send_command_45
   \   0000011A   0x2E2D             CMP      R6,#+45
   \   0000011C   0xD100             BNE      .+4
   \   0000011E   0xE123             B        ??mid_HTTP_send_command_46
   \   00000120   0xD200             BCS      .+4
   \   00000122   0xE11B             B        ??mid_HTTP_send_command_47
   \   00000124   0x2E2F             CMP      R6,#+47
   \   00000126   0xD100             BNE      .+4
   \   00000128   0xE12C             B        ??mid_HTTP_send_command_48
   \   0000012A   0xD200             BCS      .+4
   \   0000012C   0xE122             B        ??mid_HTTP_send_command_49
   \   0000012E   0x2E31             CMP      R6,#+49
   \   00000130   0xD100             BNE      .+4
   \   00000132   0xE133             B        ??mid_HTTP_send_command_50
   \   00000134   0xD200             BCS      .+4
   \   00000136   0xE129             B        ??mid_HTTP_send_command_51
   \   00000138   0x2E33             CMP      R6,#+51
   \   0000013A   0xD100             BNE      .+4
   \   0000013C   0xE132             B        ??mid_HTTP_send_command_52
   \   0000013E   0xD200             BCS      .+4
   \   00000140   0xE130             B        ??mid_HTTP_send_command_52
   \   00000142   0x2E35             CMP      R6,#+53
   \   00000144   0xD100             BNE      .+4
   \   00000146   0xE135             B        ??mid_HTTP_send_command_53
   \   00000148   0xD200             BCS      .+4
   \   0000014A   0xE12F             B        ??mid_HTTP_send_command_54
   \   0000014C   0x2E37             CMP      R6,#+55
   \   0000014E   0xD100             BNE      .+4
   \   00000150   0xE138             B        ??mid_HTTP_send_command_55
   \   00000152   0xD200             BCS      .+4
   \   00000154   0xE136             B        ??mid_HTTP_send_command_55
   \   00000156   0x2E38             CMP      R6,#+56
   \   00000158   0xD100             BNE      .+4
   \   0000015A   0xE12F             B        ??mid_HTTP_send_command_56
   \   0000015C   0xE146             B        ??mid_HTTP_send_command_3
   1594          		case MID_HTTP_SEQ_INIT_RESP_ATE0:
   1595          			sprintf((char *)data, "ATE0\r");
   \                     ??mid_HTTP_send_command_2: (+1)
   \   0000015E   0x499C             LDR      R1,??mid_HTTP_send_command_57
   \   00000160   0x.... 0x....      BL       sprintf
   1596          			break;
   \   00000164   0xE142             B        ??mid_HTTP_send_command_58
   1597          		case MID_HTTP_SEQ_INIT_RESP_CMEE:
   1598          			sprintf((char *)data, "AT+CMEE=1\r");
   \                     ??mid_HTTP_send_command_5: (+1)
   \   00000166   0x499B             LDR      R1,??mid_HTTP_send_command_57+0x4
   \   00000168   0x.... 0x....      BL       sprintf
   1599          			break;
   \   0000016C   0xE13E             B        ??mid_HTTP_send_command_58
   1600          		case MID_HTTP_SEQ_INIT_RESP_CTZUC:
   1601          			sprintf((char *)data, "AT+CTZU?\r");
   \                     ??mid_HTTP_send_command_4: (+1)
   \   0000016E   0x499A             LDR      R1,??mid_HTTP_send_command_57+0x8
   \   00000170   0x.... 0x....      BL       sprintf
   1602          			break;
   \   00000174   0xE13A             B        ??mid_HTTP_send_command_58
   1603          		case MID_HTTP_SEQ_INIT_RESP_CTZUS:
   1604          			sprintf((char *)data, "AT+CTZU=1\r");
   \                     ??mid_HTTP_send_command_7: (+1)
   \   00000176   0x4999             LDR      R1,??mid_HTTP_send_command_57+0xC
   \   00000178   0x.... 0x....      BL       sprintf
   1605          			break;
   \   0000017C   0xE136             B        ??mid_HTTP_send_command_58
   1606          		case MID_HTTP_SEQ_INIT_RESP_CCLK:
   1607          			sprintf((char *)data, "AT+CCLK?\r");
   \                     ??mid_HTTP_send_command_6: (+1)
   \   0000017E   0x4998             LDR      R1,??mid_HTTP_send_command_57+0x10
   \   00000180   0x.... 0x....      BL       sprintf
   1608          			break;
   \   00000184   0xE132             B        ??mid_HTTP_send_command_58
   1609          		case MID_HTTP_SEQ_INIT_RESP_CPINC:
   1610          			sprintf((char *)data, "AT+CPIN?\r");
   \                     ??mid_HTTP_send_command_9: (+1)
   \   00000186   0x4997             LDR      R1,??mid_HTTP_send_command_57+0x14
   \   00000188   0x.... 0x....      BL       sprintf
   1611          			break;
   \   0000018C   0xE12E             B        ??mid_HTTP_send_command_58
   1612          		case MID_HTTP_SEQ_INIT_RESP_CSQ:
   1613          			sprintf((char *)data, "AT+CSQ\r");
   \                     ??mid_HTTP_send_command_8: (+1)
   \   0000018E   0x4996             LDR      R1,??mid_HTTP_send_command_57+0x18
   \   00000190   0x.... 0x....      BL       sprintf
   1614          			break;
   \   00000194   0xE12A             B        ??mid_HTTP_send_command_58
   1615          		case MID_HTTP_SEQ_INIT_RESP_CPINS:
   1616          			sprintf((char *)data, "AT+CPIN=9999\r");
   \                     ??mid_HTTP_send_command_11: (+1)
   \   00000196   0x49B3             LDR      R1,??mid_HTTP_send_command_59
   \   00000198   0x.... 0x....      BL       sprintf
   1617          			break;
   \   0000019C   0xE126             B        ??mid_HTTP_send_command_58
   1618          		case MID_HTTP_SEQ_INIT_RESP_SIMEI:
   1619          			sprintf((char *)data, "AT+SIMEI?\r");
   \                     ??mid_HTTP_send_command_10: (+1)
   \   0000019E   0x49B2             LDR      R1,??mid_HTTP_send_command_59+0x4
   \   000001A0   0x.... 0x....      BL       sprintf
   1620          			break;
   \   000001A4   0xE122             B        ??mid_HTTP_send_command_58
   1621          		case MID_HTTP_SEQ_INIT_RESP_CSCLK:
   1622          			sprintf((char *)data, "AT+CSCLK=1\r");
   \                     ??mid_HTTP_send_command_13: (+1)
   \   000001A6   0x49B1             LDR      R1,??mid_HTTP_send_command_59+0x8
   \   000001A8   0x.... 0x....      BL       sprintf
   1623          			break;
   \   000001AC   0xE11E             B        ??mid_HTTP_send_command_58
   1624          		case MID_HTTP_SEQ_INIT_RESP_AUTOCSQ:
   1625          			sprintf((char *)data, "AT+AUTOCSQ=1,1\r");
   \                     ??mid_HTTP_send_command_12: (+1)
   \   000001AE   0x49B0             LDR      R1,??mid_HTTP_send_command_59+0xC
   \   000001B0   0x.... 0x....      BL       sprintf
   1626          			break;
   \   000001B4   0xE11A             B        ??mid_HTTP_send_command_58
   1627          		case MID_HTTP_SEQ_INIT_RESP_CGMR:
   1628          			sprintf((char *)data, "AT+CGMR\r");
   \                     ??mid_HTTP_send_command_15: (+1)
   \   000001B6   0x49AF             LDR      R1,??mid_HTTP_send_command_59+0x10
   \   000001B8   0x.... 0x....      BL       sprintf
   1629          			break;
   \   000001BC   0xE116             B        ??mid_HTTP_send_command_58
   1630          		case MID_HTTP_SEQ_INIT_RESP_IPADDR:
   1631          			sprintf((char *)data, "AT+IPADDR\r");
   \                     ??mid_HTTP_send_command_14: (+1)
   \   000001BE   0x49AE             LDR      R1,??mid_HTTP_send_command_59+0x14
   \   000001C0   0x.... 0x....      BL       sprintf
   1632          			break;
   \   000001C4   0xE112             B        ??mid_HTTP_send_command_58
   1633          
   1634          		// AT+CGDCONT=1,"ip", "<APN>"<CR>
   1635          		case MID_HTTP_SEQ_LTE_RESP_CGDCONT:
   1636          			sprintf((char *)data, "AT+CGDCONT=1,\"ip\",\"%s\"\r", gprs->apn);
   \                     ??mid_HTTP_send_command_17: (+1)
   \   000001C6   0x002A             MOVS     R2,R5
   \   000001C8   0x49AC             LDR      R1,??mid_HTTP_send_command_59+0x18
   \   000001CA   0x.... 0x....      BL       sprintf
   1637          			break;
   \   000001CE   0xE10D             B        ??mid_HTTP_send_command_58
   1638          
   1639          		// AT+CGAUTH=1,1,"<passwd>","<user>"<CR>
   1640          		case MID_HTTP_SEQ_LTE_RESP_CGAUTH:
   1641          			sprintf((char *)data, "AT+CGAUTH=1,1,\"%s\",\"%s\"\r", gprs->password, gprs->username);
   \                     ??mid_HTTP_send_command_16: (+1)
   \   000001D0   0x002B             MOVS     R3,R5
   \   000001D2   0x336D             ADDS     R3,R3,#+109
   \   000001D4   0x002A             MOVS     R2,R5
   \   000001D6   0x328E             ADDS     R2,R2,#+142
   \   000001D8   0x49A9             LDR      R1,??mid_HTTP_send_command_59+0x1C
   \   000001DA   0x.... 0x....      BL       sprintf
   1642          			break;
   \   000001DE   0xE105             B        ??mid_HTTP_send_command_58
   1643          
   1644          		case MID_HTTP_SEQ_LTE_RESP_CSOCKSETPN:
   1645          			sprintf((char *)data, "AT+CSOCKSETPN=1\r");
   \                     ??mid_HTTP_send_command_19: (+1)
   \   000001E0   0x49A8             LDR      R1,??mid_HTTP_send_command_59+0x20
   \   000001E2   0x.... 0x....      BL       sprintf
   1646          			break;
   \   000001E6   0xE101             B        ??mid_HTTP_send_command_58
   1647          
   1648          		case MID_HTTP_SEQ_LTE_RESP_NETOPEN:
   1649          			sprintf((char *)data, "AT+NETOPEN\r");
   \                     ??mid_HTTP_send_command_18: (+1)
   \   000001E8   0x49BB             LDR      R1,??mid_HTTP_send_command_60
   \   000001EA   0x.... 0x....      BL       sprintf
   1650          			break;
   \   000001EE   0xE0FD             B        ??mid_HTTP_send_command_58
   1651          
   1652          		case MID_HTTP_SEQ_LTE_RESP_NETCLOSE:
   1653          			sprintf((char *)data, "AT+NETCLOSE\r");
   \                     ??mid_HTTP_send_command_21: (+1)
   \   000001F0   0x49BA             LDR      R1,??mid_HTTP_send_command_60+0x4
   \   000001F2   0x.... 0x....      BL       sprintf
   1654          			break;
   \   000001F6   0xE0F9             B        ??mid_HTTP_send_command_58
   1655          
   1656          		case MID_HTTP_SEQ_LTE_RESP_STBY_IN:
   1657          			sprintf((char *)data, "AT+CFUN=0\r");
   \                     ??mid_HTTP_send_command_20: (+1)
   \   000001F8   0x49B9             LDR      R1,??mid_HTTP_send_command_60+0x8
   \   000001FA   0x.... 0x....      BL       sprintf
   1658          			break;
   \   000001FE   0xE0F5             B        ??mid_HTTP_send_command_58
   1659          
   1660          		case MID_HTTP_SEQ_LTE_RESP_STBY_OUT:
   1661          			sprintf((char *)data, "AT+CFUN=1\r");
   \                     ??mid_HTTP_send_command_23: (+1)
   \   00000200   0x49B8             LDR      R1,??mid_HTTP_send_command_60+0xC
   \   00000202   0x.... 0x....      BL       sprintf
   1662          			break;
   \   00000206   0xE0F1             B        ??mid_HTTP_send_command_58
   1663          
   1664          		case MID_HTTP_SEQ_LTE_RESP_CSQ:
   1665          			sprintf((char *)data, "AT+CSQ\r");
   \                     ??mid_HTTP_send_command_22: (+1)
   \   00000208   0x4977             LDR      R1,??mid_HTTP_send_command_57+0x18
   \   0000020A   0x.... 0x....      BL       sprintf
   1666          			break;
   \   0000020E   0xE0ED             B        ??mid_HTTP_send_command_58
   1667          
   1668          		case MID_HTTP_SEQ_LTE_RESP_RESET:
   1669          			sprintf((char *)data, "AT+CRESET\r");
   \                     ??mid_HTTP_send_command_25: (+1)
   \   00000210   0x....             LDR      R1,??DataTable5
   \   00000212   0x.... 0x....      BL       sprintf
   1670          			break;
   \   00000216   0xE0E9             B        ??mid_HTTP_send_command_58
   1671          
   1672          		// AT+CIPOPEN=1,”UDP”,,,<udp_port><CR>
   1673          		case MID_HTTP_SEQ_UDP_RESP_CIPOPEN:
   1674          			sprintf((char *)data, "AT+CIPOPEN=1,\"UDP\",,,%s\r", gprs->udp_port);
   \                     ??mid_HTTP_send_command_24: (+1)
   \   00000218   0x002A             MOVS     R2,R5
   \   0000021A   0x3267             ADDS     R2,R2,#+103
   \   0000021C   0x....             LDR      R1,??DataTable5_1
   \   0000021E   0x.... 0x....      BL       sprintf
   1675          			break;
   \   00000222   0xE0E3             B        ??mid_HTTP_send_command_58
   1676          
   1677          		// AT+CIPSEND=1,,"<ip>",3527<CR>
   1678          		case MID_HTTP_SEQ_UDP_RESP_CIPSEND:
   1679          			sprintf((char *)data, "AT+CIPSEND=1,,\"%s\",%s\r", mid_http_udpsend_work.ip_addr, gprs->udp_port);
   \                     ??mid_HTTP_send_command_27: (+1)
   \   00000224   0x002B             MOVS     R3,R5
   \   00000226   0x3367             ADDS     R3,R3,#+103
   \   00000228   0x....             LDR      R2,??DataTable5_2
   \   0000022A   0x....             LDR      R1,??DataTable5_3
   \   0000022C   0x.... 0x....      BL       sprintf
   1680          			break;
   \   00000230   0xE0DC             B        ??mid_HTTP_send_command_58
   1681          
   1682          		case MID_HTTP_SEQ_UDP_RESP_CIPSEND2:
   1683          			if (mid_http_work.request.length < MID_HTTP_SND_DATA_MAX) {
   \                     ??mid_HTTP_send_command_26: (+1)
   \   00000232   0x....             LDR      R1,??DataTable5_4
   \   00000234   0x6809             LDR      R1,[R1, #+0]
   \   00000236   0x228C             MOVS     R2,#+140
   \   00000238   0x00D2             LSLS     R2,R2,#+3        ;; #+1120
   \   0000023A   0x4291             CMP      R1,R2
   \   0000023C   0xDA0A             BGE      ??mid_HTTP_send_command_61
   1684          				mid_http_work.request.data[mid_http_work.request.length] = NULL; 
   \   0000023E   0x2100             MOVS     R1,#+0
   \   00000240   0x....             LDR      R2,??DataTable5_5
   \   00000242   0x....             LDR      R3,??DataTable5_4
   \   00000244   0x681B             LDR      R3,[R3, #+0]
   \   00000246   0x18D2             ADDS     R2,R2,R3
   \   00000248   0x7111             STRB     R1,[R2, #+4]
   1685          				sprintf((char *)data, "%s\x1A\r", mid_http_work.request.data);
   \   0000024A   0x....             LDR      R2,??DataTable5_6
   \   0000024C   0x....             LDR      R1,??DataTable5_7
   \   0000024E   0x.... 0x....      BL       sprintf
   \   00000252   0xE001             B        ??mid_HTTP_send_command_62
   1686          			}
   1687          			else {
   1688          				ret = -1;
   \                     ??mid_HTTP_send_command_61: (+1)
   \   00000254   0x2400             MOVS     R4,#+0
   \   00000256   0x43E4             MVNS     R4,R4            ;; #-1
   1689          			}
   1690          			break;
   \                     ??mid_HTTP_send_command_62: (+1)
   \   00000258   0xE0C8             B        ??mid_HTTP_send_command_58
   1691          
   1692          		case MID_HTTP_SEQ_UDP_RESP_CIPCLOSE:
   1693          			sprintf((char *)data, "AT+CIPCLOSE=1\r");
   \                     ??mid_HTTP_send_command_29: (+1)
   \   0000025A   0x....             LDR      R1,??DataTable5_8
   \   0000025C   0x.... 0x....      BL       sprintf
   1694          			break;
   \   00000260   0xE0C4             B        ??mid_HTTP_send_command_58
   1695          
   1696          		// AT+CIPOPEN=2,"TCP","<IP>",<PORT><CR>
   1697          		case MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN:
   1698          			sprintf((char *)data, "AT+CIPOPEN=2,\"TCP\",\"%s\",%s\r", gprs->ip, gprs->tcp_port);
   \                     ??mid_HTTP_send_command_28: (+1)
   \   00000262   0x002B             MOVS     R3,R5
   \   00000264   0x3361             ADDS     R3,R3,#+97
   \   00000266   0x002A             MOVS     R2,R5
   \   00000268   0x3220             ADDS     R2,R2,#+32
   \   0000026A   0x....             LDR      R1,??DataTable5_9
   \   0000026C   0x.... 0x....      BL       sprintf
   1699          			break;
   \   00000270   0xE0BC             B        ??mid_HTTP_send_command_58
   1700          
   1701          		// AT+CIPSEND=2,<CR>
   1702          		case MID_HTTP_SEQ_CLIENT_RESP_CIPSEND:
   1703          			sprintf((char *)data, "AT+CIPSEND=2,\r");
   \                     ??mid_HTTP_send_command_31: (+1)
   \   00000272   0x....             LDR      R1,??DataTable5_10
   \   00000274   0x.... 0x....      BL       sprintf
   1704          			break;
   \   00000278   0xE0B8             B        ??mid_HTTP_send_command_58
   1705          
   1706          		// <data><CTR-Z><CR>
   1707          		case MID_HTTP_SEQ_CLIENT_RESP_CIPSEND2:
   1708          			if (mid_http_work.request.length < MID_HTTP_SND_DATA_MAX) {
   \                     ??mid_HTTP_send_command_30: (+1)
   \   0000027A   0x....             LDR      R1,??DataTable5_4
   \   0000027C   0x6809             LDR      R1,[R1, #+0]
   \   0000027E   0x228C             MOVS     R2,#+140
   \   00000280   0x00D2             LSLS     R2,R2,#+3        ;; #+1120
   \   00000282   0x4291             CMP      R1,R2
   \   00000284   0xDA0A             BGE      ??mid_HTTP_send_command_63
   1709          				mid_http_work.request.data[mid_http_work.request.length] = NULL; 
   \   00000286   0x2100             MOVS     R1,#+0
   \   00000288   0x....             LDR      R2,??DataTable5_5
   \   0000028A   0x....             LDR      R3,??DataTable5_4
   \   0000028C   0x681B             LDR      R3,[R3, #+0]
   \   0000028E   0x18D2             ADDS     R2,R2,R3
   \   00000290   0x7111             STRB     R1,[R2, #+4]
   1710          				sprintf((char *)data, "%s\x1A\r", mid_http_work.request.data);
   \   00000292   0x....             LDR      R2,??DataTable5_6
   \   00000294   0x....             LDR      R1,??DataTable5_7
   \   00000296   0x.... 0x....      BL       sprintf
   \   0000029A   0xE001             B        ??mid_HTTP_send_command_64
   1711          			}
   1712          			else {
   1713          				ret = -1;
   \                     ??mid_HTTP_send_command_63: (+1)
   \   0000029C   0x2400             MOVS     R4,#+0
   \   0000029E   0x43E4             MVNS     R4,R4            ;; #-1
   1714          			}
   1715          			break;
   \                     ??mid_HTTP_send_command_64: (+1)
   \   000002A0   0xE0A4             B        ??mid_HTTP_send_command_58
   1716          
   1717          		// AT+CIPCLOSE=2<CR>
   1718          		case MID_HTTP_SEQ_CLIENT_RESP_CIPCLOSE:
   1719          			sprintf((char *)data, "AT+CIPCLOSE=2\r");
   \                     ??mid_HTTP_send_command_33: (+1)
   \   000002A2   0x....             LDR      R1,??DataTable5_11
   \   000002A4   0x.... 0x....      BL       sprintf
   1720          			break;
   \   000002A8   0xE0A0             B        ??mid_HTTP_send_command_58
   1721          
   1722          		// AT+SERVERSTART=80,0<CR>
   1723          		case MID_HTTP_SEQ_SERVER_RESP_START:
   1724          			sprintf((char *)data, "AT+SERVERSTART=80,0\r");
   \                     ??mid_HTTP_send_command_32: (+1)
   \   000002AA   0x....             LDR      R1,??DataTable5_12
   \   000002AC   0x.... 0x....      BL       sprintf
   1725          			break;
   \   000002B0   0xE09C             B        ??mid_HTTP_send_command_58
   1726          
   1727          		// AT+CIPSEND=<link_num>,<length><CR>
   1728          		case MID_HTTP_SEQ_SERVER_RESP_CIPSEND:
   1729          			sprintf((char *)data, "AT+CIPSEND=%d,%d\r", mid_http_work.recv_data.link_num, mid_http_work.request.length);
   \                     ??mid_HTTP_send_command_35: (+1)
   \   000002B2   0x....             LDR      R1,??DataTable5_4
   \   000002B4   0x680B             LDR      R3,[R1, #+0]
   \   000002B6   0x....             LDR      R1,??DataTable5_13
   \   000002B8   0x680A             LDR      R2,[R1, #+0]
   \   000002BA   0x....             LDR      R1,??DataTable5_14
   \   000002BC   0x.... 0x....      BL       sprintf
   1730          			break;
   \   000002C0   0xE094             B        ??mid_HTTP_send_command_58
   \   000002C2   0xBF00             Nop      
   \                     ??mid_HTTP_send_command_0:
   \   000002C4   0x00000474         DC32     0x474
   \   000002C8   0x........         DC32     mid_http_work+0x1832
   \   000002CC   0x........         DC32     mid_http_work+0x1CAC
   \   000002D0   0x........         DC32     cmd_tbl
   1731          
   1732          		// <data><CTR-Z><CR>
   1733          		case MID_HTTP_SEQ_SERVER_RESP_CIPSEND2:
   1734          			if (mid_http_work.request.length < MID_HTTP_SND_DATA_MAX) {
   \                     ??mid_HTTP_send_command_34: (+1)
   \   000002D4   0x....             LDR      R1,??DataTable5_4
   \   000002D6   0x6809             LDR      R1,[R1, #+0]
   \   000002D8   0x228C             MOVS     R2,#+140
   \   000002DA   0x00D2             LSLS     R2,R2,#+3        ;; #+1120
   \   000002DC   0x4291             CMP      R1,R2
   \   000002DE   0xDA0A             BGE      ??mid_HTTP_send_command_65
   1735          				mid_http_work.request.data[mid_http_work.request.length] = NULL; 
   \   000002E0   0x2100             MOVS     R1,#+0
   \   000002E2   0x....             LDR      R2,??DataTable5_5
   \   000002E4   0x....             LDR      R3,??DataTable5_4
   \   000002E6   0x681B             LDR      R3,[R3, #+0]
   \   000002E8   0x18D2             ADDS     R2,R2,R3
   \   000002EA   0x7111             STRB     R1,[R2, #+4]
   1736          				sprintf((char *)data, "%s\x1A\r", mid_http_work.request.data);
   \   000002EC   0x....             LDR      R2,??DataTable5_6
   \   000002EE   0x....             LDR      R1,??DataTable5_7
   \   000002F0   0x.... 0x....      BL       sprintf
   \   000002F4   0xE001             B        ??mid_HTTP_send_command_66
   1737          			}
   1738          			else {
   1739          				ret = -1;
   \                     ??mid_HTTP_send_command_65: (+1)
   \   000002F6   0x2400             MOVS     R4,#+0
   \   000002F8   0x43E4             MVNS     R4,R4            ;; #-1
   1740          			}
   1741          			break;
   \                     ??mid_HTTP_send_command_66: (+1)
   \   000002FA   0xE077             B        ??mid_HTTP_send_command_58
   1742          
   1743          		// AT+SERVERSTOP=0<CR>
   1744          		case MID_HTTP_SEQ_SERVER_RESP_STOP:
   1745          			sprintf((char *)data, "AT+SERVERSTOP=0\r");
   \                     ??mid_HTTP_send_command_37: (+1)
   \   000002FC   0x....             LDR      R1,??DataTable6
   \   000002FE   0x.... 0x....      BL       sprintf
   1746          			break;
   \   00000302   0xE073             B        ??mid_HTTP_send_command_58
   1747          
   1748          		// AT+FSCD=C:<CR>
   1749          		case MID_HTTP_SEQ_FTP_RESP_FSCD:
   1750          			sprintf((char *)data, "AT+FSCD=C:\r");
   \                     ??mid_HTTP_send_command_36: (+1)
   \   00000304   0x....             LDR      R1,??DataTable6_1
   \   00000306   0x.... 0x....      BL       sprintf
   1751          			break;
   \   0000030A   0xE06F             B        ??mid_HTTP_send_command_58
   1752          
   1753          		// AT+FSDEL=*.*<CR>
   1754          		case MID_HTTP_SEQ_FTP_RESP_FSDEL:
   1755          			sprintf((char *)data, "AT+FSDEL=*.*\r");
   \                     ??mid_HTTP_send_command_39: (+1)
   \   0000030C   0x....             LDR      R1,??DataTable6_2
   \   0000030E   0x.... 0x....      BL       sprintf
   1756          			break;
   \   00000312   0xE06B             B        ??mid_HTTP_send_command_58
   1757          
   1758          		// AT+CGSOCKCONT=1,"IP","<APN>"<CR>
   1759          		case MID_HTTP_SEQ_FTP_RESP_CGSOCKCONT:
   1760          			sprintf((char *)data, "AT+CGSOCKCONT=1,\"IP\",\"%s\"\r", gprs->apn);
   \                     ??mid_HTTP_send_command_38: (+1)
   \   00000314   0x002A             MOVS     R2,R5
   \   00000316   0x....             LDR      R1,??DataTable6_3
   \   00000318   0x.... 0x....      BL       sprintf
   1761          			break;
   \   0000031C   0xE066             B        ??mid_HTTP_send_command_58
   1762          
   1763          		// AT+CSOCKSETPN=1<CR>
   1764          		case MID_HTTP_SEQ_FTP_RESP_CSOCKSETPN:
   1765          			sprintf((char *)data, "AT+CSOCKSETPN=1\r");
   \                     ??mid_HTTP_send_command_41: (+1)
   \   0000031E   0x4959             LDR      R1,??mid_HTTP_send_command_59+0x20
   \   00000320   0x.... 0x....      BL       sprintf
   1766          			break;
   \   00000324   0xE062             B        ??mid_HTTP_send_command_58
   1767          
   1768          		// AT+CSOCKAUTH=1,1,"<passwd>","<user>"<CR>
   1769          		case MID_HTTP_SEQ_FTP_RESP_CSOCKAUTH:
   1770          			sprintf((char *)data, "AT+CSOCKAUTH=1,1,\"%s\",\"%s\"\r", gprs->password, gprs->username);
   \                     ??mid_HTTP_send_command_40: (+1)
   \   00000326   0x002B             MOVS     R3,R5
   \   00000328   0x336D             ADDS     R3,R3,#+109
   \   0000032A   0x002A             MOVS     R2,R5
   \   0000032C   0x328E             ADDS     R2,R2,#+142
   \   0000032E   0x....             LDR      R1,??DataTable6_4
   \   00000330   0x.... 0x....      BL       sprintf
   1771          			break;
   \   00000334   0xE05A             B        ??mid_HTTP_send_command_58
   1772          
   1773          
   1774          		// AT+CFTPSERV="<IP>"<CR>
   1775          		case MID_HTTP_SEQ_FTP_RESP_CFTPSERV:
   1776          			sprintf((char *)data, "AT+CFTPSERV=\"%s\"\r", ftp_info->ip);
   \                     ??mid_HTTP_send_command_43: (+1)
   \   00000336   0x003A             MOVS     R2,R7
   \   00000338   0x....             LDR      R1,??DataTable6_5
   \   0000033A   0x.... 0x....      BL       sprintf
   1777          			break;
   \   0000033E   0xE055             B        ??mid_HTTP_send_command_58
   1778          
   1779          		// AT+CFTPPORT=<PORT><CR>
   1780          		case MID_HTTP_SEQ_FTP_RESP_CFTPPORT:
   1781          			sprintf((char *)data, "AT+CFTPPORT=%s\r", ftp_info->port);
   \                     ??mid_HTTP_send_command_42: (+1)
   \   00000340   0x003A             MOVS     R2,R7
   \   00000342   0x3241             ADDS     R2,R2,#+65
   \   00000344   0x....             LDR      R1,??DataTable6_6
   \   00000346   0x.... 0x....      BL       sprintf
   1782          			break;
   \   0000034A   0xE04F             B        ??mid_HTTP_send_command_58
   1783          
   1784          		// AT+CFTPMODE=0<CR>
   1785          		case MID_HTTP_SEQ_FTP_RESP_CFTPMODE:
   1786          			sprintf((char *)data, "AT+CFTPMODE=0\r");
   \                     ??mid_HTTP_send_command_45: (+1)
   \   0000034C   0x....             LDR      R1,??DataTable6_7
   \   0000034E   0x.... 0x....      BL       sprintf
   1787          			break;
   \   00000352   0xE04B             B        ??mid_HTTP_send_command_58
   1788          
   1789          		// AT+CFTPTYPE=I<CR>
   1790          		case MID_HTTP_SEQ_FTP_RESP_CFTPTYPE:
   1791          			sprintf((char *)data, "AT+CFTPTYPE=I\r");
   \                     ??mid_HTTP_send_command_44: (+1)
   \   00000354   0x....             LDR      R1,??DataTable6_8
   \   00000356   0x.... 0x....      BL       sprintf
   1792          			break;
   \   0000035A   0xE047             B        ??mid_HTTP_send_command_58
   1793          
   1794          
   1795          		// AT+CFTPUN="<FTP user>"<CR>
   1796          		case MID_HTTP_SEQ_FTP_RESP_CFTPUN:
   1797          			sprintf((char *)data, "AT+CFTPUN=\"%s\"\r", ftp_info->username);
   \                     ??mid_HTTP_send_command_47: (+1)
   \   0000035C   0x003A             MOVS     R2,R7
   \   0000035E   0x3247             ADDS     R2,R2,#+71
   \   00000360   0x....             LDR      R1,??DataTable6_9
   \   00000362   0x.... 0x....      BL       sprintf
   1798          			break;
   \   00000366   0xE041             B        ??mid_HTTP_send_command_58
   1799          
   1800          		// AT+CFTPPW="<FTP password>"
   1801          		case MID_HTTP_SEQ_FTP_RESP_CFTPPW:
   1802          			sprintf((char *)data, "AT+CFTPPW=\"%s\"\r", ftp_info->password);
   \                     ??mid_HTTP_send_command_46: (+1)
   \   00000368   0x003A             MOVS     R2,R7
   \   0000036A   0x3268             ADDS     R2,R2,#+104
   \   0000036C   0x....             LDR      R1,??DataTable6_10
   \   0000036E   0x.... 0x....      BL       sprintf
   1803          			break;
   \   00000372   0xE03B             B        ??mid_HTTP_send_command_58
   1804          
   1805          		// AT+CFTPGETFILE="/test/ftp_data.001",0
   1806          		case MID_HTTP_SEQ_FTP_RESP_CFTPGETFILE:
   1807          			sprintf((char *)data, "AT+CFTPGETFILE=\"%s.%03d\",0\r", ftp_info->filename, mid_http_work.request.num);
   \                     ??mid_HTTP_send_command_49: (+1)
   \   00000374   0x....             LDR      R1,??DataTable6_11
   \   00000376   0x680B             LDR      R3,[R1, #+0]
   \   00000378   0x003A             MOVS     R2,R7
   \   0000037A   0x3289             ADDS     R2,R2,#+137
   \   0000037C   0x....             LDR      R1,??DataTable6_12
   \   0000037E   0x.... 0x....      BL       sprintf
   1808          			break;
   \   00000382   0xE033             B        ??mid_HTTP_send_command_58
   1809          
   1810          		// ATE0
   1811          		case MID_HTTP_SEQ_FTP_RESP_ATE0:
   1812          			sprintf((char *)data, "ATE0\r");
   \                     ??mid_HTTP_send_command_48: (+1)
   \   00000384   0x4912             LDR      R1,??mid_HTTP_send_command_57
   \   00000386   0x.... 0x....      BL       sprintf
   1813          			break;
   \   0000038A   0xE02F             B        ??mid_HTTP_send_command_58
   1814          
   1815          		// AT+CFTRANTX="C:\ftp_data.001"
   1816          		case MID_HTTP_SEQ_FILE_RESP_CFTRANTX:
   1817          			sprintf((char *)data, "AT+CFTRANTX=\"C:/%s.%03d\"\r", ftp_info->fileonly, mid_http_work.request.num);
   \                     ??mid_HTTP_send_command_51: (+1)
   \   0000038C   0x....             LDR      R1,??DataTable6_11
   \   0000038E   0x680B             LDR      R3,[R1, #+0]
   \   00000390   0x003A             MOVS     R2,R7
   \   00000392   0x32CA             ADDS     R2,R2,#+202
   \   00000394   0x....             LDR      R1,??DataTable6_13
   \   00000396   0x.... 0x....      BL       sprintf
   1818          			break;
   \   0000039A   0xE027             B        ??mid_HTTP_send_command_58
   1819          
   1820          		// +CCLK: "17/11/06,12:31:40+36"
   1821          		case MID_HTTP_SEQ_RETRY_RESP_CCLK:
   1822          			sprintf((char *)data, "AT+CCLK?\r");
   \                     ??mid_HTTP_send_command_50: (+1)
   \   0000039C   0x4910             LDR      R1,??mid_HTTP_send_command_57+0x10
   \   0000039E   0x.... 0x....      BL       sprintf
   1823          			break;
   \   000003A2   0xE023             B        ??mid_HTTP_send_command_58
   1824          
   1825          		// AT+CPSI?
   1826          		case MID_HTTP_SEQ_INIT_RESP_CPSI:
   1827          		case MID_HTTP_SEQ_LTE_RESP_CPSI:
   1828          			sprintf((char *)data, "AT+CPSI?\r");
   \                     ??mid_HTTP_send_command_52: (+1)
   \   000003A4   0x....             LDR      R1,??DataTable6_14
   \   000003A6   0x.... 0x....      BL       sprintf
   1829          			break;
   \   000003AA   0xE01F             B        ??mid_HTTP_send_command_58
   1830          
   1831                          // AT+CPOF<CR>
   1832          		case MID_HTTP_SEQ_LTE_POWER_OFF:
   1833          			sprintf((char *)data, "AT+CPOF\r");
   \                     ??mid_HTTP_send_command_54: (+1)
   \   000003AC   0x....             LDR      R1,??DataTable6_15
   \   000003AE   0x.... 0x....      BL       sprintf
   1834          			break;
   \   000003B2   0xE01B             B        ??mid_HTTP_send_command_58
   1835                                  
   1836          
   1837          		// AT+CFOTASWITCH=0
   1838          		case MID_HTTP_SEQ_LTE_RESP_CFOTASWITCH:
   1839          			sprintf((char *)data, "AT+CFOTASWITCH=0\r");
   \                     ??mid_HTTP_send_command_53: (+1)
   \   000003B4   0x....             LDR      R1,??DataTable6_16
   \   000003B6   0x.... 0x....      BL       sprintf
   1840                                  break;
   \   000003BA   0xE017             B        ??mid_HTTP_send_command_58
   1841          
   1842          
   1843                          // AT
   1844          		case MID_HTTP_SEQ_LTE_RESP_AT:
   1845          			sprintf((char *)data, "AT\r");
   \                     ??mid_HTTP_send_command_56: (+1)
   \   000003BC   0x....             ADR      R1,??DataTable6_17  ;; "AT\r"
   \   000003BE   0x.... 0x....      BL       sprintf
   1846                                  break;
   \   000003C2   0xE013             B        ??mid_HTTP_send_command_58
   1847          
   1848          		// AT+CDNSGIP=0
   1849          		case MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN_CDNSGIP:
   1850          		case MID_HTTP_SEQ_UDP_RESP_CIPSEND_CDNSGIP:
   1851          			sprintf((char *)data, "AT+CDNSGIP=\"%s\"\r",gprs->ip);
   \                     ??mid_HTTP_send_command_55: (+1)
   \   000003C4   0x002A             MOVS     R2,R5
   \   000003C6   0x3220             ADDS     R2,R2,#+32
   \   000003C8   0x....             LDR      R1,??DataTable6_18
   \   000003CA   0x.... 0x....      BL       sprintf
   1852          			break;
   \   000003CE   0xE00D             B        ??mid_HTTP_send_command_58
   \                     ??mid_HTTP_send_command_57:
   \   000003D0   0x........         DC32     ?_0
   \   000003D4   0x........         DC32     ?_40
   \   000003D8   0x........         DC32     ?_41
   \   000003DC   0x........         DC32     ?_42
   \   000003E0   0x........         DC32     ?_43
   \   000003E4   0x........         DC32     ?_44
   \   000003E8   0x........         DC32     ?_45
   1853                                  
   1854          		default:
   1855          			break;
   1856          
   1857          		}
   1858          
   1859          		if (ret >= 0) {
   \                     ??mid_HTTP_send_command_3: (+1)
   \                     ??mid_HTTP_send_command_58: (+1)
   \   000003EC   0x2C00             CMP      R4,#+0
   \   000003EE   0xD469             BMI      ??mid_HTTP_send_command_67
   1860          			length = strlen((char const *)&mid_http_work.snd_buff[0]);
   \   000003F0   0x....             LDR      R0,??DataTable6_19
   \   000003F2   0x.... 0x....      BL       strlen
   1861          			if (cmd_tbl[id-1].type == 0) {
   \   000003F6   0x....             LDR      R1,??DataTable6_20
   \   000003F8   0x2220             MOVS     R2,#+32
   \   000003FA   0x4372             MULS     R2,R6,R2
   \   000003FC   0x1889             ADDS     R1,R1,R2
   \   000003FE   0x3910             SUBS     R1,R1,#+16
   \   00000400   0x7809             LDRB     R1,[R1, #+0]
   \   00000402   0x2900             CMP      R1,#+0
   \   00000404   0xD109             BNE      ??mid_HTTP_send_command_68
   1862          				ret = ctrl_SM7500JE_cmda(&mid_http_work.snd_buff[0], length, id, timeout, mid_HTTP_callback);
   \   00000406   0x....             LDR      R1,??DataTable6_21
   \   00000408   0x9100             STR      R1,[SP, #+0]
   \   0000040A   0x9B01             LDR      R3,[SP, #+4]
   \   0000040C   0x0032             MOVS     R2,R6
   \   0000040E   0x0001             MOVS     R1,R0
   \   00000410   0x....             LDR      R0,??DataTable6_19
   \   00000412   0x.... 0x....      BL       ctrl_SM7500JE_cmda
   \   00000416   0x0004             MOVS     R4,R0
   \   00000418   0xE054             B        ??mid_HTTP_send_command_67
   1863          			}
   1864          			else if (cmd_tbl[id-1].type == 1) {
   \                     ??mid_HTTP_send_command_68: (+1)
   \   0000041A   0x....             LDR      R1,??DataTable6_20
   \   0000041C   0x2220             MOVS     R2,#+32
   \   0000041E   0x4372             MULS     R2,R6,R2
   \   00000420   0x1889             ADDS     R1,R1,R2
   \   00000422   0x3910             SUBS     R1,R1,#+16
   \   00000424   0x7809             LDRB     R1,[R1, #+0]
   \   00000426   0x2901             CMP      R1,#+1
   \   00000428   0xD109             BNE      ??mid_HTTP_send_command_69
   1865          				ret = ctrl_SM7500JE_cmd(&mid_http_work.snd_buff[0], length, id, timeout, mid_HTTP_callback);
   \   0000042A   0x....             LDR      R1,??DataTable6_21
   \   0000042C   0x9100             STR      R1,[SP, #+0]
   \   0000042E   0x9B01             LDR      R3,[SP, #+4]
   \   00000430   0x0032             MOVS     R2,R6
   \   00000432   0x0001             MOVS     R1,R0
   \   00000434   0x....             LDR      R0,??DataTable6_19
   \   00000436   0x.... 0x....      BL       ctrl_SM7500JE_cmd
   \   0000043A   0x0004             MOVS     R4,R0
   \   0000043C   0xE042             B        ??mid_HTTP_send_command_67
   1866          			}
   1867          			else if (cmd_tbl[id-1].type == 2) {
   \                     ??mid_HTTP_send_command_69: (+1)
   \   0000043E   0x....             LDR      R1,??DataTable6_20
   \   00000440   0x2220             MOVS     R2,#+32
   \   00000442   0x4372             MULS     R2,R6,R2
   \   00000444   0x1889             ADDS     R1,R1,R2
   \   00000446   0x3910             SUBS     R1,R1,#+16
   \   00000448   0x7809             LDRB     R1,[R1, #+0]
   \   0000044A   0x2902             CMP      R1,#+2
   \   0000044C   0xD11C             BNE      ??mid_HTTP_send_command_70
   1868          				ret = ctrl_SM7500JE_cmd2(&mid_http_work.snd_buff[0], length, id, timeout, mid_HTTP_callback2);
   \   0000044E   0x....             LDR      R1,??DataTable6_22
   \   00000450   0x9100             STR      R1,[SP, #+0]
   \   00000452   0x9B01             LDR      R3,[SP, #+4]
   \   00000454   0x0032             MOVS     R2,R6
   \   00000456   0x0001             MOVS     R1,R0
   \   00000458   0x....             LDR      R0,??DataTable6_19
   \   0000045A   0x.... 0x....      BL       ctrl_SM7500JE_cmd2
   \   0000045E   0x0004             MOVS     R4,R0
   \   00000460   0xE030             B        ??mid_HTTP_send_command_67
   \   00000462   0xBF00             Nop      
   \                     ??mid_HTTP_send_command_59:
   \   00000464   0x........         DC32     ?_46
   \   00000468   0x........         DC32     ?_47
   \   0000046C   0x........         DC32     ?_48
   \   00000470   0x........         DC32     ?_49
   \   00000474   0x........         DC32     ?_50
   \   00000478   0x........         DC32     ?_51
   \   0000047C   0x........         DC32     ?_52
   \   00000480   0x........         DC32     ?_53
   \   00000484   0x........         DC32     ?_54
   1869          			}
   1870          			else if (cmd_tbl[id-1].type == 3) {
   \                     ??mid_HTTP_send_command_70: (+1)
   \   00000488   0x....             LDR      R1,??DataTable6_20
   \   0000048A   0x2220             MOVS     R2,#+32
   \   0000048C   0x4372             MULS     R2,R6,R2
   \   0000048E   0x1889             ADDS     R1,R1,R2
   \   00000490   0x3910             SUBS     R1,R1,#+16
   \   00000492   0x7809             LDRB     R1,[R1, #+0]
   \   00000494   0x2903             CMP      R1,#+3
   \   00000496   0xD115             BNE      ??mid_HTTP_send_command_67
   1871          				ret = ctrl_SM7500JE_cmd0(&mid_http_work.snd_buff[0], length);
   \   00000498   0x0001             MOVS     R1,R0
   \   0000049A   0x....             LDR      R0,??DataTable6_19
   \   0000049C   0x.... 0x....      BL       ctrl_SM7500JE_cmd0
   \   000004A0   0x0004             MOVS     R4,R0
   1872          				// 応答を受信したことにする。
   1873          				mid_http_work.resp_info.id = id;
   \   000004A2   0x....             LDR      R0,??DataTable6_23
   \   000004A4   0x6006             STR      R6,[R0, #+0]
   1874          				mid_http_work.resp_info.flag = 1;
   \   000004A6   0x2001             MOVS     R0,#+1
   \   000004A8   0x....             LDR      R1,??DataTable6_24
   \   000004AA   0x6008             STR      R0,[R1, #+0]
   1875          				if (ret >= 0) {
   \   000004AC   0x2C00             CMP      R4,#+0
   \   000004AE   0xD403             BMI      ??mid_HTTP_send_command_71
   1876          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_OK;
   \   000004B0   0x2000             MOVS     R0,#+0
   \   000004B2   0x....             LDR      R1,??DataTable6_25
   \   000004B4   0x7008             STRB     R0,[R1, #+0]
   \   000004B6   0xE005             B        ??mid_HTTP_send_command_67
   1877          				}
   1878          				else {
   1879          					mid_http_work.resp_info.cmdsts = MID_HTTP_CMDSTS_ERR;
   \                     ??mid_HTTP_send_command_71: (+1)
   \   000004B8   0x2001             MOVS     R0,#+1
   \   000004BA   0x....             LDR      R1,??DataTable6_25
   \   000004BC   0x7008             STRB     R0,[R1, #+0]
   \   000004BE   0xE001             B        ??mid_HTTP_send_command_67
   1880          				}
   1881          			}
   1882          		}
   1883          	}
   1884          	else {
   1885          		ret = -1;
   \                     ??mid_HTTP_send_command_1: (+1)
   \   000004C0   0x2400             MOVS     R4,#+0
   \   000004C2   0x43E4             MVNS     R4,R4            ;; #-1
   1886          	}
   1887          
   1888          	if (ret < 0) {
   \                     ??mid_HTTP_send_command_67: (+1)
   \   000004C4   0x2C00             CMP      R4,#+0
   \   000004C6   0xD505             BPL      ??mid_HTTP_send_command_72
   1889          		// エラー登録
   1890          		man_error_setting(MAN_ERROR_MID_HTTP, id, 0);
   \   000004C8   0x....             LDR      R3,??DataTable6_26  ;; 0x762
   \   000004CA   0x2200             MOVS     R2,#+0
   \   000004CC   0x0031             MOVS     R1,R6
   \   000004CE   0x2010             MOVS     R0,#+16
   \   000004D0   0x.... 0x....      BL       man_error_set
   1891          	}
   1892          
   1893          	return ret;
   \                     ??mid_HTTP_send_command_72: (+1)
   \   000004D4   0x0020             MOVS     R0,R4
   \   000004D6   0xBDFE             POP      {R1-R7,PC}       ;; return
   \                     ??mid_HTTP_send_command_60:
   \   000004D8   0x........         DC32     ?_55
   \   000004DC   0x........         DC32     ?_56
   \   000004E0   0x........         DC32     ?_57
   \   000004E4   0x........         DC32     ?_58
   1894          }
   1895          
   1896          
   1897          /********************************************************************/
   1898          /*!
   1899           * \name	mid_HTTP_res_callback
   1900           * \brief	callback応答処理
   1901           * \param	status : 通知するステータス
   1902           * \return   0: 成功
   1903           *          -1:失敗
   1904           * \note	
   1905           */
   1906          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1907          static void mid_HTTP_res_callback( int32_t status )
   1908          {
   \                     mid_HTTP_res_callback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1909          
   1910          	// callback関数で終了通知
   1911          	if (mid_http_work.request.callback != NULL) {
   \   00000002   0x....             LDR      R1,??DataTable6_27
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD008             BEQ      ??mid_HTTP_res_callback_0
   1912          		mid_http_work.request.callback(mid_http_work.request.id, status);
   \   0000000A   0x0001             MOVS     R1,R0
   \   0000000C   0x....             LDR      R0,??DataTable6_28
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x....             LDR      R2,??DataTable6_27
   \   00000012   0x6812             LDR      R2,[R2, #+0]
   \   00000014   0x4790             BLX      R2
   1913          		mid_http_work.request.callback = NULL;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR      R1,??DataTable6_27
   \   0000001A   0x6008             STR      R0,[R1, #+0]
   1914          	}
   1915          	mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_res_callback_0: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR      R1,??DataTable6_29
   \   00000020   0x7008             STRB     R0,[R1, #+0]
   1916          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
   1917          
   1918          /********************************************************************/
   1919          /*!
   1920           * \name	mid_HTTP_response
   1921           * \brief	受信処理(正常時)
   1922           * \param	なし
   1923           * \return   0: 成功
   1924           *          -1:失敗
   1925           * \note	
   1926           */
   1927          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
   1928          static int32_t mid_HTTP_response(void)
   1929          {
   \                     mid_HTTP_response: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1930          	int32_t		ret=-1;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x43E4             MVNS     R4,R4            ;; #-1
   1931          	int32_t		seq;
   1932          
   1933          	seq = mid_http_work.sequence;
   \   00000006   0x4894             LDR      R0,??mid_HTTP_response_0
   \   00000008   0x7805             LDRB     R5,[R0, #+0]
   1934          
   1935          	// シーケンス処理
   1936          	switch(mid_http_work.sequence) {
   \   0000000A   0x4893             LDR      R0,??mid_HTTP_response_0
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD100             BNE      .+4
   \   00000012   0xE09E             B        ??mid_HTTP_response_1
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xD100             BNE      .+4
   \   00000018   0xE0C6             B        ??mid_HTTP_response_2
   \   0000001A   0x2802             CMP      R0,#+2
   \   0000001C   0xD100             BNE      .+4
   \   0000001E   0xE0CF             B        ??mid_HTTP_response_3
   \   00000020   0x2803             CMP      R0,#+3
   \   00000022   0xD100             BNE      .+4
   \   00000024   0xE165             B        ??mid_HTTP_response_4
   \   00000026   0x2804             CMP      R0,#+4
   \   00000028   0xD100             BNE      .+4
   \   0000002A   0xE181             B        ??mid_HTTP_response_5
   \   0000002C   0x2805             CMP      R0,#+5
   \   0000002E   0xD100             BNE      .+4
   \   00000030   0xE186             B        ??mid_HTTP_response_6
   \   00000032   0x2806             CMP      R0,#+6
   \   00000034   0xD100             BNE      .+4
   \   00000036   0xE0D2             B        ??mid_HTTP_response_7
   \   00000038   0x2807             CMP      R0,#+7
   \   0000003A   0xD100             BNE      .+4
   \   0000003C   0xE10E             B        ??mid_HTTP_response_8
   \   0000003E   0x2808             CMP      R0,#+8
   \   00000040   0xD100             BNE      .+4
   \   00000042   0xE0F9             B        ??mid_HTTP_response_9
   \   00000044   0x2809             CMP      R0,#+9
   \   00000046   0xD100             BNE      .+4
   \   00000048   0xE126             B        ??mid_HTTP_response_10
   \   0000004A   0x280A             CMP      R0,#+10
   \   0000004C   0xD100             BNE      .+4
   \   0000004E   0xE141             B        ??mid_HTTP_response_11
   \   00000050   0x280C             CMP      R0,#+12
   \   00000052   0xD100             BNE      .+4
   \   00000054   0xE12F             B        ??mid_HTTP_response_12
   \   00000056   0x280D             CMP      R0,#+13
   \   00000058   0xD100             BNE      .+4
   \   0000005A   0xE179             B        ??mid_HTTP_response_13
   \   0000005C   0x280E             CMP      R0,#+14
   \   0000005E   0xD100             BNE      .+4
   \   00000060   0xE17E             B        ??mid_HTTP_response_14
   \   00000062   0x280F             CMP      R0,#+15
   \   00000064   0xD100             BNE      .+4
   \   00000066   0xE187             B        ??mid_HTTP_response_15
   \   00000068   0x2810             CMP      R0,#+16
   \   0000006A   0xD100             BNE      .+4
   \   0000006C   0xE193             B        ??mid_HTTP_response_16
   \   0000006E   0x2811             CMP      R0,#+17
   \   00000070   0xD100             BNE      .+4
   \   00000072   0xE19B             B        ??mid_HTTP_response_17
   \   00000074   0x2812             CMP      R0,#+18
   \   00000076   0xD100             BNE      .+4
   \   00000078   0xE1A0             B        ??mid_HTTP_response_18
   \   0000007A   0x2813             CMP      R0,#+19
   \   0000007C   0xD100             BNE      .+4
   \   0000007E   0xE1A5             B        ??mid_HTTP_response_19
   \   00000080   0x2814             CMP      R0,#+20
   \   00000082   0xD100             BNE      .+4
   \   00000084   0xE1AA             B        ??mid_HTTP_response_20
   \   00000086   0x2815             CMP      R0,#+21
   \   00000088   0xD100             BNE      .+4
   \   0000008A   0xE1AF             B        ??mid_HTTP_response_21
   \   0000008C   0x2816             CMP      R0,#+22
   \   0000008E   0xD100             BNE      .+4
   \   00000090   0xE1B4             B        ??mid_HTTP_response_22
   \   00000092   0x2817             CMP      R0,#+23
   \   00000094   0xD100             BNE      .+4
   \   00000096   0xE1B9             B        ??mid_HTTP_response_23
   \   00000098   0x2818             CMP      R0,#+24
   \   0000009A   0xD100             BNE      .+4
   \   0000009C   0xE1BE             B        ??mid_HTTP_response_24
   \   0000009E   0x2819             CMP      R0,#+25
   \   000000A0   0xD100             BNE      .+4
   \   000000A2   0xE1C7             B        ??mid_HTTP_response_25
   \   000000A4   0x281A             CMP      R0,#+26
   \   000000A6   0xD100             BNE      .+4
   \   000000A8   0xE1CC             B        ??mid_HTTP_response_26
   \   000000AA   0x281B             CMP      R0,#+27
   \   000000AC   0xD100             BNE      .+4
   \   000000AE   0xE1D1             B        ??mid_HTTP_response_27
   \   000000B0   0x281C             CMP      R0,#+28
   \   000000B2   0xD100             BNE      .+4
   \   000000B4   0xE1D6             B        ??mid_HTTP_response_28
   \   000000B6   0x281D             CMP      R0,#+29
   \   000000B8   0xD100             BNE      .+4
   \   000000BA   0xE1DF             B        ??mid_HTTP_response_29
   \   000000BC   0x281E             CMP      R0,#+30
   \   000000BE   0xD100             BNE      .+4
   \   000000C0   0xE1EC             B        ??mid_HTTP_response_30
   \   000000C2   0x281F             CMP      R0,#+31
   \   000000C4   0xD100             BNE      .+4
   \   000000C6   0xE1F1             B        ??mid_HTTP_response_31
   \   000000C8   0x2820             CMP      R0,#+32
   \   000000CA   0xD100             BNE      .+4
   \   000000CC   0xE1F6             B        ??mid_HTTP_response_32
   \   000000CE   0x2821             CMP      R0,#+33
   \   000000D0   0xD100             BNE      .+4
   \   000000D2   0xE1FF             B        ??mid_HTTP_response_33
   \   000000D4   0x2822             CMP      R0,#+34
   \   000000D6   0xD100             BNE      .+4
   \   000000D8   0xE204             B        ??mid_HTTP_response_34
   \   000000DA   0x2823             CMP      R0,#+35
   \   000000DC   0xD100             BNE      .+4
   \   000000DE   0xE209             B        ??mid_HTTP_response_35
   \   000000E0   0x2824             CMP      R0,#+36
   \   000000E2   0xD100             BNE      .+4
   \   000000E4   0xE212             B        ??mid_HTTP_response_36
   \   000000E6   0x2825             CMP      R0,#+37
   \   000000E8   0xD100             BNE      .+4
   \   000000EA   0xE217             B        ??mid_HTTP_response_37
   \   000000EC   0x2826             CMP      R0,#+38
   \   000000EE   0xD100             BNE      .+4
   \   000000F0   0xE220             B        ??mid_HTTP_response_38
   \   000000F2   0x2827             CMP      R0,#+39
   \   000000F4   0xD100             BNE      .+4
   \   000000F6   0xE229             B        ??mid_HTTP_response_39
   \   000000F8   0x2828             CMP      R0,#+40
   \   000000FA   0xD100             BNE      .+4
   \   000000FC   0xE232             B        ??mid_HTTP_response_40
   \   000000FE   0x2829             CMP      R0,#+41
   \   00000100   0xD100             BNE      .+4
   \   00000102   0xE23B             B        ??mid_HTTP_response_41
   \   00000104   0x282A             CMP      R0,#+42
   \   00000106   0xD100             BNE      .+4
   \   00000108   0xE244             B        ??mid_HTTP_response_42
   \   0000010A   0x282B             CMP      R0,#+43
   \   0000010C   0xD100             BNE      .+4
   \   0000010E   0xE24D             B        ??mid_HTTP_response_43
   \   00000110   0x282C             CMP      R0,#+44
   \   00000112   0xD100             BNE      .+4
   \   00000114   0xE256             B        ??mid_HTTP_response_44
   \   00000116   0x282D             CMP      R0,#+45
   \   00000118   0xD100             BNE      .+4
   \   0000011A   0xE25F             B        ??mid_HTTP_response_45
   \   0000011C   0x282E             CMP      R0,#+46
   \   0000011E   0xD100             BNE      .+4
   \   00000120   0xE264             B        ??mid_HTTP_response_46
   \   00000122   0x282F             CMP      R0,#+47
   \   00000124   0xD100             BNE      .+4
   \   00000126   0xE269             B        ??mid_HTTP_response_47
   \   00000128   0x2830             CMP      R0,#+48
   \   0000012A   0xD100             BNE      .+4
   \   0000012C   0xE26E             B        ??mid_HTTP_response_48
   \   0000012E   0x2831             CMP      R0,#+49
   \   00000130   0xD100             BNE      .+4
   \   00000132   0xE273             B        ??mid_HTTP_response_49
   \   00000134   0x2832             CMP      R0,#+50
   \   00000136   0xD100             BNE      .+4
   \   00000138   0xE09F             B        ??mid_HTTP_response_50
   \   0000013A   0x2833             CMP      R0,#+51
   \   0000013C   0xD100             BNE      .+4
   \   0000013E   0xE275             B        ??mid_HTTP_response_51
   \   00000140   0x2835             CMP      R0,#+53
   \   00000142   0xD021             BEQ      ??mid_HTTP_response_52
   \   00000144   0x2836             CMP      R0,#+54
   \   00000146   0xD005             BEQ      ??mid_HTTP_response_53
   \   00000148   0x2837             CMP      R0,#+55
   \   0000014A   0xD00B             BEQ      ??mid_HTTP_response_54
   \   0000014C   0x2838             CMP      R0,#+56
   \   0000014E   0xD023             BEQ      ??mid_HTTP_response_55
   \   00000150   0xE274             B        ??mid_HTTP_response_56
   1937          	case MID_HTTP_SEQ_READY:						// 要求待ち
   1938          		break;
   \                     ??mid_HTTP_response_1: (+1)
   \   00000152   0xE273             B        ??mid_HTTP_response_57
   1939          
   1940          	case MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN_CDNSGIP:
   1941          		// QFDN IPアドレス取得
   1942          		mid_http_work.sequence = MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN;
   \                     ??mid_HTTP_response_53: (+1)
   \   00000154   0x201B             MOVS     R0,#+27
   \   00000156   0x4940             LDR      R1,??mid_HTTP_response_0
   \   00000158   0x7008             STRB     R0,[R1, #+0]
   1943          		// callback関数で正常終了通知
   1944          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   0000015A   0x2000             MOVS     R0,#+0
   \   0000015C   0x.... 0x....      BL       mid_HTTP_res_callback
   1945          		ret = 0;
   \   00000160   0x2400             MOVS     R4,#+0
   1946          		break;
   \   00000162   0xE26B             B        ??mid_HTTP_response_57
   1947          
   1948          	case MID_HTTP_SEQ_UDP_RESP_CIPSEND_CDNSGIP:
   1949          		// QFDN IPアドレス取得
   1950          		mid_http_work.sequence = MID_HTTP_SEQ_UDP_RESP_CIPSEND;
   \                     ??mid_HTTP_response_54: (+1)
   \   00000164   0x2018             MOVS     R0,#+24
   \   00000166   0x493C             LDR      R1,??mid_HTTP_response_0
   \   00000168   0x7008             STRB     R0,[R1, #+0]
   1951          		// callback関数で正常終了通知
   1952          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   0000016A   0x2000             MOVS     R0,#+0
   \   0000016C   0x.... 0x....      BL       mid_HTTP_res_callback
   1953                          mid_HTTP_req_UdpSend(mid_http_udpsend_work.data,
   1954                                               mid_http_udpsend_work.length,
   1955                                               mid_http_udpsend_work.id,
   1956                                               mid_http_udpsend_work.callback);
   \   00000170   0x48C6             LDR      R0,??mid_HTTP_response_58
   \   00000172   0x68C3             LDR      R3,[R0, #+12]
   \   00000174   0x48C5             LDR      R0,??mid_HTTP_response_58
   \   00000176   0x6882             LDR      R2,[R0, #+8]
   \   00000178   0x48C4             LDR      R0,??mid_HTTP_response_58
   \   0000017A   0x6841             LDR      R1,[R0, #+4]
   \   0000017C   0x48C3             LDR      R0,??mid_HTTP_response_58
   \   0000017E   0x6800             LDR      R0,[R0, #+0]
   \   00000180   0x.... 0x....      BL       mid_HTTP_req_UdpSend
   1957          
   1958          		ret = 0;
   \   00000184   0x2400             MOVS     R4,#+0
   1959          		break;
   \   00000186   0xE259             B        ??mid_HTTP_response_57
   1960          
   1961          	case MID_HTTP_SEQ_LTE_RESP_CFOTASWITCH:
   1962          		// OTA機能無効化完了
   1963          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_52: (+1)
   \   00000188   0x2000             MOVS     R0,#+0
   \   0000018A   0x4933             LDR      R1,??mid_HTTP_response_0
   \   0000018C   0x7008             STRB     R0,[R1, #+0]
   1964          		// callback関数で正常終了通知
   1965          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   0000018E   0x2000             MOVS     R0,#+0
   \   00000190   0x.... 0x....      BL       mid_HTTP_res_callback
   1966          		ret = 0;
   \   00000194   0x2400             MOVS     R4,#+0
   1967          		break;
   \   00000196   0xE251             B        ??mid_HTTP_response_57
   1968          
   1969                	case MID_HTTP_SEQ_LTE_RESP_AT:
   1970          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_55: (+1)
   \   00000198   0x2000             MOVS     R0,#+0
   \   0000019A   0x492F             LDR      R1,??mid_HTTP_response_0
   \   0000019C   0x7008             STRB     R0,[R1, #+0]
   1971          		// callback関数で正常終了通知
   1972          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x.... 0x....      BL       mid_HTTP_res_callback
   1973          		ret = 0;
   \   000001A4   0x2400             MOVS     R4,#+0
   1974          		break;
   \   000001A6   0xE249             B        ??mid_HTTP_response_57
   1975          
   1976          	case MID_HTTP_SEQ_INIT_RESP_ATE0:				// 初期化 :: エコーバック無効
   1977          		// IMEI取得コマンド送信
   1978          		mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_SIMEI;
   \                     ??mid_HTTP_response_2: (+1)
   \   000001A8   0x2009             MOVS     R0,#+9
   \   000001AA   0x492B             LDR      R1,??mid_HTTP_response_0
   \   000001AC   0x7008             STRB     R0,[R1, #+0]
   1979          		mid_http_work.retry = 0;
   \   000001AE   0x2000             MOVS     R0,#+0
   \   000001B0   0x49B7             LDR      R1,??mid_HTTP_response_58+0x4
   \   000001B2   0x6008             STR      R0,[R1, #+0]
   1980          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   000001B4   0x4828             LDR      R0,??mid_HTTP_response_0
   \   000001B6   0x7800             LDRB     R0,[R0, #+0]
   \   000001B8   0x.... 0x....      BL       mid_HTTP_send_command
   \   000001BC   0x0004             MOVS     R4,R0
   1981          		break;
   \   000001BE   0xE23D             B        ??mid_HTTP_response_57
   1982          
   1983          	case MID_HTTP_SEQ_INIT_RESP_CMEE:
   1984          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_3: (+1)
   \   000001C0   0x200A             MOVS     R0,#+10
   \   000001C2   0x.... 0x....      BL       seSysSleepMS
   1985          		// SIM PINの状態を問い合わせるコマンド送信
   1986          		mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CPINC;
   \   000001C6   0x2006             MOVS     R0,#+6
   \   000001C8   0x4923             LDR      R1,??mid_HTTP_response_0
   \   000001CA   0x7008             STRB     R0,[R1, #+0]
   1987          		mid_http_work.retry = 0;
   \   000001CC   0x2000             MOVS     R0,#+0
   \   000001CE   0x49B0             LDR      R1,??mid_HTTP_response_58+0x4
   \   000001D0   0x6008             STR      R0,[R1, #+0]
   1988          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   000001D2   0x4821             LDR      R0,??mid_HTTP_response_0
   \   000001D4   0x7800             LDRB     R0,[R0, #+0]
   \   000001D6   0x.... 0x....      BL       mid_HTTP_send_command
   \   000001DA   0x0004             MOVS     R4,R0
   1989          		break;
   \   000001DC   0xE22E             B        ??mid_HTTP_response_57
   1990          
   1991          	case MID_HTTP_SEQ_INIT_RESP_CPINC: 				// 初期化 :: SIM PINの状態を問い合わせる
   1992          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_7: (+1)
   \   000001DE   0x200A             MOVS     R0,#+10
   \   000001E0   0x.... 0x....      BL       seSysSleepMS
   1993          		switch (mid_http_work.resp_info.get_info.cpin) {
   \   000001E4   0x48AB             LDR      R0,??mid_HTTP_response_58+0x8
   \   000001E6   0x6800             LDR      R0,[R0, #+0]
   \   000001E8   0x2800             CMP      R0,#+0
   \   000001EA   0xD004             BEQ      ??mid_HTTP_response_59
   \   000001EC   0x2801             CMP      R0,#+1
   \   000001EE   0xD00E             BEQ      ??mid_HTTP_response_60
   \   000001F0   0x2804             CMP      R0,#+4
   \   000001F2   0xD00C             BEQ      ??mid_HTTP_response_60
   \   000001F4   0xE017             B        ??mid_HTTP_response_61
   1994          		case MID_HTTP_CPIN_READY:
   1995          			// 無線電波の確認コマンド送信
   1996          			mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CSQ;
   \                     ??mid_HTTP_response_59: (+1)
   \   000001F6   0x2007             MOVS     R0,#+7
   \   000001F8   0x4917             LDR      R1,??mid_HTTP_response_0
   \   000001FA   0x7008             STRB     R0,[R1, #+0]
   1997          			mid_http_work.retry = 0;
   \   000001FC   0x2000             MOVS     R0,#+0
   \   000001FE   0x49A4             LDR      R1,??mid_HTTP_response_58+0x4
   \   00000200   0x6008             STR      R0,[R1, #+0]
   1998          			ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000202   0x4815             LDR      R0,??mid_HTTP_response_0
   \   00000204   0x7800             LDRB     R0,[R0, #+0]
   \   00000206   0x.... 0x....      BL       mid_HTTP_send_command
   \   0000020A   0x0004             MOVS     R4,R0
   1999          			break;
   \   0000020C   0xE013             B        ??mid_HTTP_response_62
   2000          
   2001          		case MID_HTTP_CPIN_SIM_PIN:
   2002          		case MID_HTTP_CPIN_SIM_PIN2:
   2003          			// PIN設定コマンド送信
   2004          			mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CPINS;
   \                     ??mid_HTTP_response_60: (+1)
   \   0000020E   0x2008             MOVS     R0,#+8
   \   00000210   0x4911             LDR      R1,??mid_HTTP_response_0
   \   00000212   0x7008             STRB     R0,[R1, #+0]
   2005          			mid_http_work.retry = 0;
   \   00000214   0x2000             MOVS     R0,#+0
   \   00000216   0x499E             LDR      R1,??mid_HTTP_response_58+0x4
   \   00000218   0x6008             STR      R0,[R1, #+0]
   2006          			ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   0000021A   0x480F             LDR      R0,??mid_HTTP_response_0
   \   0000021C   0x7800             LDRB     R0,[R0, #+0]
   \   0000021E   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000222   0x0004             MOVS     R4,R0
   2007          			break;
   \   00000224   0xE007             B        ??mid_HTTP_response_62
   2008          
   2009          		case MID_HTTP_CPIN_SIM_PUK:
   2010          		case MID_HTTP_CPIN_PH_SIM_PIN:
   2011          		case MID_HTTP_CPIN_SIM_PUK2:
   2012          		case MID_HTTP_CPIN_PH_NET_PIN:
   2013          		default:
   2014          			// 初期化完了
   2015          			mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_61: (+1)
   \   00000226   0x2000             MOVS     R0,#+0
   \   00000228   0x490B             LDR      R1,??mid_HTTP_response_0
   \   0000022A   0x7008             STRB     R0,[R1, #+0]
   2016          			// callback関数で正常終了通知
   2017          			mid_HTTP_res_callback(MID_HTTP_STATUS_NG);
   \   0000022C   0x2000             MOVS     R0,#+0
   \   0000022E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000230   0x.... 0x....      BL       mid_HTTP_res_callback
   2018          			ret = 0;
   \   00000234   0x2400             MOVS     R4,#+0
   2019          			break;
   2020          		}
   2021          		break;
   \                     ??mid_HTTP_response_62: (+1)
   \   00000236   0xE201             B        ??mid_HTTP_response_57
   2022          
   2023          	case MID_HTTP_SEQ_INIT_RESP_CPINS: 				// 初期化 :: PIN設定
   2024          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_9: (+1)
   \   00000238   0x200A             MOVS     R0,#+10
   \   0000023A   0x.... 0x....      BL       seSysSleepMS
   2025          		// 無線電波の確認コマンド送信
   2026          		mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CSQ;
   \   0000023E   0x2007             MOVS     R0,#+7
   \   00000240   0x4905             LDR      R1,??mid_HTTP_response_0
   \   00000242   0x7008             STRB     R0,[R1, #+0]
   2027          		mid_http_work.retry = 0;
   \   00000244   0x2000             MOVS     R0,#+0
   \   00000246   0x4992             LDR      R1,??mid_HTTP_response_58+0x4
   \   00000248   0x6008             STR      R0,[R1, #+0]
   2028          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   0000024A   0x4803             LDR      R0,??mid_HTTP_response_0
   \   0000024C   0x7800             LDRB     R0,[R0, #+0]
   \   0000024E   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000252   0x0004             MOVS     R4,R0
   2029          		break;
   \   00000254   0xE1F2             B        ??mid_HTTP_response_57
   \   00000256   0xBF00             Nop      
   \                     ??mid_HTTP_response_0:
   \   00000258   0x........         DC32     mid_http_work+0x1830
   2030          
   2031          	case MID_HTTP_SEQ_INIT_RESP_CSQ: 				// 初期化 :: 無線電波の確認
   2032          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_8: (+1)
   \   0000025C   0x200A             MOVS     R0,#+10
   \   0000025E   0x.... 0x....      BL       seSysSleepMS
   2033          		// リビジョン取得コマンド送信
   2034          		mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CGMR;
   \   00000262   0x200C             MOVS     R0,#+12
   \   00000264   0x498C             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000266   0x7008             STRB     R0,[R1, #+0]
   2035          		mid_http_work.retry = 0;
   \   00000268   0x2000             MOVS     R0,#+0
   \   0000026A   0x4989             LDR      R1,??mid_HTTP_response_58+0x4
   \   0000026C   0x6008             STR      R0,[R1, #+0]
   2036          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   0000026E   0x488A             LDR      R0,??mid_HTTP_response_58+0xC
   \   00000270   0x7800             LDRB     R0,[R0, #+0]
   \   00000272   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000276   0x0004             MOVS     R4,R0
   2037          		break;
   \   00000278   0xE1E0             B        ??mid_HTTP_response_57
   2038          
   2039          	case MID_HTTP_SEQ_INIT_RESP_CPSI:
   2040          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_50: (+1)
   \   0000027A   0x200A             MOVS     R0,#+10
   \   0000027C   0x.... 0x....      BL       seSysSleepMS
   2041          		// リビジョン取得コマンド送信
   2042          		mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CGMR;
   \   00000280   0x200C             MOVS     R0,#+12
   \   00000282   0x4985             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000284   0x7008             STRB     R0,[R1, #+0]
   2043          		mid_http_work.retry = 0;
   \   00000286   0x2000             MOVS     R0,#+0
   \   00000288   0x4981             LDR      R1,??mid_HTTP_response_58+0x4
   \   0000028A   0x6008             STR      R0,[R1, #+0]
   2044          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   0000028C   0x4882             LDR      R0,??mid_HTTP_response_58+0xC
   \   0000028E   0x7800             LDRB     R0,[R0, #+0]
   \   00000290   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000294   0x0004             MOVS     R4,R0
   2045          		break;
   \   00000296   0xE1D1             B        ??mid_HTTP_response_57
   2046          
   2047          	case MID_HTTP_SEQ_INIT_RESP_SIMEI: 				// 初期化 :: IMEI取得
   2048          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_10: (+1)
   \   00000298   0x200A             MOVS     R0,#+10
   \   0000029A   0x.... 0x....      BL       seSysSleepMS
   2049          		// エラー結果コードで数値を使用可能にする
   2050          		mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CMEE;
   \   0000029E   0x2002             MOVS     R0,#+2
   \   000002A0   0x497D             LDR      R1,??mid_HTTP_response_58+0xC
   \   000002A2   0x7008             STRB     R0,[R1, #+0]
   2051          		mid_http_work.retry = 0;
   \   000002A4   0x2000             MOVS     R0,#+0
   \   000002A6   0x497A             LDR      R1,??mid_HTTP_response_58+0x4
   \   000002A8   0x6008             STR      R0,[R1, #+0]
   2052          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   000002AA   0x487B             LDR      R0,??mid_HTTP_response_58+0xC
   \   000002AC   0x7800             LDRB     R0,[R0, #+0]
   \   000002AE   0x.... 0x....      BL       mid_HTTP_send_command
   \   000002B2   0x0004             MOVS     R4,R0
   2053          		break;
   \   000002B4   0xE1C2             B        ??mid_HTTP_response_57
   2054          
   2055          	case MID_HTTP_SEQ_INIT_RESP_CGMR:				// 初期化 :: リビジョン取得
   2056          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_12: (+1)
   \   000002B6   0x200A             MOVS     R0,#+10
   \   000002B8   0x.... 0x....      BL       seSysSleepMS
   2057          		// 時間と時刻の自動更新確認
   2058          		mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CTZUC;
   \   000002BC   0x2003             MOVS     R0,#+3
   \   000002BE   0x4976             LDR      R1,??mid_HTTP_response_58+0xC
   \   000002C0   0x7008             STRB     R0,[R1, #+0]
   2059          		mid_http_work.retry = 0;
   \   000002C2   0x2000             MOVS     R0,#+0
   \   000002C4   0x4972             LDR      R1,??mid_HTTP_response_58+0x4
   \   000002C6   0x6008             STR      R0,[R1, #+0]
   2060          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   000002C8   0x4873             LDR      R0,??mid_HTTP_response_58+0xC
   \   000002CA   0x7800             LDRB     R0,[R0, #+0]
   \   000002CC   0x.... 0x....      BL       mid_HTTP_send_command
   \   000002D0   0x0004             MOVS     R4,R0
   2061          		break;
   \   000002D2   0xE1B3             B        ??mid_HTTP_response_57
   2062          
   2063          	case MID_HTTP_SEQ_INIT_RESP_CSCLK: 				// 初期化 :: DTR端子によるsleepモードを有効にする
   2064          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_11: (+1)
   \   000002D4   0x200A             MOVS     R0,#+10
   \   000002D6   0x.... 0x....      BL       seSysSleepMS
   2065          		// 時間と時刻の自動更新確認
   2066          		mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CTZUC;
   \   000002DA   0x2003             MOVS     R0,#+3
   \   000002DC   0x496E             LDR      R1,??mid_HTTP_response_58+0xC
   \   000002DE   0x7008             STRB     R0,[R1, #+0]
   2067          		mid_http_work.retry = 0;
   \   000002E0   0x2000             MOVS     R0,#+0
   \   000002E2   0x496B             LDR      R1,??mid_HTTP_response_58+0x4
   \   000002E4   0x6008             STR      R0,[R1, #+0]
   2068          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   000002E6   0x486C             LDR      R0,??mid_HTTP_response_58+0xC
   \   000002E8   0x7800             LDRB     R0,[R0, #+0]
   \   000002EA   0x.... 0x....      BL       mid_HTTP_send_command
   \   000002EE   0x0004             MOVS     R4,R0
   2069          		break;
   \   000002F0   0xE1A4             B        ??mid_HTTP_response_57
   2070          
   2071          	case MID_HTTP_SEQ_INIT_RESP_CTZUC:				// 初期化 :: 時間と時刻の自動更新確認
   2072          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_4: (+1)
   \   000002F2   0x200A             MOVS     R0,#+10
   \   000002F4   0x.... 0x....      BL       seSysSleepMS
   2073          		if (mid_http_work.resp_info.get_info.ctzuc_q == MID_HTTP_GET_CTZUC_1) {
   \   000002F8   0x....             LDR      R0,??DataTable7
   \   000002FA   0x6800             LDR      R0,[R0, #+0]
   \   000002FC   0x2802             CMP      R0,#+2
   \   000002FE   0xD10B             BNE      ??mid_HTTP_response_63
   2074          			// 現在時刻取得コマンド送信
   2075          			mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CCLK;
   \   00000300   0x2005             MOVS     R0,#+5
   \   00000302   0x4965             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000304   0x7008             STRB     R0,[R1, #+0]
   2076          			mid_http_work.retry = 0;
   \   00000306   0x2000             MOVS     R0,#+0
   \   00000308   0x4961             LDR      R1,??mid_HTTP_response_58+0x4
   \   0000030A   0x6008             STR      R0,[R1, #+0]
   2077          			ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   0000030C   0x4862             LDR      R0,??mid_HTTP_response_58+0xC
   \   0000030E   0x7800             LDRB     R0,[R0, #+0]
   \   00000310   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000314   0x0004             MOVS     R4,R0
   \   00000316   0xE00A             B        ??mid_HTTP_response_64
   2078          		}
   2079          		else {
   2080          			// 時間と時刻の自動更新有効設定コマンド送信
   2081          			mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CTZUS;
   \                     ??mid_HTTP_response_63: (+1)
   \   00000318   0x2004             MOVS     R0,#+4
   \   0000031A   0x495F             LDR      R1,??mid_HTTP_response_58+0xC
   \   0000031C   0x7008             STRB     R0,[R1, #+0]
   2082          			mid_http_work.retry = 0;
   \   0000031E   0x2000             MOVS     R0,#+0
   \   00000320   0x495B             LDR      R1,??mid_HTTP_response_58+0x4
   \   00000322   0x6008             STR      R0,[R1, #+0]
   2083          			ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000324   0x485C             LDR      R0,??mid_HTTP_response_58+0xC
   \   00000326   0x7800             LDRB     R0,[R0, #+0]
   \   00000328   0x.... 0x....      BL       mid_HTTP_send_command
   \   0000032C   0x0004             MOVS     R4,R0
   2084          		}
   2085          		break;
   \                     ??mid_HTTP_response_64: (+1)
   \   0000032E   0xE185             B        ??mid_HTTP_response_57
   2086          
   2087          	case MID_HTTP_SEQ_INIT_RESP_CTZUS: 				// 初期化 :: 時間と時刻の自動更新有効設定
   2088          		// 初期化完了
   2089          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_5: (+1)
   \   00000330   0x2000             MOVS     R0,#+0
   \   00000332   0x4959             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000334   0x7008             STRB     R0,[R1, #+0]
   2090          		// callback関数で正常終了通知
   2091          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000336   0x2000             MOVS     R0,#+0
   \   00000338   0x.... 0x....      BL       mid_HTTP_res_callback
   2092          		ret = 0;
   \   0000033C   0x2400             MOVS     R4,#+0
   2093          		break;
   \   0000033E   0xE17D             B        ??mid_HTTP_response_57
   2094          
   2095          	case MID_HTTP_SEQ_INIT_RESP_CCLK: 				// 初期化 :: 現在時刻取得
   2096          		// 初期化完了
   2097          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_6: (+1)
   \   00000340   0x2000             MOVS     R0,#+0
   \   00000342   0x4955             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000344   0x7008             STRB     R0,[R1, #+0]
   2098          		// callback関数で正常終了通知
   2099          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000346   0x2000             MOVS     R0,#+0
   \   00000348   0x.... 0x....      BL       mid_HTTP_res_callback
   2100          		ret = 0;
   \   0000034C   0x2400             MOVS     R4,#+0
   2101          		break;
   \   0000034E   0xE175             B        ??mid_HTTP_response_57
   2102          
   2103          	case MID_HTTP_SEQ_INIT_RESP_IPADDR:				// 初期化 :: IP取得
   2104          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_13: (+1)
   \   00000350   0x2000             MOVS     R0,#+0
   \   00000352   0x4951             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000354   0x7008             STRB     R0,[R1, #+0]
   2105          		// callback関数で正常終了通知
   2106          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000356   0x2000             MOVS     R0,#+0
   \   00000358   0x.... 0x....      BL       mid_HTTP_res_callback
   2107          		ret = 0;
   \   0000035C   0x2400             MOVS     R4,#+0
   2108          		break;
   \   0000035E   0xE16D             B        ??mid_HTTP_response_57
   2109          
   2110          
   2111          	// mid_HTTP_req_LteReady
   2112          	case MID_HTTP_SEQ_LTE_RESP_CGDCONT: 			// LTE :: パケット発信時の接続先(APN)の設定
   2113          		// PDPコンテキスト認証パラメータを設定コマンド送信
   2114          		mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_CGAUTH;
   \                     ??mid_HTTP_response_14: (+1)
   \   00000360   0x200F             MOVS     R0,#+15
   \   00000362   0x494D             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000364   0x7008             STRB     R0,[R1, #+0]
   2115          		mid_http_work.retry = 0;
   \   00000366   0x2000             MOVS     R0,#+0
   \   00000368   0x4949             LDR      R1,??mid_HTTP_response_58+0x4
   \   0000036A   0x6008             STR      R0,[R1, #+0]
   2116          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   0000036C   0x484A             LDR      R0,??mid_HTTP_response_58+0xC
   \   0000036E   0x7800             LDRB     R0,[R0, #+0]
   \   00000370   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000374   0x0004             MOVS     R4,R0
   2117          		break;
   \   00000376   0xE161             B        ??mid_HTTP_response_57
   2118          
   2119          	case MID_HTTP_SEQ_LTE_RESP_CGAUTH: 				// LTE :: PDPコンテキスト認証パラメータを設定
   2120          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_15: (+1)
   \   00000378   0x200A             MOVS     R0,#+10
   \   0000037A   0x.... 0x....      BL       seSysSleepMS
   2121          		// PDPコンテキストのプロファイル番号を設定コマンド送信
   2122          		mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_CSOCKSETPN;
   \   0000037E   0x2010             MOVS     R0,#+16
   \   00000380   0x4945             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000382   0x7008             STRB     R0,[R1, #+0]
   2123          		mid_http_work.retry = 0;
   \   00000384   0x2000             MOVS     R0,#+0
   \   00000386   0x4942             LDR      R1,??mid_HTTP_response_58+0x4
   \   00000388   0x6008             STR      R0,[R1, #+0]
   2124          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   0000038A   0x4843             LDR      R0,??mid_HTTP_response_58+0xC
   \   0000038C   0x7800             LDRB     R0,[R0, #+0]
   \   0000038E   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000392   0x0004             MOVS     R4,R0
   2125          		break;
   \   00000394   0xE152             B        ??mid_HTTP_response_57
   2126          
   2127          	case MID_HTTP_SEQ_LTE_RESP_CSOCKSETPN: 				// LTE :: PDPコンテキストのプロファイル番号を設定
   2128          		seSysSleepMS(10);
   \                     ??mid_HTTP_response_16: (+1)
   \   00000396   0x200A             MOVS     R0,#+10
   \   00000398   0x.... 0x....      BL       seSysSleepMS
   2129          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \   0000039C   0x2000             MOVS     R0,#+0
   \   0000039E   0x493E             LDR      R1,??mid_HTTP_response_58+0xC
   \   000003A0   0x7008             STRB     R0,[R1, #+0]
   2130          		// callback関数で正常終了通知
   2131          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000003A2   0x2000             MOVS     R0,#+0
   \   000003A4   0x.... 0x....      BL       mid_HTTP_res_callback
   2132          		ret = 0;
   \   000003A8   0x2400             MOVS     R4,#+0
   2133          		break;
   \   000003AA   0xE147             B        ??mid_HTTP_response_57
   2134          
   2135          
   2136          	// mid_HTTP_req_LteOpen
   2137          	case MID_HTTP_SEQ_LTE_RESP_NETOPEN: 				// LTE :: ソケット生成
   2138          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_17: (+1)
   \   000003AC   0x2000             MOVS     R0,#+0
   \   000003AE   0x493A             LDR      R1,??mid_HTTP_response_58+0xC
   \   000003B0   0x7008             STRB     R0,[R1, #+0]
   2139          		// callback関数で正常終了通知
   2140          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000003B2   0x2000             MOVS     R0,#+0
   \   000003B4   0x.... 0x....      BL       mid_HTTP_res_callback
   2141          		ret = 0;
   \   000003B8   0x2400             MOVS     R4,#+0
   2142          		break;
   \   000003BA   0xE13F             B        ??mid_HTTP_response_57
   2143          
   2144          
   2145          	// mid_HTTP_req_LteClose
   2146          	case MID_HTTP_SEQ_LTE_RESP_NETCLOSE:				// LTE :: ソケット切断
   2147          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_18: (+1)
   \   000003BC   0x2000             MOVS     R0,#+0
   \   000003BE   0x4936             LDR      R1,??mid_HTTP_response_58+0xC
   \   000003C0   0x7008             STRB     R0,[R1, #+0]
   2148          		// callback関数で正常終了通知
   2149          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000003C2   0x2000             MOVS     R0,#+0
   \   000003C4   0x.... 0x....      BL       mid_HTTP_res_callback
   2150          		ret = 0;
   \   000003C8   0x2400             MOVS     R4,#+0
   2151          		break;
   \   000003CA   0xE137             B        ??mid_HTTP_response_57
   2152          
   2153          
   2154          	// mid_HTTP_req_LteStbyIn
   2155          	case MID_HTTP_SEQ_LTE_RESP_STBY_IN:					// LTE :: STBY IN
   2156          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_19: (+1)
   \   000003CC   0x2000             MOVS     R0,#+0
   \   000003CE   0x4932             LDR      R1,??mid_HTTP_response_58+0xC
   \   000003D0   0x7008             STRB     R0,[R1, #+0]
   2157          		// callback関数で正常終了通知
   2158          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000003D2   0x2000             MOVS     R0,#+0
   \   000003D4   0x.... 0x....      BL       mid_HTTP_res_callback
   2159          		ret = 0;
   \   000003D8   0x2400             MOVS     R4,#+0
   2160          		break;
   \   000003DA   0xE12F             B        ??mid_HTTP_response_57
   2161          
   2162          
   2163          	// mid_HTTP_req_LteStbyOut
   2164          	case MID_HTTP_SEQ_LTE_RESP_STBY_OUT:				// LTE :: STBY OUT
   2165          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_20: (+1)
   \   000003DC   0x2000             MOVS     R0,#+0
   \   000003DE   0x492E             LDR      R1,??mid_HTTP_response_58+0xC
   \   000003E0   0x7008             STRB     R0,[R1, #+0]
   2166          		// callback関数で正常終了通知
   2167          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000003E2   0x2000             MOVS     R0,#+0
   \   000003E4   0x.... 0x....      BL       mid_HTTP_res_callback
   2168          		ret = 0;
   \   000003E8   0x2400             MOVS     R4,#+0
   2169          		break;
   \   000003EA   0xE127             B        ??mid_HTTP_response_57
   2170          
   2171          
   2172          	// mid_HTTP_req_LteCsq
   2173          	case MID_HTTP_SEQ_LTE_RESP_CSQ:						// LTE :: 無線電波の確認
   2174          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_21: (+1)
   \   000003EC   0x2000             MOVS     R0,#+0
   \   000003EE   0x492A             LDR      R1,??mid_HTTP_response_58+0xC
   \   000003F0   0x7008             STRB     R0,[R1, #+0]
   2175          		// callback関数で正常終了通知
   2176          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000003F2   0x2000             MOVS     R0,#+0
   \   000003F4   0x.... 0x....      BL       mid_HTTP_res_callback
   2177          		ret = 0;
   \   000003F8   0x2400             MOVS     R4,#+0
   2178          		break;
   \   000003FA   0xE11F             B        ??mid_HTTP_response_57
   2179          
   2180          	// mid_HTTP_req_LteReset
   2181          	case MID_HTTP_SEQ_LTE_RESP_RESET:					// LTE :: リセット
   2182          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_22: (+1)
   \   000003FC   0x2000             MOVS     R0,#+0
   \   000003FE   0x4926             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000400   0x7008             STRB     R0,[R1, #+0]
   2183          		// callback関数で正常終了通知
   2184          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000402   0x2000             MOVS     R0,#+0
   \   00000404   0x.... 0x....      BL       mid_HTTP_res_callback
   2185          		ret = 0;
   \   00000408   0x2400             MOVS     R4,#+0
   2186          		break;
   \   0000040A   0xE117             B        ??mid_HTTP_response_57
   2187          
   2188          	// mid_HTTP_req_UdpOpen
   2189          	case MID_HTTP_SEQ_UDP_RESP_CIPOPEN:					// UDP :: マルチソケットモードで接続を確立する
   2190          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_23: (+1)
   \   0000040C   0x2000             MOVS     R0,#+0
   \   0000040E   0x4922             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000410   0x7008             STRB     R0,[R1, #+0]
   2191          		// callback関数で正常終了通知
   2192          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000412   0x2000             MOVS     R0,#+0
   \   00000414   0x.... 0x....      BL       mid_HTTP_res_callback
   2193          		ret = 0;
   \   00000418   0x2400             MOVS     R4,#+0
   2194          		break;
   \   0000041A   0xE10F             B        ??mid_HTTP_response_57
   2195          
   2196          
   2197          	// mid_HTTP_req_UdpSend
   2198          	case MID_HTTP_SEQ_UDP_RESP_CIPSEND:					// UDP :: UDP接続を介してデータを送信する1
   2199          		mid_http_work.sequence = MID_HTTP_SEQ_UDP_RESP_CIPSEND2;
   \                     ??mid_HTTP_response_24: (+1)
   \   0000041C   0x2019             MOVS     R0,#+25
   \   0000041E   0x491E             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000420   0x7008             STRB     R0,[R1, #+0]
   2200          		mid_http_work.retry = 0;
   \   00000422   0x2000             MOVS     R0,#+0
   \   00000424   0x491A             LDR      R1,??mid_HTTP_response_58+0x4
   \   00000426   0x6008             STR      R0,[R1, #+0]
   2201          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000428   0x481B             LDR      R0,??mid_HTTP_response_58+0xC
   \   0000042A   0x7800             LDRB     R0,[R0, #+0]
   \   0000042C   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000430   0x0004             MOVS     R4,R0
   2202          		break;
   \   00000432   0xE103             B        ??mid_HTTP_response_57
   2203          
   2204          	case MID_HTTP_SEQ_UDP_RESP_CIPSEND2:				// UDP :: UDP接続を介してデータを送信する2
   2205          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_25: (+1)
   \   00000434   0x2000             MOVS     R0,#+0
   \   00000436   0x4918             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000438   0x7008             STRB     R0,[R1, #+0]
   2206          		// callback関数で正常終了通知
   2207          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   0000043A   0x2000             MOVS     R0,#+0
   \   0000043C   0x.... 0x....      BL       mid_HTTP_res_callback
   2208          		ret = 0;
   \   00000440   0x2400             MOVS     R4,#+0
   2209          		break;
   \   00000442   0xE0FB             B        ??mid_HTTP_response_57
   2210          
   2211          
   2212          	// mid_HTTP_req_UdpClose
   2213          	case MID_HTTP_SEQ_UDP_RESP_CIPCLOSE:				// UDP :: UDPソケットを閉じる
   2214          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_26: (+1)
   \   00000444   0x2000             MOVS     R0,#+0
   \   00000446   0x4914             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000448   0x7008             STRB     R0,[R1, #+0]
   2215          		// callback関数で正常終了通知
   2216          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   0000044A   0x2000             MOVS     R0,#+0
   \   0000044C   0x.... 0x....      BL       mid_HTTP_res_callback
   2217          		ret = 0;
   \   00000450   0x2400             MOVS     R4,#+0
   2218          		break;
   \   00000452   0xE0F3             B        ??mid_HTTP_response_57
   2219          
   2220          
   2221          	// mid_HTTP_req_ClientOpen
   2222          	case MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN:				// HTTP client :: マルチソケットモードで接続を確立する
   2223          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_27: (+1)
   \   00000454   0x2000             MOVS     R0,#+0
   \   00000456   0x4910             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000458   0x7008             STRB     R0,[R1, #+0]
   2224          		// callback関数で正常終了通知
   2225          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   0000045A   0x2000             MOVS     R0,#+0
   \   0000045C   0x.... 0x....      BL       mid_HTTP_res_callback
   2226          		ret = 0;
   \   00000460   0x2400             MOVS     R4,#+0
   2227          		break;
   \   00000462   0xE0EB             B        ??mid_HTTP_response_57
   2228          
   2229          
   2230          	// mid_HTTP_req_ClientSend
   2231          	case MID_HTTP_SEQ_CLIENT_RESP_CIPSEND:				// HTTP client :: TCP接続を介してデータを送信する
   2232          		mid_http_work.sequence = MID_HTTP_SEQ_CLIENT_RESP_CIPSEND2;
   \                     ??mid_HTTP_response_28: (+1)
   \   00000464   0x201D             MOVS     R0,#+29
   \   00000466   0x490C             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000468   0x7008             STRB     R0,[R1, #+0]
   2233          		mid_http_work.retry = 0;
   \   0000046A   0x2000             MOVS     R0,#+0
   \   0000046C   0x4908             LDR      R1,??mid_HTTP_response_58+0x4
   \   0000046E   0x6008             STR      R0,[R1, #+0]
   2234          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000470   0x4809             LDR      R0,??mid_HTTP_response_58+0xC
   \   00000472   0x7800             LDRB     R0,[R0, #+0]
   \   00000474   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000478   0x0004             MOVS     R4,R0
   2235          		break;
   \   0000047A   0xE0DF             B        ??mid_HTTP_response_57
   2236          	case MID_HTTP_SEQ_CLIENT_RESP_CIPSEND2:				// HTTP client :: TCP接続を介してデータを送信する
   2237          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_29: (+1)
   \   0000047C   0x2000             MOVS     R0,#+0
   \   0000047E   0x4906             LDR      R1,??mid_HTTP_response_58+0xC
   \   00000480   0x7008             STRB     R0,[R1, #+0]
   2238          		// callback関数で正常終了通知
   2239          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000482   0x2000             MOVS     R0,#+0
   \   00000484   0x.... 0x....      BL       mid_HTTP_res_callback
   2240          		ret = 0;
   \   00000488   0x2400             MOVS     R4,#+0
   2241          		break;
   \   0000048A   0xE0D7             B        ??mid_HTTP_response_57
   \                     ??mid_HTTP_response_58:
   \   0000048C   0x........         DC32     mid_http_udpsend_work
   \   00000490   0x........         DC32     mid_http_work+0x1CA8
   \   00000494   0x........         DC32     mid_http_work+0x1CCC
   \   00000498   0x........         DC32     mid_http_work+0x1830
   2242          
   2243          
   2244          	// mid_HTTP_req_ClientClose
   2245          	case MID_HTTP_SEQ_CLIENT_RESP_CIPCLOSE:				// HTTP client :: TCPソケットを閉じる
   2246          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_30: (+1)
   \   0000049C   0x2000             MOVS     R0,#+0
   \   0000049E   0x....             LDR      R1,??DataTable10
   \   000004A0   0x7008             STRB     R0,[R1, #+0]
   2247          		// callback関数で正常終了通知
   2248          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000004A2   0x2000             MOVS     R0,#+0
   \   000004A4   0x.... 0x....      BL       mid_HTTP_res_callback
   2249          		ret = 0;
   \   000004A8   0x2400             MOVS     R4,#+0
   2250          		break;
   \   000004AA   0xE0C7             B        ??mid_HTTP_response_57
   2251          
   2252          
   2253          	// mid_HTTP_req_ServerOpen
   2254          	case MID_HTTP_SEQ_SERVER_RESP_START:				// HTTP server :: サーバ開始
   2255          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_31: (+1)
   \   000004AC   0x2000             MOVS     R0,#+0
   \   000004AE   0x....             LDR      R1,??DataTable10
   \   000004B0   0x7008             STRB     R0,[R1, #+0]
   2256          		// callback関数で正常終了通知
   2257          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000004B2   0x2000             MOVS     R0,#+0
   \   000004B4   0x.... 0x....      BL       mid_HTTP_res_callback
   2258          		ret = 0;
   \   000004B8   0x2400             MOVS     R4,#+0
   2259          		break;
   \   000004BA   0xE0BF             B        ??mid_HTTP_response_57
   2260          
   2261          
   2262          	// mid_HTTP_req_ServerSend
   2263          	case MID_HTTP_SEQ_SERVER_RESP_CIPSEND:				// HTTP server :: TCP接続を介してデータを送信する
   2264          		mid_http_work.sequence = MID_HTTP_SEQ_SERVER_RESP_CIPSEND2;
   \                     ??mid_HTTP_response_32: (+1)
   \   000004BC   0x2021             MOVS     R0,#+33
   \   000004BE   0x....             LDR      R1,??DataTable10
   \   000004C0   0x7008             STRB     R0,[R1, #+0]
   2265          		mid_http_work.retry = 0;
   \   000004C2   0x2000             MOVS     R0,#+0
   \   000004C4   0x....             LDR      R1,??DataTable9
   \   000004C6   0x6008             STR      R0,[R1, #+0]
   2266          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   000004C8   0x....             LDR      R0,??DataTable10
   \   000004CA   0x7800             LDRB     R0,[R0, #+0]
   \   000004CC   0x.... 0x....      BL       mid_HTTP_send_command
   \   000004D0   0x0004             MOVS     R4,R0
   2267          		break;
   \   000004D2   0xE0B3             B        ??mid_HTTP_response_57
   2268          	case MID_HTTP_SEQ_SERVER_RESP_CIPSEND2:				// HTTP server :: TCP接続を介してデータを送信する
   2269          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_33: (+1)
   \   000004D4   0x2000             MOVS     R0,#+0
   \   000004D6   0x....             LDR      R1,??DataTable10
   \   000004D8   0x7008             STRB     R0,[R1, #+0]
   2270          		// callback関数で正常終了通知
   2271          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000004DA   0x2000             MOVS     R0,#+0
   \   000004DC   0x.... 0x....      BL       mid_HTTP_res_callback
   2272          		ret = 0;
   \   000004E0   0x2400             MOVS     R4,#+0
   2273          		break;
   \   000004E2   0xE0AB             B        ??mid_HTTP_response_57
   2274          
   2275          
   2276          	// mid_HTTP_req_ServerClose
   2277          	case MID_HTTP_SEQ_SERVER_RESP_STOP:					// HTTP server :: サーバ停止
   2278          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_34: (+1)
   \   000004E4   0x2000             MOVS     R0,#+0
   \   000004E6   0x....             LDR      R1,??DataTable10
   \   000004E8   0x7008             STRB     R0,[R1, #+0]
   2279          		// callback関数で正常終了通知
   2280          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000004EA   0x2000             MOVS     R0,#+0
   \   000004EC   0x.... 0x....      BL       mid_HTTP_res_callback
   2281          		ret = 0;
   \   000004F0   0x2400             MOVS     R4,#+0
   2282          		break;
   \   000004F2   0xE0A3             B        ??mid_HTTP_response_57
   2283          
   2284          
   2285          	// mid_HTTP_req_FtpFolder
   2286          	case MID_HTTP_SEQ_FTP_RESP_FSCD:
   2287          		// rm *.*コマンド送信
   2288          		mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_FSDEL;
   \                     ??mid_HTTP_response_35: (+1)
   \   000004F4   0x2024             MOVS     R0,#+36
   \   000004F6   0x....             LDR      R1,??DataTable10
   \   000004F8   0x7008             STRB     R0,[R1, #+0]
   2289          		mid_http_work.retry = 0;
   \   000004FA   0x2000             MOVS     R0,#+0
   \   000004FC   0x....             LDR      R1,??DataTable9
   \   000004FE   0x6008             STR      R0,[R1, #+0]
   2290          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000500   0x....             LDR      R0,??DataTable10
   \   00000502   0x7800             LDRB     R0,[R0, #+0]
   \   00000504   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000508   0x0004             MOVS     R4,R0
   2291          		break;		
   \   0000050A   0xE097             B        ??mid_HTTP_response_57
   2292          
   2293          	case MID_HTTP_SEQ_FTP_RESP_FSDEL:
   2294          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_36: (+1)
   \   0000050C   0x2000             MOVS     R0,#+0
   \   0000050E   0x....             LDR      R1,??DataTable10
   \   00000510   0x7008             STRB     R0,[R1, #+0]
   2295          		// callback関数で正常終了通知
   2296          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000512   0x2000             MOVS     R0,#+0
   \   00000514   0x.... 0x....      BL       mid_HTTP_res_callback
   2297          		ret = 0;
   \   00000518   0x2400             MOVS     R4,#+0
   2298          		break;
   \   0000051A   0xE08F             B        ??mid_HTTP_response_57
   2299          
   2300          
   2301          	// mid_HTTP_req_FtpOpen
   2302          	case MID_HTTP_SEQ_FTP_RESP_CGSOCKCONT:				// FTP :: APN情報 :: APN名設定
   2303          		// プロファイル番号設定コマンド送信
   2304          		mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CSOCKSETPN;
   \                     ??mid_HTTP_response_37: (+1)
   \   0000051C   0x2026             MOVS     R0,#+38
   \   0000051E   0x....             LDR      R1,??DataTable10
   \   00000520   0x7008             STRB     R0,[R1, #+0]
   2305          		mid_http_work.retry = 0;
   \   00000522   0x2000             MOVS     R0,#+0
   \   00000524   0x....             LDR      R1,??DataTable9
   \   00000526   0x6008             STR      R0,[R1, #+0]
   2306          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000528   0x....             LDR      R0,??DataTable10
   \   0000052A   0x7800             LDRB     R0,[R0, #+0]
   \   0000052C   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000530   0x0004             MOVS     R4,R0
   2307          		break;
   \   00000532   0xE083             B        ??mid_HTTP_response_57
   2308          
   2309          	case MID_HTTP_SEQ_FTP_RESP_CSOCKSETPN:
   2310          		// FTP :: ユーザID, パスワードコマンド送信
   2311          		mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CSOCKAUTH;
   \                     ??mid_HTTP_response_38: (+1)
   \   00000534   0x2027             MOVS     R0,#+39
   \   00000536   0x....             LDR      R1,??DataTable10
   \   00000538   0x7008             STRB     R0,[R1, #+0]
   2312          		mid_http_work.retry = 0;
   \   0000053A   0x2000             MOVS     R0,#+0
   \   0000053C   0x....             LDR      R1,??DataTable9
   \   0000053E   0x6008             STR      R0,[R1, #+0]
   2313          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000540   0x....             LDR      R0,??DataTable10
   \   00000542   0x7800             LDRB     R0,[R0, #+0]
   \   00000544   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000548   0x0004             MOVS     R4,R0
   2314          		break;
   \   0000054A   0xE077             B        ??mid_HTTP_response_57
   2315          
   2316          	case MID_HTTP_SEQ_FTP_RESP_CSOCKAUTH:
   2317          		// FTP :: IPアドレスコマンド送信
   2318          		mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CFTPSERV;
   \                     ??mid_HTTP_response_39: (+1)
   \   0000054C   0x2028             MOVS     R0,#+40
   \   0000054E   0x....             LDR      R1,??DataTable10
   \   00000550   0x7008             STRB     R0,[R1, #+0]
   2319          		mid_http_work.retry = 0;
   \   00000552   0x2000             MOVS     R0,#+0
   \   00000554   0x....             LDR      R1,??DataTable9
   \   00000556   0x6008             STR      R0,[R1, #+0]
   2320          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000558   0x....             LDR      R0,??DataTable10
   \   0000055A   0x7800             LDRB     R0,[R0, #+0]
   \   0000055C   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000560   0x0004             MOVS     R4,R0
   2321          		break;
   \   00000562   0xE06B             B        ??mid_HTTP_response_57
   2322          
   2323          	case MID_HTTP_SEQ_FTP_RESP_CFTPSERV:
   2324          		// FTP :: ポート番号コマンド送信
   2325          		mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CFTPPORT;
   \                     ??mid_HTTP_response_40: (+1)
   \   00000564   0x2029             MOVS     R0,#+41
   \   00000566   0x....             LDR      R1,??DataTable10
   \   00000568   0x7008             STRB     R0,[R1, #+0]
   2326          		mid_http_work.retry = 0;
   \   0000056A   0x2000             MOVS     R0,#+0
   \   0000056C   0x....             LDR      R1,??DataTable9
   \   0000056E   0x6008             STR      R0,[R1, #+0]
   2327          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000570   0x....             LDR      R0,??DataTable10
   \   00000572   0x7800             LDRB     R0,[R0, #+0]
   \   00000574   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000578   0x0004             MOVS     R4,R0
   2328          		break;
   \   0000057A   0xE05F             B        ??mid_HTTP_response_57
   2329          
   2330          	case MID_HTTP_SEQ_FTP_RESP_CFTPPORT:
   2331          		// FTP :: パッシブコマンド送信
   2332          		mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CFTPMODE;
   \                     ??mid_HTTP_response_41: (+1)
   \   0000057C   0x202A             MOVS     R0,#+42
   \   0000057E   0x....             LDR      R1,??DataTable10
   \   00000580   0x7008             STRB     R0,[R1, #+0]
   2333          		mid_http_work.retry = 0;
   \   00000582   0x2000             MOVS     R0,#+0
   \   00000584   0x....             LDR      R1,??DataTable9
   \   00000586   0x6008             STR      R0,[R1, #+0]
   2334          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   00000588   0x....             LDR      R0,??DataTable10
   \   0000058A   0x7800             LDRB     R0,[R0, #+0]
   \   0000058C   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000590   0x0004             MOVS     R4,R0
   2335          		break;
   \   00000592   0xE053             B        ??mid_HTTP_response_57
   2336          
   2337          	case MID_HTTP_SEQ_FTP_RESP_CFTPMODE:
   2338          		// FTP :: FTP binaryタイプコマンド送信
   2339          		mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CFTPTYPE;
   \                     ??mid_HTTP_response_42: (+1)
   \   00000594   0x202B             MOVS     R0,#+43
   \   00000596   0x....             LDR      R1,??DataTable10
   \   00000598   0x7008             STRB     R0,[R1, #+0]
   2340          		mid_http_work.retry = 0;
   \   0000059A   0x2000             MOVS     R0,#+0
   \   0000059C   0x....             LDR      R1,??DataTable9
   \   0000059E   0x6008             STR      R0,[R1, #+0]
   2341          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   000005A0   0x....             LDR      R0,??DataTable10
   \   000005A2   0x7800             LDRB     R0,[R0, #+0]
   \   000005A4   0x.... 0x....      BL       mid_HTTP_send_command
   \   000005A8   0x0004             MOVS     R4,R0
   2342          		break;
   \   000005AA   0xE047             B        ??mid_HTTP_response_57
   2343          
   2344          	case MID_HTTP_SEQ_FTP_RESP_CFTPTYPE:
   2345          		// FTP :: ユーザIDコマンド送信
   2346          		mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CFTPUN;
   \                     ??mid_HTTP_response_43: (+1)
   \   000005AC   0x202C             MOVS     R0,#+44
   \   000005AE   0x....             LDR      R1,??DataTable10
   \   000005B0   0x7008             STRB     R0,[R1, #+0]
   2347          		mid_http_work.retry = 0;
   \   000005B2   0x2000             MOVS     R0,#+0
   \   000005B4   0x....             LDR      R1,??DataTable9
   \   000005B6   0x6008             STR      R0,[R1, #+0]
   2348          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   000005B8   0x....             LDR      R0,??DataTable10
   \   000005BA   0x7800             LDRB     R0,[R0, #+0]
   \   000005BC   0x.... 0x....      BL       mid_HTTP_send_command
   \   000005C0   0x0004             MOVS     R4,R0
   2349          		break;
   \   000005C2   0xE03B             B        ??mid_HTTP_response_57
   2350          
   2351          	case MID_HTTP_SEQ_FTP_RESP_CFTPUN:
   2352          		// FTP :: パスワードコマンド送信
   2353          		mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CFTPPW;
   \                     ??mid_HTTP_response_44: (+1)
   \   000005C4   0x202D             MOVS     R0,#+45
   \   000005C6   0x....             LDR      R1,??DataTable10
   \   000005C8   0x7008             STRB     R0,[R1, #+0]
   2354          		mid_http_work.retry = 0;
   \   000005CA   0x2000             MOVS     R0,#+0
   \   000005CC   0x....             LDR      R1,??DataTable9
   \   000005CE   0x6008             STR      R0,[R1, #+0]
   2355          		ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   000005D0   0x....             LDR      R0,??DataTable10
   \   000005D2   0x7800             LDRB     R0,[R0, #+0]
   \   000005D4   0x.... 0x....      BL       mid_HTTP_send_command
   \   000005D8   0x0004             MOVS     R4,R0
   2356          		break;
   \   000005DA   0xE02F             B        ??mid_HTTP_response_57
   2357          
   2358          	case MID_HTTP_SEQ_FTP_RESP_CFTPPW:
   2359          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_45: (+1)
   \   000005DC   0x2000             MOVS     R0,#+0
   \   000005DE   0x....             LDR      R1,??DataTable10
   \   000005E0   0x7008             STRB     R0,[R1, #+0]
   2360          		// callback関数で正常終了通知
   2361          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000005E2   0x2000             MOVS     R0,#+0
   \   000005E4   0x.... 0x....      BL       mid_HTTP_res_callback
   2362          		ret = 0;
   \   000005E8   0x2400             MOVS     R4,#+0
   2363          		break;
   \   000005EA   0xE027             B        ??mid_HTTP_response_57
   2364          
   2365          	case MID_HTTP_SEQ_FTP_RESP_CFTPGETFILE:
   2366          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_46: (+1)
   \   000005EC   0x2000             MOVS     R0,#+0
   \   000005EE   0x....             LDR      R1,??DataTable10
   \   000005F0   0x7008             STRB     R0,[R1, #+0]
   2367          		// callback関数で正常終了通知
   2368          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   000005F2   0x2000             MOVS     R0,#+0
   \   000005F4   0x.... 0x....      BL       mid_HTTP_res_callback
   2369          		ret = 0;
   \   000005F8   0x2400             MOVS     R4,#+0
   2370          		break;
   \   000005FA   0xE01F             B        ??mid_HTTP_response_57
   2371          
   2372          	case MID_HTTP_SEQ_FTP_RESP_ATE0:
   2373          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_47: (+1)
   \   000005FC   0x2000             MOVS     R0,#+0
   \   000005FE   0x....             LDR      R1,??DataTable10
   \   00000600   0x7008             STRB     R0,[R1, #+0]
   2374          		// callback関数で正常終了通知
   2375          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000602   0x2000             MOVS     R0,#+0
   \   00000604   0x.... 0x....      BL       mid_HTTP_res_callback
   2376          		ret = 0;
   \   00000608   0x2400             MOVS     R4,#+0
   2377          		break;
   \   0000060A   0xE017             B        ??mid_HTTP_response_57
   2378          
   2379          	case MID_HTTP_SEQ_FILE_RESP_CFTRANTX:
   2380          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_48: (+1)
   \   0000060C   0x2000             MOVS     R0,#+0
   \   0000060E   0x....             LDR      R1,??DataTable10
   \   00000610   0x7008             STRB     R0,[R1, #+0]
   2381          		// callback関数で正常終了通知
   2382          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000612   0x2000             MOVS     R0,#+0
   \   00000614   0x.... 0x....      BL       mid_HTTP_res_callback
   2383          		ret = 0;
   \   00000618   0x2400             MOVS     R4,#+0
   2384          		break;
   \   0000061A   0xE00F             B        ??mid_HTTP_response_57
   2385          
   2386          	case MID_HTTP_SEQ_RETRY_RESP_CCLK:
   2387          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_49: (+1)
   \   0000061C   0x2000             MOVS     R0,#+0
   \   0000061E   0x....             LDR      R1,??DataTable10
   \   00000620   0x7008             STRB     R0,[R1, #+0]
   2388          		// callback関数で正常終了通知
   2389          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000622   0x2000             MOVS     R0,#+0
   \   00000624   0x.... 0x....      BL       mid_HTTP_res_callback
   2390          		ret = 0;
   \   00000628   0x2400             MOVS     R4,#+0
   2391          		break;
   \   0000062A   0xE007             B        ??mid_HTTP_response_57
   2392          
   2393          	case MID_HTTP_SEQ_LTE_RESP_CPSI:
   2394          		mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \                     ??mid_HTTP_response_51: (+1)
   \   0000062C   0x2000             MOVS     R0,#+0
   \   0000062E   0x....             LDR      R1,??DataTable10
   \   00000630   0x7008             STRB     R0,[R1, #+0]
   2395          		// callback関数で正常終了通知
   2396          		mid_HTTP_res_callback(MID_HTTP_STATUS_OK);
   \   00000632   0x2000             MOVS     R0,#+0
   \   00000634   0x.... 0x....      BL       mid_HTTP_res_callback
   2397          		ret = 0;
   \   00000638   0x2400             MOVS     R4,#+0
   2398          		break;
   \   0000063A   0xE7FF             B        ??mid_HTTP_response_57
   2399          
   2400          	default:
   2401          		break;
   2402          	}
   2403          
   2404          	if (ret < 0) {
   \                     ??mid_HTTP_response_56: (+1)
   \                     ??mid_HTTP_response_57: (+1)
   \   0000063C   0x2C00             CMP      R4,#+0
   \   0000063E   0xD506             BPL      ??mid_HTTP_response_65
   2405          		// エラー登録
   2406          		man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, seq);
   \   00000640   0x....             LDR      R3,??DataTable12  ;; 0x966
   \   00000642   0x002A             MOVS     R2,R5
   \   00000644   0x....             LDR      R0,??DataTable10
   \   00000646   0x7801             LDRB     R1,[R0, #+0]
   \   00000648   0x2010             MOVS     R0,#+16
   \   0000064A   0x.... 0x....      BL       man_error_set
   2407          	}
   2408          
   2409          	return ret;
   \                     ??mid_HTTP_response_65: (+1)
   \   0000064E   0x0020             MOVS     R0,R4
   \   00000650   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2410          }
   2411          
   2412          
   2413          
   2414          /********************************************************************/
   2415          /*	extern関数                                                      */
   2416          /********************************************************************/
   2417          
   2418          
   2419          /********************************************************************/
   2420          /*!
   2421           * \name	mid_HTTP_init
   2422           * \brief	HTTPの初期化処理
   2423           * \param	なし
   2424           * \return  なし
   2425           * \note	起動時に、呼ばれること
   2426           */
   2427          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2428          void mid_HTTP_init(void)
   2429          {
   \                     mid_HTTP_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   2430                // SM7500JE初期化処理
   2431          	ctrl_SM7500JE_init();
   \   00000002   0x.... 0x....      BL       ctrl_SM7500JE_init
   2432          
   2433          	// データ受信時に通知する関数登録
   2434          	ctrl_SM7500JE_set_noti(0, mid_HTTP_callback3);
   \   00000006   0x....             LDR      R1,??DataTable13
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       ctrl_SM7500JE_set_noti
   2435          
   2436          	// 内部変数を初期化する
   2437          	memset(&mid_http_work, 0, sizeof(mid_http_work_t));
   \   0000000E   0x....             LDR      R1,??DataTable13_1  ;; 0x1e08
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x....             LDR      R4,??DataTable13_2
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x.... 0x....      BL       __aeabi_memset
   2438          	memset(&mid_http_udpsend_work, 0, sizeof(mid_http_udpsend_t));
   \   0000001A   0x2120             MOVS     R1,#+32
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0x....             LDR      R4,??DataTable16
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       __aeabi_memset
   2439          }
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
   2440          
   2441          
   2442          
   2443          /********************************************************************/
   2444          /*!
   2445           * \name	mid_HTTP_main
   2446           * \brief	HTTP制御メイン処理
   2447           * \param	なし
   2448           * \return  なし
   2449           * \note	毎回に、呼ばれること
   2450           */
   2451          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2452          void mid_HTTP_main(void)
   2453          {
   \                     mid_HTTP_main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   2454          	int32_t		ret=-1;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x43C0             MVNS     R0,R0            ;; #-1
   2455          
   2456          	if (mid_http_work.resp_info.flag != 0) {
   \   00000006   0x....             LDR      R0,??DataTable13_3
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD100             BNE      .+4
   \   0000000E   0xE07E             B        ??mid_HTTP_main_0
   2457          		mid_http_work.resp_info.flag = 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR      R1,??DataTable13_3
   \   00000014   0x6008             STR      R0,[R1, #+0]
   2458          
   2459          		// 受信処理
   2460          		switch (mid_http_work.resp_info.cmdsts) {
   \   00000016   0x....             LDR      R0,??DataTable14
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD008             BEQ      ??mid_HTTP_main_1
   \   0000001E   0x2801             CMP      R0,#+1
   \   00000020   0xD049             BEQ      ??mid_HTTP_main_2
   \   00000022   0x2802             CMP      R0,#+2
   \   00000024   0xD018             BEQ      ??mid_HTTP_main_3
   \   00000026   0x2804             CMP      R0,#+4
   \   00000028   0xD035             BEQ      ??mid_HTTP_main_4
   \   0000002A   0x2807             CMP      R0,#+7
   \   0000002C   0xD053             BEQ      ??mid_HTTP_main_5
   \   0000002E   0xE05F             B        ??mid_HTTP_main_6
   2461          		case MID_HTTP_CMDSTS_OK:
   2462          			// 正常受信処理
   2463          			ret = mid_HTTP_response();
   \                     ??mid_HTTP_main_1: (+1)
   \   00000030   0x.... 0x....      BL       mid_HTTP_response
   2464          			if (ret < 0) {
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD50E             BPL      ??mid_HTTP_main_7
   2465          				// エラー登録
   2466          				man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, mid_http_work.resp_info.cmdsts);
   \   00000038   0x....             LDR      R3,??DataTable14_1  ;; 0x9a2
   \   0000003A   0x....             LDR      R0,??DataTable14
   \   0000003C   0x7802             LDRB     R2,[R0, #+0]
   \   0000003E   0x....             LDR      R0,??DataTable10
   \   00000040   0x7801             LDRB     R1,[R0, #+0]
   \   00000042   0x2010             MOVS     R0,#+16
   \   00000044   0x.... 0x....      BL       man_error_set
   2467          				// 中止する。
   2468          				mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR      R1,??DataTable10
   \   0000004C   0x7008             STRB     R0,[R1, #+0]
   2469          				// callback関数で異常終了通知
   2470          				mid_HTTP_res_callback(MID_HTTP_STATUS_NG);
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000052   0x.... 0x....      BL       mid_HTTP_res_callback
   2471          			}
   2472          			break;
   \                     ??mid_HTTP_main_7: (+1)
   \   00000056   0xE05A             B        ??mid_HTTP_main_0
   2473          
   2474          		case MID_HTTP_CMDSTS_TIMEOUT:
   2475          			switch (mid_http_work.sequence) {
   \                     ??mid_HTTP_main_3: (+1)
   \   00000058   0x....             LDR      R0,??DataTable10
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
   \   0000005C   0x2801             CMP      R0,#+1
   \   0000005E   0xD10A             BNE      ??mid_HTTP_main_8
   2476          			
   2477          			// mid_HTTP_req_InitCmd
   2478          			case MID_HTTP_SEQ_INIT_RESP_ATE0:
   2479          				// エラー結果コードで数値を使用可能にする
   2480          				mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_CMEE;
   \   00000060   0x2002             MOVS     R0,#+2
   \   00000062   0x....             LDR      R1,??DataTable10
   \   00000064   0x7008             STRB     R0,[R1, #+0]
   2481          				mid_http_work.retry = 0;
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x....             LDR      R1,??DataTable9
   \   0000006A   0x6008             STR      R0,[R1, #+0]
   2482          				ret = mid_HTTP_send_command(mid_http_work.sequence);
   \   0000006C   0x....             LDR      R0,??DataTable10
   \   0000006E   0x7800             LDRB     R0,[R0, #+0]
   \   00000070   0x.... 0x....      BL       mid_HTTP_send_command
   2483          				break;
   \   00000074   0xE00E             B        ??mid_HTTP_main_9
   2484          			default:
   2485          				// エラー登録
   2486          				man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, mid_http_work.resp_info.cmdsts);
   \                     ??mid_HTTP_main_8: (+1)
   \   00000076   0x....             LDR      R3,??DataTable15  ;; 0x9b6
   \   00000078   0x....             LDR      R0,??DataTable14
   \   0000007A   0x7802             LDRB     R2,[R0, #+0]
   \   0000007C   0x....             LDR      R0,??DataTable10
   \   0000007E   0x7801             LDRB     R1,[R0, #+0]
   \   00000080   0x2010             MOVS     R0,#+16
   \   00000082   0x.... 0x....      BL       man_error_set
   2487          				// 中止する。
   2488          				mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x....             LDR      R1,??DataTable10
   \   0000008A   0x7008             STRB     R0,[R1, #+0]
   2489          				// callback関数で異常終了通知
   2490          				mid_HTTP_res_callback(MID_HTTP_STATUS_NG);
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000090   0x.... 0x....      BL       mid_HTTP_res_callback
   2491          				break;
   2492          			}
   2493          			break;
   \                     ??mid_HTTP_main_9: (+1)
   \   00000094   0xE03B             B        ??mid_HTTP_main_0
   2494          
   2495          		case MID_HTTP_CMDSTS_UNKNOWN:
   2496          			// エラー登録
   2497          			man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, mid_http_work.resp_info.cmdsts);
   \                     ??mid_HTTP_main_4: (+1)
   \   00000096   0x....             LDR      R3,??DataTable15_1  ;; 0x9c1
   \   00000098   0x....             LDR      R0,??DataTable14
   \   0000009A   0x7802             LDRB     R2,[R0, #+0]
   \   0000009C   0x....             LDR      R0,??DataTable10
   \   0000009E   0x7801             LDRB     R1,[R0, #+0]
   \   000000A0   0x2010             MOVS     R0,#+16
   \   000000A2   0x.... 0x....      BL       man_error_set
   2498          			// 中止する。
   2499          			mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0x....             LDR      R1,??DataTable10
   \   000000AA   0x7008             STRB     R0,[R1, #+0]
   2500          			// callback関数で異常終了通知
   2501          			mid_HTTP_res_callback(MID_HTTP_STATUS_NG);
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x43C0             MVNS     R0,R0            ;; #-1
   \   000000B0   0x.... 0x....      BL       mid_HTTP_res_callback
   2502          			break;
   \   000000B4   0xE02B             B        ??mid_HTTP_main_0
   2503          
   2504          		case MID_HTTP_CMDSTS_ERR:
   2505          			// エラー登録
   2506          			man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, mid_http_work.resp_info.cmdsts);
   \                     ??mid_HTTP_main_2: (+1)
   \   000000B6   0x....             LDR      R3,??DataTable16_1  ;; 0x9ca
   \   000000B8   0x....             LDR      R0,??DataTable14
   \   000000BA   0x7802             LDRB     R2,[R0, #+0]
   \   000000BC   0x....             LDR      R0,??DataTable10
   \   000000BE   0x7801             LDRB     R1,[R0, #+0]
   \   000000C0   0x2010             MOVS     R0,#+16
   \   000000C2   0x.... 0x....      BL       man_error_set
   2507          			// 中止する。
   2508          			mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x....             LDR      R1,??DataTable10
   \   000000CA   0x7008             STRB     R0,[R1, #+0]
   2509          			// callback関数で異常終了通知
   2510          			mid_HTTP_res_callback(MID_HTTP_STATUS_NG);
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x43C0             MVNS     R0,R0            ;; #-1
   \   000000D0   0x.... 0x....      BL       mid_HTTP_res_callback
   2511          			break;
   \   000000D4   0xE01B             B        ??mid_HTTP_main_0
   2512          
   2513          		case MID_HTTP_CMDSTS_RESTART:
   2514          			// エラー登録
   2515          			man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, mid_http_work.resp_info.cmdsts);
   \                     ??mid_HTTP_main_5: (+1)
   \   000000D6   0x....             LDR      R3,??DataTable16_2  ;; 0x9d3
   \   000000D8   0x....             LDR      R0,??DataTable14
   \   000000DA   0x7802             LDRB     R2,[R0, #+0]
   \   000000DC   0x....             LDR      R0,??DataTable10
   \   000000DE   0x7801             LDRB     R1,[R0, #+0]
   \   000000E0   0x2010             MOVS     R0,#+16
   \   000000E2   0x.... 0x....      BL       man_error_set
   2516          			// 再度SIM7500を起動する。
   2517          //DEBUG 20180922//
   2518          //                        man_lte_work.request.req_cmd = MAN_CMD_REQ_CMD_INIT;
   2519          			// callback関数で異常終了通知
   2520          			mid_HTTP_res_callback(MID_HTTP_STATUS_NG);
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x43C0             MVNS     R0,R0            ;; #-1
   \   000000EA   0x.... 0x....      BL       mid_HTTP_res_callback
   2521          			break;
   \   000000EE   0xE00E             B        ??mid_HTTP_main_0
   2522          
   2523          
   2524                                  
   2525          		default:
   2526          			// エラー登録
   2527          			man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, mid_http_work.resp_info.cmdsts);
   \                     ??mid_HTTP_main_6: (+1)
   \   000000F0   0x....             LDR      R3,??DataTable16_3  ;; 0x9df
   \   000000F2   0x....             LDR      R0,??DataTable14
   \   000000F4   0x7802             LDRB     R2,[R0, #+0]
   \   000000F6   0x....             LDR      R0,??DataTable10
   \   000000F8   0x7801             LDRB     R1,[R0, #+0]
   \   000000FA   0x2010             MOVS     R0,#+16
   \   000000FC   0x.... 0x....      BL       man_error_set
   2528          			// 中止する。
   2529          			mid_http_work.sequence = MID_HTTP_SEQ_READY;
   \   00000100   0x2000             MOVS     R0,#+0
   \   00000102   0x....             LDR      R1,??DataTable10
   \   00000104   0x7008             STRB     R0,[R1, #+0]
   2530          			// callback関数で異常終了通知
   2531          			mid_HTTP_res_callback(MID_HTTP_STATUS_NG);
   \   00000106   0x2000             MOVS     R0,#+0
   \   00000108   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000010A   0x.... 0x....      BL       mid_HTTP_res_callback
   2532          			break;
   2533          		}
   2534          	}
   2535          }
   \                     ??mid_HTTP_main_0: (+1)
   \   0000010E   0xBD01             POP      {R0,PC}          ;; return
   2536          
   2537          
   2538          /********************************************************************/
   2539          /*!
   2540           * \name	mid_HTTP_req_OtaOffCmd
   2541           * \brief	OTA機能停止コマンド処理
   2542           * \param	id       : ユニーク番号
   2543           *          callback : 完了を通知するcallback関数
   2544           * \return   0: 成功
   2545           *          -1:失敗
   2546           * \note	必要時に、呼ばれること
   2547           *          終了時にcallback関数が呼ばれます。
   2548           */
   2549          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2550          int32_t mid_HTTP_req_OtaOffCmd(int32_t id, func_http_cmd callback)
   2551          {
   \                     mid_HTTP_req_OtaOffCmd: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   2552          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2553          
   2554          	if (callback != NULL) {
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD029             BEQ      ??mid_HTTP_req_OtaOffCmd_0
   2555          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable10
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD125             BNE      ??mid_HTTP_req_OtaOffCmd_0
   2556          
   2557                                  int8_t flag,retry;
   2558                                  man_data_get_SIM7500_cfotaswitch(&flag, &retry);
   \   00000018   0xA900             ADD      R1,SP,#+0
   \   0000001A   0x1C49             ADDS     R1,R1,#+1
   \   0000001C   0x4668             MOV      R0,SP
   \   0000001E   0x.... 0x....      BL       man_data_get_SIM7500_cfotaswitch
   2559                                  if(flag == 0)
   \   00000022   0x4669             MOV      R1,SP
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x5608             LDRSB    R0,[R1, R0]
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD10C             BNE      ??mid_HTTP_req_OtaOffCmd_1
   2560                                  {
   2561                                    // OTA機能停止コマンド送信
   2562                                      ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_CFOTASWITCH);
   \   0000002C   0x2035             MOVS     R0,#+53
   \   0000002E   0x.... 0x....      BL       mid_HTTP_send_command
   2563          
   2564                                      if (ret >= 0) {
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD413             BMI      ??mid_HTTP_req_OtaOffCmd_2
   2565          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_CFOTASWITCH;
   \   00000036   0x2135             MOVS     R1,#+53
   \   00000038   0x....             LDR      R2,??DataTable10
   \   0000003A   0x7011             STRB     R1,[R2, #+0]
   2566          				mid_http_work.request.id = id;
   \   0000003C   0x....             LDR      R1,??DataTable18
   \   0000003E   0x600C             STR      R4,[R1, #+0]
   2567          				mid_http_work.request.callback = callback;
   \   00000040   0x....             LDR      R1,??DataTable18_1
   \   00000042   0x600D             STR      R5,[R1, #+0]
   \   00000044   0xE00B             B        ??mid_HTTP_req_OtaOffCmd_2
   2568                                      }
   2569                                  }
   2570                                  else
   2571                                  {
   2572                                    // OTA機能停止コマンド送信
   2573                                      ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_AT);
   \                     ??mid_HTTP_req_OtaOffCmd_1: (+1)
   \   00000046   0x2038             MOVS     R0,#+56
   \   00000048   0x.... 0x....      BL       mid_HTTP_send_command
   2574          
   2575                                      if (ret >= 0) {
   \   0000004C   0x2800             CMP      R0,#+0
   \   0000004E   0xD406             BMI      ??mid_HTTP_req_OtaOffCmd_2
   2576          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_AT;
   \   00000050   0x2138             MOVS     R1,#+56
   \   00000052   0x....             LDR      R2,??DataTable10
   \   00000054   0x7011             STRB     R1,[R2, #+0]
   2577          				mid_http_work.request.id = id;
   \   00000056   0x....             LDR      R1,??DataTable18
   \   00000058   0x600C             STR      R4,[R1, #+0]
   2578          				mid_http_work.request.callback = callback;
   \   0000005A   0x....             LDR      R1,??DataTable18_1
   \   0000005C   0x600D             STR      R5,[R1, #+0]
   2579                                      }
   2580                                  }
   2581                                  mid_http_work.retry = 0;
   \                     ??mid_HTTP_req_OtaOffCmd_2: (+1)
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x....             LDR      R2,??DataTable19
   \   00000062   0x6011             STR      R1,[R2, #+0]
   2582          		}
   2583          	}
   2584          	
   2585          	return ret;
   \                     ??mid_HTTP_req_OtaOffCmd_0: (+1)
   \   00000064   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2586          }
   2587          
   2588          
   2589          
   2590          
   2591          /********************************************************************/
   2592          /*!
   2593           * \name	mid_HTTP_req_InitCmd
   2594           * \brief	初期化コマンド処理
   2595           * \param	id       : ユニーク番号
   2596           *          callback : 完了を通知するcallback関数
   2597           * \return   0: 成功
   2598           *          -1:失敗
   2599           * \note	必要時に、呼ばれること
   2600           *          終了時にcallback関数が呼ばれます。
   2601           */
   2602          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2603          int32_t mid_HTTP_req_InitCmd(int32_t id, func_http_cmd callback)
   2604          {
   \                     mid_HTTP_req_InitCmd: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2605          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2606          
   2607          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_InitCmd_0
   2608          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable17
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_InitCmd_0
   2609          
   2610          			// 初期化モード(エコーバック無効)コマンド送信
   2611          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_INIT_RESP_ATE0);
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2612          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable19
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2613          
   2614          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_InitCmd_0
   2615          				mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_ATE0;
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x....             LDR      R2,??DataTable17
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2616          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable18
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2617          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable18_1
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2618          			}
   2619          		}
   2620          	}
   2621          	
   2622          	return ret;
   \                     ??mid_HTTP_req_InitCmd_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2623          }
   2624          
   2625          
   2626          /********************************************************************/
   2627          /*!
   2628           * \name	mid_HTTP_req_LteReady
   2629           * \brief	LTE準備コマンド処理
   2630           * \param	id       : ユニーク番号
   2631           *          callback : 完了を通知するcallback関数
   2632           * \return   0: 成功
   2633           *          -1:失敗
   2634           * \note	必要時に、呼ばれること
   2635           *          終了時にcallback関数が呼ばれます。
   2636           */
   2637          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2638          int32_t mid_HTTP_req_LteReady(int32_t id, func_http_cmd callback)
   2639          {
   \                     mid_HTTP_req_LteReady: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2640          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2641          
   2642          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_LteReady_0
   2643          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable17
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_LteReady_0
   2644          
   2645          			// ソケット生成モード(パケット発信時の接続先(APN)の設定)コマンド送信
   2646          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_CGDCONT);
   \   00000018   0x200E             MOVS     R0,#+14
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2647          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable19
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2648          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_LteReady_0
   2649          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_CGDCONT;
   \   00000028   0x210E             MOVS     R1,#+14
   \   0000002A   0x....             LDR      R2,??DataTable17
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2650          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable18
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2651          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable18_1
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2652          			}
   2653          		}
   2654          	}
   2655          	
   2656          	return ret;
   \                     ??mid_HTTP_req_LteReady_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2657          }
   2658          
   2659          
   2660          
   2661          
   2662          /********************************************************************/
   2663          /*!
   2664           * \name	mid_HTTP_req_LteOpen
   2665           * \brief	ソケット生成処理
   2666           * \param	id       : ユニーク番号
   2667           *          callback : 完了を通知するcallback関数
   2668           * \return   0: 成功
   2669           *          -1:失敗
   2670           * \note	必要時に、呼ばれること
   2671           *          終了時にcallback関数が呼ばれます。
   2672           */
   2673          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2674          int32_t mid_HTTP_req_LteOpen(int32_t id, func_http_cmd callback)
   2675          {
   \                     mid_HTTP_req_LteOpen: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2676          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2677          
   2678          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_LteOpen_0
   2679          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable17
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_LteOpen_0
   2680          
   2681          			// ソケット生成モード(ソケット生成)の設定)コマンド送信
   2682          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_NETOPEN);
   \   00000018   0x2011             MOVS     R0,#+17
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2683          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable19
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2684          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_LteOpen_0
   2685          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_NETOPEN;
   \   00000028   0x2111             MOVS     R1,#+17
   \   0000002A   0x....             LDR      R2,??DataTable17
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2686          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable18
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2687          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable18_1
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2688          			}
   2689          		}
   2690          	}
   2691          	
   2692          	return ret;
   \                     ??mid_HTTP_req_LteOpen_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2693          }
   2694          
   2695          
   2696          /********************************************************************/
   2697          /*!
   2698           * \name	mid_HTTP_req_LteClose
   2699           * \brief	ソケット切断処理
   2700           * \param	id       : ユニーク番号
   2701           *          callback : 完了を通知するcallback関数
   2702           * \return   0: 成功
   2703           *          -1:失敗
   2704           * \note	必要時に、呼ばれること
   2705           *          終了時にcallback関数が呼ばれます。
   2706           */
   2707          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2708          int32_t mid_HTTP_req_LteClose(int32_t id, func_http_cmd callback)
   2709          {
   \                     mid_HTTP_req_LteClose: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2710          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2711          
   2712          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_LteClose_0
   2713          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable17
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_LteClose_0
   2714          
   2715          			// ソケット切断モード(ソケット切断)コマンド送信
   2716          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_NETCLOSE);
   \   00000018   0x2012             MOVS     R0,#+18
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2717          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable19
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2718          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_LteClose_0
   2719          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_NETCLOSE;
   \   00000028   0x2112             MOVS     R1,#+18
   \   0000002A   0x....             LDR      R2,??DataTable17
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2720          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable18
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2721          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable18_1
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2722          			}
   2723          		}
   2724          	}
   2725          	
   2726          	return ret;
   \                     ??mid_HTTP_req_LteClose_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2727          }
   2728          
   2729          
   2730          /********************************************************************/
   2731          /*!
   2732           * \name	mid_HTTP_req_LteStbyIn
   2733           * \brief	STBY IN処理
   2734           * \param	id       : ユニーク番号
   2735           *          callback : 完了を通知するcallback関数
   2736           * \return   0: 成功
   2737           *          -1:失敗
   2738           * \note	必要時に、呼ばれること
   2739           *          終了時にcallback関数が呼ばれます。
   2740           */
   2741          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2742          int32_t mid_HTTP_req_LteStbyIn(int32_t id, func_http_cmd callback)
   2743          {
   \                     mid_HTTP_req_LteStbyIn: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2744          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2745          
   2746          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_LteStbyIn_0
   2747          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable17
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_LteStbyIn_0
   2748          
   2749          			// STBY INコマンド送信
   2750          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_STBY_IN);
   \   00000018   0x2013             MOVS     R0,#+19
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2751          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable19
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2752          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_LteStbyIn_0
   2753          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_STBY_IN;
   \   00000028   0x2113             MOVS     R1,#+19
   \   0000002A   0x....             LDR      R2,??DataTable17
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2754          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable18
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2755          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable18_1
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2756          			}
   2757          		}
   2758          	}
   2759          	
   2760          	return ret;
   \                     ??mid_HTTP_req_LteStbyIn_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2761          }
   2762          
   2763          
   2764          /********************************************************************/
   2765          /*!
   2766           * \name	mid_HTTP_req_LteStbyOut
   2767           * \brief	STBY OUT処理
   2768           * \param	id       : ユニーク番号
   2769           *          callback : 完了を通知するcallback関数
   2770           * \return   0: 成功
   2771           *          -1:失敗
   2772           * \note	必要時に、呼ばれること
   2773           *          終了時にcallback関数が呼ばれます。
   2774           */
   2775          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2776          int32_t mid_HTTP_req_LteStbyOut(int32_t id, func_http_cmd callback)
   2777          {
   \                     mid_HTTP_req_LteStbyOut: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2778          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2779          
   2780          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_LteStbyOut_0
   2781          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable17
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_LteStbyOut_0
   2782          
   2783          			// STBY OUTコマンド送信
   2784          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_STBY_OUT);
   \   00000018   0x2014             MOVS     R0,#+20
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2785          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable19
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2786          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_LteStbyOut_0
   2787          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_STBY_OUT;
   \   00000028   0x2114             MOVS     R1,#+20
   \   0000002A   0x....             LDR      R2,??DataTable17
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2788          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable18
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2789          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable18_1
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2790          			}
   2791          		}
   2792          	}
   2793          	
   2794          	return ret;
   \                     ??mid_HTTP_req_LteStbyOut_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2795          }
   2796          
   2797          
   2798          /********************************************************************/
   2799          /*!
   2800           * \name	mid_HTTP_req_LteCsq
   2801           * \brief	無線電波の確認処理
   2802           * \param	id       : ユニーク番号
   2803           *          callback : 完了を通知するcallback関数
   2804           * \return   0: 成功
   2805           *          -1:失敗
   2806           * \note	必要時に、呼ばれること
   2807           *          終了時にcallback関数が呼ばれます。
   2808           */
   2809          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2810          int32_t mid_HTTP_req_LteCsq(int32_t id, func_http_cmd callback)
   2811          {
   \                     mid_HTTP_req_LteCsq: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2812          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2813          
   2814          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_LteCsq_0
   2815          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable17
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_LteCsq_0
   2816          
   2817          			// 無線電波の確認コマンド送信
   2818          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_CSQ);
   \   00000018   0x2015             MOVS     R0,#+21
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2819          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable19
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2820          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_LteCsq_0
   2821          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_CSQ;
   \   00000028   0x2115             MOVS     R1,#+21
   \   0000002A   0x....             LDR      R2,??DataTable17
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2822          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable18
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2823          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable25
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2824          			}
   2825          		}
   2826          	}
   2827          	
   2828          	return ret;
   \                     ??mid_HTTP_req_LteCsq_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2829          }
   2830          
   2831          
   2832          /********************************************************************/
   2833          /*!
   2834           * \name	mid_HTTP_req_LteCpsi
   2835           * \brief	基準信号受信電力の確認処理
   2836           * \param	id       : ユニーク番号
   2837           *          callback : 完了を通知するcallback関数
   2838           * \return   0: 成功
   2839           *          -1:失敗
   2840           * \note	必要時に、呼ばれること
   2841           *          終了時にcallback関数が呼ばれます。
   2842           */
   2843          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2844          int32_t mid_HTTP_req_LteCpsi(int32_t id, func_http_cmd callback)
   2845          {
   \                     mid_HTTP_req_LteCpsi: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2846          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2847          
   2848          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_LteCpsi_0
   2849          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable23
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_LteCpsi_0
   2850          
   2851          			// 基準信号受信電力の確認コマンド送信
   2852          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_CPSI);
   \   00000018   0x2033             MOVS     R0,#+51
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2853          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable19
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2854          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_LteCpsi_0
   2855          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_CPSI;
   \   00000028   0x2133             MOVS     R1,#+51
   \   0000002A   0x....             LDR      R2,??DataTable23
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2856          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable18
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2857          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable25
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2858          			}
   2859          		}
   2860          	}
   2861          	
   2862          	return ret;
   \                     ??mid_HTTP_req_LteCpsi_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2863          }
   2864          
   2865          
   2866          
   2867          
   2868          /********************************************************************/
   2869          /*!
   2870           * \name	mid_HTTP_req_GetIpAddress
   2871           * \brief	IP Address取得処理
   2872           * \param	id       : ユニーク番号
   2873           *          callback : 完了を通知するcallback関数
   2874           * \return   0: 成功
   2875           *          -1:失敗
   2876           * \note	NET OPEN後に使用してください
   2877           *          終了時にcallback関数が呼ばれます。
   2878           */
   2879          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2880          int32_t mid_HTTP_req_GetIpAddress(int32_t id, func_http_cmd callback)
   2881          {
   \                     mid_HTTP_req_GetIpAddress: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2882          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2883          
   2884          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_GetIpAddress_0
   2885          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable23
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_GetIpAddress_0
   2886          
   2887          			// IP Address取得コマンド送信
   2888          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_INIT_RESP_IPADDR);
   \   00000018   0x200D             MOVS     R0,#+13
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2889          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable19
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2890          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_GetIpAddress_0
   2891          				mid_http_work.sequence = MID_HTTP_SEQ_INIT_RESP_IPADDR;
   \   00000028   0x210D             MOVS     R1,#+13
   \   0000002A   0x....             LDR      R2,??DataTable23
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2892          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable24
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2893          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable25
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2894          			}
   2895          		}
   2896          	}
   2897          	
   2898          	return ret;
   \                     ??mid_HTTP_req_GetIpAddress_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2899          }
   2900          
   2901          
   2902          /********************************************************************/
   2903          /*!
   2904           * \name	mid_HTTP_req_LteReset
   2905           * \brief	LTE リセット処理
   2906           * \param	id       : ユニーク番号
   2907           *          callback : 完了を通知するcallback関数
   2908           * \return   0: 成功
   2909           *          -1:失敗
   2910           * \note	必要時に、呼ばれること
   2911           *          終了時にcallback関数が呼ばれます。
   2912           */
   2913          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2914          int32_t mid_HTTP_req_LteReset(int32_t id, func_http_cmd callback)
   2915          {
   \                     mid_HTTP_req_LteReset: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2916          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2917          
   2918          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_LteReset_0
   2919          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable23
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_LteReset_0
   2920          
   2921          			// LTE リセットコマンド送信
   2922          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_RESP_RESET);
   \   00000018   0x2016             MOVS     R0,#+22
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2923          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable24_1
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2924          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_LteReset_0
   2925          				mid_http_work.sequence = MID_HTTP_SEQ_LTE_RESP_RESET;
   \   00000028   0x2116             MOVS     R1,#+22
   \   0000002A   0x....             LDR      R2,??DataTable23
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2926          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable24
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2927          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable25
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2928          			}
   2929          		}
   2930          	}
   2931          	
   2932          	return ret;
   \                     ??mid_HTTP_req_LteReset_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2933          }
   2934          
   2935          
   2936          /********************************************************************/
   2937          /*!
   2938           * \name	mid_HTTP_req_UdpOpen
   2939           * \brief	UDPソケット生成処理
   2940           * \param	id       : ユニーク番号
   2941           *          callback : 完了を通知するcallback関数
   2942           * \return   0: 成功
   2943           *          -1:失敗
   2944           * \note	必要時に、呼ばれること
   2945           *          終了時にcallback関数が呼ばれます。
   2946           */
   2947          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2948          int32_t mid_HTTP_req_UdpOpen(int32_t id, func_http_cmd callback)
   2949          {
   \                     mid_HTTP_req_UdpOpen: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2950          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2951          
   2952          
   2953          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD018             BEQ      ??mid_HTTP_req_UdpOpen_0
   2954          
   2955                          if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable23
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD114             BNE      ??mid_HTTP_req_UdpOpen_0
   2956          
   2957                            if(0)
   2958                            {
   2959                            }
   2960                            else
   2961                            {
   2962          			// UDPソケット生成モード(マルチソケットモードで接続を確立する)コマンド送信
   2963          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_UDP_RESP_CIPOPEN);
   \   00000018   0x2017             MOVS     R0,#+23
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   2964          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable24_1
   \   00000022   0x6011             STR      R1,[R2, #+0]
   2965          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD40C             BMI      ??mid_HTTP_req_UdpOpen_0
   2966          				mid_http_work.sequence = MID_HTTP_SEQ_UDP_RESP_CIPOPEN;
   \   00000028   0x2117             MOVS     R1,#+23
   \   0000002A   0x....             LDR      R2,??DataTable23
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   2967          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable24
   \   00000030   0x600D             STR      R5,[R1, #+0]
   2968          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable25
   \   00000034   0x600C             STR      R4,[R1, #+0]
   2969          
   2970          				// UDP使用中
   2971          				mid_http_work.status |= MID_HTTP_STATUS_UDP;
   \   00000036   0x....             LDR      R1,??DataTable28
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0x2202             MOVS     R2,#+2
   \   0000003C   0x430A             ORRS     R2,R2,R1
   \   0000003E   0x....             LDR      R1,??DataTable28
   \   00000040   0x600A             STR      R2,[R1, #+0]
   2972          			}
   2973                            }
   2974          		}
   2975          	}
   2976          	
   2977          	return ret;
   \                     ??mid_HTTP_req_UdpOpen_0: (+1)
   \   00000042   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   2978          }
   2979          
   2980          
   2981          /********************************************************************/
   2982          /*!
   2983           * \name	mid_HTTP_req_UdpClose
   2984           * \brief	UDPソケット切断処理
   2985           * \param	id       : ユニーク番号
   2986           *          callback : 完了を通知するcallback関数
   2987           * \return   0: 成功
   2988           *          -1:失敗
   2989           * \note	必要時に、呼ばれること
   2990           *          終了時にcallback関数が呼ばれます。
   2991           */
   2992          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   2993          int32_t mid_HTTP_req_UdpClose(int32_t id, func_http_cmd callback)
   2994          {
   \                     mid_HTTP_req_UdpClose: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   2995          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   2996          
   2997          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD018             BEQ      ??mid_HTTP_req_UdpClose_0
   2998          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable23
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD114             BNE      ??mid_HTTP_req_UdpClose_0
   2999          
   3000          			// UDPソケット切断モード(UDPソケットを閉じる)コマンド送信
   3001          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_UDP_RESP_CIPCLOSE);
   \   00000018   0x201A             MOVS     R0,#+26
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   3002          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable24_1
   \   00000022   0x6011             STR      R1,[R2, #+0]
   3003          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD40C             BMI      ??mid_HTTP_req_UdpClose_0
   3004          				mid_http_work.sequence = MID_HTTP_SEQ_UDP_RESP_CIPCLOSE;
   \   00000028   0x211A             MOVS     R1,#+26
   \   0000002A   0x....             LDR      R2,??DataTable23
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   3005          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable24
   \   00000030   0x600D             STR      R5,[R1, #+0]
   3006          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable25
   \   00000034   0x600C             STR      R4,[R1, #+0]
   3007          
   3008          				// UDP使用終了
   3009          				mid_http_work.status &= ~MID_HTTP_STATUS_UDP;
   \   00000036   0x....             LDR      R1,??DataTable28
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0x2202             MOVS     R2,#+2
   \   0000003C   0x4391             BICS     R1,R1,R2
   \   0000003E   0x....             LDR      R2,??DataTable28
   \   00000040   0x6011             STR      R1,[R2, #+0]
   3010          			}
   3011          		}
   3012          	}
   3013          	
   3014          	return ret;
   \                     ??mid_HTTP_req_UdpClose_0: (+1)
   \   00000042   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3015          }
   3016          
   3017          
   3018          
   3019          /********************************************************************/
   3020          /*!
   3021           * \name	mid_HTTP_req_UdpSend
   3022           * \brief	UDPデータ送信処理
   3023           * \param	data     : 送信データ
   3024           *          length   : データ長
   3025           *          id       : ユニーク番号
   3026           *          callback : 完了を通知するcallback関数
   3027           * \return 0: 成功
   3028           *          -1:失敗
   3029           * \note	必要時に、呼ばれること
   3030           *          終了時にcallback関数が呼ばれます。
   3031           */
   3032          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3033          int32_t mid_HTTP_req_UdpSend(uint8_t *data, int32_t length, int32_t id, func_http_cmd callback)
   3034          {
   \                     mid_HTTP_req_UdpSend: (+1)
   \   00000000   0xB5F1             PUSH     {R0,R4-R7,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x000E             MOVS     R6,R1
   \   00000006   0x0017             MOVS     R7,R2
   \   00000008   0x001D             MOVS     R5,R3
   3035          	int32_t		ret=-1;
   \   0000000A   0x2400             MOVS     R4,#+0
   \   0000000C   0x43E4             MVNS     R4,R4            ;; #-1
   3036          	man_data_num_gprs_t *gprs = man_data_get_setting_gprs();
   \   0000000E   0x.... 0x....      BL       man_data_get_setting_gprs
   \   00000012   0x9000             STR      R0,[SP, #+0]
   3037          
   3038          //        if ( (callback != NULL) && (data != NULL) && ( 0 < length) && (length <= MID_HTTP_SND_DATA_MAX) )
   3039                  if ( (callback == NULL) || (data == NULL) || ( 0 >= length) || (length > MID_HTTP_SND_DATA_MAX) )
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD008             BEQ      ??mid_HTTP_req_UdpSend_0
   \   0000001A   0x9802             LDR      R0,[SP, #+8]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD005             BEQ      ??mid_HTTP_req_UdpSend_0
   \   00000020   0x0030             MOVS     R0,R6
   \   00000022   0x1E40             SUBS     R0,R0,#+1
   \   00000024   0x218C             MOVS     R1,#+140
   \   00000026   0x00C9             LSLS     R1,R1,#+3        ;; #+1120
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xD308             BCC      ??mid_HTTP_req_UdpSend_1
   3040                  {
   3041                    // エラー登録
   3042                    man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, length);
   \                     ??mid_HTTP_req_UdpSend_0: (+1)
   \   0000002C   0x....             LDR      R3,??DataTable27  ;; 0xbe2
   \   0000002E   0x0032             MOVS     R2,R6
   \   00000030   0x....             LDR      R0,??DataTable30
   \   00000032   0x7801             LDRB     R1,[R0, #+0]
   \   00000034   0x2010             MOVS     R0,#+16
   \   00000036   0x.... 0x....      BL       man_error_set
   3043                    return ret;
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0xE065             B        ??mid_HTTP_req_UdpSend_2
   3044                  }
   3045                  if (mid_http_work.sequence != MID_HTTP_SEQ_READY)
   \                     ??mid_HTTP_req_UdpSend_1: (+1)
   \   0000003E   0x....             LDR      R0,??DataTable30
   \   00000040   0x7800             LDRB     R0,[R0, #+0]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD008             BEQ      ??mid_HTTP_req_UdpSend_3
   3046                  {
   3047                    // エラー登録
   3048                    man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, length);
   \   00000046   0x....             LDR      R3,??DataTable27_1  ;; 0xbe8
   \   00000048   0x0032             MOVS     R2,R6
   \   0000004A   0x....             LDR      R0,??DataTable30
   \   0000004C   0x7801             LDRB     R1,[R0, #+0]
   \   0000004E   0x2010             MOVS     R0,#+16
   \   00000050   0x.... 0x....      BL       man_error_set
   3049                    return ret;
   \   00000054   0x0020             MOVS     R0,R4
   \   00000056   0xE058             B        ??mid_HTTP_req_UdpSend_2
   3050                  }
   3051                  if (mid_http_udpsend_work.ip_addr[0] == 0) 
   \                     ??mid_HTTP_req_UdpSend_3: (+1)
   \   00000058   0x....             LDR      R0,??DataTable28_1
   \   0000005A   0x7C00             LDRB     R0,[R0, #+16]
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD12F             BNE      ??mid_HTTP_req_UdpSend_4
   3052                  {
   3053                    if( man_http_check_FQDN(gprs->ip) )
   \   00000060   0x9800             LDR      R0,[SP, #+0]
   \   00000062   0x3020             ADDS     R0,R0,#+32
   \   00000064   0x.... 0x....      BL       man_http_check_FQDN
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD023             BEQ      ??mid_HTTP_req_UdpSend_5
   3054                    {
   3055                      mid_http_udpsend_work.data = data;
   \   0000006C   0x9802             LDR      R0,[SP, #+8]
   \   0000006E   0x....             LDR      R1,??DataTable28_1
   \   00000070   0x6008             STR      R0,[R1, #+0]
   3056                      mid_http_udpsend_work.length= length;
   \   00000072   0x....             LDR      R0,??DataTable28_1
   \   00000074   0x6046             STR      R6,[R0, #+4]
   3057                      mid_http_udpsend_work.id = id;
   \   00000076   0x....             LDR      R0,??DataTable28_1
   \   00000078   0x6087             STR      R7,[R0, #+8]
   3058                      mid_http_udpsend_work.callback = callback;
   \   0000007A   0x....             LDR      R0,??DataTable28_1
   \   0000007C   0x60C5             STR      R5,[R0, #+12]
   3059                      
   3060                      ret = mid_HTTP_send_command(MID_HTTP_SEQ_UDP_RESP_CIPSEND_CDNSGIP);
   \   0000007E   0x2037             MOVS     R0,#+55
   \   00000080   0x.... 0x....      BL       mid_HTTP_send_command
   \   00000084   0x0004             MOVS     R4,R0
   3061                      mid_http_work.retry = 0;
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x....             LDR      R1,??DataTable24_1
   \   0000008A   0x6008             STR      R0,[R1, #+0]
   3062                      if (ret >= 0)
   \   0000008C   0x2C00             CMP      R4,#+0
   \   0000008E   0xD406             BMI      ??mid_HTTP_req_UdpSend_6
   3063                      {
   3064          		mid_http_work.sequence = MID_HTTP_SEQ_UDP_RESP_CIPSEND_CDNSGIP;
   \   00000090   0x2037             MOVS     R0,#+55
   \   00000092   0x....             LDR      R1,??DataTable30
   \   00000094   0x7008             STRB     R0,[R1, #+0]
   3065          		mid_http_work.request.id = id;
   \   00000096   0x....             LDR      R0,??DataTable24
   \   00000098   0x6007             STR      R7,[R0, #+0]
   3066          		mid_http_work.request.callback = callback;
   \   0000009A   0x....             LDR      R0,??DataTable25
   \   0000009C   0x6005             STR      R5,[R0, #+0]
   3067                      }
   3068                      if (ret < 0)
   \                     ??mid_HTTP_req_UdpSend_6: (+1)
   \   0000009E   0x2C00             CMP      R4,#+0
   \   000000A0   0xD506             BPL      ??mid_HTTP_req_UdpSend_7
   3069                      {
   3070          		// エラー登録
   3071          		man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, length);
   \   000000A2   0x....             LDR      R3,??DataTable28_2  ;; 0xbff
   \   000000A4   0x0032             MOVS     R2,R6
   \   000000A6   0x....             LDR      R0,??DataTable30
   \   000000A8   0x7801             LDRB     R1,[R0, #+0]
   \   000000AA   0x2010             MOVS     R0,#+16
   \   000000AC   0x.... 0x....      BL       man_error_set
   3072                      }
   3073                      return ret;        
   \                     ??mid_HTTP_req_UdpSend_7: (+1)
   \   000000B0   0x0020             MOVS     R0,R4
   \   000000B2   0xE02A             B        ??mid_HTTP_req_UdpSend_2
   3074                    }
   3075                    else
   3076                    {
   3077                      strcpy(mid_http_udpsend_work.ip_addr,gprs->ip);
   \                     ??mid_HTTP_req_UdpSend_5: (+1)
   \   000000B4   0x9800             LDR      R0,[SP, #+0]
   \   000000B6   0x0001             MOVS     R1,R0
   \   000000B8   0x3120             ADDS     R1,R1,#+32
   \   000000BA   0x....             LDR      R0,??DataTable28_3
   \   000000BC   0x.... 0x....      BL       strcpy
   3078                    }
   3079                  }
   3080                   //ADLINK                         strcpy(ip_addr, gprs->udp_port);
   3081                  memcpy(&mid_http_work.request.data[0], data, length);
   \                     ??mid_HTTP_req_UdpSend_4: (+1)
   \   000000C0   0x0032             MOVS     R2,R6
   \   000000C2   0x9902             LDR      R1,[SP, #+8]
   \   000000C4   0x....             LDR      R4,??DataTable28_4
   \   000000C6   0x0020             MOVS     R0,R4
   \   000000C8   0x.... 0x....      BL       __aeabi_memcpy
   3082          	mid_http_work.request.length = length;
   \   000000CC   0x....             LDR      R0,??DataTable28_5
   \   000000CE   0x6006             STR      R6,[R0, #+0]
   3083          	// UDP送信モード(UDP接続を介してデータを送信する)コマンド送信
   3084          	ret = mid_HTTP_send_command(MID_HTTP_SEQ_UDP_RESP_CIPSEND);
   \   000000D0   0x2018             MOVS     R0,#+24
   \   000000D2   0x.... 0x....      BL       mid_HTTP_send_command
   \   000000D6   0x0004             MOVS     R4,R0
   3085          	mid_http_work.retry = 0;
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x....             LDR      R1,??DataTable24_1
   \   000000DC   0x6008             STR      R0,[R1, #+0]
   3086          	if (ret >= 0)
   \   000000DE   0x2C00             CMP      R4,#+0
   \   000000E0   0xD409             BMI      ??mid_HTTP_req_UdpSend_8
   3087                  {
   3088                    mid_http_work.sequence = MID_HTTP_SEQ_UDP_RESP_CIPSEND;
   \   000000E2   0x2018             MOVS     R0,#+24
   \   000000E4   0x....             LDR      R1,??DataTable30
   \   000000E6   0x7008             STRB     R0,[R1, #+0]
   3089                    mid_http_work.request.id = id;
   \   000000E8   0x....             LDR      R0,??DataTable24
   \   000000EA   0x6007             STR      R7,[R0, #+0]
   3090                    mid_http_work.request.callback = callback;
   \   000000EC   0x....             LDR      R0,??DataTable25
   \   000000EE   0x6005             STR      R5,[R0, #+0]
   3091                    mid_http_udpsend_work.ip_addr[0] = 0;
   \   000000F0   0x2000             MOVS     R0,#+0
   \   000000F2   0x....             LDR      R1,??DataTable28_1
   \   000000F4   0x7408             STRB     R0,[R1, #+16]
   3092                  } 
   3093          	if (ret < 0)
   \                     ??mid_HTTP_req_UdpSend_8: (+1)
   \   000000F6   0x2C00             CMP      R4,#+0
   \   000000F8   0xD506             BPL      ??mid_HTTP_req_UdpSend_9
   3094                  {
   3095          		// エラー登録
   3096          		man_error_setting(MAN_ERROR_MID_HTTP, mid_http_work.sequence, length);
   \   000000FA   0x....             LDR      R3,??DataTable29  ;; 0xc18
   \   000000FC   0x0032             MOVS     R2,R6
   \   000000FE   0x....             LDR      R0,??DataTable30
   \   00000100   0x7801             LDRB     R1,[R0, #+0]
   \   00000102   0x2010             MOVS     R0,#+16
   \   00000104   0x.... 0x....      BL       man_error_set
   3097          	}
   3098          	
   3099          	return ret;
   \                     ??mid_HTTP_req_UdpSend_9: (+1)
   \   00000108   0x0020             MOVS     R0,R4
   \                     ??mid_HTTP_req_UdpSend_2: (+1)
   \   0000010A   0xBDFE             POP      {R1-R7,PC}       ;; return
   3100          }
   3101          
   3102          
   3103          /********************************************************************/
   3104          /*!
   3105           * \name	mid_HTTP_req_ClientOpen
   3106           * \brief	HTTP client使用開始処理
   3107           * \param	id       : ユニーク番号
   3108           *          callback : 完了を通知するcallback関数
   3109           * \return   0: 成功
   3110           *          -1:失敗
   3111           * \note	必要時に、呼ばれること
   3112           *          終了時にcallback関数が呼ばれます。
   3113           */
   3114          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3115          int32_t mid_HTTP_req_ClientOpen(int32_t id, func_http_cmd callback)
   3116          {
   \                     mid_HTTP_req_ClientOpen: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   3117          	int32_t		ret=-1;
   \   00000006   0x2600             MOVS     R6,#+0
   \   00000008   0x43F6             MVNS     R6,R6            ;; #-1
   3118          	man_data_num_gprs_t *gprs = man_data_get_setting_gprs();
   \   0000000A   0x.... 0x....      BL       man_data_get_setting_gprs
   3119          
   3120                  
   3121          	if (callback == NULL)
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD101             BNE      ??mid_HTTP_req_ClientOpen_0
   3122                  {
   3123                    return ret;
   \   00000014   0x0030             MOVS     R0,R6
   \   00000016   0xE01F             B        ??mid_HTTP_req_ClientOpen_1
   3124                  }
   3125                  if (mid_http_work.sequence != MID_HTTP_SEQ_READY)
   \                     ??mid_HTTP_req_ClientOpen_0: (+1)
   \   00000018   0x....             LDR      R0,??DataTable30
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD001             BEQ      ??mid_HTTP_req_ClientOpen_2
   3126                  {
   3127                    return ret;
   \   00000020   0x0030             MOVS     R0,R6
   \   00000022   0xE019             B        ??mid_HTTP_req_ClientOpen_1
   3128                  }
   3129          #if 0   //直接コマンド内でFDQNを指定するのでこの処理は使用しない
   3130                  if (mid_http_udpsend_work.ip_addr[0] == 0)
   3131                  {  
   3132                    if( man_http_check_FQDN(gprs->ip))
   3133                    {
   3134          
   3135                      ret = mid_HTTP_send_command(MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN_CDNSGIP);
   3136                      mid_http_work.retry = 0;
   3137                      if (ret >= 0)
   3138                      {
   3139                        mid_http_work.sequence = MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN_CDNSGIP;
   3140                        mid_http_work.request.id = id;
   3141                        mid_http_work.request.callback = callback;
   3142                      }
   3143                      mid_http_work.status |= MID_HTTP_STATUS_CLIENT;
   3144                      return ret;
   3145                    }
   3146                    else
   3147                    {
   3148                      strcpy(mid_http_udpsend_work.ip_addr,gprs->ip);
   3149                    }
   3150                  }
   3151          #endif
   3152                  // HTTP client用TCPソケット生成モード(マルチソケットモードで接続を確立する)コマンド送信
   3153                  ret = mid_HTTP_send_command(MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN);
   \                     ??mid_HTTP_req_ClientOpen_2: (+1)
   \   00000024   0x201B             MOVS     R0,#+27
   \   00000026   0x.... 0x....      BL       mid_HTTP_send_command
   \   0000002A   0x0006             MOVS     R6,R0
   3154                  mid_http_work.retry = 0;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x....             LDR      R1,??DataTable24_1
   \   00000030   0x6008             STR      R0,[R1, #+0]
   3155                  if (ret >= 0)
   \   00000032   0x2E00             CMP      R6,#+0
   \   00000034   0xD409             BMI      ??mid_HTTP_req_ClientOpen_3
   3156                  {
   3157                     mid_http_work.sequence = MID_HTTP_SEQ_CLIENT_RESP_CIPOPEN;
   \   00000036   0x201B             MOVS     R0,#+27
   \   00000038   0x....             LDR      R1,??DataTable30
   \   0000003A   0x7008             STRB     R0,[R1, #+0]
   3158                     mid_http_work.request.id = id;
   \   0000003C   0x....             LDR      R0,??DataTable24
   \   0000003E   0x6005             STR      R5,[R0, #+0]
   3159                     mid_http_work.request.callback = callback;
   \   00000040   0x....             LDR      R0,??DataTable25
   \   00000042   0x6004             STR      R4,[R0, #+0]
   3160                     mid_http_udpsend_work.ip_addr[0] = 0;
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x....             LDR      R1,??DataTable28_1
   \   00000048   0x7408             STRB     R0,[R1, #+16]
   3161          
   3162                  }
   3163                  // HTTP client使用中
   3164                  mid_http_work.status |= MID_HTTP_STATUS_CLIENT;
   \                     ??mid_HTTP_req_ClientOpen_3: (+1)
   \   0000004A   0x....             LDR      R0,??DataTable28
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x2104             MOVS     R1,#+4
   \   00000050   0x4301             ORRS     R1,R1,R0
   \   00000052   0x....             LDR      R0,??DataTable28
   \   00000054   0x6001             STR      R1,[R0, #+0]
   3165          //ADLINK Debug
   3166          #ifdef ADLINK_DEBUG_MESSAGE
   3167                  sprintf(print_buf, "mid_HTTP_req_ClientOpen id:%d gprs->ip:%s ip_addr:%s\n",
   3168                          id,gprs->ip,mid_http_udpsend_work.ip_addr);
   3169                  man_usb_data_send((uint8_t *)print_buf,strlen(print_buf));
   3170           #endif
   3171          	return ret;
   \   00000056   0x0030             MOVS     R0,R6
   \                     ??mid_HTTP_req_ClientOpen_1: (+1)
   \   00000058   0xBD70             POP      {R4-R6,PC}       ;; return
   3172          }
   3173          
   3174          
   3175          /********************************************************************/
   3176          /*!
   3177           * \name	mid_HTTP_req_ClientClose
   3178           * \brief	HTTP client使用終了処理
   3179           * \param	id       : ユニーク番号
   3180           *          callback : 完了を通知するcallback関数
   3181           * \return   0: 成功
   3182           *          -1:失敗
   3183           * \note	必要時に、呼ばれること
   3184           *          終了時にcallback関数が呼ばれます。
   3185           */
   3186          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3187          int32_t mid_HTTP_req_ClientClose(int32_t id, func_http_cmd callback)
   3188          {
   \                     mid_HTTP_req_ClientClose: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   3189          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   3190          
   3191          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD018             BEQ      ??mid_HTTP_req_ClientClose_0
   3192          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable30
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD114             BNE      ??mid_HTTP_req_ClientClose_0
   3193          
   3194          			// HTTP client用TCPソケットを閉じるコマンド送信
   3195          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_CLIENT_RESP_CIPCLOSE);
   \   00000018   0x201E             MOVS     R0,#+30
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   3196          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable31
   \   00000022   0x6011             STR      R1,[R2, #+0]
   3197          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_ClientClose_1
   3198          				mid_http_work.sequence = MID_HTTP_SEQ_CLIENT_RESP_CIPCLOSE;
   \   00000028   0x211E             MOVS     R1,#+30
   \   0000002A   0x....             LDR      R2,??DataTable30
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   3199          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable32
   \   00000030   0x600D             STR      R5,[R1, #+0]
   3200          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable25
   \   00000034   0x600C             STR      R4,[R1, #+0]
   3201          			}
   3202          			// HTTP client使用終了
   3203          			mid_http_work.status &= ~MID_HTTP_STATUS_CLIENT;
   \                     ??mid_HTTP_req_ClientClose_1: (+1)
   \   00000036   0x....             LDR      R1,??DataTable28
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0x2204             MOVS     R2,#+4
   \   0000003C   0x4391             BICS     R1,R1,R2
   \   0000003E   0x....             LDR      R2,??DataTable28
   \   00000040   0x6011             STR      R1,[R2, #+0]
   3204          		}
   3205          	}
   3206          	
   3207          	return ret;
   \                     ??mid_HTTP_req_ClientClose_0: (+1)
   \   00000042   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3208          }
   3209          
   3210          
   3211          /********************************************************************/
   3212          /*!
   3213           * \name	mid_HTTP_req_ClientSend
   3214           * \brief	HTTP Clientデータ送信処理
   3215           * \param	data     : 送信データ
   3216           *          length   : データ長
   3217           *          id       : ユニーク番号
   3218           *          callback : 完了を通知するcallback関数
   3219           * \return   0: 成功
   3220           *          -1:失敗
   3221           * \note	必要時に、呼ばれること
   3222           *          終了時にcallback関数が呼ばれます。
   3223           */
   3224          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3225          int32_t mid_HTTP_req_ClientSend(uint8_t *data, int32_t length, int32_t id, func_http_cmd callback)
   3226          {
   \                     mid_HTTP_req_ClientSend: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0007             MOVS     R7,R0
   \   00000004   0x000E             MOVS     R6,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001C             MOVS     R4,R3
   3227          	int32_t		ret=-1;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x43C0             MVNS     R0,R0            ;; #-1
   3228          
   3229          	if ( (callback != NULL) && (data != NULL) && ( 0 < length) && (length <= MID_HTTP_SND_DATA_MAX) ) {
   \   0000000E   0x0021             MOVS     R1,R4
   \   00000010   0x2900             CMP      R1,#+0
   \   00000012   0xD022             BEQ      ??mid_HTTP_req_ClientSend_0
   \   00000014   0x2F00             CMP      R7,#+0
   \   00000016   0xD020             BEQ      ??mid_HTTP_req_ClientSend_0
   \   00000018   0x0031             MOVS     R1,R6
   \   0000001A   0x1E49             SUBS     R1,R1,#+1
   \   0000001C   0x228C             MOVS     R2,#+140
   \   0000001E   0x00D2             LSLS     R2,R2,#+3        ;; #+1120
   \   00000020   0x4291             CMP      R1,R2
   \   00000022   0xD21A             BCS      ??mid_HTTP_req_ClientSend_0
   3230          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000024   0x....             LDR      R1,??DataTable30
   \   00000026   0x7809             LDRB     R1,[R1, #+0]
   \   00000028   0x2900             CMP      R1,#+0
   \   0000002A   0xD116             BNE      ??mid_HTTP_req_ClientSend_0
   3231          
   3232          			memcpy(&mid_http_work.request.data[0], data, length);
   \   0000002C   0x0032             MOVS     R2,R6
   \   0000002E   0x0039             MOVS     R1,R7
   \   00000030   0x....             LDR      R7,??DataTable28_4
   \   00000032   0x0038             MOVS     R0,R7
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy
   3233          			mid_http_work.request.length = length;
   \   00000038   0x....             LDR      R0,??DataTable28_5
   \   0000003A   0x6006             STR      R6,[R0, #+0]
   3234          			// HTTP Clientデータ送信(TCP接続を介してデータを送信する)コマンド送信
   3235          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_CLIENT_RESP_CIPSEND);
   \   0000003C   0x201C             MOVS     R0,#+28
   \   0000003E   0x.... 0x....      BL       mid_HTTP_send_command
   3236          			mid_http_work.retry = 0;
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x....             LDR      R2,??DataTable31
   \   00000046   0x6011             STR      R1,[R2, #+0]
   3237          			if (ret >= 0) {
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD406             BMI      ??mid_HTTP_req_ClientSend_0
   3238          				mid_http_work.sequence = MID_HTTP_SEQ_CLIENT_RESP_CIPSEND;
   \   0000004C   0x211C             MOVS     R1,#+28
   \   0000004E   0x....             LDR      R2,??DataTable30
   \   00000050   0x7011             STRB     R1,[R2, #+0]
   3239          				mid_http_work.request.id = id;
   \   00000052   0x....             LDR      R1,??DataTable32
   \   00000054   0x600D             STR      R5,[R1, #+0]
   3240          				mid_http_work.request.callback = callback;
   \   00000056   0x....             LDR      R1,??DataTable41
   \   00000058   0x600C             STR      R4,[R1, #+0]
   3241          			}
   3242          		}
   3243          	}
   3244          	
   3245          	return ret;
   \                     ??mid_HTTP_req_ClientSend_0: (+1)
   \   0000005A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   3246          }
   3247          
   3248          
   3249          /********************************************************************/
   3250          /*!
   3251           * \name	mid_HTTP_req_ServerOpen
   3252           * \brief	HTTP server 使用開始処理
   3253           * \param	id       : ユニーク番号
   3254           *          callback : 完了を通知するcallback関数
   3255           * \return   0: 成功
   3256           *          -1:失敗
   3257           * \note	必要時に、呼ばれること
   3258           *          終了時にcallback関数が呼ばれます。
   3259           */
   3260          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3261          int32_t mid_HTTP_req_ServerOpen(int32_t id, func_http_cmd callback)
   3262          {
   \                     mid_HTTP_req_ServerOpen: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   3263          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   3264          
   3265          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_ServerOpen_0
   3266          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable30
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_ServerOpen_0
   3267          
   3268          			// HTTP server用 サーバ開始コマンド送信
   3269          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_SERVER_RESP_START);
   \   00000018   0x201F             MOVS     R0,#+31
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   3270          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable31
   \   00000022   0x6011             STR      R1,[R2, #+0]
   3271          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_ServerOpen_0
   3272          				mid_http_work.sequence = MID_HTTP_SEQ_SERVER_RESP_START;
   \   00000028   0x211F             MOVS     R1,#+31
   \   0000002A   0x....             LDR      R2,??DataTable30
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   3273          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable32
   \   00000030   0x600D             STR      R5,[R1, #+0]
   3274          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable41
   \   00000034   0x600C             STR      R4,[R1, #+0]
   3275          			}
   3276          		}
   3277          	}
   3278          	
   3279          	return ret;
   \                     ??mid_HTTP_req_ServerOpen_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3280          }
   3281          
   3282          
   3283          /********************************************************************/
   3284          /*!
   3285           * \name	mid_HTTP_req_ServerClose
   3286           * \brief	HTTP server 使用停止処理
   3287           * \param	id       : ユニーク番号
   3288           *          callback : 完了を通知するcallback関数
   3289           * \return   0: 成功
   3290           *          -1:失敗
   3291           * \note	必要時に、呼ばれること
   3292           *          終了時にcallback関数が呼ばれます。
   3293           */
   3294          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3295          int32_t mid_HTTP_req_ServerClose(int32_t id, func_http_cmd callback)
   3296          {
   \                     mid_HTTP_req_ServerClose: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   3297          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   3298          
   3299          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_ServerClose_0
   3300          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable30
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_ServerClose_0
   3301          
   3302          			// HTTP server用 サーバ停止コマンド送信
   3303          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_SERVER_RESP_STOP);
   \   00000018   0x2022             MOVS     R0,#+34
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   3304          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable31
   \   00000022   0x6011             STR      R1,[R2, #+0]
   3305          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_ServerClose_0
   3306          				mid_http_work.sequence = MID_HTTP_SEQ_SERVER_RESP_STOP;
   \   00000028   0x2122             MOVS     R1,#+34
   \   0000002A   0x....             LDR      R2,??DataTable30
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   3307          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable32
   \   00000030   0x600D             STR      R5,[R1, #+0]
   3308          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable41
   \   00000034   0x600C             STR      R4,[R1, #+0]
   3309          			}
   3310          		}
   3311          	}
   3312          	
   3313          	return ret;
   \                     ??mid_HTTP_req_ServerClose_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3314          }
   3315          
   3316          
   3317          /********************************************************************/
   3318          /*!
   3319           * \name	mid_HTTP_req_ServerSend
   3320           * \brief	HTTP serverデータ送信処理
   3321           * \param	data     : 送信データ
   3322           *          length   : データ長
   3323           *          id       : ユニーク番号
   3324           *          callback : 完了を通知するcallback関数
   3325           * \return   0: 成功
   3326           *          -1:失敗
   3327           * \note	必要時に、呼ばれること
   3328           *          終了時にcallback関数が呼ばれます。
   3329           */
   3330          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3331          int32_t mid_HTTP_req_ServerSend(uint8_t *data, int32_t length, int32_t id, func_http_cmd callback)
   3332          {
   \                     mid_HTTP_req_ServerSend: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0007             MOVS     R7,R0
   \   00000004   0x000E             MOVS     R6,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001C             MOVS     R4,R3
   3333          	int32_t		ret=-1;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x43C0             MVNS     R0,R0            ;; #-1
   3334          
   3335          	if ( (callback != NULL) && (data != NULL) && ( 0 < length) && (length <= MID_HTTP_SND_DATA_MAX) ) {
   \   0000000E   0x0021             MOVS     R1,R4
   \   00000010   0x2900             CMP      R1,#+0
   \   00000012   0xD022             BEQ      ??mid_HTTP_req_ServerSend_0
   \   00000014   0x2F00             CMP      R7,#+0
   \   00000016   0xD020             BEQ      ??mid_HTTP_req_ServerSend_0
   \   00000018   0x0031             MOVS     R1,R6
   \   0000001A   0x1E49             SUBS     R1,R1,#+1
   \   0000001C   0x228C             MOVS     R2,#+140
   \   0000001E   0x00D2             LSLS     R2,R2,#+3        ;; #+1120
   \   00000020   0x4291             CMP      R1,R2
   \   00000022   0xD21A             BCS      ??mid_HTTP_req_ServerSend_0
   3336          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000024   0x....             LDR      R1,??DataTable30
   \   00000026   0x7809             LDRB     R1,[R1, #+0]
   \   00000028   0x2900             CMP      R1,#+0
   \   0000002A   0xD116             BNE      ??mid_HTTP_req_ServerSend_0
   3337          
   3338          			memcpy(&mid_http_work.request.data[0], data, length);
   \   0000002C   0x0032             MOVS     R2,R6
   \   0000002E   0x0039             MOVS     R1,R7
   \   00000030   0x....             LDR      R7,??DataTable40
   \   00000032   0x0038             MOVS     R0,R7
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy
   3339          			mid_http_work.request.length = length;
   \   00000038   0x....             LDR      R0,??DataTable41_1
   \   0000003A   0x6006             STR      R6,[R0, #+0]
   3340          			// HTTP serverデータ送信(TCP接続を介してデータを送信する)コマンド送信
   3341          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_SERVER_RESP_CIPSEND);
   \   0000003C   0x2020             MOVS     R0,#+32
   \   0000003E   0x.... 0x....      BL       mid_HTTP_send_command
   3342          			mid_http_work.retry = 0;
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x....             LDR      R2,??DataTable31
   \   00000046   0x6011             STR      R1,[R2, #+0]
   3343          			if (ret >= 0) {
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD406             BMI      ??mid_HTTP_req_ServerSend_0
   3344          				mid_http_work.sequence = MID_HTTP_SEQ_SERVER_RESP_CIPSEND;
   \   0000004C   0x2120             MOVS     R1,#+32
   \   0000004E   0x....             LDR      R2,??DataTable30
   \   00000050   0x7011             STRB     R1,[R2, #+0]
   3345          				mid_http_work.request.id = id;
   \   00000052   0x....             LDR      R1,??DataTable32
   \   00000054   0x600D             STR      R5,[R1, #+0]
   3346          				mid_http_work.request.callback = callback;
   \   00000056   0x....             LDR      R1,??DataTable41
   \   00000058   0x600C             STR      R4,[R1, #+0]
   3347          			}
   3348          		}
   3349          	}
   3350          	
   3351          	return ret;
   \                     ??mid_HTTP_req_ServerSend_0: (+1)
   \   0000005A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   3352          }
   3353          
   3354          
   3355          /********************************************************************/
   3356          /*!
   3357           * \name	mid_HTTP_req_FtpDel
   3358           * \brief	全ファイル削除処理
   3359           * \param	id       : ユニーク番号
   3360           *          callback : 完了を通知するcallback関数
   3361           * \return   0: 成功
   3362           *          -1:失敗
   3363           * \note	必要時に、呼ばれること
   3364           *          終了時にcallback関数が呼ばれます。
   3365           */
   3366          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3367          int32_t mid_HTTP_req_FtpDel(int32_t id, func_http_cmd callback)
   3368          {
   \                     mid_HTTP_req_FtpDel: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   3369          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   3370          
   3371          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_FtpDel_0
   3372          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable30
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_FtpDel_0
   3373          
   3374          			// FTP :: rm *.*コマンド送信
   3375          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_FTP_RESP_FSDEL);
   \   00000018   0x2024             MOVS     R0,#+36
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   3376          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable31
   \   00000022   0x6011             STR      R1,[R2, #+0]
   3377          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_FtpDel_0
   3378          				mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_FSDEL;
   \   00000028   0x2124             MOVS     R1,#+36
   \   0000002A   0x....             LDR      R2,??DataTable30
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   3379          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable32
   \   00000030   0x600D             STR      R5,[R1, #+0]
   3380          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable41
   \   00000034   0x600C             STR      R4,[R1, #+0]
   3381          			}
   3382          		}
   3383          	}
   3384          	
   3385          	return ret;
   \                     ??mid_HTTP_req_FtpDel_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3386          }
   3387          
   3388          /********************************************************************/
   3389          /*!
   3390           * \name	mid_HTTP_req_FtpOpen
   3391           * \brief	FTP 使用開始処理
   3392           * \param	id       : ユニーク番号
   3393           *          callback : 完了を通知するcallback関数
   3394           * \return   0: 成功
   3395           *          -1:失敗
   3396           * \note	必要時に、呼ばれること
   3397           *          終了時にcallback関数が呼ばれます。
   3398           */
   3399          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3400          int32_t mid_HTTP_req_FtpOpen(int32_t id, func_http_cmd callback)
   3401          {
   \                     mid_HTTP_req_FtpOpen: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   3402          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   3403          
   3404          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_FtpOpen_0
   3405          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable42
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_FtpOpen_0
   3406          
   3407          			// APN情報 :: APN名設定コマンド送信
   3408          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_FTP_RESP_CGSOCKCONT);
   \   00000018   0x2025             MOVS     R0,#+37
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   3409          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable31
   \   00000022   0x6011             STR      R1,[R2, #+0]
   3410          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_FtpOpen_0
   3411          				mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CGSOCKCONT;
   \   00000028   0x2125             MOVS     R1,#+37
   \   0000002A   0x....             LDR      R2,??DataTable42
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   3412          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable32
   \   00000030   0x600D             STR      R5,[R1, #+0]
   3413          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable41
   \   00000034   0x600C             STR      R4,[R1, #+0]
   3414          			}
   3415          		}
   3416          	}
   3417          	
   3418          	return ret;
   \                     ??mid_HTTP_req_FtpOpen_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3419          }
   3420          
   3421          
   3422          /********************************************************************/
   3423          /*!
   3424           * \name	mid_HTTP_req_FtpGet
   3425           * \brief	FTP 指定のファイルを取り出す処理
   3426           * \param	file_num : ファイル番号
   3427           *          id       : ユニーク番号
   3428           *          callback : 完了を通知するcallback関数
   3429           * \return   0: 成功
   3430           *          -1:失敗
   3431           * \note	必要時に、呼ばれること
   3432           *          終了時にcallback関数が呼ばれます。
   3433           */
   3434          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3435          int32_t mid_HTTP_req_FtpGet(int32_t file_num, int32_t id, func_http_cmd callback)
   3436          {
   \                     mid_HTTP_req_FtpGet: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0003             MOVS     R3,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0015             MOVS     R5,R2
   3437          	int32_t		ret=-1;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x43C0             MVNS     R0,R0            ;; #-1
   3438          
   3439          	if (callback != NULL) {
   \   0000000C   0x0029             MOVS     R1,R5
   \   0000000E   0x2900             CMP      R1,#+0
   \   00000010   0xD014             BEQ      ??mid_HTTP_req_FtpGet_0
   3440          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000012   0x....             LDR      R1,??DataTable42
   \   00000014   0x7809             LDRB     R1,[R1, #+0]
   \   00000016   0x2900             CMP      R1,#+0
   \   00000018   0xD110             BNE      ??mid_HTTP_req_FtpGet_0
   3441          
   3442          			// FTP :: get fileコマンド送信
   3443          			mid_http_work.request.num = file_num;
   \   0000001A   0x....             LDR      R0,??DataTable42_1
   \   0000001C   0x6003             STR      R3,[R0, #+0]
   3444          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_FTP_RESP_CFTPGETFILE);
   \   0000001E   0x202E             MOVS     R0,#+46
   \   00000020   0x.... 0x....      BL       mid_HTTP_send_command
   3445          			mid_http_work.retry = 0;
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x....             LDR      R2,??DataTable42_2
   \   00000028   0x6011             STR      R1,[R2, #+0]
   3446          			if (ret >= 0) {
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD406             BMI      ??mid_HTTP_req_FtpGet_0
   3447          				mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_CFTPGETFILE;
   \   0000002E   0x212E             MOVS     R1,#+46
   \   00000030   0x....             LDR      R2,??DataTable42
   \   00000032   0x7011             STRB     R1,[R2, #+0]
   3448          				mid_http_work.request.id = id;
   \   00000034   0x....             LDR      R1,??DataTable32
   \   00000036   0x600C             STR      R4,[R1, #+0]
   3449          				mid_http_work.request.callback = callback;
   \   00000038   0x....             LDR      R1,??DataTable41
   \   0000003A   0x600D             STR      R5,[R1, #+0]
   3450          			}
   3451          		}
   3452          	}
   3453          	
   3454          	return ret;
   \                     ??mid_HTTP_req_FtpGet_0: (+1)
   \   0000003C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3455          }
   3456          
   3457          
   3458          /********************************************************************/
   3459          /*!
   3460           * \name	mid_HTTP_req_FtpRecovery
   3461           * \brief	FTP RESET後の初期化処理
   3462           * \param	id       : ユニーク番号
   3463           *          callback : 完了を通知するcallback関数
   3464           * \return   0: 成功
   3465           *          -1:失敗
   3466           * \note	必要時に、呼ばれること
   3467           *          終了時にcallback関数が呼ばれます。
   3468           */
   3469          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3470          int32_t mid_HTTP_req_FtpRecovery(int32_t id, func_http_cmd callback)
   3471          {
   \                     mid_HTTP_req_FtpRecovery: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   3472          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   3473          
   3474          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_FtpRecovery_0
   3475          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable42
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_FtpRecovery_0
   3476          
   3477          			// FTP :: ATE0コマンド送信
   3478          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_FTP_RESP_ATE0);
   \   00000018   0x202F             MOVS     R0,#+47
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   3479          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable42_2
   \   00000022   0x6011             STR      R1,[R2, #+0]
   3480          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_FtpRecovery_0
   3481          				mid_http_work.sequence = MID_HTTP_SEQ_FTP_RESP_ATE0;
   \   00000028   0x212F             MOVS     R1,#+47
   \   0000002A   0x....             LDR      R2,??DataTable42
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   3482          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable42_3
   \   00000030   0x600D             STR      R5,[R1, #+0]
   3483          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable41
   \   00000034   0x600C             STR      R4,[R1, #+0]
   3484          			}
   3485          		}
   3486          	}
   3487          	
   3488          	return ret;
   \                     ??mid_HTTP_req_FtpRecovery_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3489          }
   3490          
   3491          
   3492          
   3493          /********************************************************************/
   3494          /*!
   3495           * \name	mid_HTTP_req_FileGet
   3496           * \brief	FTP 指定のファイルを取り出すコマンド発行処理
   3497           * \param	file_num : ファイル番号
   3498           *          id       : ユニーク番号
   3499           *          callback : 完了を通知するcallback関数
   3500           * \return   0: 成功
   3501           *          -1:失敗
   3502           * \note	必要時に、呼ばれること
   3503           *          終了時にcallback関数が呼ばれます。
   3504           *          取得データは、MID_HTTP_STATE_FILE_GET, MID_HTTP_STATE_FILE_GET_ENDで通知されます。
   3505           */
   3506          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3507          int32_t mid_HTTP_req_FileGet(int32_t file_num, int32_t id, func_http_cmd callback)
   3508          {
   \                     mid_HTTP_req_FileGet: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0003             MOVS     R3,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0015             MOVS     R5,R2
   3509          	int32_t		ret=-1;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x43C0             MVNS     R0,R0            ;; #-1
   3510          
   3511          	if (callback != NULL) {
   \   0000000C   0x0029             MOVS     R1,R5
   \   0000000E   0x2900             CMP      R1,#+0
   \   00000010   0xD014             BEQ      ??mid_HTTP_req_FileGet_0
   3512          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000012   0x....             LDR      R1,??DataTable42
   \   00000014   0x7809             LDRB     R1,[R1, #+0]
   \   00000016   0x2900             CMP      R1,#+0
   \   00000018   0xD110             BNE      ??mid_HTTP_req_FileGet_0
   3513          
   3514          			// FILE :: get fileコマンド送信
   3515          			mid_http_work.request.num = file_num;
   \   0000001A   0x....             LDR      R0,??DataTable42_1
   \   0000001C   0x6003             STR      R3,[R0, #+0]
   3516          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_FILE_RESP_CFTRANTX);
   \   0000001E   0x2030             MOVS     R0,#+48
   \   00000020   0x.... 0x....      BL       mid_HTTP_send_command
   3517          			mid_http_work.retry = 0;
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x....             LDR      R2,??DataTable42_2
   \   00000028   0x6011             STR      R1,[R2, #+0]
   3518          			if (ret >= 0) {
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD406             BMI      ??mid_HTTP_req_FileGet_0
   3519          				mid_http_work.sequence = MID_HTTP_SEQ_FILE_RESP_CFTRANTX;
   \   0000002E   0x2130             MOVS     R1,#+48
   \   00000030   0x....             LDR      R2,??DataTable42
   \   00000032   0x7011             STRB     R1,[R2, #+0]
   3520          				mid_http_work.request.id = id;
   \   00000034   0x....             LDR      R1,??DataTable42_3
   \   00000036   0x600C             STR      R4,[R1, #+0]
   3521          				mid_http_work.request.callback = callback;
   \   00000038   0x....             LDR      R1,??DataTable41
   \   0000003A   0x600D             STR      R5,[R1, #+0]
   3522          			}
   3523          		}
   3524          	}
   3525          	
   3526          	return ret;
   \                     ??mid_HTTP_req_FileGet_0: (+1)
   \   0000003C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3527          }
   3528          
   3529          
   3530          /********************************************************************/
   3531          /*!
   3532           * \name	mid_HTTP_set_RecvNoti
   3533           * \brief	データ受信時に通知する関数登録処理
   3534           * \param	id       : ユニーク番号
   3535           *          callback : 受信データを通知するcallback関数
   3536           * \return   0: 成功
   3537           *          -1:失敗
   3538           * \note	
   3539           */
   3540          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3541          int32_t mid_HTTP_set_RecvNoti(int32_t id, func_http_noti callback)
   3542          {
   \                     mid_HTTP_set_RecvNoti: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   3543          	int32_t		ret=-1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   3544          
   3545          	if (callback != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??mid_HTTP_set_RecvNoti_0
   3546          		mid_http_work.recv_noti.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable42_4
   \   00000010   0x6002             STR      R2,[R0, #+0]
   3547          		mid_http_work.recv_noti.callback = callback;
   \   00000012   0x....             LDR      R0,??DataTable42_5
   \   00000014   0x6001             STR      R1,[R0, #+0]
   3548          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   3549          	}
   3550          	
   3551          	return ret;
   \                     ??mid_HTTP_set_RecvNoti_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   3552          }
   3553          
   3554          /********************************************************************/
   3555          /*!
   3556           * \name	mid_HTTP_clear_RecvNoti
   3557           * \brief	データ受信時に通知する関数削除処理
   3558           * \param	id       : ユニーク番号
   3559           *          callback : 受信データを通知するcallback関数
   3560           * \return   0: 成功
   3561           *          -1:失敗
   3562           * \note	
   3563           */
   3564          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3565          int32_t mid_HTTP_clear_RecvNoti(int32_t id, func_http_noti callback)
   3566          {
   \                     mid_HTTP_clear_RecvNoti: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0002             MOVS     R2,R0
   3567          	int32_t		ret=-1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   3568          
   3569          	if ( (mid_http_work.recv_noti.id == id) && (mid_http_work.recv_noti.callback == callback) ) {
   \   00000008   0x....             LDR      R3,??DataTable42_4
   \   0000000A   0x681B             LDR      R3,[R3, #+0]
   \   0000000C   0x4293             CMP      R3,R2
   \   0000000E   0xD109             BNE      ??mid_HTTP_clear_RecvNoti_0
   \   00000010   0x....             LDR      R3,??DataTable42_5
   \   00000012   0x681B             LDR      R3,[R3, #+0]
   \   00000014   0x000C             MOVS     R4,R1
   \   00000016   0x42A3             CMP      R3,R4
   \   00000018   0xD104             BNE      ??mid_HTTP_clear_RecvNoti_0
   3570          		mid_http_work.recv_noti.id = id;
   \   0000001A   0x....             LDR      R0,??DataTable42_4
   \   0000001C   0x6002             STR      R2,[R0, #+0]
   3571          		mid_http_work.recv_noti.callback = callback;
   \   0000001E   0x....             LDR      R0,??DataTable42_5
   \   00000020   0x6001             STR      R1,[R0, #+0]
   3572          		ret = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   3573          	}
   3574          	
   3575          	return ret;
   \                     ??mid_HTTP_clear_RecvNoti_0: (+1)
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
   3576          }
   3577          
   3578          /********************************************************************/
   3579          /*!
   3580           * \name	mid_HTTP_get_info
   3581           * \brief	取得した情報を取得する処理
   3582           * \param	なし
   3583           * \return  取得した情報へのポインタ
   3584           * \note	必要時に呼ばれること
   3585           */
   3586          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3587          mid_http_get_info_t * mid_HTTP_get_info( void )
   3588          {
   3589          		return &mid_http_work.resp_info.get_info;
   \                     mid_HTTP_get_info: (+1)
   \   00000000   0x....             LDR      R0,??DataTable42_6
   \   00000002   0x4770             BX       LR               ;; return
   3590          }
   3591          
   3592          /********************************************************************/
   3593          /*!
   3594           * \name	mid_HTTP_get_data
   3595           * \brief	取得したデータを取得する処理
   3596           * \param	なし
   3597           * \return  取得したデータへのポインタ
   3598           * \note	必要時に呼ばれること
   3599           */
   3600          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3601          mid_http_get_data_t * mid_HTTP_get_data( void )
   3602          {
   3603          		return &mid_http_work.resp_info.get_data;
   \                     mid_HTTP_get_data: (+1)
   \   00000000   0x....             LDR      R0,??DataTable42_7
   \   00000002   0x4770             BX       LR               ;; return
   3604          }
   3605          
   3606          
   3607          /********************************************************************/
   3608          /*!
   3609           * \name	mid_HTTP_get_status
   3610           * \brief	HTTP の状態を取得する
   3611           * \param	なし
   3612           * \return   0: 要求待ち
   3613           *           1: 実行中
   3614           * \note	必要時に、呼ばれること
   3615           */
   3616          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3617          int32_t mid_HTTP_get_status( void )
   3618          {
   \                     mid_HTTP_get_status: (+1)
   \   00000000   0xB500             PUSH     {LR}
   3619          	int32_t	ret=0;
   \   00000002   0x2000             MOVS     R0,#+0
   3620          
   3621          	if (mid_http_work.sequence != MID_HTTP_SEQ_READY) {
   \   00000004   0x....             LDR      R1,??DataTable42
   \   00000006   0x7809             LDRB     R1,[R1, #+0]
   \   00000008   0x2900             CMP      R1,#+0
   \   0000000A   0xD000             BEQ      ??mid_HTTP_get_status_0
   3622          		ret = 1;
   \   0000000C   0x2001             MOVS     R0,#+1
   3623          	}
   3624          	
   3625          	return ret;
   \                     ??mid_HTTP_get_status_0: (+1)
   \   0000000E   0xBD00             POP      {PC}             ;; return
   3626          }
   3627          
   3628          
   3629          /********************************************************************/
   3630          /*!
   3631           * \name	mid_HTTP_req_GetClk
   3632           * \brief	LTEの時刻取得処理
   3633           * \param	id       : ユニーク番号
   3634           *          callback : 完了を通知するcallback関数
   3635           * \return   0: 成功
   3636           *          -1:失敗
   3637           * \note	圏内を検知後に使用してください
   3638           *          終了時にcallback関数が呼ばれます。
   3639           */
   3640          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3641          int32_t mid_HTTP_req_GetClk(int32_t id, func_http_cmd callback)
   3642          {
   \                     mid_HTTP_req_GetClk: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   3643          	int32_t		ret=-1;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x43C0             MVNS     R0,R0            ;; #-1
   3644          
   3645          	if (callback != NULL) {
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD012             BEQ      ??mid_HTTP_req_GetClk_0
   3646          		if (mid_http_work.sequence == MID_HTTP_SEQ_READY) {
   \   00000010   0x....             LDR      R1,??DataTable42
   \   00000012   0x7809             LDRB     R1,[R1, #+0]
   \   00000014   0x2900             CMP      R1,#+0
   \   00000016   0xD10E             BNE      ??mid_HTTP_req_GetClk_0
   3647          
   3648          			// LTEの時刻取得コマンド送信
   3649          			ret = mid_HTTP_send_command(MID_HTTP_SEQ_RETRY_RESP_CCLK);
   \   00000018   0x2031             MOVS     R0,#+49
   \   0000001A   0x.... 0x....      BL       mid_HTTP_send_command
   3650          			mid_http_work.retry = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR      R2,??DataTable42_2
   \   00000022   0x6011             STR      R1,[R2, #+0]
   3651          			if (ret >= 0) {
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD406             BMI      ??mid_HTTP_req_GetClk_0
   3652          				mid_http_work.sequence = MID_HTTP_SEQ_RETRY_RESP_CCLK;
   \   00000028   0x2131             MOVS     R1,#+49
   \   0000002A   0x....             LDR      R2,??DataTable42
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
   3653          				mid_http_work.request.id = id;
   \   0000002E   0x....             LDR      R1,??DataTable42_3
   \   00000030   0x600D             STR      R5,[R1, #+0]
   3654          				mid_http_work.request.callback = callback;
   \   00000032   0x....             LDR      R1,??DataTable41
   \   00000034   0x600C             STR      R4,[R1, #+0]
   3655          			}
   3656          		}
   3657          	}
   3658          	
   3659          	return ret;
   \                     ??mid_HTTP_req_GetClk_0: (+1)
   \   00000036   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   3660          }
   3661          
   3662          /********************************************************************/
   3663          /*!
   3664           * \name	mid_HTTP_disp_info
   3665           * \brief	管理情報を表示する処理
   3666           * \param	なし
   3667           * \return  なし
   3668           * \note	必要時に、呼ばれること
   3669           */
   3670          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3671          void mid_HTTP_disp_info( void )
   3672          {
   \                     mid_HTTP_disp_info: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   3673          	int32_t					length;
   3674          	man_data_get_other_t	*other = man_data_get_other();
   \   00000002   0x.... 0x....      BL       man_data_get_other
   3675          	uint8_t					*usb_buff = man_memory_alloc();
   \   00000006   0x.... 0x....      BL       man_memory_alloc
   \   0000000A   0x0004             MOVS     R4,R0
   3676          	
   3677          	sprintf((char *)&usb_buff[0], "MID HTTP INFO :: last err=%s\n", &mid_http_work.err_buff[0]);
   \   0000000C   0x....             LDR      R2,??DataTable42_8
   \   0000000E   0x....             LDR      R1,??DataTable42_9
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       sprintf
   3678          	length = strlen((char const *)&usb_buff[0]);
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0x.... 0x....      BL       strlen
   \   0000001C   0x0001             MOVS     R1,R0
   3679          	man_usb_data_send(&usb_buff[0], length);
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x.... 0x....      BL       man_usb_data_send
   3680          }
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
   3681          
   3682          /********************************************************************/
   3683          /*!
   3684           * \name	mid_HTTP_req_PowerOFF
   3685           * \brief	電源断
   3686           * \param　　なし
   3687           * \return   0: 成功
   3688           *          -1:失敗
   3689           * \note	必要時に、呼ばれること
   3690           */
   3691          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3692          int32_t mid_HTTP_req_LTE_PowerOFF(void)
   3693          {
   \                     mid_HTTP_req_LTE_PowerOFF: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   3694          	int32_t		ret=-1;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x43C0             MVNS     R0,R0            ;; #-1
   3695          
   3696              if (mid_http_work.sequence == MID_HTTP_SEQ_READY)
   \   00000006   0x....             LDR      R1,??DataTable42
   \   00000008   0x7809             LDRB     R1,[R1, #+0]
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD110             BNE      ??mid_HTTP_req_LTE_PowerOFF_0
   3697              {
   3698          	ret = mid_HTTP_send_command(MID_HTTP_SEQ_LTE_POWER_OFF);
   \   0000000E   0x2034             MOVS     R0,#+52
   \   00000010   0x.... 0x....      BL       mid_HTTP_send_command
   3699          	mid_http_work.retry = 0;
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x....             LDR      R2,??DataTable42_2
   \   00000018   0x6011             STR      R1,[R2, #+0]
   3700          	if (ret >= 0)
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD408             BMI      ??mid_HTTP_req_LTE_PowerOFF_0
   3701                  {
   3702          		mid_http_work.sequence = MID_HTTP_SEQ_LTE_POWER_OFF;
   \   0000001E   0x2134             MOVS     R1,#+52
   \   00000020   0x....             LDR      R2,??DataTable42
   \   00000022   0x7011             STRB     R1,[R2, #+0]
   3703          		mid_http_work.request.id = 0;
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x....             LDR      R2,??DataTable42_3
   \   00000028   0x6011             STR      R1,[R2, #+0]
   3704          		mid_http_work.request.callback = 0;
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x....             LDR      R2,??DataTable42_10
   \   0000002E   0x6011             STR      R1,[R2, #+0]
   3705          	}
   3706              }
   3707              return ret;
   \                     ??mid_HTTP_req_LTE_PowerOFF_0: (+1)
   \   00000030   0xBD02             POP      {R1,PC}          ;; return
   3708          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     cmd_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     mid_http_work+0x1CB4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     mid_http_work+0x1CB0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     mid_http_work+0x1CAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0xFFFFFDF0         DC32     0xfffffdf0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x000002FD         DC32     0x2fd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x000013B0         DC32     0x13b0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x000013A8         DC32     0x13a8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x00000353         DC32     0x353

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x00000361         DC32     0x361

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x000013A4         DC32     0x13a4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x00001388         DC32     0x1388

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     mid_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     cmd_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     mid_http_work+0x1CB0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     mid_http_work+0x1CB8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x000003EB         DC32     0x3eb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x000003EE         DC32     0x3ee

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x000003F5         DC32     0x3f5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x00000407         DC32     0x407

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     mid_http_work+0x1CB4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     mid_http_work+0x1CAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     mid_http_work+0x1CD0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     mid_http_work+0x1CB0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x00000591         DC32     0x591

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     mid_http_work+0x1CD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x000005A1         DC32     0x5a1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     mid_http_work+0x1CE0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x000005AF         DC32     0x5af

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     mid_http_work+0x1CF1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x000005BF         DC32     0x5bf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     mid_http_work+0x1D01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x000005D4         DC32     0x5d4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     mid_http_udpsend_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     cmd_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x00000607         DC32     0x607

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     mid_http_work+0x1CB4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     mid_http_work+0x1CAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     ?_59

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     ?_60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     mid_http_udpsend_work+0x10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     ?_61

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     mid_http_work+0x464

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     mid_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     mid_http_work+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     ?_62

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     ?_63

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     ?_64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     ?_65

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     ?_66

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x........         DC32     ?_67

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x........         DC32     mid_http_work+0x494

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x........         DC32     ?_68

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     ?_69

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     ?_70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     ?_71

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     ?_72

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     ?_73

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     ?_74

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     ?_75

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     ?_76

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     ?_77

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     ?_78

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x........         DC32     ?_79

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     mid_http_work+0x468

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     ?_80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x........         DC32     ?_81

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x........         DC32     ?_82

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x........         DC32     ?_83

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x........         DC32     ?_84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x41 0x54          DC8      "AT\r"
   \              0x0D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x........         DC32     ?_85

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x........         DC32     mid_http_work+0x1832

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x........         DC32     cmd_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0x........         DC32     mid_HTTP_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \   00000000   0x........         DC32     mid_HTTP_callback2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_23:
   \   00000000   0x........         DC32     mid_http_work+0x1CB4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_24:
   \   00000000   0x........         DC32     mid_http_work+0x1CAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_25:
   \   00000000   0x........         DC32     mid_http_work+0x1CB0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_26:
   \   00000000   0x00000762         DC32     0x762

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_27:
   \   00000000   0x........         DC32     mid_http_work+0x470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_28:
   \   00000000   0x........         DC32     mid_http_work+0x46C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_29:
   \   00000000   0x........         DC32     mid_http_work+0x1830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     mid_http_work+0x1CBC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     mid_http_work+0x1CA8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     mid_http_work+0x1830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x00000966         DC32     0x966

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     mid_HTTP_callback3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x00001E08         DC32     0x1e08

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     mid_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x........         DC32     mid_http_work+0x1CAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     mid_http_work+0x1CB0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x000009A2         DC32     0x9a2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x000009B6         DC32     0x9b6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \   00000000   0x000009C1         DC32     0x9c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x........         DC32     mid_http_udpsend_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   0x000009CA         DC32     0x9ca

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_2:
   \   00000000   0x000009D3         DC32     0x9d3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_3:
   \   00000000   0x000009DF         DC32     0x9df

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     mid_http_work+0x1830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x........         DC32     mid_http_work+0x46C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x........         DC32     mid_http_work+0x470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x........         DC32     mid_http_work+0x1CA8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x........         DC32     mid_http_work+0x1830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x........         DC32     mid_http_work+0x46C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_1:
   \   00000000   0x........         DC32     mid_http_work+0x1CA8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   0x........         DC32     mid_http_work+0x470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x00000BE2         DC32     0xbe2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \   00000000   0x00000BE8         DC32     0xbe8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x........         DC32     mid_http_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_1:
   \   00000000   0x........         DC32     mid_http_udpsend_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_2:
   \   00000000   0x00000BFF         DC32     0xbff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_3:
   \   00000000   0x........         DC32     mid_http_udpsend_work+0x10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_4:
   \   00000000   0x........         DC32     mid_http_work+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_5:
   \   00000000   0x........         DC32     mid_http_work+0x464

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x00000C18         DC32     0xc18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   0x........         DC32     mid_http_work+0x1830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   0x........         DC32     mid_http_work+0x1CA8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   0x........         DC32     mid_http_work+0x46C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   0x........         DC32     mid_http_work+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   0x........         DC32     mid_http_work+0x470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_1:
   \   00000000   0x........         DC32     mid_http_work+0x464

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   0x........         DC32     mid_http_work+0x1830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_1:
   \   00000000   0x........         DC32     mid_http_work+0x468

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_2:
   \   00000000   0x........         DC32     mid_http_work+0x1CA8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_3:
   \   00000000   0x........         DC32     mid_http_work+0x46C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_4:
   \   00000000   0x........         DC32     mid_http_work+0x474

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_5:
   \   00000000   0x........         DC32     mid_http_work+0x478

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_6:
   \   00000000   0x........         DC32     mid_http_work+0x1CBC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_7:
   \   00000000   0x........         DC32     mid_http_work+0x1CF0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_8:
   \   00000000   0x........         DC32     mid_http_work+0x1D40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_9:
   \   00000000   0x........         DC32     ?_86

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_10:
   \   00000000   0x........         DC32     mid_http_work+0x470

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x41 0x54          DC8 "ATE0\015"
   \              0x45 0x30    
   \              0x0D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x4F 0x4B          DC8 "OK"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x45 0x52          DC8 "ERROR"
   \              0x52 0x4F    
   \              0x52 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x2B 0x43          DC8 "+CTZU: "
   \              0x54 0x5A    
   \              0x55 0x3A    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x2B 0x43          DC8 "+CCLK: "
   \              0x43 0x4C    
   \              0x4B 0x3A    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x2B 0x43          DC8 "+CPIN: READY"
   \              0x50 0x49    
   \              0x4E 0x3A    
   \              0x20 0x52    
   \              0x45 0x41    
   \              0x44 0x59    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x2B 0x43          DC8 "+CSQ:"
   \              0x53 0x51    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x2B 0x53          DC8 "+SIMEI: "
   \              0x49 0x4D    
   \              0x45 0x49    
   \              0x3A 0x20    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x2B 0x43          DC8 "+CGMR:"
   \              0x47 0x4D    
   \              0x52 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x2B 0x49          DC8 "+IPADDR:"
   \              0x50 0x41    
   \              0x44 0x44    
   \              0x52 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x2B 0x4E          DC8 "+NETOPEN: 0"
   \              0x45 0x54    
   \              0x4F 0x50    
   \              0x45 0x4E    
   \              0x3A 0x20    
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x2B 0x4E          DC8 "+NETCLOSE: 0"
   \              0x45 0x54    
   \              0x43 0x4C    
   \              0x4F 0x53    
   \              0x45 0x3A    
   \              0x20 0x30    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x2B 0x53          DC8 "+SIMCARD: NOT AVAILABLE"
   \              0x49 0x4D    
   \              0x43 0x41    
   \              0x52 0x44    
   \              0x3A 0x20    
   \              0x4E 0x4F    
   \              0x54 0x20    
   \              0x41 0x56    
   \              0x41 0x49    
   \              0x4C 0x41    
   \              0x42 0x4C    
   \              0x45 0x00    

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x2B 0x43          DC8 "+CIPOPEN: 1,0"
   \              0x49 0x50    
   \              0x4F 0x50    
   \              0x45 0x4E    
   \              0x3A 0x20    
   \              0x31 0x2C    
   \              0x30 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \                     ?_14:
   \   00000000   0x3E 0x00          DC8 ">"

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x2B 0x43          DC8 "+CIPSEND:"
   \              0x49 0x50    
   \              0x53 0x45    
   \              0x4E 0x44    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x2B 0x43          DC8 "+CIPCLOSE:"
   \              0x49 0x50    
   \              0x43 0x4C    
   \              0x4F 0x53    
   \              0x45 0x3A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x2B 0x43          DC8 "+CIPOPEN: 2,0"
   \              0x49 0x50    
   \              0x4F 0x50    
   \              0x45 0x4E    
   \              0x3A 0x20    
   \              0x32 0x2C    
   \              0x30 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_18:
   \   00000000   0x2B 0x53          DC8 "+SERVERSTOP: 0,0"
   \              0x45 0x52    
   \              0x56 0x45    
   \              0x52 0x53    
   \              0x54 0x4F    
   \              0x50 0x3A    
   \              0x20 0x30    
   \              0x2C 0x30    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x2B 0x46          DC8 "+FSCD: C:/"
   \              0x53 0x43    
   \              0x44 0x3A    
   \              0x20 0x43    
   \              0x3A 0x2F    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x2B 0x43          DC8 "+CFTPGETFILE: 0"
   \              0x46 0x54    
   \              0x50 0x47    
   \              0x45 0x54    
   \              0x46 0x49    
   \              0x4C 0x45    
   \              0x3A 0x20    
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x2B 0x43          DC8 "+CPSI: "
   \              0x50 0x53    
   \              0x49 0x3A    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0x41 0x54          DC8 "AT+CFOTASWITCH=0"
   \              0x2B 0x43    
   \              0x46 0x4F    
   \              0x54 0x41    
   \              0x53 0x57    
   \              0x49 0x54    
   \              0x43 0x48    
   \              0x3D 0x30    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_23:
   \   00000000   0x2B 0x43          DC8 "+CDNSGIP: 1"
   \              0x44 0x4E    
   \              0x53 0x47    
   \              0x49 0x50    
   \              0x3A 0x20    
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \                     ?_24:
   \   00000000   0x2B 0x43          DC8 "+CDNSGIP: "
   \              0x44 0x4E    
   \              0x53 0x47    
   \              0x49 0x50    
   \              0x3A 0x20    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_25:
   \   00000000   0x41 0x54          DC8 "AT\015"
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_26:
   \   00000000   0x52 0x45          DC8 "RECV FROM:"
   \              0x43 0x56    
   \              0x20 0x46    
   \              0x52 0x4F    
   \              0x4D 0x3A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_27:
   \   00000000   0x2B 0x49          DC8 "+IPD"
   \              0x50 0x44    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_28:
   \   00000000   0x2B 0x49          DC8 "+IPCLOSE:"
   \              0x50 0x43    
   \              0x4C 0x4F    
   \              0x53 0x45    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_29:
   \   00000000   0x2B 0x43          DC8 "+CLIENT:"
   \              0x4C 0x49    
   \              0x45 0x4E    
   \              0x54 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_30:
   \   00000000   0x2B 0x43          DC8 "+CIPCLOSE"
   \              0x49 0x50    
   \              0x43 0x4C    
   \              0x4F 0x53    
   \              0x45 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_31:
   \   00000000   0x2B 0x43          DC8 "+CIPOPEN:"
   \              0x49 0x50    
   \              0x4F 0x50    
   \              0x45 0x4E    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_32:
   \   00000000   0x50 0x42          DC8 "PB DONE"
   \              0x20 0x44    
   \              0x4F 0x4E    
   \              0x45 0x00    

   \                                 In section .rodata, align 4
   \                     ?_33:
   \   00000000   0x2B 0x4E          DC8 "+NETCLOSE:"
   \              0x45 0x54    
   \              0x43 0x4C    
   \              0x4F 0x53    
   \              0x45 0x3A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_34:
   \   00000000   0x2B 0x43          DC8 "+CFTRANTX: DATA,"
   \              0x46 0x54    
   \              0x52 0x41    
   \              0x4E 0x54    
   \              0x58 0x3A    
   \              0x20 0x44    
   \              0x41 0x54    
   \              0x41 0x2C    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_35:
   \   00000000   0x2B 0x43          DC8 "+CFTRANTX: 0"
   \              0x46 0x54    
   \              0x52 0x41    
   \              0x4E 0x54    
   \              0x58 0x3A    
   \              0x20 0x30    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_36:
   \   00000000   0x2B 0x43          DC8 "+CFTPGETFILE: "
   \              0x46 0x54    
   \              0x50 0x47    
   \              0x45 0x54    
   \              0x46 0x49    
   \              0x4C 0x45    
   \              0x3A 0x20    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_37:
   \   00000000   0x2B 0x43          DC8 "+CIPERROR: "
   \              0x49 0x50    
   \              0x45 0x52    
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4C 0x54          DC8 "LTE"
   \              0x45 0x00    

   \                                 In section .rodata, align 4
   \                     ?_39:
   \   00000000   0x4E 0x4F          DC8 "NO SERVICE"
   \              0x20 0x53    
   \              0x45 0x52    
   \              0x56 0x49    
   \              0x43 0x45    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_40:
   \   00000000   0x41 0x54          DC8 "AT+CMEE=1\015"
   \              0x2B 0x43    
   \              0x4D 0x45    
   \              0x45 0x3D    
   \              0x31 0x0D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_41:
   \   00000000   0x41 0x54          DC8 "AT+CTZU?\015"
   \              0x2B 0x43    
   \              0x54 0x5A    
   \              0x55 0x3F    
   \              0x0D 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_42:
   \   00000000   0x41 0x54          DC8 "AT+CTZU=1\015"
   \              0x2B 0x43    
   \              0x54 0x5A    
   \              0x55 0x3D    
   \              0x31 0x0D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_43:
   \   00000000   0x41 0x54          DC8 "AT+CCLK?\015"
   \              0x2B 0x43    
   \              0x43 0x4C    
   \              0x4B 0x3F    
   \              0x0D 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_44:
   \   00000000   0x41 0x54          DC8 "AT+CPIN?\015"
   \              0x2B 0x43    
   \              0x50 0x49    
   \              0x4E 0x3F    
   \              0x0D 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_45:
   \   00000000   0x41 0x54          DC8 "AT+CSQ\015"
   \              0x2B 0x43    
   \              0x53 0x51    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_46:
   \   00000000   0x41 0x54          DC8 "AT+CPIN=9999\015"
   \              0x2B 0x43    
   \              0x50 0x49    
   \              0x4E 0x3D    
   \              0x39 0x39    
   \              0x39 0x39    
   \              0x0D 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_47:
   \   00000000   0x41 0x54          DC8 "AT+SIMEI?\015"
   \              0x2B 0x53    
   \              0x49 0x4D    
   \              0x45 0x49    
   \              0x3F 0x0D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_48:
   \   00000000   0x41 0x54          DC8 "AT+CSCLK=1\015"
   \              0x2B 0x43    
   \              0x53 0x43    
   \              0x4C 0x4B    
   \              0x3D 0x31    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_49:
   \   00000000   0x41 0x54          DC8 "AT+AUTOCSQ=1,1\015"
   \              0x2B 0x41    
   \              0x55 0x54    
   \              0x4F 0x43    
   \              0x53 0x51    
   \              0x3D 0x31    
   \              0x2C 0x31    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_50:
   \   00000000   0x41 0x54          DC8 "AT+CGMR\015"
   \              0x2B 0x43    
   \              0x47 0x4D    
   \              0x52 0x0D    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_51:
   \   00000000   0x41 0x54          DC8 "AT+IPADDR\015"
   \              0x2B 0x49    
   \              0x50 0x41    
   \              0x44 0x44    
   \              0x52 0x0D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_52:
   \   00000000   0x41 0x54          DC8 "AT+CGDCONT=1,\"ip\",\"%s\"\015"
   \              0x2B 0x43    
   \              0x47 0x44    
   \              0x43 0x4F    
   \              0x4E 0x54    
   \              0x3D 0x31    
   \              0x2C 0x22    
   \              0x69 0x70    
   \              0x22 0x2C    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_53:
   \   00000000   0x41 0x54          DC8 "AT+CGAUTH=1,1,\"%s\",\"%s\"\015"
   \              0x2B 0x43    
   \              0x47 0x41    
   \              0x55 0x54    
   \              0x48 0x3D    
   \              0x31 0x2C    
   \              0x31 0x2C    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x2C 0x22    
   \              0x25 0x73    
   \              0x22 0x0D    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_54:
   \   00000000   0x41 0x54          DC8 "AT+CSOCKSETPN=1\015"
   \              0x2B 0x43    
   \              0x53 0x4F    
   \              0x43 0x4B    
   \              0x53 0x45    
   \              0x54 0x50    
   \              0x4E 0x3D    
   \              0x31 0x0D    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_55:
   \   00000000   0x41 0x54          DC8 "AT+NETOPEN\015"
   \              0x2B 0x4E    
   \              0x45 0x54    
   \              0x4F 0x50    
   \              0x45 0x4E    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_56:
   \   00000000   0x41 0x54          DC8 "AT+NETCLOSE\015"
   \              0x2B 0x4E    
   \              0x45 0x54    
   \              0x43 0x4C    
   \              0x4F 0x53    
   \              0x45 0x0D    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_57:
   \   00000000   0x41 0x54          DC8 "AT+CFUN=0\015"
   \              0x2B 0x43    
   \              0x46 0x55    
   \              0x4E 0x3D    
   \              0x30 0x0D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_58:
   \   00000000   0x41 0x54          DC8 "AT+CFUN=1\015"
   \              0x2B 0x43    
   \              0x46 0x55    
   \              0x4E 0x3D    
   \              0x31 0x0D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_59:
   \   00000000   0x41 0x54          DC8 "AT+CRESET\015"
   \              0x2B 0x43    
   \              0x52 0x45    
   \              0x53 0x45    
   \              0x54 0x0D    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_60:
   \   00000000   0x41 0x54          DC8 "AT+CIPOPEN=1,\"UDP\",,,%s\015"
   \              0x2B 0x43    
   \              0x49 0x50    
   \              0x4F 0x50    
   \              0x45 0x4E    
   \              0x3D 0x31    
   \              0x2C 0x22    
   \              0x55 0x44    
   \              0x50 0x22    
   \              0x2C 0x2C    
   \              0x2C 0x25    
   \              0x73 0x0D    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_61:
   \   00000000   0x41 0x54          DC8 "AT+CIPSEND=1,,\"%s\",%s\015"
   \              0x2B 0x43    
   \              0x49 0x50    
   \              0x53 0x45    
   \              0x4E 0x44    
   \              0x3D 0x31    
   \              0x2C 0x2C    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x2C 0x25    
   \              0x73 0x0D    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_62:
   \   00000000   0x25 0x73          DC8 "%s\032\015"
   \              0x1A 0x0D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_63:
   \   00000000   0x41 0x54          DC8 "AT+CIPCLOSE=1\015"
   \              0x2B 0x43    
   \              0x49 0x50    
   \              0x43 0x4C    
   \              0x4F 0x53    
   \              0x45 0x3D    
   \              0x31 0x0D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_64:
   \   00000000   0x41 0x54          DC8 "AT+CIPOPEN=2,\"TCP\",\"%s\",%s\015"
   \              0x2B 0x43    
   \              0x49 0x50    
   \              0x4F 0x50    
   \              0x45 0x4E    
   \              0x3D 0x32    
   \              0x2C 0x22    
   \              0x54 0x43    
   \              0x50 0x22    
   \              0x2C 0x22    
   \              0x25 0x73    
   \              0x22 0x2C    
   \              0x25 0x73    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_65:
   \   00000000   0x41 0x54          DC8 "AT+CIPSEND=2,\015"
   \              0x2B 0x43    
   \              0x49 0x50    
   \              0x53 0x45    
   \              0x4E 0x44    
   \              0x3D 0x32    
   \              0x2C 0x0D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_66:
   \   00000000   0x41 0x54          DC8 "AT+CIPCLOSE=2\015"
   \              0x2B 0x43    
   \              0x49 0x50    
   \              0x43 0x4C    
   \              0x4F 0x53    
   \              0x45 0x3D    
   \              0x32 0x0D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_67:
   \   00000000   0x41 0x54          DC8 "AT+SERVERSTART=80,0\015"
   \              0x2B 0x53    
   \              0x45 0x52    
   \              0x56 0x45    
   \              0x52 0x53    
   \              0x54 0x41    
   \              0x52 0x54    
   \              0x3D 0x38    
   \              0x30 0x2C    
   \              0x30 0x0D    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_68:
   \   00000000   0x41 0x54          DC8 "AT+CIPSEND=%d,%d\015"
   \              0x2B 0x43    
   \              0x49 0x50    
   \              0x53 0x45    
   \              0x4E 0x44    
   \              0x3D 0x25    
   \              0x64 0x2C    
   \              0x25 0x64    
   \              0x0D 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_69:
   \   00000000   0x41 0x54          DC8 "AT+SERVERSTOP=0\015"
   \              0x2B 0x53    
   \              0x45 0x52    
   \              0x56 0x45    
   \              0x52 0x53    
   \              0x54 0x4F    
   \              0x50 0x3D    
   \              0x30 0x0D    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_70:
   \   00000000   0x41 0x54          DC8 "AT+FSCD=C:\015"
   \              0x2B 0x46    
   \              0x53 0x43    
   \              0x44 0x3D    
   \              0x43 0x3A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_71:
   \   00000000   0x41 0x54          DC8 "AT+FSDEL=*.*\015"
   \              0x2B 0x46    
   \              0x53 0x44    
   \              0x45 0x4C    
   \              0x3D 0x2A    
   \              0x2E 0x2A    
   \              0x0D 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_72:
   \   00000000   0x41 0x54          DC8 "AT+CGSOCKCONT=1,\"IP\",\"%s\"\015"
   \              0x2B 0x43    
   \              0x47 0x53    
   \              0x4F 0x43    
   \              0x4B 0x43    
   \              0x4F 0x4E    
   \              0x54 0x3D    
   \              0x31 0x2C    
   \              0x22 0x49    
   \              0x50 0x22    
   \              0x2C 0x22    
   \              0x25 0x73    
   \              0x22 0x0D    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_73:
   \   00000000   0x41 0x54          DC8 "AT+CSOCKAUTH=1,1,\"%s\",\"%s\"\015"
   \              0x2B 0x43    
   \              0x53 0x4F    
   \              0x43 0x4B    
   \              0x41 0x55    
   \              0x54 0x48    
   \              0x3D 0x31    
   \              0x2C 0x31    
   \              0x2C 0x22    
   \              0x25 0x73    
   \              0x22 0x2C    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_74:
   \   00000000   0x41 0x54          DC8 "AT+CFTPSERV=\"%s\"\015"
   \              0x2B 0x43    
   \              0x46 0x54    
   \              0x50 0x53    
   \              0x45 0x52    
   \              0x56 0x3D    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x0D 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_75:
   \   00000000   0x41 0x54          DC8 "AT+CFTPPORT=%s\015"
   \              0x2B 0x43    
   \              0x46 0x54    
   \              0x50 0x50    
   \              0x4F 0x52    
   \              0x54 0x3D    
   \              0x25 0x73    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_76:
   \   00000000   0x41 0x54          DC8 "AT+CFTPMODE=0\015"
   \              0x2B 0x43    
   \              0x46 0x54    
   \              0x50 0x4D    
   \              0x4F 0x44    
   \              0x45 0x3D    
   \              0x30 0x0D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_77:
   \   00000000   0x41 0x54          DC8 "AT+CFTPTYPE=I\015"
   \              0x2B 0x43    
   \              0x46 0x54    
   \              0x50 0x54    
   \              0x59 0x50    
   \              0x45 0x3D    
   \              0x49 0x0D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_78:
   \   00000000   0x41 0x54          DC8 "AT+CFTPUN=\"%s\"\015"
   \              0x2B 0x43    
   \              0x46 0x54    
   \              0x50 0x55    
   \              0x4E 0x3D    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_79:
   \   00000000   0x41 0x54          DC8 "AT+CFTPPW=\"%s\"\015"
   \              0x2B 0x43    
   \              0x46 0x54    
   \              0x50 0x50    
   \              0x57 0x3D    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_80:
   \   00000000   0x41 0x54          DC8 "AT+CFTPGETFILE=\"%s.%03d\",0\015"
   \              0x2B 0x43    
   \              0x46 0x54    
   \              0x50 0x47    
   \              0x45 0x54    
   \              0x46 0x49    
   \              0x4C 0x45    
   \              0x3D 0x22    
   \              0x25 0x73    
   \              0x2E 0x25    
   \              0x30 0x33    
   \              0x64 0x22    
   \              0x2C 0x30    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_81:
   \   00000000   0x41 0x54          DC8 "AT+CFTRANTX=\"C:/%s.%03d\"\015"
   \              0x2B 0x43    
   \              0x46 0x54    
   \              0x52 0x41    
   \              0x4E 0x54    
   \              0x58 0x3D    
   \              0x22 0x43    
   \              0x3A 0x2F    
   \              0x25 0x73    
   \              0x2E 0x25    
   \              0x30 0x33    
   \              0x64 0x22    
   \              0x0D 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_82:
   \   00000000   0x41 0x54          DC8 "AT+CPSI?\015"
   \              0x2B 0x43    
   \              0x50 0x53    
   \              0x49 0x3F    
   \              0x0D 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_83:
   \   00000000   0x41 0x54          DC8 "AT+CPOF\015"
   \              0x2B 0x43    
   \              0x50 0x4F    
   \              0x46 0x0D    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_84:
   \   00000000   0x41 0x54          DC8 "AT+CFOTASWITCH=0\015"
   \              0x2B 0x43    
   \              0x46 0x4F    
   \              0x54 0x41    
   \              0x53 0x57    
   \              0x49 0x54    
   \              0x43 0x48    
   \              0x3D 0x30    
   \              0x0D 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_85:
   \   00000000   0x41 0x54          DC8 "AT+CDNSGIP=\"%s\"\015"
   \              0x2B 0x43    
   \              0x44 0x4E    
   \              0x53 0x47    
   \              0x49 0x50    
   \              0x3D 0x22    
   \              0x25 0x73    
   \              0x22 0x0D    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_86:
   \   00000000   0x4D 0x49          DC8 "MID HTTP INFO :: last err=%s\012"
   \              0x44 0x20    
   \              0x48 0x54    
   \              0x54 0x50    
   \              0x20 0x49    
   \              0x4E 0x46    
   \              0x4F 0x20    
   \              0x3A 0x3A    
   \              0x20 0x6C    
   \              0x61 0x73    
   \              0x74 0x20    
   \              0x65 0x72    
   \              0x72 0x3D    
   \              0x25 0x73    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   man_http_check_FQDN
        24   -> strlen
      16   mid_HTTP_callback
        16   -> mid_HTTP_resp_check
      24   mid_HTTP_callback2
        24   -> mid_HTTP_resp_check2
      32   mid_HTTP_callback3
        32   -- Indirect call
        32   -> __aeabi_memcpy
        32   -> man_error_set
        32   -> memcmp
        32   -> strlen
       8   mid_HTTP_clear_RecvNoti
       8   mid_HTTP_disp_info
         8   -> man_data_get_other
         8   -> man_memory_alloc
         8   -> man_usb_data_send
         8   -> sprintf
         8   -> strlen
       0   mid_HTTP_get_data
      12   mid_HTTP_get_errcode
       0   mid_HTTP_get_info
       4   mid_HTTP_get_status
       8   mid_HTTP_init
         8   -> __aeabi_memset
         8   -> ctrl_SM7500JE_init
         8   -> ctrl_SM7500JE_set_noti
       8   mid_HTTP_main
         8   -> man_error_set
         8   -> mid_HTTP_res_callback
         8   -> mid_HTTP_response
         8   -> mid_HTTP_send_command
      16   mid_HTTP_req_ClientClose
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_ClientOpen
        16   -> man_data_get_setting_gprs
        16   -> mid_HTTP_send_command
      24   mid_HTTP_req_ClientSend
        24   -> __aeabi_memcpy
        24   -> mid_HTTP_send_command
      16   mid_HTTP_req_FileGet
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_FtpDel
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_FtpGet
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_FtpOpen
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_FtpRecovery
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_GetClk
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_GetIpAddress
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_InitCmd
        16   -> mid_HTTP_send_command
       8   mid_HTTP_req_LTE_PowerOFF
         8   -> mid_HTTP_send_command
      16   mid_HTTP_req_LteClose
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_LteCpsi
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_LteCsq
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_LteOpen
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_LteReady
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_LteReset
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_LteStbyIn
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_LteStbyOut
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_OtaOffCmd
        16   -> man_data_get_SIM7500_cfotaswitch
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_ServerClose
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_ServerOpen
        16   -> mid_HTTP_send_command
      24   mid_HTTP_req_ServerSend
        24   -> __aeabi_memcpy
        24   -> mid_HTTP_send_command
      16   mid_HTTP_req_UdpClose
        16   -> mid_HTTP_send_command
      16   mid_HTTP_req_UdpOpen
        16   -> mid_HTTP_send_command
      32   mid_HTTP_req_UdpSend
        32   -> __aeabi_memcpy
        32   -> man_data_get_setting_gprs
        32   -> man_error_set
        32   -> man_http_check_FQDN
        32   -> mid_HTTP_send_command
        32   -> strcpy
       8   mid_HTTP_res_callback
         8   -- Indirect call
      24   mid_HTTP_resp_check
        24   -> man_error_set
        24   -> memcmp
        24   -> mid_HTTP_get_errcode
        24   -> strlen
      40   mid_HTTP_resp_check2
        40   -> __aeabi_memcpy
        40   -> __aeabi_memset
        40   -> bcd_to_num
        40   -> local_atoi
        40   -> man_data_set_imei
        40   -> man_error_set
        40   -> memcmp
        40   -> strlen
        40 __aeabi_idiv
      16   mid_HTTP_response
        16   -> man_error_set
        16   -> mid_HTTP_req_UdpSend
        16   -> mid_HTTP_res_callback
        16   -> mid_HTTP_send_command
        16   -> seSysSleepMS
      32   mid_HTTP_send_command
        32   -> __aeabi_memset
        32   -> ctrl_SM7500JE_cmd
        32   -> ctrl_SM7500JE_cmd0
        32   -> ctrl_SM7500JE_cmd2
        32   -> ctrl_SM7500JE_cmda
        32   -> man_data_get_ftp_info
        32   -> man_data_get_setting_gprs
        32   -> man_error_set
        32   -> sprintf
        32   -> strlen
       4   mid_HTTP_set_RecvNoti


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable10
       4  ??DataTable12
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_2
       4  ??DataTable13_3
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable16_2
       4  ??DataTable16_3
       4  ??DataTable17
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable19
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable2
       4  ??DataTable23
       4  ??DataTable24
       4  ??DataTable24_1
       4  ??DataTable25
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable28
       4  ??DataTable28_1
       4  ??DataTable28_2
       4  ??DataTable28_3
       4  ??DataTable28_4
       4  ??DataTable28_5
       4  ??DataTable29
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable3
       4  ??DataTable30
       4  ??DataTable31
       4  ??DataTable32
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ??DataTable4
       4  ??DataTable40
       4  ??DataTable41
       4  ??DataTable41_1
       4  ??DataTable42
       4  ??DataTable42_1
       4  ??DataTable42_10
       4  ??DataTable42_2
       4  ??DataTable42_3
       4  ??DataTable42_4
       4  ??DataTable42_5
       4  ??DataTable42_6
       4  ??DataTable42_7
       4  ??DataTable42_8
       4  ??DataTable42_9
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_23
       4  ??DataTable6_24
       4  ??DataTable6_25
       4  ??DataTable6_26
       4  ??DataTable6_27
       4  ??DataTable6_28
       4  ??DataTable6_29
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       4  ??DataTable7
       4  ??DataTable9
       8  ?_0
       4  ?_1
      12  ?_10
      16  ?_11
      24  ?_12
      16  ?_13
       2  ?_14
      12  ?_15
      12  ?_16
      16  ?_17
      20  ?_18
      12  ?_19
       8  ?_2
      16  ?_20
       8  ?_21
      20  ?_22
      12  ?_23
      12  ?_24
       4  ?_25
      12  ?_26
       8  ?_27
      12  ?_28
      12  ?_29
       8  ?_3
      12  ?_30
      12  ?_31
       8  ?_32
      12  ?_33
      20  ?_34
      16  ?_35
      16  ?_36
      12  ?_37
       4  ?_38
      12  ?_39
       8  ?_4
      12  ?_40
      12  ?_41
      12  ?_42
      12  ?_43
      12  ?_44
       8  ?_45
      16  ?_46
      12  ?_47
      12  ?_48
      16  ?_49
      16  ?_5
      12  ?_50
      12  ?_51
      24  ?_52
      28  ?_53
      20  ?_54
      12  ?_55
      16  ?_56
      12  ?_57
      12  ?_58
      12  ?_59
       8  ?_6
      28  ?_60
      24  ?_61
       8  ?_62
      16  ?_63
      28  ?_64
      16  ?_65
      16  ?_66
      24  ?_67
      20  ?_68
      20  ?_69
      12  ?_7
      12  ?_70
      16  ?_71
      28  ?_72
      28  ?_73
      20  ?_74
      16  ?_75
      16  ?_76
      16  ?_77
      16  ?_78
      16  ?_79
       8  ?_8
      28  ?_80
      28  ?_81
      12  ?_82
      12  ?_83
      20  ?_84
      20  ?_85
      32  ?_86
      12  ?_9
    1792  cmd_tbl
     140  man_http_check_FQDN
      58  mid_HTTP_callback
      50  mid_HTTP_callback2
    1326  mid_HTTP_callback3
      38  mid_HTTP_clear_RecvNoti
      38  mid_HTTP_disp_info
       4  mid_HTTP_get_data
      40  mid_HTTP_get_errcode
       4  mid_HTTP_get_info
      16  mid_HTTP_get_status
      40  mid_HTTP_init
     272  mid_HTTP_main
      68  mid_HTTP_req_ClientClose
      90  mid_HTTP_req_ClientOpen
      92  mid_HTTP_req_ClientSend
      62  mid_HTTP_req_FileGet
      56  mid_HTTP_req_FtpDel
      62  mid_HTTP_req_FtpGet
      56  mid_HTTP_req_FtpOpen
      56  mid_HTTP_req_FtpRecovery
      56  mid_HTTP_req_GetClk
      56  mid_HTTP_req_GetIpAddress
      56  mid_HTTP_req_InitCmd
      50  mid_HTTP_req_LTE_PowerOFF
      56  mid_HTTP_req_LteClose
      56  mid_HTTP_req_LteCpsi
      56  mid_HTTP_req_LteCsq
      56  mid_HTTP_req_LteOpen
      56  mid_HTTP_req_LteReady
      56  mid_HTTP_req_LteReset
      56  mid_HTTP_req_LteStbyIn
      56  mid_HTTP_req_LteStbyOut
     102  mid_HTTP_req_OtaOffCmd
      56  mid_HTTP_req_ServerClose
      56  mid_HTTP_req_ServerOpen
      92  mid_HTTP_req_ServerSend
      68  mid_HTTP_req_UdpClose
      68  mid_HTTP_req_UdpOpen
     268  mid_HTTP_req_UdpSend
      36  mid_HTTP_res_callback
     376  mid_HTTP_resp_check
    3556  mid_HTTP_resp_check2
    1618  mid_HTTP_response
    1256  mid_HTTP_send_command
      26  mid_HTTP_set_RecvNoti
      32  mid_http_udpsend_work
    7688  mid_http_work
     104  recv_cmd_tbl
     108  sim_cpin_tbl

 
  7 720 bytes in section .bss
  3 298 bytes in section .rodata
 11 344 bytes in section .text
 
 11 344 bytes of CODE  memory
  3 298 bytes of CONST memory
  7 720 bytes of DATA  memory

Errors: none
Warnings: 4
