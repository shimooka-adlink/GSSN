###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       17/May/2019  13:32:10
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\apl\man_ota.c
#    Command line =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\apl\man_ota.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_B -lCN
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        -lA
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List\man_ota.lst
#    Object file  =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj\man_ota.o
#
###############################################################################

C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\apl\man_ota.c
      1          
      2          /**
      3            ******************************************************************************
      4            * @file    man_ota.c
      5            * @author  コア
      6            * @version V1.0
      7            * @date    2017.10.2
      8            * @brief   ファームウェア更新を管理する
      9            ******************************************************************************
     10            $Id: man_ota.c 257 2018-08-02 06:07:11Z shitaoka $
     11            * @attention
     12            *
     13            *****************************************************************************
     14          */
     15          
     16          #include <string.h>
     17          #include <stdio.h>
     18          #include <stdlib.h>
     19          
     20          #include "board.h"
     21          #include "system_manager.h"
     22          #include "gnss_gw_common.h"
     23          #include "man_http.h"
     24          #include "man_timer.h"
     25          #include "man_data.h"
     26          #include "man_msg.h"
     27          #include "man_http.h"
     28          #include "man_ope.h"
     29          #include "man_gps.h"
     30          #include "man_timer.h"
     31          #include "man_error.h"
     32          #include "man_ota.h"
     33          #include "man_usb.h"
     34          #include "man_battery.h"
     35          #include "man_charge.h"
     36          #include "man_flash.h"
     37          
     38          #pragma section = "APL_PRG_BLOCK"
     39          
     40          /************************************************************************/
     41          /* declaration of structure                                             */
     42          /************************************************************************/
     43          
     44          
     45          #define	MAN_OTA_RETRY_MAX			2				// HTTPコマンドのリトライ回数
     46          #define	MAN_OTA_GPS_RETRY_MAX		4				// OTA復帰のリトライ回数
     47          #define	MAN_OTA_GPS_FORCED_RETRY_MAX	10			// OTA強制復帰のリトライ回数
     48          
     49          #define	MAN_OTA_FIRM_PACKET_FILE_NUM	9			// 9File/1Packet
     50          
     51          
     52          #define	MAN_OTA_START_WAIT_TIME		2000	// 2秒
     53          #define	MAN_OTA_FTP_GET_WAIT_TIME	65000	// 65秒
     54          //#define	MAN_OTA_FTP_GET_WAIT_TIME	10000	// 10秒
     55          #define	MAN_OTA_FTP_GET_NG_WAIT		360000	// 360秒
     56          #define	MAN_OTA_FTP_RECO_WAIT_TIME	2000	// 2秒
     57          #define	MAN_OTA_GPS_RECO_WAIT_TIME	30000	// 30秒
     58          
     59          #define	MAN_OTA_RCV_DATA_BUFF_MAX	5000
     60          //#define	MAN_OTA_RCV_DATA_BUFF_MAX	100
     61          #define	MAN_OTA_RCV_DATA_MAX		4096	// １回の受信で取得できる最大値
     62          //#define	MAN_OTA_RCV_DATA_MAX		100	// １回の受信で取得できる最大値
     63          #define	MAN_OTA_DATA_BUFF_MAX		5000
     64          
     65          
     66          //#define	MAN_OTA_FLASH_WRITE_SIZE	MAN_DATA_FLASH_SIZE
     67          #define	MAN_OTA_FLASH_WRITE_SIZE	128
     68          
     69          
     70          #define	MAN_OTA_USB_DATA_SIZE		512		// USB OTAのデータサイズ(変更する場合はUSBのバッファを確認すること)
     71          
     72          // 要求
     73          #define	MAN_OTA_REQ_NON				0		// 要求待ち
     74          #define	MAN_OTA_REQ_TERM_START		1		// 端末OTA開始
     75          #define	MAN_OTA_REQ_GPS_START		2		// GPS OTA開始
     76          #define	MAN_OTA_REQ_USB_TERM_START	3		// USB経由での端末OTA開始
     77          #define	MAN_OTA_REQ_USB_GPS_START	4		// USB経由でのGPS OTA開始
     78          #define	MAN_OTA_REQ_GPS_RETRY		5		// GPS OTA復帰
     79          
     80          
     81          #define	MAN_OTA_EXEC_TERM			0x08
     82          #define	MAN_OTA_EXEC_GPS_FIRMWARE	0x01
     83          #define	MAN_OTA_EXEC_GPS_CONFIG		0x02
     84          #define	MAN_OTA_EXEC_GPS_UPDATER	0x04
     85          
     86          
     87          // ファームウェア更新管理シーケンス
     88          typedef enum {
     89          	MAN_OTA_SEQ_READY,						//  00 : 要求待ち
     90          
     91          	MAN_OTA_SEQ_OTA_WAIT_REQ,				//  01 : コマンド応答待ち
     92          	MAN_OTA_SEQ_OTA_WAIT,					//  02 : コマンド応答待ち中
     93          	MAN_OTA_SEQ_OTA_WAIT_OK,				//  03 : コマンド応答待ち完了
     94          	MAN_OTA_SEQ_OTA_WAIT_NG,				//  04 : コマンド応答待ち異常
     95          
     96          	MAN_OTA_SEQ_OTA_REQ,					//  05 : OTA開始 要求
     97          	MAN_OTA_SEQ_OTA_START,					//  06 : OTA開始
     98          	MAN_OTA_SEQ_OTA_START_OK,				//  07 : OTA開始完了(正常)
     99          	MAN_OTA_SEQ_OTA_START_NG,				//  08 : OTA開始完了(異常)
    100          
    101          	MAN_OTA_SEQ_OTA_FLASH_ERASE_REQ,		//  09 : FLASH ERASE開始
    102          	MAN_OTA_SEQ_OTA_FLASH_ERASE,			//  10 : FLASH ERASE中
    103          	MAN_OTA_SEQ_OTA_FLASH_ERASE_OK,			//  11 : FLASH ERASE完了
    104          	MAN_OTA_SEQ_OTA_FLASH_ERASE_NG,			//  12 : FLASH ERASE失敗
    105          
    106          	MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ,		//  13 : 端末用 OTA  FTPリカバリ要求
    107          	MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT,		//  14 : 端末用 OTA  FTPリカバリ安定待ち
    108          	MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT_OK,	//  15 : 端末用 OTA  FTPリカバリ安定待ち完了
    109          	MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT_NG,	//  16 : 端末用 OTA  FTPリカバリ安定待ち異常
    110          	MAN_OTA_SEQ_TERM_OTA_FTP_RECO,			//  17 : 端末用 OTA  FTPリカバリ
    111          	MAN_OTA_SEQ_TERM_OTA_FTP_RECO_OK,		//  18 : 端末用 OTA  FTPリカバリ(正常)
    112          	MAN_OTA_SEQ_TERM_OTA_FTP_RECO_NG,		//  19 : 端末用 OTA  FTPリカバリ(異常)
    113          
    114          	MAN_OTA_SEQ_OTA_FTP_INIT_REQ,			//  20 : OTA  FTP初期化要求
    115          	MAN_OTA_SEQ_OTA_FTP_INIT,				//  21 : OTA  FTP初期化
    116          	MAN_OTA_SEQ_OTA_FTP_INIT_OK,			//  22 : OTA  FTP初期化(正常)
    117          	MAN_OTA_SEQ_OTA_FTP_INIT_NG,			//  23 : OTA  FTP初期化(異常)
    118          
    119          	MAN_OTA_SEQ_OTA_FTP_OPEN,				//  24 : OTA  FTP OPEN
    120          	MAN_OTA_SEQ_OTA_FTP_OPEN_OK,			//  25 : OTA  FTP OPEN(正常)
    121          	MAN_OTA_SEQ_OTA_FTP_OPEN_NG,			//  26 : OTA  FTP OPEN(異常)
    122          
    123          	MAN_OTA_SEQ_OTA_FTP_GET_REQ,			//  27 : OTA  FTP GET 要求
    124          	MAN_OTA_SEQ_OTA_FTP_GET,				//  28 : OTA  FTP GET
    125          	MAN_OTA_SEQ_OTA_FTP_GET_OK,				//  29 : OTA  FTP GET(正常)
    126          	MAN_OTA_SEQ_OTA_FTP_GET_NG,				//  30 : OTA  FTP GET(異常)
    127          	MAN_OTA_SEQ_OTA_FTP_GET_NG_W,			//  31 : OTA  FTP GET(異常)300秒待ち
    128          	MAN_OTA_SEQ_OTA_FTP_GET_NG_W_OK,		//  32 : OTA  FTP GET(異常)300秒待ち正常
    129          	MAN_OTA_SEQ_OTA_FTP_GET_NG_W_NG,		//  33 : OTA  FTP GET(異常)300秒待ち異常
    130          	MAN_OTA_SEQ_OTA_FTP_GET_NG_A,			//  34 : OTA  FTP GET(異常) 中止
    131          	MAN_OTA_SEQ_OTA_FTP_GET_END,			//  35 : OTA  FTP GET完了
    132          
    133          	MAN_OTA_SEQ_OTA_FTP_DELAY,				//  36 : OTA  FTP DELAY(65秒待ち)
    134          	MAN_OTA_SEQ_OTA_FTP_DELAY_OK,			//  37 : OTA  FTP DELAY(65秒待ち)(正常)
    135          	MAN_OTA_SEQ_OTA_FTP_DELAY_NG,			//  38 : OTA  FTP DELAY(65秒待ち)(異常)
    136          
    137          	MAN_OTA_SEQ_TERM_OTA_FILE_GET_REQ,		//  39 : 端末用 OTA  FILE GET 要求
    138          	MAN_OTA_SEQ_TERM_OTA_FILE_GET,			//  40 : 端末用 OTA  FILE GET
    139          	MAN_OTA_SEQ_TERM_OTA_FILE_GET_OK,		//  41 : 端末用 OTA  FILE GET(正常)
    140          	MAN_OTA_SEQ_TERM_OTA_FILE_GET_NG,		//  42 : 端末用 OTA  FILE GET(異常)
    141          	
    142          	MAN_OTA_SEQ_TERM_OTA_ERASE_REQ,			//  43 : 端末用 OTA 内臓FLASH消去要求
    143          	MAN_OTA_SEQ_TERM_OTA_ERASE,				//  44 : 端末用 OTA 内臓FLASH消去中
    144          	MAN_OTA_SEQ_TERM_OTA_ERASE_OK,			//  45 : 端末用 OTA 内臓FLASH消去完了(正常)
    145          	MAN_OTA_SEQ_TERM_OTA_ERASE_NG,			//  46 : 端末用 OTA 内臓FLASH消去完了(異常)
    146          	
    147          	MAN_OTA_SEQ_TERM_OTA_FILE_SET_REQ,		//  47 : 端末用 OTA  FILE SET 要求
    148          	MAN_OTA_SEQ_TERM_OTA_FILE_SET,			//  48 : 端末用 OTA  FILE SET
    149          	MAN_OTA_SEQ_TERM_OTA_FILE_SET_OK,		//  49 : 端末用 OTA  FILE SET(正常)
    150          	MAN_OTA_SEQ_TERM_OTA_FILE_SET_WAIT,		//  50 : 端末用 OTA  FILE SET(delay)
    151          
    152          	MAN_OTA_SEQ_GPS_OTA_START_REQ,			//  51 : GPS用 OTA 開始要求
    153          	MAN_OTA_SEQ_GPS_OTA_START,				//  52 : GPS用 OTA 開始
    154          	MAN_OTA_SEQ_GPS_OTA_START_OK,			//  53 : GPS用 OTA 開始(正常)
    155          	MAN_OTA_SEQ_GPS_OTA_START_NG,			//  54 : GPS用 OTA 開始(異常)
    156          	
    157          	MAN_OTA_SEQ_UPDATER_FILE_GET_REQ,		//  55 : GPS UPDATER FILE GET 要求
    158          	MAN_OTA_SEQ_UPDATER_FILE_GET,			//  56 : GPS UPDATER FILE GET
    159          	MAN_OTA_SEQ_UPDATER_FILE_GET_OK,		//  57 : GPS UPDATER FILE GET(正常)
    160          	MAN_OTA_SEQ_UPDATER_FILE_GET_NG,		//  58 : GPS UPDATER FILE GET(異常)
    161          
    162          	
    163          	MAN_OTA_SEQ_CONFIG_FILE_GET_REQ,		//  59 : GPS CONFIG FILE GET 要求
    164          	MAN_OTA_SEQ_CONFIG_FILE_GET,			//  60 : GPS CONFIG FILE GET
    165          	MAN_OTA_SEQ_CONFIG_FILE_GET_OK,			//  61 : GPS CONFIG FILE GET(正常)
    166          	MAN_OTA_SEQ_CONFIG_FILE_GET_NG,			//  62 : GPS CONFIG FILE GET(異常)
    167          	
    168          	
    169          	MAN_OTA_SEQ_FIRMWARE_FILE_GET_REQ,		//  63 : GPS FIRMWARE FILE GET 要求
    170          	MAN_OTA_SEQ_FIRMWARE_FILE_GET,			//  64 : GPS FIRMWARE FILE GET
    171          	MAN_OTA_SEQ_FIRMWARE_FILE_GET_OK,		//  65 : GPS FIRMWARE FILE GET(正常)
    172          	MAN_OTA_SEQ_FIRMWARE_FILE_GET_NG,		//  66 : GPS FIRMWARE FILE GET(異常)
    173          
    174          
    175          	MAN_OTA_SEQ_GPS_OTA_SET_REQ,			//  67 : GPS用 FILE SET 開始要求
    176          	MAN_OTA_SEQ_GPS_OTA_SET,				//  68 : GPS用 FILE SET 開始
    177          	MAN_OTA_SEQ_GPS_OTA_SET_OK,				//  69 : GPS用 FILE SET 開始(正常)
    178          	MAN_OTA_SEQ_GPS_OTA_SET_NG,				//  70 : GPS用 FILE SET 開始(異常)
    179          
    180          	MAN_OTA_SEQ_GPS_RETRY_REQ,				//  71 : GPS RESET開始要求
    181          	MAN_OTA_SEQ_GPS_RETRY,					//  72 : GPS RESET中
    182          	MAN_OTA_SEQ_GPS_RETRY_OK,				//  73 : GPS RESET終了
    183          	MAN_OTA_SEQ_GPS_RETRY_NG,				//  74 : GPS RESET終了
    184          
    185          	
    186          	MAN_OTA_SEQ_UDL_SET_REQ,				//  75 : GPS UDLコマンド送信 要求
    187          	MAN_OTA_SEQ_UDL_SET,					//  76 : GPS UDLコマンド送信中
    188          	MAN_OTA_SEQ_UDL_SET_OK,					//  77 : GPS UDLコマンド送信完了(成功)
    189          	MAN_OTA_SEQ_UDL_SET_NG,					//  78 : GPS UDLコマンド送信完了(失敗)
    190          
    191          	MAN_OTA_SEQ_UDLPKT_SET,					//  79 : updater PACKETデータ取得
    192          	MAN_OTA_SEQ_UDLPKT_NEXT_REQ,			//  80 : GPS updater PACKET(応答なし)データ送信 要求
    193          	MAN_OTA_SEQ_UDLPKT_NEXT,				//  81 : GPS updater PACKET(応答なし)データ送信中
    194          	MAN_OTA_SEQ_UDLPKT_NEXT_OK,				//  82 : GPS updater PACKET(応答なし)データ送信完了(成功)
    195          	MAN_OTA_SEQ_UDLPKT_NEXT_NG,				//  83 : GPS updater PACKET(応答なし)データ送信完了(失敗)
    196          
    197          	MAN_OTA_SEQ_UDLPKT_END_REQ,				//  84 : GPS updater PACKET(応答あり)データ送信 要求
    198          	MAN_OTA_SEQ_UDLPKT_END,					//  85 : GPS updater PACKET(応答あり)データ送信中
    199          	MAN_OTA_SEQ_UDLPKT_END_OK,				//  86 : GPS updater PACKET(応答あり)データ送信完了(成功)
    200          	MAN_OTA_SEQ_UDLPKT_END_NG,				//  87 : GPS updater PACKET(応答あり)データ送信完了(失敗)
    201          
    202          	MAN_OTA_SEQ_UDLPKT_DONE,				//  88 : GPS UDL DONE待ち
    203          	MAN_OTA_SEQ_UDLPKT_DONE_OK,				//  89 : GPS UDL DONE受信
    204          
    205          	MAN_OTA_SEQ_UDLPKT_DONE_WAIT,			//  90 : GPS UDL DONE安定100ms待ち
    206          	MAN_OTA_SEQ_UDLPKT_DONE_WAIT_OK,		//  91 : GPS UDL DONE安定100ms待ち完了
    207          	MAN_OTA_SEQ_UDLPKT_DONE_WAIT_NG,		//  92 : GPS UDL DONE安定100ms待ち完了
    208          
    209          
    210          	MAN_OTA_SEQ_FDL_SET_REQ,				//  93 : GPS FDLコマンド送信 要求
    211          	MAN_OTA_SEQ_FDL_SET,					//  94 : GPS FDLコマンド送信中
    212          	MAN_OTA_SEQ_FDL_SET_OK,					//  95 : GPS FDLコマンド送信完了(成功)
    213          	MAN_OTA_SEQ_FDL_SET_NG,					//  96 : GPS FDLコマンド送信完了(失敗)
    214          
    215          	MAN_OTA_SEQ_CFGPKT_SET,					//  97 : config PACKETデータ取得
    216          	MAN_OTA_SEQ_CFGPKT_NEXT_REQ,			//  98 : GPS config PACKET(応答なし)データ送信 要求
    217          	MAN_OTA_SEQ_CFGPKT_NEXT,				//  99 : GPS config PACKET(応答なし)データ送信中
    218          	MAN_OTA_SEQ_CFGPKT_NEXT_OK,				// 100 : GPS config PACKET(応答なし)データ送信完了(成功)
    219          	MAN_OTA_SEQ_CFGPKT_NEXT_NG,				// 101 : GPS config PACKET(応答なし)データ送信完了(失敗)
    220          
    221          	MAN_OTA_SEQ_CFGPKT_END_REQ,				// 102 : GPS config PACKET(応答あり)データ送信 要求
    222          	MAN_OTA_SEQ_CFGPKT_END,					// 103 : GPS config PACKET(応答あり)データ送信中
    223          	MAN_OTA_SEQ_CFGPKT_END_OK,				// 104 : GPS config PACKET(応答あり)データ送信完了(成功)
    224          	MAN_OTA_SEQ_CFGPKT_END_NG,				// 105 : GPS config PACKET(応答あり)データ送信完了(失敗)
    225          
    226          	MAN_OTA_SEQ_FRMPKT_SET,					// 106 : GPS firmware PACKETデータ取得
    227          	MAN_OTA_SEQ_FRMPKT_NEXT_REQ,			// 107 : GPS firmware PACKET(応答なし)データ送信 要求
    228          	MAN_OTA_SEQ_FRMPKT_NEXT,				// 108 : GPS firmware PACKET(応答なし)データ送信中
    229          	MAN_OTA_SEQ_FRMPKT_NEXT_OK,				// 109 : GPS firmware PACKET(応答なし)データ送信完了(成功)
    230          	MAN_OTA_SEQ_FRMPKT_NEXT_NG,				// 110 : GPS firmware PACKET(応答なし)データ送信完了(失敗)
    231          
    232          	MAN_OTA_SEQ_FRMPKT_END_REQ,				// 111 : GPS firmware PACKET(応答あり)データ送信 要求
    233          	MAN_OTA_SEQ_FRMPKT_END,					// 112 : GPS firmware PACKET(応答あり)データ送信中
    234          	MAN_OTA_SEQ_FRMPKT_END_OK,				// 113 : GPS firmware PACKET(応答あり)データ送信完了(成功)
    235          	MAN_OTA_SEQ_FRMPKT_END_NG,				// 114 : GPS firmware PACKET(応答あり)データ送信完了(失敗)
    236          	MAN_OTA_SEQ_FRMPKT_END_RETRY,			// 115 : GPS firmware PACKET(応答あり)データ送信完了(リトライ)
    237          
    238          	MAN_OTA_SEQ_FDLPKT_DONE,				// 116 : GPS FDL DONE待ち
    239          	MAN_OTA_SEQ_FDLPKT_DONE_OK,				// 117 : GPS FDL DONE受信
    240          
    241          	MAN_OTA_SEQ_FIRMWARE_SET_END_OK,		// 118 : GPS FIRMWARE SET(終了)
    242          	MAN_OTA_SEQ_FIRMWARE_END_WAIT,			// 119 : GPS FIRMWARE SET(終了)1000ms待ち
    243          	MAN_OTA_SEQ_FIRMWARE_END_WAIT_OK,		// 120 : GPS FIRMWARE SET(終了)1000ms待ち終了
    244          	MAN_OTA_SEQ_FIRMWARE_END_WAIT_NG,		// 121 : GPS FIRMWARE SET(終了)1000ms待ち終了
    245          
    246          
    247          	MAN_OTA_SEQ_GPS_OTA_RETRY_REQ,			// 122 : GPS用 OTA リトライ準備開始要求
    248          	MAN_OTA_SEQ_GPS_OTA_RETRY,				// 123 : GPS用 OTA リトライ準備
    249          	MAN_OTA_SEQ_GPS_OTA_RETRY_OK,			// 124 : GPS用 OTA リトライ準備(正常)
    250          	MAN_OTA_SEQ_GPS_OTA_RETRY_NG,			// 125 : GPS用 OTA リトライ準備(異常)
    251          
    252          	MAN_OTA_SEQ_USB_TERM_FILE_SET_REQ,		// 126 : USB 端末用 OTA FILE SET開始
    253          	MAN_OTA_SEQ_USB_TERM_FILE_SET,			// 127 : USB 端末用 OTA FILE SET
    254          	MAN_OTA_SEQ_USB_TERM_FILE_SET_OK,		// 128 : USB 端末用 OTA FILE SET(正常)
    255          	MAN_OTA_SEQ_USB_TERM_FILE_SET_NG,		// 129 : USB 端末用 OTA FILE SET(異常)
    256          	MAN_OTA_SEQ_USB_TERM_DATA_GET_REQ,		// 130 : USB 端末用 OTA DATA GET開始
    257          	MAN_OTA_SEQ_USB_TERM_DATA_GET,			// 131 : USB 端末用 OTA DATA GET
    258          	MAN_OTA_SEQ_USB_TERM_DATA_GET_OK,		// 132 : USB 端末用 OTA DATA GET(正常)
    259          	MAN_OTA_SEQ_USB_TERM_DATA_GET_NG,		// 133 : USB 端末用 OTA DATA GET(異常)
    260          
    261          	MAN_OTA_SEQ_USB_CONFIG_FILE_SET_REQ,	// 134 : USB GPS CONFIG FILE SET開始
    262          	MAN_OTA_SEQ_USB_CONFIG_FILE_SET,		// 135 : USB GPS CONFIG FILE SET
    263          	MAN_OTA_SEQ_USB_CONFIG_FILE_SET_OK,		// 136 : USB GPS CONFIG FILE SET(正常)
    264          	MAN_OTA_SEQ_USB_CONFIG_FILE_SET_NG,		// 137 : USB GPS CONFIG FILE SET(異常)
    265          	MAN_OTA_SEQ_USB_CONFIG_DATA_GET_REQ,	// 138 : USB GPS CONFIG DATA GET開始
    266          	MAN_OTA_SEQ_USB_CONFIG_DATA_GET,		// 139 : USB GPS CONFIG DATA GET
    267          	MAN_OTA_SEQ_USB_CONFIG_DATA_GET_OK,		// 140 : USB GPS CONFIG DATA GET(正常)
    268          	MAN_OTA_SEQ_USB_CONFIG_DATA_GET_NG,		// 141 : USB GPS CONFIG DATA GET(異常)
    269          
    270          	MAN_OTA_SEQ_USB_UPDATER_FILE_SET_REQ,	// 142 : USB GPS UPDATER FILE SET開始
    271          	MAN_OTA_SEQ_USB_UPDATER_FILE_SET,		// 143 : USB GPS UPDATER FILE SET
    272          	MAN_OTA_SEQ_USB_UPDATER_FILE_SET_OK,	// 144 : USB GPS UPDATER FILE SET(正常)
    273          	MAN_OTA_SEQ_USB_UPDATER_FILE_SET_NG,	// 145 : USB GPS UPDATER FILE SET(異常)
    274          	MAN_OTA_SEQ_USB_UPDATER_DATA_GET_REQ,	// 146 : USB GPS UPDATER DATA GET開始
    275          	MAN_OTA_SEQ_USB_UPDATER_DATA_GET,		// 147 : USB GPS UPDATER DATA GET
    276          	MAN_OTA_SEQ_USB_UPDATER_DATA_GET_OK,	// 148 : USB GPS UPDATER DATA GET(正常)
    277          	MAN_OTA_SEQ_USB_UPDATER_DATA_GET_NG,	// 149 : USB GPS UPDATER DATA GET(異常)
    278          
    279          	MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_REQ,	// 150 : USB GPS FIRMWARE FILE SET開始
    280          	MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET,		// 151 : USB GPS FIRMWARE FILE SET
    281          	MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_OK,	// 152 : USB GPS FIRMWARE FILE SET(正常)
    282          	MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_NG,	// 153 : USB GPS FIRMWARE FILE SET(異常)
    283          	MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_REQ,	// 154 : USB GPS FIRMWARE DATA GET開始
    284          	MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET,		// 155 : USB GPS FIRMWARE DATA GET
    285          	MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_OK,	// 156 : USB GPS FIRMWARE DATA GET(正常)
    286          	MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_NG,	// 157 : USB GPS FIRMWARE DATA GET(異常)
    287          
    288          
    289          
    290          
    291          
    292          
    293          	
    294          	MAN_OTA_SEQ_GPS_OTA_END_REQ,			// 158 : GPS用 OTA リトライ開始要求
    295          	MAN_OTA_SEQ_GPS_OTA_END,				// 159 : GPS用 OTA 終了
    296          	MAN_OTA_SEQ_GPS_OTA_END_OK,				// 160 : GPS用 OTA 終了(正常)
    297          	MAN_OTA_SEQ_GPS_OTA_END_NG,				// 161 : GPS用 OTA 終了(異常)
    298          
    299          
    300          	MAN_OTA_SEQ_OTA_END_REQ,				// 162 : OTA終了開始
    301          	MAN_OTA_SEQ_OTA_END,					// 163 : OTA終了
    302          	MAN_OTA_SEQ_OTA_END_OK,					// 164 : OTA終了完了(正常)
    303          	MAN_OTA_SEQ_OTA_END_NG,					// 165 : OTA終了完了(異常)
    304          
    305          	MAN_OTA_SEQ_OTA_GPS_START,				// 166 : OTA  GPS再開
    306          	MAN_OTA_SEQ_OTA_GPS_START_OK,			// 167 : OTA  GPS再開完了(正常)
    307          	MAN_OTA_SEQ_OTA_GPS_START_NG,			// 168 : OTA  GPS再開完了(異常)
    308          
    309          
    310          
    311          } man_ota_seq_def;
    312          
    313          #ifdef ADLINK_DEBUG_MESSAGE
    314          static char *comstr[] =
    315          {
    316          	"MAN_OTA_SEQ_READY",						//  00 : 要求待ち
    317          
    318          	"MAN_OTA_SEQ_OTA_WAIT_REQ",				//  01 : コマンド応答待ち
    319          	"MAN_OTA_SEQ_OTA_WAIT",					//  02 : コマンド応答待ち中
    320          	"MAN_OTA_SEQ_OTA_WAIT_OK",				//  03 : コマンド応答待ち完了
    321          	"MAN_OTA_SEQ_OTA_WAIT_NG",				//  04 : コマンド応答待ち異常
    322          
    323          	"MAN_OTA_SEQ_OTA_REQ",					//  05 : OTA開始 要求
    324          	"MAN_OTA_SEQ_OTA_START",					//  06 : OTA開始
    325          	"MAN_OTA_SEQ_OTA_START_OK",				//  07 : OTA開始完了(正常)
    326          	"MAN_OTA_SEQ_OTA_START_NG",				//  08 : OTA開始完了(異常)
    327          
    328          	"MAN_OTA_SEQ_OTA_FLASH_ERASE_REQ",		//  09 : FLASH ERASE開始
    329          	"MAN_OTA_SEQ_OTA_FLASH_ERASE",			//  10 : FLASH ERASE中
    330          	"MAN_OTA_SEQ_OTA_FLASH_ERASE_OK",			//  11 : FLASH ERASE完了
    331          	"MAN_OTA_SEQ_OTA_FLASH_ERASE_NG",			//  12 : FLASH ERASE失敗
    332          
    333          	"MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ",		//  13 : 端末用 OTA  FTPリカバリ要求
    334          	"MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT",		//  14 : 端末用 OTA  FTPリカバリ安定待ち
    335          	"MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT_OK",	//  15 : 端末用 OTA  FTPリカバリ安定待ち完了
    336          	"MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT_NG",	//  16 : 端末用 OTA  FTPリカバリ安定待ち異常
    337          	"MAN_OTA_SEQ_TERM_OTA_FTP_RECO",			//  17 : 端末用 OTA  FTPリカバリ
    338          	"MAN_OTA_SEQ_TERM_OTA_FTP_RECO_OK",		//  18 : 端末用 OTA  FTPリカバリ(正常)
    339          	"MAN_OTA_SEQ_TERM_OTA_FTP_RECO_NG",		//  19 : 端末用 OTA  FTPリカバリ(異常)
    340          
    341          	"MAN_OTA_SEQ_OTA_FTP_INIT_REQ",			//  20 : OTA  FTP初期化要求
    342          	"MAN_OTA_SEQ_OTA_FTP_INIT",				//  21 : OTA  FTP初期化
    343          	"MAN_OTA_SEQ_OTA_FTP_INIT_OK",			//  22 : OTA  FTP初期化(正常)
    344          	"MAN_OTA_SEQ_OTA_FTP_INIT_NG",			//  23 : OTA  FTP初期化(異常)
    345          
    346          	"MAN_OTA_SEQ_OTA_FTP_OPEN",				//  24 : OTA  FTP OPEN
    347          	"MAN_OTA_SEQ_OTA_FTP_OPEN_OK",			//  25 : OTA  FTP OPEN(正常)
    348          	"MAN_OTA_SEQ_OTA_FTP_OPEN_NG",			//  26 : OTA  FTP OPEN(異常)
    349          
    350          	"MAN_OTA_SEQ_OTA_FTP_GET_REQ",			//  27 : OTA  FTP GET 要求
    351          	"MAN_OTA_SEQ_OTA_FTP_GET",				//  28 : OTA  FTP GET
    352          	"MAN_OTA_SEQ_OTA_FTP_GET_OK",				//  29 : OTA  FTP GET(正常)
    353          	"MAN_OTA_SEQ_OTA_FTP_GET_NG",				//  30 : OTA  FTP GET(異常)
    354          	"MAN_OTA_SEQ_OTA_FTP_GET_NG_W",			//  31 : OTA  FTP GET(異常)300秒待ち
    355          	"MAN_OTA_SEQ_OTA_FTP_GET_NG_W_OK",		//  32 : OTA  FTP GET(異常)300秒待ち正常
    356          	"MAN_OTA_SEQ_OTA_FTP_GET_NG_W_NG",		//  33 : OTA  FTP GET(異常)300秒待ち異常
    357          	"MAN_OTA_SEQ_OTA_FTP_GET_NG_A",			//  34 : OTA  FTP GET(異常) 中止
    358          	"MAN_OTA_SEQ_OTA_FTP_GET_END",			//  35 : OTA  FTP GET完了
    359          
    360          	"MAN_OTA_SEQ_OTA_FTP_DELAY",				//  36 : OTA  FTP DELAY(65秒待ち)
    361          	"MAN_OTA_SEQ_OTA_FTP_DELAY_OK",			//  37 : OTA  FTP DELAY(65秒待ち)(正常)
    362          	"MAN_OTA_SEQ_OTA_FTP_DELAY_NG",			//  38 : OTA  FTP DELAY(65秒待ち)(異常)
    363          
    364          	"MAN_OTA_SEQ_TERM_OTA_FILE_GET_REQ",		//  39 : 端末用 OTA  FILE GET 要求
    365          	"MAN_OTA_SEQ_TERM_OTA_FILE_GET",			//  40 : 端末用 OTA  FILE GET
    366          	"MAN_OTA_SEQ_TERM_OTA_FILE_GET_OK",		//  41 : 端末用 OTA  FILE GET(正常)
    367          	"MAN_OTA_SEQ_TERM_OTA_FILE_GET_NG",		//  42 : 端末用 OTA  FILE GET(異常)
    368          	
    369          	"MAN_OTA_SEQ_TERM_OTA_ERASE_REQ",			//  43 : 端末用 OTA 内臓FLASH消去要求
    370          	"MAN_OTA_SEQ_TERM_OTA_ERASE",				//  44 : 端末用 OTA 内臓FLASH消去中
    371          	"MAN_OTA_SEQ_TERM_OTA_ERASE_OK",			//  45 : 端末用 OTA 内臓FLASH消去完了(正常)
    372          	"MAN_OTA_SEQ_TERM_OTA_ERASE_NG",			//  46 : 端末用 OTA 内臓FLASH消去完了(異常)
    373          	
    374          	"MAN_OTA_SEQ_TERM_OTA_FILE_SET_REQ",		//  47 : 端末用 OTA  FILE SET 要求
    375          	"MAN_OTA_SEQ_TERM_OTA_FILE_SET",			//  48 : 端末用 OTA  FILE SET
    376          	"MAN_OTA_SEQ_TERM_OTA_FILE_SET_OK",		//  49 : 端末用 OTA  FILE SET(正常)
    377          	"MAN_OTA_SEQ_TERM_OTA_FILE_SET_WAIT",		//  50 : 端末用 OTA  FILE SET(delay)
    378          
    379          	"MAN_OTA_SEQ_GPS_OTA_START_REQ",			//  51 : GPS用 OTA 開始要求
    380          	"MAN_OTA_SEQ_GPS_OTA_START",				//  52 : GPS用 OTA 開始
    381          	"MAN_OTA_SEQ_GPS_OTA_START_OK",			//  53 : GPS用 OTA 開始(正常)
    382          	"MAN_OTA_SEQ_GPS_OTA_START_NG",			//  54 : GPS用 OTA 開始(異常)
    383          	
    384          	"MAN_OTA_SEQ_UPDATER_FILE_GET_REQ",		//  55 : GPS UPDATER FILE GET 要求
    385          	"MAN_OTA_SEQ_UPDATER_FILE_GET",			//  56 : GPS UPDATER FILE GET
    386          	"MAN_OTA_SEQ_UPDATER_FILE_GET_OK",		//  57 : GPS UPDATER FILE GET(正常)
    387          	"MAN_OTA_SEQ_UPDATER_FILE_GET_NG",		//  58 : GPS UPDATER FILE GET(異常)
    388          
    389          	
    390          	"MAN_OTA_SEQ_CONFIG_FILE_GET_REQ",		//  59 : GPS CONFIG FILE GET 要求
    391          	"MAN_OTA_SEQ_CONFIG_FILE_GET",			//  60 : GPS CONFIG FILE GET
    392          	"MAN_OTA_SEQ_CONFIG_FILE_GET_OK",			//  61 : GPS CONFIG FILE GET(正常)
    393          	"MAN_OTA_SEQ_CONFIG_FILE_GET_NG",			//  62 : GPS CONFIG FILE GET(異常)
    394          	
    395          	
    396          	"MAN_OTA_SEQ_FIRMWARE_FILE_GET_REQ",		//  63 : GPS FIRMWARE FILE GET 要求
    397          	"MAN_OTA_SEQ_FIRMWARE_FILE_GET",			//  64 : GPS FIRMWARE FILE GET
    398          	"MAN_OTA_SEQ_FIRMWARE_FILE_GET_OK",		//  65 : GPS FIRMWARE FILE GET(正常)
    399          	"MAN_OTA_SEQ_FIRMWARE_FILE_GET_NG",		//  66 : GPS FIRMWARE FILE GET(異常)
    400          
    401          
    402          	"MAN_OTA_SEQ_GPS_OTA_SET_REQ",			//  67 : GPS用 FILE SET 開始要求
    403          	"MAN_OTA_SEQ_GPS_OTA_SET",				//  68 : GPS用 FILE SET 開始
    404          	"MAN_OTA_SEQ_GPS_OTA_SET_OK",				//  69 : GPS用 FILE SET 開始(正常)
    405          	"MAN_OTA_SEQ_GPS_OTA_SET_NG",				//  70 : GPS用 FILE SET 開始(異常)
    406          
    407          	"MAN_OTA_SEQ_GPS_RETRY_REQ",				//  71 : GPS RESET開始要求
    408          	"MAN_OTA_SEQ_GPS_RETRY",					//  72 : GPS RESET中
    409          	"MAN_OTA_SEQ_GPS_RETRY_OK",				//  73 : GPS RESET終了
    410          	"MAN_OTA_SEQ_GPS_RETRY_NG",				//  74 : GPS RESET終了
    411          
    412          	
    413          	"MAN_OTA_SEQ_UDL_SET_REQ",				//  75 : GPS UDLコマンド送信 要求
    414          	"MAN_OTA_SEQ_UDL_SET",					//  76 : GPS UDLコマンド送信中
    415          	"MAN_OTA_SEQ_UDL_SET_OK",					//  77 : GPS UDLコマンド送信完了(成功)
    416          	"MAN_OTA_SEQ_UDL_SET_NG",					//  78 : GPS UDLコマンド送信完了(失敗)
    417          
    418          	"MAN_OTA_SEQ_UDLPKT_SET",					//  79 : updater PACKETデータ取得
    419          	"MAN_OTA_SEQ_UDLPKT_NEXT_REQ",			//  80 : GPS updater PACKET(応答なし)データ送信 要求
    420          	"MAN_OTA_SEQ_UDLPKT_NEXT",				//  81 : GPS updater PACKET(応答なし)データ送信中
    421          	"MAN_OTA_SEQ_UDLPKT_NEXT_OK",				//  82 : GPS updater PACKET(応答なし)データ送信完了(成功)
    422          	"MAN_OTA_SEQ_UDLPKT_NEXT_NG",				//  83 : GPS updater PACKET(応答なし)データ送信完了(失敗)
    423          
    424          	"MAN_OTA_SEQ_UDLPKT_END_REQ",				//  84 : GPS updater PACKET(応答あり)データ送信 要求
    425          	"MAN_OTA_SEQ_UDLPKT_END",					//  85 : GPS updater PACKET(応答あり)データ送信中
    426          	"MAN_OTA_SEQ_UDLPKT_END_OK",				//  86 : GPS updater PACKET(応答あり)データ送信完了(成功)
    427          	"MAN_OTA_SEQ_UDLPKT_END_NG",				//  87 : GPS updater PACKET(応答あり)データ送信完了(失敗)
    428          
    429          	"MAN_OTA_SEQ_UDLPKT_DONE",				//  88 : GPS UDL DONE待ち
    430          	"MAN_OTA_SEQ_UDLPKT_DONE_OK",				//  89 : GPS UDL DONE受信
    431          
    432          	"MAN_OTA_SEQ_UDLPKT_DONE_WAIT",			//  90 : GPS UDL DONE安定100ms待ち
    433          	"MAN_OTA_SEQ_UDLPKT_DONE_WAIT_OK",		//  91 : GPS UDL DONE安定100ms待ち完了
    434          	"MAN_OTA_SEQ_UDLPKT_DONE_WAIT_NG",		//  92 : GPS UDL DONE安定100ms待ち完了
    435          
    436          
    437          	"MAN_OTA_SEQ_FDL_SET_REQ",				//  93 : GPS FDLコマンド送信 要求
    438          	"MAN_OTA_SEQ_FDL_SET",					//  94 : GPS FDLコマンド送信中
    439          	"MAN_OTA_SEQ_FDL_SET_OK",					//  95 : GPS FDLコマンド送信完了(成功)
    440          	"MAN_OTA_SEQ_FDL_SET_NG",					//  96 : GPS FDLコマンド送信完了(失敗)
    441          
    442          	"MAN_OTA_SEQ_CFGPKT_SET",					//  97 : config PACKETデータ取得
    443          	"MAN_OTA_SEQ_CFGPKT_NEXT_REQ",			//  98 : GPS config PACKET(応答なし)データ送信 要求
    444          	"MAN_OTA_SEQ_CFGPKT_NEXT",				//  99 : GPS config PACKET(応答なし)データ送信中
    445          	"MAN_OTA_SEQ_CFGPKT_NEXT_OK",				// 100 : GPS config PACKET(応答なし)データ送信完了(成功)
    446          	"MAN_OTA_SEQ_CFGPKT_NEXT_NG",				// 101 : GPS config PACKET(応答なし)データ送信完了(失敗)
    447          
    448          	"MAN_OTA_SEQ_CFGPKT_END_REQ",				// 102 : GPS config PACKET(応答あり)データ送信 要求
    449          	"MAN_OTA_SEQ_CFGPKT_END",					// 103 : GPS config PACKET(応答あり)データ送信中
    450          	"MAN_OTA_SEQ_CFGPKT_END_OK",				// 104 : GPS config PACKET(応答あり)データ送信完了(成功)
    451          	"MAN_OTA_SEQ_CFGPKT_END_NG",				// 105 : GPS config PACKET(応答あり)データ送信完了(失敗)
    452          
    453          	"MAN_OTA_SEQ_FRMPKT_SET",					// 106 : GPS firmware PACKETデータ取得
    454          	"MAN_OTA_SEQ_FRMPKT_NEXT_REQ",			// 107 : GPS firmware PACKET(応答なし)データ送信 要求
    455          	"MAN_OTA_SEQ_FRMPKT_NEXT",				// 108 : GPS firmware PACKET(応答なし)データ送信中
    456          	"MAN_OTA_SEQ_FRMPKT_NEXT_OK",				// 109 : GPS firmware PACKET(応答なし)データ送信完了(成功)
    457          	"MAN_OTA_SEQ_FRMPKT_NEXT_NG",				// 110 : GPS firmware PACKET(応答なし)データ送信完了(失敗)
    458          
    459          	"MAN_OTA_SEQ_FRMPKT_END_REQ",				// 111 : GPS firmware PACKET(応答あり)データ送信 要求
    460          	"MAN_OTA_SEQ_FRMPKT_END",					// 112 : GPS firmware PACKET(応答あり)データ送信中
    461          	"MAN_OTA_SEQ_FRMPKT_END_OK",				// 113 : GPS firmware PACKET(応答あり)データ送信完了(成功)
    462          	"MAN_OTA_SEQ_FRMPKT_END_NG",				// 114 : GPS firmware PACKET(応答あり)データ送信完了(失敗)
    463          	"MAN_OTA_SEQ_FRMPKT_END_RETRY",			// 115 : GPS firmware PACKET(応答あり)データ送信完了(リトライ)
    464          
    465          	"MAN_OTA_SEQ_FDLPKT_DONE",				// 116 : GPS FDL DONE待ち
    466          	"MAN_OTA_SEQ_FDLPKT_DONE_OK",				// 117 : GPS FDL DONE受信
    467          
    468          	"MAN_OTA_SEQ_FIRMWARE_SET_END_OK",		// 118 : GPS FIRMWARE SET(終了)
    469          	"MAN_OTA_SEQ_FIRMWARE_END_WAIT",			// 119 : GPS FIRMWARE SET(終了)1000ms待ち
    470          	"MAN_OTA_SEQ_FIRMWARE_END_WAIT_OK",		// 120 : GPS FIRMWARE SET(終了)1000ms待ち終了
    471          	"MAN_OTA_SEQ_FIRMWARE_END_WAIT_NG",		// 121 : GPS FIRMWARE SET(終了)1000ms待ち終了
    472          
    473          
    474          	"MAN_OTA_SEQ_GPS_OTA_RETRY_REQ",			// 122 : GPS用 OTA リトライ準備開始要求
    475          	"MAN_OTA_SEQ_GPS_OTA_RETRY",				// 123 : GPS用 OTA リトライ準備
    476          	"MAN_OTA_SEQ_GPS_OTA_RETRY_OK",			// 124 : GPS用 OTA リトライ準備(正常)
    477          	"MAN_OTA_SEQ_GPS_OTA_RETRY_NG",			// 125 : GPS用 OTA リトライ準備(異常)
    478          
    479          	"MAN_OTA_SEQ_USB_TERM_FILE_SET_REQ",		// 126 : USB 端末用 OTA FILE SET開始
    480          	"MAN_OTA_SEQ_USB_TERM_FILE_SET",			// 127 : USB 端末用 OTA FILE SET
    481          	"MAN_OTA_SEQ_USB_TERM_FILE_SET_OK",		// 128 : USB 端末用 OTA FILE SET(正常)
    482          	"MAN_OTA_SEQ_USB_TERM_FILE_SET_NG",		// 129 : USB 端末用 OTA FILE SET(異常)
    483          	"MAN_OTA_SEQ_USB_TERM_DATA_GET_REQ",		// 130 : USB 端末用 OTA DATA GET開始
    484          	"MAN_OTA_SEQ_USB_TERM_DATA_GET",			// 131 : USB 端末用 OTA DATA GET
    485          	"MAN_OTA_SEQ_USB_TERM_DATA_GET_OK",		// 132 : USB 端末用 OTA DATA GET(正常)
    486          	"MAN_OTA_SEQ_USB_TERM_DATA_GET_NG",		// 133 : USB 端末用 OTA DATA GET(異常)
    487          
    488          	"MAN_OTA_SEQ_USB_CONFIG_FILE_SET_REQ",	// 134 : USB GPS CONFIG FILE SET開始
    489          	"MAN_OTA_SEQ_USB_CONFIG_FILE_SET",		// 135 : USB GPS CONFIG FILE SET
    490          	"MAN_OTA_SEQ_USB_CONFIG_FILE_SET_OK",		// 136 : USB GPS CONFIG FILE SET(正常)
    491          	"MAN_OTA_SEQ_USB_CONFIG_FILE_SET_NG",		// 137 : USB GPS CONFIG FILE SET(異常)
    492          	"MAN_OTA_SEQ_USB_CONFIG_DATA_GET_REQ",	// 138 : USB GPS CONFIG DATA GET開始
    493          	"MAN_OTA_SEQ_USB_CONFIG_DATA_GET",		// 139 : USB GPS CONFIG DATA GET
    494          	"MAN_OTA_SEQ_USB_CONFIG_DATA_GET_OK",		// 140 : USB GPS CONFIG DATA GET(正常)
    495          	"MAN_OTA_SEQ_USB_CONFIG_DATA_GET_NG",		// 141 : USB GPS CONFIG DATA GET(異常)
    496          
    497          	"MAN_OTA_SEQ_USB_UPDATER_FILE_SET_REQ",	// 142 : USB GPS UPDATER FILE SET開始
    498          	"MAN_OTA_SEQ_USB_UPDATER_FILE_SET",		// 143 : USB GPS UPDATER FILE SET
    499          	"MAN_OTA_SEQ_USB_UPDATER_FILE_SET_OK",	// 144 : USB GPS UPDATER FILE SET(正常)
    500          	"MAN_OTA_SEQ_USB_UPDATER_FILE_SET_NG",	// 145 : USB GPS UPDATER FILE SET(異常)
    501          	"MAN_OTA_SEQ_USB_UPDATER_DATA_GET_REQ",	// 146 : USB GPS UPDATER DATA GET開始
    502          	"MAN_OTA_SEQ_USB_UPDATER_DATA_GET",		// 147 : USB GPS UPDATER DATA GET
    503          	"MAN_OTA_SEQ_USB_UPDATER_DATA_GET_OK",	// 148 : USB GPS UPDATER DATA GET(正常)
    504          	"MAN_OTA_SEQ_USB_UPDATER_DATA_GET_NG",	// 149 : USB GPS UPDATER DATA GET(異常)
    505          
    506          	"MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_REQ",	// 150 : USB GPS FIRMWARE FILE SET開始
    507          	"MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET",		// 151 : USB GPS FIRMWARE FILE SET
    508          	"MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_OK",	// 152 : USB GPS FIRMWARE FILE SET(正常)
    509          	"MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_NG",	// 153 : USB GPS FIRMWARE FILE SET(異常)
    510          	"MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_REQ",	// 154 : USB GPS FIRMWARE DATA GET開始
    511          	"MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET",		// 155 : USB GPS FIRMWARE DATA GET
    512          	"MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_OK",	// 156 : USB GPS FIRMWARE DATA GET(正常)
    513          	"MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_NG",	// 157 : USB GPS FIRMWARE DATA GET(異常)
    514          
    515          	"MAN_OTA_SEQ_GPS_OTA_END_REQ",			// 158 : GPS用 OTA リトライ開始要求
    516          	"MAN_OTA_SEQ_GPS_OTA_END",				// 159 : GPS用 OTA 終了
    517          	"MAN_OTA_SEQ_GPS_OTA_END_OK",				// 160 : GPS用 OTA 終了(正常)
    518          	"MAN_OTA_SEQ_GPS_OTA_END_NG",				// 161 : GPS用 OTA 終了(異常)
    519          
    520          	"MAN_OTA_SEQ_OTA_END_REQ",				// 162 : OTA終了開始
    521          	"MAN_OTA_SEQ_OTA_END",					// 163 : OTA終了
    522          	"MAN_OTA_SEQ_OTA_END_OK",					// 164 : OTA終了完了(正常)
    523          	"MAN_OTA_SEQ_OTA_END_NG",					// 165 : OTA終了完了(異常)
    524          
    525          	"MAN_OTA_SEQ_OTA_GPS_START",				// 166 : OTA  GPS再開
    526          	"MAN_OTA_SEQ_OTA_GPS_START_OK",			// 167 : OTA  GPS再開完了(正常)
    527          	"MAN_OTA_SEQ_OTA_GPS_START_NG",			// 168 : OTA  GPS再開完了(異常)
    528          
    529          };
    530          
    531          #endif
    532          
    533          #define	MAN_FTP_NOTI_STATE		1000
    534          
    535          // 要求
    536          typedef struct _manotae_req_info_t {
    537          	int32_t					req_cmd;	// 要求
    538          	int32_t					forced_flag;
    539          } man_ota_req_info_t;
    540          
    541          // 要求に対する応答
    542          typedef struct _man_ota_resp_cmd_t {
    543          	int32_t					flag;
    544          	int32_t					id;
    545          	int32_t					status;
    546          
    547          	int32_t					data_len;
    548          //	uint8_t					data[MAN_OTA_RCV_DATA_BUFF_MAX];
    549          	uint8_t					*data;
    550          } man_ota_resp_cmd_t;
    551          
    552          
    553          // 通知情報
    554          typedef struct _man_ota_noti_sts_t {
    555          	int32_t					flag;
    556          	int32_t					id;
    557          	int32_t					status;
    558          } man_ota_noti_sts_t;
    559          
    560          
    561          // 異常状態通知先情報
    562          typedef struct _man_ota_error_info_t {
    563          	int32_t					id;					// ユニークID
    564          	func_man_ota			callback_error;		// 異常を通知するcallback関数
    565          } man_ota_error_info_t;
    566          
    567          //取得ファイル管理情報
    568          typedef struct _man_ota_file_info_t{
    569          	int32_t					size_term;			//端末用FWファイルサイズ
    570          	int32_t					size_update;		//GPS updateファイルサイズ
    571          	int32_t					size_config;		//GPS configファイルサイズ
    572          	int32_t					size_firmware;		//GPS remoteファイルサイズ
    573          	
    574          	int32_t					addr_term;			//端末用FW 格納先頭アドレス
    575          	int32_t					addr_update;		//GPS update 格納先頭アドレス
    576          	int32_t					addr_config;		//GPS config 格納先頭アドレス
    577          	int32_t					addr_firmware;		//GPS remote 格納先頭アドレス
    578          	int32_t					block_top;			// ブロック先頭アドレス
    579          	int32_t					block_num;			// FLASHのブロック数
    580          }man_ota_file_info_t;
    581          
    582          // OTA実行情報
    583          typedef struct _man_ota_exec_info_t {
    584          	int32_t					req_cmd;	// 要求
    585          
    586          	int32_t					snd_max_size;		// 送信最大データ長
    587          	int32_t					counter;			// Packet送信サイクル
    588          	int32_t					pkt_top_cnt;		// Packet先頭サイクル
    589          	uint32_t				pkt_top_size;		// Packet先頭アドレス
    590          
    591          	uint32_t				quantity;			// FTP quantity.
    592          	uint32_t				quantity_remote;	// FTP remote quantity.
    593          	uint32_t				quantity_config;	// FTP config quantity.
    594          	uint32_t				quantity_update;	// FTP update quantity.
    595          	
    596          	uint32_t				value;				//OTA get file size
    597          	uint32_t				value_write;
    598          
    599          	uint32_t				exec_file;			// 実行中のファイル
    600          	int32_t					file_num;			// アクセスするファイル番号
    601          	int32_t					file_addr;			// アクセスする外部FLASHアドレス
    602          	int32_t					file_size;			// 書き込み完了ファイルサイズ
    603          	int32_t					write_num;			// 内部FLASHへ書き込んだ回数
    604          	int32_t					start_file_num;		// ブロックの先頭番号
    605          	uint32_t				end_file_addr;		// 書き込み終端アドレス
    606          	int32_t					file_offset;		// offset
    607          	int32_t					retry;				// リトライカウンタ
    608          	int32_t					result;				// OTA実行結果
    609          	int32_t					usb_file_size;
    610          
    611          } man_ota_exec_info_t;
    612          
    613          // OTA管理ワーク
    614          typedef struct _man_ota_work_t {
    615          	man_ota_seq_def			sequense;	// シーケンス
    616          	man_ote_mode_def		ota_mode;
    617          
    618          	uint32_t				flash_top;			// 内臓FLASHの先頭アドレス
    619          
    620          	man_ota_exec_info_t		exec_info;	
    621          
    622          	int32_t					req_state;	// NETWORKの状態
    623          	man_ota_error_info_t	noti_error;	// 異常状態通知先情報
    624          
    625          	man_ota_req_info_t		request;	// 要求
    626          	man_ota_resp_cmd_t		resp_cmd;	// 要求に対する応答
    627          	man_ota_noti_sts_t		noti_sts;	// 通知情報
    628          	man_ota_file_info_t		file_info;	// ファイル情報
    629          
    630          //	uint8_t					data_buff[MAN_OTA_DATA_BUFF_MAX];	// データバッファ
    631          	uint8_t					*data_buff;	// データバッファ
    632          	int32_t					data_len;							// データ長
    633          	uint32_t				summ;
    634          
    635          	man_data_num_ftp_t		ftp_info;
    636          	man_usb_set_file_info_t	usb_file_info;
    637          
    638          	man_ota_seq_def			seq_log[100];	// シーケンスログ
    639          	int32_t					seq_wp;
    640          
    641          	uint32_t				timer;
    642          	uint8_t					buff[100];
    643          } man_ota_work_t;
    644          
    645          /************************************************************************/
    646          /* definition of variables                                              */
    647          /************************************************************************/
    648          

   \                                 In section .bss, align 4
    649          man_ota_work_t	man_ota_work;
   \                     man_ota_work:
   \   00000000                      DS8 808
    650          
    651          
    652          
    653          
    654          static void man_ota_set_sequense( man_ota_seq_def sequense );
    655          
    656          /********************************************************************/
    657          /*	callback関数                                                    */
    658          /********************************************************************/
    659          
    660          /********************************************************************/
    661          /*!
    662           * \name	man_ota_req_callback
    663           * \brief	要求に対するcallback処理
    664           * \param	id     : ユニークID
    665           *          status : 受信結果
    666           * \return  なし
    667           * \note	
    668           */
    669          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    670          static void man_ota_req_callback(int32_t id, int32_t status)
    671          {
    672          	man_ota_work.resp_cmd.flag = 1;
   \                     man_ota_req_callback: (+1)
   \   00000000   0x2201             MOVS     R2,#+1
   \   00000002   0x....             LDR      R3,??DataTable6
   \   00000004   0x675A             STR      R2,[R3, #+116]
    673          	man_ota_work.resp_cmd.id = id & TIMER_MAN_ID_MASK;
   \   00000006   0xB280             UXTH     R0,R0
   \   00000008   0x....             LDR      R2,??DataTable6
   \   0000000A   0x6790             STR      R0,[R2, #+120]
    674          	man_ota_work.resp_cmd.status = status;
   \   0000000C   0x....             LDR      R0,??DataTable6
   \   0000000E   0x67C1             STR      R1,[R0, #+124]
    675          }
   \   00000010   0x4770             BX       LR               ;; return
    676          
    677          
    678          /********************************************************************/
    679          /*!
    680           * \name	man_ota_noti_callback
    681           * \brief	通知に対するcallback処理
    682           * \param	id     : ユニークID
    683           *          status : 受信結果
    684           * \return  なし
    685           * \note	
    686           */
    687          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    688          static void man_ota_noti_callback(int32_t id, int32_t status)
    689          {
    690          	man_ota_work.noti_sts.flag = 1;
   \                     man_ota_noti_callback: (+1)
   \   00000000   0x2201             MOVS     R2,#+1
   \   00000002   0x....             LDR      R3,??DataTable6_1
   \   00000004   0x601A             STR      R2,[R3, #+0]
    691          	man_ota_work.noti_sts.id = id;
   \   00000006   0x....             LDR      R2,??DataTable6_2
   \   00000008   0x6010             STR      R0,[R2, #+0]
    692          	man_ota_work.noti_sts.status = status;
   \   0000000A   0x....             LDR      R0,??DataTable6_3
   \   0000000C   0x6001             STR      R1,[R0, #+0]
    693          }
   \   0000000E   0x4770             BX       LR               ;; return
    694          
    695          
    696          /********************************************************************/
    697          /*!
    698           * \name	man_ota_data_callback
    699           * \brief	要求に対するcallback処理
    700           * \param	data   : 受信データ
    701           *          length : データ長
    702           *          id     : ユニークID
    703           *          status : 受信結果
    704           * \return  なし
    705           * \note	
    706           */
    707          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    708          static void man_ota_data_callback(uint8_t *data, int32_t length, int32_t id, int32_t status)
    709          {
   \                     man_ota_data_callback: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    710          	man_ota_work.resp_cmd.flag = 1;
   \   00000002   0x2401             MOVS     R4,#+1
   \   00000004   0x....             LDR      R5,??DataTable6
   \   00000006   0x676C             STR      R4,[R5, #+116]
    711          	man_ota_work.resp_cmd.id = id & TIMER_MAN_ID_MASK;
   \   00000008   0xB292             UXTH     R2,R2
   \   0000000A   0x....             LDR      R4,??DataTable6
   \   0000000C   0x67A2             STR      R2,[R4, #+120]
    712          	man_ota_work.resp_cmd.status = status;
   \   0000000E   0x....             LDR      R2,??DataTable6
   \   00000010   0x67D3             STR      R3,[R2, #+124]
    713          	man_ota_work.resp_cmd.data_len = length;
   \   00000012   0x....             LDR      R2,??DataTable6_4
   \   00000014   0x6011             STR      R1,[R2, #+0]
    714          
    715          	if ( (status == MAN_HTTP_STATUS_OK) && (length > 0) && (length < MAN_OTA_RCV_DATA_BUFF_MAX) ) {
   \   00000016   0x2B00             CMP      R3,#+0
   \   00000018   0xD10B             BNE      ??man_ota_data_callback_0
   \   0000001A   0x000A             MOVS     R2,R1
   \   0000001C   0x1E52             SUBS     R2,R2,#+1
   \   0000001E   0x....             LDR      R3,??DataTable6_5  ;; 0x1387
   \   00000020   0x429A             CMP      R2,R3
   \   00000022   0xD206             BCS      ??man_ota_data_callback_0
    716          		memcpy(&man_ota_work.resp_cmd.data[0], data, length);
   \   00000024   0x....             LDR      R2,??DataTable6_6
   \   00000026   0x6814             LDR      R4,[R2, #+0]
   \   00000028   0x000A             MOVS     R2,R1
   \   0000002A   0x0001             MOVS     R1,R0
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy
    717          	}
    718          }
   \                     ??man_ota_data_callback_0: (+1)
   \   00000032   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    719          
    720          
    721          /********************************************************************/
    722          /*!
    723           * \name	man_ota_recv_callback
    724           * \brief	受信データ通知処理
    725           * \param	id     : ユニークID
    726           *          state  : 受信状態
    727           * \return  なし
    728           * \note	
    729           */
    730          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    731          static void man_ota_recv_callback( int32_t id, int32_t state )
    732          {
   \                     man_ota_recv_callback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    733          	if (id == 0) {
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD12D             BNE      ??man_ota_recv_callback_0
    734          		switch (state) {
   \   00000006   0x0008             MOVS     R0,R1
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD002             BEQ      ??man_ota_recv_callback_1
   \   0000000C   0x2802             CMP      R0,#+2
   \   0000000E   0xD010             BEQ      ??man_ota_recv_callback_2
   \   00000010   0xE020             B        ??man_ota_recv_callback_3
    735          		case MAN_GPS_OTA_RESP_UDL_END:
    736          			if (man_ota_work.sequense == MAN_OTA_SEQ_UDLPKT_DONE) {
   \                     ??man_ota_recv_callback_1: (+1)
   \   00000012   0x....             LDR      R0,??DataTable6
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x2858             CMP      R0,#+88
   \   00000018   0xD103             BNE      ??man_ota_recv_callback_4
    737          				// updater注入完了応答
    738          				man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_DONE_OK);
   \   0000001A   0x2059             MOVS     R0,#+89
   \   0000001C   0x.... 0x....      BL       man_ota_set_sequense
   \   00000020   0xE006             B        ??man_ota_recv_callback_5
    739          			}
    740          			else {
    741          				// エラー登録
    742          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \                     ??man_ota_recv_callback_4: (+1)
   \   00000022   0x....             LDR      R3,??DataTable6_7  ;; 0x2e6
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x....             LDR      R0,??DataTable6
   \   00000028   0x7801             LDRB     R1,[R0, #+0]
   \   0000002A   0x201B             MOVS     R0,#+27
   \   0000002C   0x.... 0x....      BL       man_error_set
    743          			}
    744          			break;
   \                     ??man_ota_recv_callback_5: (+1)
   \   00000030   0xE017             B        ??man_ota_recv_callback_0
    745          		case MAN_GPS_OTA_RESP_FDL_END:
    746          			if (man_ota_work.sequense == MAN_OTA_SEQ_FDLPKT_DONE) {
   \                     ??man_ota_recv_callback_2: (+1)
   \   00000032   0x....             LDR      R0,??DataTable6
   \   00000034   0x7800             LDRB     R0,[R0, #+0]
   \   00000036   0x2874             CMP      R0,#+116
   \   00000038   0xD103             BNE      ??man_ota_recv_callback_6
    747          				// firmware注入完了応答
    748          				man_ota_set_sequense(MAN_OTA_SEQ_FDLPKT_DONE_OK);
   \   0000003A   0x2075             MOVS     R0,#+117
   \   0000003C   0x.... 0x....      BL       man_ota_set_sequense
   \   00000040   0xE007             B        ??man_ota_recv_callback_7
    749          			}
    750          			else {
    751          				// エラー登録
    752          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \                     ??man_ota_recv_callback_6: (+1)
   \   00000042   0x23BC             MOVS     R3,#+188
   \   00000044   0x009B             LSLS     R3,R3,#+2        ;; #+752
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x....             LDR      R0,??DataTable6
   \   0000004A   0x7801             LDRB     R1,[R0, #+0]
   \   0000004C   0x201B             MOVS     R0,#+27
   \   0000004E   0x.... 0x....      BL       man_error_set
    753          			}
    754          			break;
   \                     ??man_ota_recv_callback_7: (+1)
   \   00000052   0xE006             B        ??man_ota_recv_callback_0
    755          		default:
    756          			// エラー登録
    757          			man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, state);
   \                     ??man_ota_recv_callback_3: (+1)
   \   00000054   0x....             LDR      R3,??DataTable6_8  ;; 0x2f5
   \   00000056   0x000A             MOVS     R2,R1
   \   00000058   0x....             LDR      R0,??DataTable6
   \   0000005A   0x7801             LDRB     R1,[R0, #+0]
   \   0000005C   0x201B             MOVS     R0,#+27
   \   0000005E   0x.... 0x....      BL       man_error_set
    758          			break;
    759          		}
    760          	}
    761          }
   \                     ??man_ota_recv_callback_0: (+1)
   \   00000062   0xBD01             POP      {R0,PC}          ;; return
    762          
    763          /********************************************************************/
    764          /*	static関数                                                      */
    765          /********************************************************************/
    766          
    767          /********************************************************************/
    768          /*!
    769           * \name	man_ota_set_sequense
    770           * \brief	シーケンスを設定する
    771           * \param	sequense : 設定するシーケンス
    772           * \return  なし
    773           * \note	
    774           */
    775          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    776          static void man_ota_set_sequense( man_ota_seq_def sequense )
    777          {
   \                     man_ota_set_sequense: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    778          	if (man_ota_work.sequense != sequense) {
   \   00000002   0x....             LDR      R1,??DataTable6
   \   00000004   0x7809             LDRB     R1,[R1, #+0]
   \   00000006   0x0002             MOVS     R2,R0
   \   00000008   0xB2D2             UXTB     R2,R2
   \   0000000A   0x4291             CMP      R1,R2
   \   0000000C   0xD019             BEQ      ??man_ota_set_sequense_0
    779          		man_ota_work.sequense = sequense;
   \   0000000E   0x....             LDR      R1,??DataTable6
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    780          		man_ota_work.seq_log[man_ota_work.seq_wp] = sequense;
   \   00000012   0x....             LDR      R1,??DataTable6
   \   00000014   0x....             LDR      R2,??DataTable6_9
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0x1889             ADDS     R1,R1,R2
   \   0000001A   0x....             LDR      R2,??DataTable6_10  ;; 0x255
   \   0000001C   0x5488             STRB     R0,[R1, R2]
    781          		man_ota_work.seq_wp++;
   \   0000001E   0x....             LDR      R1,??DataTable6_9
   \   00000020   0x6809             LDR      R1,[R1, #+0]
   \   00000022   0x1C49             ADDS     R1,R1,#+1
   \   00000024   0x....             LDR      R2,??DataTable6_9
   \   00000026   0x6011             STR      R1,[R2, #+0]
    782          		if (man_ota_work.seq_wp >= 100) {
   \   00000028   0x....             LDR      R1,??DataTable6_9
   \   0000002A   0x6809             LDR      R1,[R1, #+0]
   \   0000002C   0x2964             CMP      R1,#+100
   \   0000002E   0xDB02             BLT      ??man_ota_set_sequense_1
    783          			man_ota_work.seq_wp = 0;
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x....             LDR      R2,??DataTable6_9
   \   00000034   0x6011             STR      R1,[R2, #+0]
    784          		}
    785          
    786          		// デバックログに登録 
    787          		man_dbglog_setting(MAN_ERROR_DBG_MAN_OTA, MAN_ERROR_DBG_TYPE_SEQ, sequense);
   \                     ??man_ota_set_sequense_1: (+1)
   \   00000036   0xB2C0             UXTB     R0,R0
   \   00000038   0x0002             MOVS     R2,R0
   \   0000003A   0x2101             MOVS     R1,#+1
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0x.... 0x....      BL       man_dbglog_setting
    788          
    789          #ifdef GNSS_DEBUG_MAN_OTA 
    790          			int32_t		length;
    791          			sprintf((char *)&man_ota_work.buff[0], "OTA SEQ(%d)\n", sequense);
    792          			length = strlen((char const *)&man_ota_work.buff[0]);
    793          			man_usb_data_send(&man_ota_work.buff[0], length);
    794          #endif
    795          
    796          	}
    797          }
   \                     ??man_ota_set_sequense_0: (+1)
   \   00000042   0xBD01             POP      {R0,PC}          ;; return
    798          
    799          
    800          /********************************************************************/
    801          /*!
    802           * \name	man_ota_check_summ_data
    803           * \brief	チェックサムデータを確認する処理
    804           * \param	flash_addr   : チェックサム格納アドレス
    805           *          summ_data    : 計算したチェックサムデータ
    806           * \return   0 : 一致
    807           *          -1: 不一致
    808           * \note	
    809           */
    810          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    811          static int32_t man_ota_check_summ_data(int32_t flash_addr, int32_t summ_data)
    812          {
   \                     man_ota_check_summ_data: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000D             MOVS     R5,R1
    813          	uint8_t		data[4];
    814          	int32_t		ret=-1;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x43E4             MVNS     R4,R4            ;; #-1
    815          	int32_t		sts;
    816          	uint32_t	summ=0;
   \   00000008   0x2100             MOVS     R1,#+0
    817          
    818          	sts = man_flash_read(flash_addr, &data[0], 4);
   \   0000000A   0x2204             MOVS     R2,#+4
   \   0000000C   0x4669             MOV      R1,SP
   \   0000000E   0x.... 0x....      BL       man_flash_read
    819          	if (sts >= 0) {
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD422             BMI      ??man_ota_check_summ_data_0
    820          		summ = data[0];
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x7801             LDRB     R1,[R0, #+0]
    821          		summ += (data[1] << 8);
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x7840             LDRB     R0,[R0, #+1]
   \   0000001E   0x0200             LSLS     R0,R0,#+8
   \   00000020   0x1809             ADDS     R1,R1,R0
    822          		summ += (data[2] << 16);
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x7880             LDRB     R0,[R0, #+2]
   \   00000026   0x0400             LSLS     R0,R0,#+16
   \   00000028   0x1809             ADDS     R1,R1,R0
    823          		summ += (data[3] << 24);
   \   0000002A   0x4668             MOV      R0,SP
   \   0000002C   0x78C0             LDRB     R0,[R0, #+3]
   \   0000002E   0x0600             LSLS     R0,R0,#+24
   \   00000030   0x1809             ADDS     R1,R1,R0
    824          		
    825          		summ += data[0];
   \   00000032   0x4668             MOV      R0,SP
   \   00000034   0x7800             LDRB     R0,[R0, #+0]
   \   00000036   0x1809             ADDS     R1,R1,R0
    826          		summ += data[1];
   \   00000038   0x4668             MOV      R0,SP
   \   0000003A   0x7840             LDRB     R0,[R0, #+1]
   \   0000003C   0x1809             ADDS     R1,R1,R0
    827          		summ += data[2];
   \   0000003E   0x4668             MOV      R0,SP
   \   00000040   0x7880             LDRB     R0,[R0, #+2]
   \   00000042   0x1809             ADDS     R1,R1,R0
    828          		summ += data[3];
   \   00000044   0x4668             MOV      R0,SP
   \   00000046   0x78C0             LDRB     R0,[R0, #+3]
   \   00000048   0x1809             ADDS     R1,R1,R0
    829          		
    830          		if (summ == summ_data) {
   \   0000004A   0x42A9             CMP      R1,R5
   \   0000004C   0xD101             BNE      ??man_ota_check_summ_data_1
    831          			ret = 0;
   \   0000004E   0x2400             MOVS     R4,#+0
   \   00000050   0xE004             B        ??man_ota_check_summ_data_0
    832          		}
    833          		else {
    834          			// エラー登録
    835          			man_error_setting(MAN_ERROR_MAN_OTA, summ, summ_data);
   \                     ??man_ota_check_summ_data_1: (+1)
   \   00000052   0x....             LDR      R3,??DataTable6_11  ;; 0x343
   \   00000054   0x002A             MOVS     R2,R5
   \   00000056   0x201B             MOVS     R0,#+27
   \   00000058   0x.... 0x....      BL       man_error_set
    836          		}
    837          	}
    838          	
    839          	return ret;
   \                     ??man_ota_check_summ_data_0: (+1)
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    840          }
    841          
    842          
    843          /********************************************************************/
    844          /*	extern関数                                                      */
    845          /********************************************************************/
    846          
    847          /********************************************************************/
    848          /*!
    849           * \name	man_ota_init
    850           * \brief	OTA管理の初期化処理
    851           * \param	なし
    852           * \return  なし
    853           * \note	起動時に、呼ばれること
    854           */
    855          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    856          void man_ota_init(void)
    857          {
   \                     man_ota_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    858          	// 内部変数を初期化する
    859          	memset(&man_ota_work, 0, sizeof(man_ota_work_t));
   \   00000002   0x21CA             MOVS     R1,#+202
   \   00000004   0x0089             LSLS     R1,R1,#+2        ;; #+808
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x....             LDR      R4,??DataTable6
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       __aeabi_memset
    860                  man_ota_work.data_buff = sysmgr_buf;
   \   00000010   0x....             LDR      R0,??DataTable6_12
   \   00000012   0x....             LDR      R1,??DataTable6_13
   \   00000014   0x6008             STR      R0,[R1, #+0]
    861                  man_ota_work.resp_cmd.data = &sysmgr_buf[MAN_OTA_DATA_BUFF_MAX];
   \   00000016   0x....             LDR      R0,??DataTable6_14
   \   00000018   0x....             LDR      R1,??DataTable6_6
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    862          	
    863          	// 状態変化の通知を依頼する
    864          	man_http_ftp_state(MAN_FTP_NOTI_STATE, man_ota_noti_callback);
   \   0000001C   0x....             LDR      R1,??DataTable6_15
   \   0000001E   0x20FA             MOVS     R0,#+250
   \   00000020   0x0080             LSLS     R0,R0,#+2        ;; #+1000
   \   00000022   0x.... 0x....      BL       man_http_ftp_state
    865          	
    866          	// OTA用に受信した終了データの通知を依頼する
    867          	man_gps_ota_resp_end(0, man_ota_recv_callback);
   \   00000026   0x....             LDR      R1,??DataTable6_16
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       man_gps_ota_resp_end
    868          }
   \   0000002E   0xBD10             POP      {R4,PC}          ;; return
    869          
    870          
    871          /********************************************************************/
    872          /*!
    873           * \name	man_otae_main
    874           * \brief	OTA管理のメイン処理
    875           * \param	なし
    876           * \return  なし
    877           * \note	毎回、呼ばれること
    878           */
    879          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
    880          void man_ota_main( void )
    881          {
   \                     man_ota_main: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB0BF             SUB      SP,SP,#+252
    882          	man_data_num_otastart_t		*otastart = man_data_get_setting_otastart();
   \   00000004   0x.... 0x....      BL       man_data_get_setting_otastart
   \   00000008   0x9000             STR      R0,[SP, #+0]
    883          	man_data_num_gpsota_t		*gpsota = man_data_get_setting_gpsota();
   \   0000000A   0x.... 0x....      BL       man_data_get_setting_gpsota
   \   0000000E   0x0004             MOVS     R4,R0
    884          	man_data_num_usbota_t		*usbota = man_data_get_setting_usbota();
   \   00000010   0x.... 0x....      BL       man_data_get_setting_usbota
   \   00000014   0x9001             STR      R0,[SP, #+4]
    885          	man_data_num_usbgpsota_t	*usbgpsota = man_data_get_setting_usbgpsota();
   \   00000016   0x.... 0x....      BL       man_data_get_setting_usbgpsota
   \   0000001A   0x0007             MOVS     R7,R0
    886          	man_usb_get_file_info_t		*usb_get_file_info;
    887          	man_data_num_ftp_t			*ftpinfo = man_data_get_ftp_info();
   \   0000001C   0x.... 0x....      BL       man_data_get_ftp_info
    888          	man_data_get_sensor_t		*sensor = man_data_get_sensor();
   \   00000020   0x.... 0x....      BL       man_data_get_sensor
   \   00000024   0x0006             MOVS     R6,R0
    889          	uint32_t					flash_top;
    890          	int32_t						ret;
    891          	int32_t						sts;
    892          	int32_t						length;
    893          	int32_t						i;
    894          	uint32_t					delay;
    895          	sts = man_http_get_status();
   \   00000026   0x.... 0x....      BL       man_http_get_status
   \   0000002A   0x0005             MOVS     R5,R0
    896          
    897          
    898          	// 応答処理
    899          	if (man_ota_work.resp_cmd.flag == 1) {
   \   0000002C   0x4876             LDR      R0,??man_ota_main_0
   \   0000002E   0x6F40             LDR      R0,[R0, #+116]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD000             BEQ      .+4
   \   00000034   0xE22D             B        ??man_ota_main_1
    900          		man_ota_work.resp_cmd.flag = 0;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x4973             LDR      R1,??man_ota_main_0
   \   0000003A   0x6748             STR      R0,[R1, #+116]
    901          
    902          
    903          		// 正常応答
    904          		if (man_ota_work.resp_cmd.status >= 0) {
   \   0000003C   0x4872             LDR      R0,??man_ota_main_0
   \   0000003E   0x6FC0             LDR      R0,[R0, #+124]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD500             BPL      .+4
   \   00000044   0xE11A             B        ??man_ota_main_2
    905          #ifdef ADLINK_DEBUG_MESSAGE
    906                            int splen = sprintf(print_buf,"OTA Command:%s\n\r",comstr[man_ota_work.resp_cmd.id]);
    907                             sysmgr_log_usb(print_buf,splen);
    908          #endif
    909                             switch (man_ota_work.resp_cmd.id) {
   \   00000046   0x4870             LDR      R0,??man_ota_main_0
   \   00000048   0x6F80             LDR      R0,[R0, #+120]
   \   0000004A   0x2802             CMP      R0,#+2
   \   0000004C   0xD06B             BEQ      ??man_ota_main_3
   \   0000004E   0x2806             CMP      R0,#+6
   \   00000050   0xD06D             BEQ      ??man_ota_main_4
   \   00000052   0x280A             CMP      R0,#+10
   \   00000054   0xD06F             BEQ      ??man_ota_main_5
   \   00000056   0x280E             CMP      R0,#+14
   \   00000058   0xD071             BEQ      ??man_ota_main_6
   \   0000005A   0x2811             CMP      R0,#+17
   \   0000005C   0xD073             BEQ      ??man_ota_main_7
   \   0000005E   0x2815             CMP      R0,#+21
   \   00000060   0xD075             BEQ      ??man_ota_main_8
   \   00000062   0x2818             CMP      R0,#+24
   \   00000064   0xD077             BEQ      ??man_ota_main_9
   \   00000066   0x281C             CMP      R0,#+28
   \   00000068   0xD079             BEQ      ??man_ota_main_10
   \   0000006A   0x281F             CMP      R0,#+31
   \   0000006C   0xD100             BNE      .+4
   \   0000006E   0xE07E             B        ??man_ota_main_11
   \   00000070   0x2824             CMP      R0,#+36
   \   00000072   0xD100             BNE      .+4
   \   00000074   0xE07F             B        ??man_ota_main_12
   \   00000076   0x2828             CMP      R0,#+40
   \   00000078   0xD100             BNE      .+4
   \   0000007A   0xE080             B        ??man_ota_main_13
   \   0000007C   0x282C             CMP      R0,#+44
   \   0000007E   0xD100             BNE      .+4
   \   00000080   0xE081             B        ??man_ota_main_14
   \   00000082   0x2834             CMP      R0,#+52
   \   00000084   0xD100             BNE      .+4
   \   00000086   0xE082             B        ??man_ota_main_15
   \   00000088   0x2838             CMP      R0,#+56
   \   0000008A   0xD100             BNE      .+4
   \   0000008C   0xE083             B        ??man_ota_main_16
   \   0000008E   0x283C             CMP      R0,#+60
   \   00000090   0xD100             BNE      .+4
   \   00000092   0xE084             B        ??man_ota_main_17
   \   00000094   0x2840             CMP      R0,#+64
   \   00000096   0xD100             BNE      .+4
   \   00000098   0xE085             B        ??man_ota_main_18
   \   0000009A   0x2844             CMP      R0,#+68
   \   0000009C   0xD100             BNE      .+4
   \   0000009E   0xE0B9             B        ??man_ota_main_19
   \   000000A0   0x2848             CMP      R0,#+72
   \   000000A2   0xD100             BNE      .+4
   \   000000A4   0xE083             B        ??man_ota_main_20
   \   000000A6   0x284C             CMP      R0,#+76
   \   000000A8   0xD100             BNE      .+4
   \   000000AA   0xE084             B        ??man_ota_main_21
   \   000000AC   0x2851             CMP      R0,#+81
   \   000000AE   0xD100             BNE      .+4
   \   000000B0   0xE085             B        ??man_ota_main_22
   \   000000B2   0x2855             CMP      R0,#+85
   \   000000B4   0xD100             BNE      .+4
   \   000000B6   0xE086             B        ??man_ota_main_23
   \   000000B8   0x285A             CMP      R0,#+90
   \   000000BA   0xD100             BNE      .+4
   \   000000BC   0xE087             B        ??man_ota_main_24
   \   000000BE   0x285E             CMP      R0,#+94
   \   000000C0   0xD100             BNE      .+4
   \   000000C2   0xE088             B        ??man_ota_main_25
   \   000000C4   0x2863             CMP      R0,#+99
   \   000000C6   0xD100             BNE      .+4
   \   000000C8   0xE089             B        ??man_ota_main_26
   \   000000CA   0x2867             CMP      R0,#+103
   \   000000CC   0xD100             BNE      .+4
   \   000000CE   0xE08A             B        ??man_ota_main_27
   \   000000D0   0x286C             CMP      R0,#+108
   \   000000D2   0xD100             BNE      .+4
   \   000000D4   0xE08B             B        ??man_ota_main_28
   \   000000D6   0x2870             CMP      R0,#+112
   \   000000D8   0xD100             BNE      .+4
   \   000000DA   0xE08C             B        ??man_ota_main_29
   \   000000DC   0x2877             CMP      R0,#+119
   \   000000DE   0xD100             BNE      .+4
   \   000000E0   0xE09C             B        ??man_ota_main_30
   \   000000E2   0x287B             CMP      R0,#+123
   \   000000E4   0xD100             BNE      .+4
   \   000000E6   0xE09D             B        ??man_ota_main_31
   \   000000E8   0x287F             CMP      R0,#+127
   \   000000EA   0xD100             BNE      .+4
   \   000000EC   0xE0A6             B        ??man_ota_main_32
   \   000000EE   0x2883             CMP      R0,#+131
   \   000000F0   0xD100             BNE      .+4
   \   000000F2   0xE0A7             B        ??man_ota_main_33
   \   000000F4   0x2887             CMP      R0,#+135
   \   000000F6   0xD100             BNE      .+4
   \   000000F8   0xE0A8             B        ??man_ota_main_34
   \   000000FA   0x288B             CMP      R0,#+139
   \   000000FC   0xD100             BNE      .+4
   \   000000FE   0xE0A9             B        ??man_ota_main_35
   \   00000100   0x288F             CMP      R0,#+143
   \   00000102   0xD100             BNE      .+4
   \   00000104   0xE0AA             B        ??man_ota_main_36
   \   00000106   0x2893             CMP      R0,#+147
   \   00000108   0xD100             BNE      .+4
   \   0000010A   0xE0AB             B        ??man_ota_main_37
   \   0000010C   0x2897             CMP      R0,#+151
   \   0000010E   0xD100             BNE      .+4
   \   00000110   0xE0AC             B        ??man_ota_main_38
   \   00000112   0x289B             CMP      R0,#+155
   \   00000114   0xD100             BNE      .+4
   \   00000116   0xE0AD             B        ??man_ota_main_39
   \   00000118   0x28A3             CMP      R0,#+163
   \   0000011A   0xD100             BNE      .+4
   \   0000011C   0xE086             B        ??man_ota_main_40
   \   0000011E   0x28A6             CMP      R0,#+166
   \   00000120   0xD100             BNE      .+4
   \   00000122   0xE087             B        ??man_ota_main_41
   \   00000124   0xE1B5             B        ??man_ota_main_1
    910          			// コマンド応答待ち
    911          			case MAN_OTA_SEQ_OTA_WAIT:
    912          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_WAIT_OK);
   \                     ??man_ota_main_3: (+1)
   \   00000126   0x2003             MOVS     R0,#+3
   \   00000128   0x.... 0x....      BL       man_ota_set_sequense
    913          				break;
   \   0000012C   0xE1B1             B        ??man_ota_main_1
    914          
    915          			// OTA開始
    916          			case MAN_OTA_SEQ_OTA_START:
    917          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_START_OK);
   \                     ??man_ota_main_4: (+1)
   \   0000012E   0x2007             MOVS     R0,#+7
   \   00000130   0x.... 0x....      BL       man_ota_set_sequense
    918          				break;
   \   00000134   0xE1AD             B        ??man_ota_main_1
    919          
    920          			// FLASH ERASE開始
    921          			case MAN_OTA_SEQ_OTA_FLASH_ERASE:
    922          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FLASH_ERASE_OK);
   \                     ??man_ota_main_5: (+1)
   \   00000136   0x200B             MOVS     R0,#+11
   \   00000138   0x.... 0x....      BL       man_ota_set_sequense
    923          				break;
   \   0000013C   0xE1A9             B        ??man_ota_main_1
    924          
    925          			// 端末用 OTA  FTPリカバリ安定待ち
    926          			case MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT:
    927          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT_OK);
   \                     ??man_ota_main_6: (+1)
   \   0000013E   0x200F             MOVS     R0,#+15
   \   00000140   0x.... 0x....      BL       man_ota_set_sequense
    928          				break;
   \   00000144   0xE1A5             B        ??man_ota_main_1
    929          					
    930          			// FTPリカバリ
    931          			case MAN_OTA_SEQ_TERM_OTA_FTP_RECO:
    932          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_OK);
   \                     ??man_ota_main_7: (+1)
   \   00000146   0x2012             MOVS     R0,#+18
   \   00000148   0x.... 0x....      BL       man_ota_set_sequense
    933          				break;
   \   0000014C   0xE1A1             B        ??man_ota_main_1
    934          
    935          			// FTP初期化
    936          			case MAN_OTA_SEQ_OTA_FTP_INIT:				// OTA  FTP初期化
    937          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_INIT_OK);
   \                     ??man_ota_main_8: (+1)
   \   0000014E   0x2016             MOVS     R0,#+22
   \   00000150   0x.... 0x....      BL       man_ota_set_sequense
    938          				break;
   \   00000154   0xE19D             B        ??man_ota_main_1
    939          
    940          			// FTP OPEN
    941          			case MAN_OTA_SEQ_OTA_FTP_OPEN:				// OTA  FTP OPEN
    942          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_OPEN_OK);
   \                     ??man_ota_main_9: (+1)
   \   00000156   0x2019             MOVS     R0,#+25
   \   00000158   0x.... 0x....      BL       man_ota_set_sequense
    943          				break;
   \   0000015C   0xE199             B        ??man_ota_main_1
    944          
    945          			// FTP GET
    946          			case MAN_OTA_SEQ_OTA_FTP_GET:				// OTA  FTP GET
    947          				if (man_ota_work.sequense == MAN_OTA_SEQ_OTA_FTP_GET) {
   \                     ??man_ota_main_10: (+1)
   \   0000015E   0x482A             LDR      R0,??man_ota_main_0
   \   00000160   0x7800             LDRB     R0,[R0, #+0]
   \   00000162   0x281C             CMP      R0,#+28
   \   00000164   0xD102             BNE      ??man_ota_main_42
    948          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_OK);
   \   00000166   0x201D             MOVS     R0,#+29
   \   00000168   0x.... 0x....      BL       man_ota_set_sequense
    949          				}
    950          				break;
   \                     ??man_ota_main_42: (+1)
   \   0000016C   0xE191             B        ??man_ota_main_1
    951          
    952          			// FTP GET NG後に300秒経過
    953          			case MAN_OTA_SEQ_OTA_FTP_GET_NG_W:
    954          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_NG_W_OK);
   \                     ??man_ota_main_11: (+1)
   \   0000016E   0x2020             MOVS     R0,#+32
   \   00000170   0x.... 0x....      BL       man_ota_set_sequense
    955          				break;
   \   00000174   0xE18D             B        ??man_ota_main_1
    956          
    957          			// FTP DELAY
    958          			case MAN_OTA_SEQ_OTA_FTP_DELAY:				// OTA  FTP DELAY
    959          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_DELAY_OK);
   \                     ??man_ota_main_12: (+1)
   \   00000176   0x2025             MOVS     R0,#+37
   \   00000178   0x.... 0x....      BL       man_ota_set_sequense
    960          				break;
   \   0000017C   0xE189             B        ??man_ota_main_1
    961          
    962          			// TERM FILE GET
    963          			case MAN_OTA_SEQ_TERM_OTA_FILE_GET:			// 端末用 OTA  FILE GET
    964          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_GET_OK);
   \                     ??man_ota_main_13: (+1)
   \   0000017E   0x2029             MOVS     R0,#+41
   \   00000180   0x.... 0x....      BL       man_ota_set_sequense
    965          				break;
   \   00000184   0xE185             B        ??man_ota_main_1
    966          
    967          			// 内部FLASH ERASE
    968          			case MAN_OTA_SEQ_TERM_OTA_ERASE:
    969          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_ERASE_OK);
   \                     ??man_ota_main_14: (+1)
   \   00000186   0x202D             MOVS     R0,#+45
   \   00000188   0x.... 0x....      BL       man_ota_set_sequense
    970          				break;
   \   0000018C   0xE181             B        ??man_ota_main_1
    971          
    972          			// GPS OTA START
    973          			case MAN_OTA_SEQ_GPS_OTA_START:
    974          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_START_OK);
   \                     ??man_ota_main_15: (+1)
   \   0000018E   0x2035             MOVS     R0,#+53
   \   00000190   0x.... 0x....      BL       man_ota_set_sequense
    975          				break;
   \   00000194   0xE17D             B        ??man_ota_main_1
    976          				
    977          			// UPDATER FILE GET
    978          			case MAN_OTA_SEQ_UPDATER_FILE_GET:
    979          				man_ota_set_sequense(MAN_OTA_SEQ_UPDATER_FILE_GET_OK);
   \                     ??man_ota_main_16: (+1)
   \   00000196   0x2039             MOVS     R0,#+57
   \   00000198   0x.... 0x....      BL       man_ota_set_sequense
    980          				break;
   \   0000019C   0xE179             B        ??man_ota_main_1
    981          
    982          			// CONFIG FILE GET
    983          			case MAN_OTA_SEQ_CONFIG_FILE_GET:
    984          				man_ota_set_sequense(MAN_OTA_SEQ_CONFIG_FILE_GET_OK);
   \                     ??man_ota_main_17: (+1)
   \   0000019E   0x203D             MOVS     R0,#+61
   \   000001A0   0x.... 0x....      BL       man_ota_set_sequense
    985          				break;
   \   000001A4   0xE175             B        ??man_ota_main_1
    986          
    987          			// FIRMWARE FILE GET
    988          			case MAN_OTA_SEQ_FIRMWARE_FILE_GET:
    989          				man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_FILE_GET_OK);
   \                     ??man_ota_main_18: (+1)
   \   000001A6   0x2041             MOVS     R0,#+65
   \   000001A8   0x.... 0x....      BL       man_ota_set_sequense
    990          				break;
   \   000001AC   0xE171             B        ??man_ota_main_1
    991          
    992          			// GPS RESET
    993          			case MAN_OTA_SEQ_GPS_RETRY:
    994          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_RETRY_OK);
   \                     ??man_ota_main_20: (+1)
   \   000001AE   0x2049             MOVS     R0,#+73
   \   000001B0   0x.... 0x....      BL       man_ota_set_sequense
    995          				break;
   \   000001B4   0xE16D             B        ??man_ota_main_1
    996          
    997          			// UDL_SET
    998          			case MAN_OTA_SEQ_UDL_SET:
    999          				man_ota_set_sequense(MAN_OTA_SEQ_UDL_SET_OK);
   \                     ??man_ota_main_21: (+1)
   \   000001B6   0x204D             MOVS     R0,#+77
   \   000001B8   0x.... 0x....      BL       man_ota_set_sequense
   1000          				break;
   \   000001BC   0xE169             B        ??man_ota_main_1
   1001          
   1002          			// UDLPKT_NEXT
   1003          			case MAN_OTA_SEQ_UDLPKT_NEXT:
   1004          				man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_NEXT_OK);
   \                     ??man_ota_main_22: (+1)
   \   000001BE   0x2052             MOVS     R0,#+82
   \   000001C0   0x.... 0x....      BL       man_ota_set_sequense
   1005          				break;
   \   000001C4   0xE165             B        ??man_ota_main_1
   1006          
   1007          			// UDLPKT_END
   1008          			case MAN_OTA_SEQ_UDLPKT_END:
   1009          				man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_END_OK);
   \                     ??man_ota_main_23: (+1)
   \   000001C6   0x2056             MOVS     R0,#+86
   \   000001C8   0x.... 0x....      BL       man_ota_set_sequense
   1010          				break;
   \   000001CC   0xE161             B        ??man_ota_main_1
   1011          
   1012          			// UDLPKT_DONE_WAIT
   1013          			case MAN_OTA_SEQ_UDLPKT_DONE_WAIT:
   1014          				man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_DONE_WAIT_OK);
   \                     ??man_ota_main_24: (+1)
   \   000001CE   0x205B             MOVS     R0,#+91
   \   000001D0   0x.... 0x....      BL       man_ota_set_sequense
   1015          				break;
   \   000001D4   0xE15D             B        ??man_ota_main_1
   1016          
   1017          			// FDL_SET
   1018          			case MAN_OTA_SEQ_FDL_SET:
   1019          				man_ota_set_sequense(MAN_OTA_SEQ_FDL_SET_OK);
   \                     ??man_ota_main_25: (+1)
   \   000001D6   0x205F             MOVS     R0,#+95
   \   000001D8   0x.... 0x....      BL       man_ota_set_sequense
   1020          				break;
   \   000001DC   0xE159             B        ??man_ota_main_1
   1021          
   1022          			// CFGPKT_NEXT
   1023          			case MAN_OTA_SEQ_CFGPKT_NEXT:
   1024          				man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_NEXT_OK);
   \                     ??man_ota_main_26: (+1)
   \   000001DE   0x2064             MOVS     R0,#+100
   \   000001E0   0x.... 0x....      BL       man_ota_set_sequense
   1025          				break;
   \   000001E4   0xE155             B        ??man_ota_main_1
   1026          
   1027          			// CFGPKT_END
   1028          			case MAN_OTA_SEQ_CFGPKT_END:
   1029          				man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_END_OK);
   \                     ??man_ota_main_27: (+1)
   \   000001E6   0x2068             MOVS     R0,#+104
   \   000001E8   0x.... 0x....      BL       man_ota_set_sequense
   1030          				break;
   \   000001EC   0xE151             B        ??man_ota_main_1
   1031          
   1032          			// FRMPKT_NEXT
   1033          			case MAN_OTA_SEQ_FRMPKT_NEXT:
   1034          				man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_NEXT_OK);
   \                     ??man_ota_main_28: (+1)
   \   000001EE   0x206D             MOVS     R0,#+109
   \   000001F0   0x.... 0x....      BL       man_ota_set_sequense
   1035          				break;
   \   000001F4   0xE14D             B        ??man_ota_main_1
   1036          
   1037          			// FRMPKT_END
   1038          			case MAN_OTA_SEQ_FRMPKT_END:
   1039          				// RETRY応答の場合
   1040          				if (man_ota_work.resp_cmd.status == MAN_GPS_STATUS_RETRY) {
   \                     ??man_ota_main_29: (+1)
   \   000001F6   0x4804             LDR      R0,??man_ota_main_0
   \   000001F8   0x6FC0             LDR      R0,[R0, #+124]
   \   000001FA   0x2801             CMP      R0,#+1
   \   000001FC   0xD106             BNE      ??man_ota_main_43
   1041          					man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_END_RETRY);
   \   000001FE   0x2073             MOVS     R0,#+115
   \   00000200   0x.... 0x....      BL       man_ota_set_sequense
   \   00000204   0xE005             B        ??man_ota_main_44
   \   00000206   0xBF00             Nop      
   \                     ??man_ota_main_0:
   \   00000208   0x........         DC32     man_ota_work
   1042          				}
   1043          				else {
   1044          					man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_END_OK);
   \                     ??man_ota_main_43: (+1)
   \   0000020C   0x2071             MOVS     R0,#+113
   \   0000020E   0x.... 0x....      BL       man_ota_set_sequense
   1045          				}
   1046          				break;
   \                     ??man_ota_main_44: (+1)
   \   00000212   0xE13E             B        ??man_ota_main_1
   1047          
   1048          			//GPS SET
   1049          			case MAN_OTA_SEQ_GPS_OTA_SET:
   1050          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_SET_OK);
   \                     ??man_ota_main_19: (+1)
   \   00000214   0x2045             MOVS     R0,#+69
   \   00000216   0x.... 0x....      BL       man_ota_set_sequense
   1051          				break;
   \   0000021A   0xE13A             B        ??man_ota_main_1
   1052          
   1053          			// firmware注入安定(1000ms)待ち
   1054          			case MAN_OTA_SEQ_FIRMWARE_END_WAIT:
   1055          				man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_END_WAIT_OK);
   \                     ??man_ota_main_30: (+1)
   \   0000021C   0x2078             MOVS     R0,#+120
   \   0000021E   0x.... 0x....      BL       man_ota_set_sequense
   1056          				break;
   \   00000222   0xE136             B        ??man_ota_main_1
   1057          
   1058          			// OTA復帰開始
   1059          			case MAN_OTA_SEQ_GPS_OTA_RETRY:
   1060          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_RETRY_OK);
   \                     ??man_ota_main_31: (+1)
   \   00000224   0x207C             MOVS     R0,#+124
   \   00000226   0x.... 0x....      BL       man_ota_set_sequense
   1061          				break;
   \   0000022A   0xE132             B        ??man_ota_main_1
   1062          
   1063          			// OTA END
   1064          			case MAN_OTA_SEQ_OTA_END:					// OTA終了
   1065          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_OK);
   \                     ??man_ota_main_40: (+1)
   \   0000022C   0x20A4             MOVS     R0,#+164
   \   0000022E   0x.... 0x....      BL       man_ota_set_sequense
   1066          				break;
   \   00000232   0xE12E             B        ??man_ota_main_1
   1067          
   1068          			// GPS再開
   1069          			case MAN_OTA_SEQ_OTA_GPS_START:				// OTA  GPS再開
   1070          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_GPS_START_OK);
   \                     ??man_ota_main_41: (+1)
   \   00000234   0x20A7             MOVS     R0,#+167
   \   00000236   0x.... 0x....      BL       man_ota_set_sequense
   1071          				break;
   \   0000023A   0xE12A             B        ??man_ota_main_1
   1072          
   1073          			// USB 端末用 OTA FILE SET
   1074          			case MAN_OTA_SEQ_USB_TERM_FILE_SET:
   1075          				man_ota_set_sequense(MAN_OTA_SEQ_USB_TERM_FILE_SET_OK);
   \                     ??man_ota_main_32: (+1)
   \   0000023C   0x2080             MOVS     R0,#+128
   \   0000023E   0x.... 0x....      BL       man_ota_set_sequense
   1076          				break;
   \   00000242   0xE126             B        ??man_ota_main_1
   1077          
   1078          			// USB 端末用 OTA DATA GET
   1079          			case MAN_OTA_SEQ_USB_TERM_DATA_GET:
   1080          				man_ota_set_sequense(MAN_OTA_SEQ_USB_TERM_DATA_GET_OK);
   \                     ??man_ota_main_33: (+1)
   \   00000244   0x2084             MOVS     R0,#+132
   \   00000246   0x.... 0x....      BL       man_ota_set_sequense
   1081          				break;
   \   0000024A   0xE122             B        ??man_ota_main_1
   1082          
   1083          			// USB GPS CONFIG FILE SET
   1084          			case MAN_OTA_SEQ_USB_CONFIG_FILE_SET:
   1085          				man_ota_set_sequense(MAN_OTA_SEQ_USB_CONFIG_FILE_SET_OK);
   \                     ??man_ota_main_34: (+1)
   \   0000024C   0x2088             MOVS     R0,#+136
   \   0000024E   0x.... 0x....      BL       man_ota_set_sequense
   1086          				break;
   \   00000252   0xE11E             B        ??man_ota_main_1
   1087          
   1088          			// USB GPS CONFIG DATA GET
   1089          			case MAN_OTA_SEQ_USB_CONFIG_DATA_GET:
   1090          				man_ota_set_sequense(MAN_OTA_SEQ_USB_CONFIG_DATA_GET_OK);
   \                     ??man_ota_main_35: (+1)
   \   00000254   0x208C             MOVS     R0,#+140
   \   00000256   0x.... 0x....      BL       man_ota_set_sequense
   1091          				break;
   \   0000025A   0xE11A             B        ??man_ota_main_1
   1092          
   1093          			// USB GPS UPDATER FILE SET
   1094          			case MAN_OTA_SEQ_USB_UPDATER_FILE_SET:
   1095          				man_ota_set_sequense(MAN_OTA_SEQ_USB_UPDATER_FILE_SET_OK);
   \                     ??man_ota_main_36: (+1)
   \   0000025C   0x2090             MOVS     R0,#+144
   \   0000025E   0x.... 0x....      BL       man_ota_set_sequense
   1096          				break;
   \   00000262   0xE116             B        ??man_ota_main_1
   1097          
   1098          			// USB GPS UPDATER DATA GET
   1099          			case MAN_OTA_SEQ_USB_UPDATER_DATA_GET:
   1100          				man_ota_set_sequense(MAN_OTA_SEQ_USB_UPDATER_DATA_GET_OK);
   \                     ??man_ota_main_37: (+1)
   \   00000264   0x2094             MOVS     R0,#+148
   \   00000266   0x.... 0x....      BL       man_ota_set_sequense
   1101          				break;
   \   0000026A   0xE112             B        ??man_ota_main_1
   1102          
   1103          			// USB GPS FIRMWARE FILE SET
   1104          			case MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET:
   1105          				man_ota_set_sequense(MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_OK);
   \                     ??man_ota_main_38: (+1)
   \   0000026C   0x2098             MOVS     R0,#+152
   \   0000026E   0x.... 0x....      BL       man_ota_set_sequense
   1106          				break;
   \   00000272   0xE10E             B        ??man_ota_main_1
   1107          
   1108          			// USB GPS FIRMWARE DATA GET
   1109          			case MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET:
   1110          				man_ota_set_sequense(MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_OK);
   \                     ??man_ota_main_39: (+1)
   \   00000274   0x209C             MOVS     R0,#+156
   \   00000276   0x.... 0x....      BL       man_ota_set_sequense
   1111          				break;
   \   0000027A   0xE10A             B        ??man_ota_main_1
   1112          
   1113          
   1114          			}
   1115          		}
   1116          
   1117          		// 異常応答
   1118          		else {
   1119          #ifdef ADLINK_DEBUG_MESSAGE
   1120                            int splen = sprintf(print_buf,"OTA Command:%s\n\r",comstr[man_ota_work.resp_cmd.id]);
   1121                             sysmgr_log_usb(print_buf,splen);
   1122          #endif
   1123                             switch (man_ota_work.resp_cmd.id) {
   \                     ??man_ota_main_2: (+1)
   \   0000027C   0x48A2             LDR      R0,??man_ota_main_45
   \   0000027E   0x6F80             LDR      R0,[R0, #+120]
   \   00000280   0x2802             CMP      R0,#+2
   \   00000282   0xD067             BEQ      ??man_ota_main_46
   \   00000284   0x2806             CMP      R0,#+6
   \   00000286   0xD069             BEQ      ??man_ota_main_47
   \   00000288   0x280A             CMP      R0,#+10
   \   0000028A   0xD06B             BEQ      ??man_ota_main_48
   \   0000028C   0x280E             CMP      R0,#+14
   \   0000028E   0xD06D             BEQ      ??man_ota_main_49
   \   00000290   0x2811             CMP      R0,#+17
   \   00000292   0xD06F             BEQ      ??man_ota_main_50
   \   00000294   0x2815             CMP      R0,#+21
   \   00000296   0xD071             BEQ      ??man_ota_main_51
   \   00000298   0x2818             CMP      R0,#+24
   \   0000029A   0xD073             BEQ      ??man_ota_main_52
   \   0000029C   0x281C             CMP      R0,#+28
   \   0000029E   0xD075             BEQ      ??man_ota_main_53
   \   000002A0   0x281F             CMP      R0,#+31
   \   000002A2   0xD07B             BEQ      ??man_ota_main_54
   \   000002A4   0x2824             CMP      R0,#+36
   \   000002A6   0xD07D             BEQ      ??man_ota_main_55
   \   000002A8   0x2828             CMP      R0,#+40
   \   000002AA   0xD100             BNE      .+4
   \   000002AC   0xE07E             B        ??man_ota_main_56
   \   000002AE   0x282C             CMP      R0,#+44
   \   000002B0   0xD100             BNE      .+4
   \   000002B2   0xE07F             B        ??man_ota_main_57
   \   000002B4   0x2834             CMP      R0,#+52
   \   000002B6   0xD100             BNE      .+4
   \   000002B8   0xE080             B        ??man_ota_main_58
   \   000002BA   0x2838             CMP      R0,#+56
   \   000002BC   0xD100             BNE      .+4
   \   000002BE   0xE081             B        ??man_ota_main_59
   \   000002C0   0x283C             CMP      R0,#+60
   \   000002C2   0xD100             BNE      .+4
   \   000002C4   0xE082             B        ??man_ota_main_60
   \   000002C6   0x2840             CMP      R0,#+64
   \   000002C8   0xD100             BNE      .+4
   \   000002CA   0xE083             B        ??man_ota_main_61
   \   000002CC   0x2844             CMP      R0,#+68
   \   000002CE   0xD100             BNE      .+4
   \   000002D0   0xE0AC             B        ??man_ota_main_62
   \   000002D2   0x2848             CMP      R0,#+72
   \   000002D4   0xD100             BNE      .+4
   \   000002D6   0xE081             B        ??man_ota_main_63
   \   000002D8   0x284C             CMP      R0,#+76
   \   000002DA   0xD100             BNE      .+4
   \   000002DC   0xE082             B        ??man_ota_main_64
   \   000002DE   0x2851             CMP      R0,#+81
   \   000002E0   0xD100             BNE      .+4
   \   000002E2   0xE083             B        ??man_ota_main_65
   \   000002E4   0x2855             CMP      R0,#+85
   \   000002E6   0xD100             BNE      .+4
   \   000002E8   0xE084             B        ??man_ota_main_66
   \   000002EA   0x285A             CMP      R0,#+90
   \   000002EC   0xD100             BNE      .+4
   \   000002EE   0xE085             B        ??man_ota_main_67
   \   000002F0   0x285E             CMP      R0,#+94
   \   000002F2   0xD100             BNE      .+4
   \   000002F4   0xE086             B        ??man_ota_main_68
   \   000002F6   0x2863             CMP      R0,#+99
   \   000002F8   0xD100             BNE      .+4
   \   000002FA   0xE087             B        ??man_ota_main_69
   \   000002FC   0x2867             CMP      R0,#+103
   \   000002FE   0xD100             BNE      .+4
   \   00000300   0xE088             B        ??man_ota_main_70
   \   00000302   0x286C             CMP      R0,#+108
   \   00000304   0xD100             BNE      .+4
   \   00000306   0xE089             B        ??man_ota_main_71
   \   00000308   0x2870             CMP      R0,#+112
   \   0000030A   0xD100             BNE      .+4
   \   0000030C   0xE08A             B        ??man_ota_main_72
   \   0000030E   0x2877             CMP      R0,#+119
   \   00000310   0xD100             BNE      .+4
   \   00000312   0xE08F             B        ??man_ota_main_73
   \   00000314   0x287B             CMP      R0,#+123
   \   00000316   0xD100             BNE      .+4
   \   00000318   0xE090             B        ??man_ota_main_74
   \   0000031A   0x287F             CMP      R0,#+127
   \   0000031C   0xD100             BNE      .+4
   \   0000031E   0xE099             B        ??man_ota_main_75
   \   00000320   0x2883             CMP      R0,#+131
   \   00000322   0xD100             BNE      .+4
   \   00000324   0xE09A             B        ??man_ota_main_76
   \   00000326   0x2887             CMP      R0,#+135
   \   00000328   0xD100             BNE      .+4
   \   0000032A   0xE09B             B        ??man_ota_main_77
   \   0000032C   0x288B             CMP      R0,#+139
   \   0000032E   0xD100             BNE      .+4
   \   00000330   0xE09C             B        ??man_ota_main_78
   \   00000332   0x288F             CMP      R0,#+143
   \   00000334   0xD100             BNE      .+4
   \   00000336   0xE09D             B        ??man_ota_main_79
   \   00000338   0x2893             CMP      R0,#+147
   \   0000033A   0xD100             BNE      .+4
   \   0000033C   0xE09E             B        ??man_ota_main_80
   \   0000033E   0x2897             CMP      R0,#+151
   \   00000340   0xD100             BNE      .+4
   \   00000342   0xE09F             B        ??man_ota_main_81
   \   00000344   0x289B             CMP      R0,#+155
   \   00000346   0xD100             BNE      .+4
   \   00000348   0xE0A0             B        ??man_ota_main_82
   \   0000034A   0x28A3             CMP      R0,#+163
   \   0000034C   0xD07A             BEQ      ??man_ota_main_83
   \   0000034E   0x28A6             CMP      R0,#+166
   \   00000350   0xD07C             BEQ      ??man_ota_main_84
   \   00000352   0xE09E             B        ??man_ota_main_1
   1124          			// コマンド応答待ち
   1125          			case MAN_OTA_SEQ_OTA_WAIT:
   1126          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_WAIT_NG);
   \                     ??man_ota_main_46: (+1)
   \   00000354   0x2004             MOVS     R0,#+4
   \   00000356   0x.... 0x....      BL       man_ota_set_sequense
   1127          				break;
   \   0000035A   0xE09A             B        ??man_ota_main_1
   1128          
   1129          			// OTA開始
   1130          			case MAN_OTA_SEQ_OTA_START:
   1131          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_START_NG);
   \                     ??man_ota_main_47: (+1)
   \   0000035C   0x2008             MOVS     R0,#+8
   \   0000035E   0x.... 0x....      BL       man_ota_set_sequense
   1132          				break;
   \   00000362   0xE096             B        ??man_ota_main_1
   1133          
   1134          			// FLASH ERASE開始
   1135          			case MAN_OTA_SEQ_OTA_FLASH_ERASE:
   1136          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FLASH_ERASE_NG);
   \                     ??man_ota_main_48: (+1)
   \   00000364   0x200C             MOVS     R0,#+12
   \   00000366   0x.... 0x....      BL       man_ota_set_sequense
   1137          				break;
   \   0000036A   0xE092             B        ??man_ota_main_1
   1138          
   1139          			// 端末用 OTA  FTPリカバリ安定待ち
   1140          			case MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT:
   1141          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT_NG);
   \                     ??man_ota_main_49: (+1)
   \   0000036C   0x2010             MOVS     R0,#+16
   \   0000036E   0x.... 0x....      BL       man_ota_set_sequense
   1142          				break;
   \   00000372   0xE08E             B        ??man_ota_main_1
   1143          
   1144          			// FTPリカバリ
   1145          			case MAN_OTA_SEQ_TERM_OTA_FTP_RECO:
   1146          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_NG);
   \                     ??man_ota_main_50: (+1)
   \   00000374   0x2013             MOVS     R0,#+19
   \   00000376   0x.... 0x....      BL       man_ota_set_sequense
   1147          				break;
   \   0000037A   0xE08A             B        ??man_ota_main_1
   1148          
   1149          			// FTP初期化
   1150          			case MAN_OTA_SEQ_OTA_FTP_INIT:				// OTA  FTP初期化
   1151          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_INIT_NG);
   \                     ??man_ota_main_51: (+1)
   \   0000037C   0x2017             MOVS     R0,#+23
   \   0000037E   0x.... 0x....      BL       man_ota_set_sequense
   1152          				break;
   \   00000382   0xE086             B        ??man_ota_main_1
   1153          
   1154          			// FTP OPEN
   1155          			case MAN_OTA_SEQ_OTA_FTP_OPEN:				// OTA  FTP OPEN
   1156          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_OPEN_NG);
   \                     ??man_ota_main_52: (+1)
   \   00000384   0x201A             MOVS     R0,#+26
   \   00000386   0x.... 0x....      BL       man_ota_set_sequense
   1157          				break;
   \   0000038A   0xE082             B        ??man_ota_main_1
   1158          
   1159          			// FTP GET
   1160          			case MAN_OTA_SEQ_OTA_FTP_GET:				// OTA  FTP GET
   1161          				if (man_ota_work.sequense == MAN_OTA_SEQ_OTA_FTP_GET) {
   \                     ??man_ota_main_53: (+1)
   \   0000038C   0x485E             LDR      R0,??man_ota_main_45
   \   0000038E   0x7800             LDRB     R0,[R0, #+0]
   \   00000390   0x281C             CMP      R0,#+28
   \   00000392   0xD102             BNE      ??man_ota_main_85
   1162          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_NG);
   \   00000394   0x201E             MOVS     R0,#+30
   \   00000396   0x.... 0x....      BL       man_ota_set_sequense
   1163          				}
   1164          				break;
   \                     ??man_ota_main_85: (+1)
   \   0000039A   0xE07A             B        ??man_ota_main_1
   1165          
   1166          			// FTP GET NG後に300秒経過
   1167          			case MAN_OTA_SEQ_OTA_FTP_GET_NG_W:
   1168          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_NG_W_NG);
   \                     ??man_ota_main_54: (+1)
   \   0000039C   0x2021             MOVS     R0,#+33
   \   0000039E   0x.... 0x....      BL       man_ota_set_sequense
   1169          				break;
   \   000003A2   0xE076             B        ??man_ota_main_1
   1170          
   1171          			// FTP DELAY
   1172          			case MAN_OTA_SEQ_OTA_FTP_DELAY:				// OTA  FTP DELAY
   1173          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_DELAY_NG);
   \                     ??man_ota_main_55: (+1)
   \   000003A4   0x2026             MOVS     R0,#+38
   \   000003A6   0x.... 0x....      BL       man_ota_set_sequense
   1174          				break;
   \   000003AA   0xE072             B        ??man_ota_main_1
   1175          
   1176          			// TERM FILE GET
   1177          			case MAN_OTA_SEQ_TERM_OTA_FILE_GET:			// 端末用 OTA  FILE GET
   1178          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_GET_NG);
   \                     ??man_ota_main_56: (+1)
   \   000003AC   0x202A             MOVS     R0,#+42
   \   000003AE   0x.... 0x....      BL       man_ota_set_sequense
   1179          				break;
   \   000003B2   0xE06E             B        ??man_ota_main_1
   1180          
   1181          			// 内部FLASH ERASE
   1182          			case MAN_OTA_SEQ_TERM_OTA_ERASE:
   1183          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_ERASE_NG);
   \                     ??man_ota_main_57: (+1)
   \   000003B4   0x202E             MOVS     R0,#+46
   \   000003B6   0x.... 0x....      BL       man_ota_set_sequense
   1184          				break;
   \   000003BA   0xE06A             B        ??man_ota_main_1
   1185          
   1186          			// GPS START
   1187          			case MAN_OTA_SEQ_GPS_OTA_START:
   1188          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_START_NG);
   \                     ??man_ota_main_58: (+1)
   \   000003BC   0x2036             MOVS     R0,#+54
   \   000003BE   0x.... 0x....      BL       man_ota_set_sequense
   1189          				break;
   \   000003C2   0xE066             B        ??man_ota_main_1
   1190          
   1191          			// UPDATER FILE GET
   1192          			case MAN_OTA_SEQ_UPDATER_FILE_GET:
   1193          				man_ota_set_sequense(MAN_OTA_SEQ_UPDATER_FILE_GET_NG);
   \                     ??man_ota_main_59: (+1)
   \   000003C4   0x203A             MOVS     R0,#+58
   \   000003C6   0x.... 0x....      BL       man_ota_set_sequense
   1194          				break;
   \   000003CA   0xE062             B        ??man_ota_main_1
   1195          
   1196          			// CONFIG FILE GET
   1197          			case MAN_OTA_SEQ_CONFIG_FILE_GET:
   1198          				man_ota_set_sequense(MAN_OTA_SEQ_CONFIG_FILE_GET_NG);
   \                     ??man_ota_main_60: (+1)
   \   000003CC   0x203E             MOVS     R0,#+62
   \   000003CE   0x.... 0x....      BL       man_ota_set_sequense
   1199          				break;
   \   000003D2   0xE05E             B        ??man_ota_main_1
   1200          
   1201          			// FIRMWARE FILE GET
   1202          			case MAN_OTA_SEQ_FIRMWARE_FILE_GET:
   1203          				man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_FILE_GET_NG);
   \                     ??man_ota_main_61: (+1)
   \   000003D4   0x2042             MOVS     R0,#+66
   \   000003D6   0x.... 0x....      BL       man_ota_set_sequense
   1204          				break;
   \   000003DA   0xE05A             B        ??man_ota_main_1
   1205          
   1206          			// GPS RESET
   1207          			case MAN_OTA_SEQ_GPS_RETRY:
   1208          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_RETRY_NG);
   \                     ??man_ota_main_63: (+1)
   \   000003DC   0x204A             MOVS     R0,#+74
   \   000003DE   0x.... 0x....      BL       man_ota_set_sequense
   1209          				break;
   \   000003E2   0xE056             B        ??man_ota_main_1
   1210          
   1211          			// UDL_SET
   1212          			case MAN_OTA_SEQ_UDL_SET:
   1213          				man_ota_set_sequense(MAN_OTA_SEQ_UDL_SET_NG);
   \                     ??man_ota_main_64: (+1)
   \   000003E4   0x204E             MOVS     R0,#+78
   \   000003E6   0x.... 0x....      BL       man_ota_set_sequense
   1214          				break;
   \   000003EA   0xE052             B        ??man_ota_main_1
   1215          
   1216          			// UDLPKT_NEXT
   1217          			case MAN_OTA_SEQ_UDLPKT_NEXT:
   1218          				man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_NEXT_NG);
   \                     ??man_ota_main_65: (+1)
   \   000003EC   0x2053             MOVS     R0,#+83
   \   000003EE   0x.... 0x....      BL       man_ota_set_sequense
   1219          				break;
   \   000003F2   0xE04E             B        ??man_ota_main_1
   1220          
   1221          			// UDLPKT_END
   1222          			case MAN_OTA_SEQ_UDLPKT_END:
   1223          				man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_END_NG);
   \                     ??man_ota_main_66: (+1)
   \   000003F4   0x2057             MOVS     R0,#+87
   \   000003F6   0x.... 0x....      BL       man_ota_set_sequense
   1224          				break;
   \   000003FA   0xE04A             B        ??man_ota_main_1
   1225          
   1226          			// UDLPKT_DONE_WAIT
   1227          			case MAN_OTA_SEQ_UDLPKT_DONE_WAIT:
   1228          				man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_DONE_WAIT_NG);
   \                     ??man_ota_main_67: (+1)
   \   000003FC   0x205C             MOVS     R0,#+92
   \   000003FE   0x.... 0x....      BL       man_ota_set_sequense
   1229          				break;
   \   00000402   0xE046             B        ??man_ota_main_1
   1230          
   1231          			// FDL_SET
   1232          			case MAN_OTA_SEQ_FDL_SET:
   1233          				man_ota_set_sequense(MAN_OTA_SEQ_FDL_SET_NG);
   \                     ??man_ota_main_68: (+1)
   \   00000404   0x2060             MOVS     R0,#+96
   \   00000406   0x.... 0x....      BL       man_ota_set_sequense
   1234          				break;
   \   0000040A   0xE042             B        ??man_ota_main_1
   1235          
   1236          			// CFGPKT_NEXT
   1237          			case MAN_OTA_SEQ_CFGPKT_NEXT:
   1238          				man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_NEXT_NG);
   \                     ??man_ota_main_69: (+1)
   \   0000040C   0x2065             MOVS     R0,#+101
   \   0000040E   0x.... 0x....      BL       man_ota_set_sequense
   1239          				break;
   \   00000412   0xE03E             B        ??man_ota_main_1
   1240          
   1241          			// CFGPKT_END
   1242          			case MAN_OTA_SEQ_CFGPKT_END:
   1243          				man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_END_NG);
   \                     ??man_ota_main_70: (+1)
   \   00000414   0x2069             MOVS     R0,#+105
   \   00000416   0x.... 0x....      BL       man_ota_set_sequense
   1244          				break;
   \   0000041A   0xE03A             B        ??man_ota_main_1
   1245          
   1246          			// FRMPKT_NEXT
   1247          			case MAN_OTA_SEQ_FRMPKT_NEXT:
   1248          				man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_NEXT_NG);
   \                     ??man_ota_main_71: (+1)
   \   0000041C   0x206E             MOVS     R0,#+110
   \   0000041E   0x.... 0x....      BL       man_ota_set_sequense
   1249          				break;
   \   00000422   0xE036             B        ??man_ota_main_1
   1250          
   1251          			// FRMPKT_END
   1252          			case MAN_OTA_SEQ_FRMPKT_END:
   1253          				man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_END_NG);
   \                     ??man_ota_main_72: (+1)
   \   00000424   0x2072             MOVS     R0,#+114
   \   00000426   0x.... 0x....      BL       man_ota_set_sequense
   1254          				break;
   \   0000042A   0xE032             B        ??man_ota_main_1
   1255          
   1256          			//GPS SET
   1257          			case MAN_OTA_SEQ_GPS_OTA_SET:
   1258          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_SET_NG);
   \                     ??man_ota_main_62: (+1)
   \   0000042C   0x2046             MOVS     R0,#+70
   \   0000042E   0x.... 0x....      BL       man_ota_set_sequense
   1259          				break;
   \   00000432   0xE02E             B        ??man_ota_main_1
   1260          
   1261          			// firmware注入安定(1000ms)待ち
   1262          			case MAN_OTA_SEQ_FIRMWARE_END_WAIT:
   1263          				man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_END_WAIT_NG);
   \                     ??man_ota_main_73: (+1)
   \   00000434   0x2079             MOVS     R0,#+121
   \   00000436   0x.... 0x....      BL       man_ota_set_sequense
   1264          				break;
   \   0000043A   0xE02A             B        ??man_ota_main_1
   1265          
   1266          			// OTA復帰開始
   1267          			case MAN_OTA_SEQ_GPS_OTA_RETRY:
   1268          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_RETRY_NG);
   \                     ??man_ota_main_74: (+1)
   \   0000043C   0x207D             MOVS     R0,#+125
   \   0000043E   0x.... 0x....      BL       man_ota_set_sequense
   1269          				break;
   \   00000442   0xE026             B        ??man_ota_main_1
   1270          
   1271          			// OTA END
   1272          			case MAN_OTA_SEQ_OTA_END:					// OTA終了
   1273          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_NG);
   \                     ??man_ota_main_83: (+1)
   \   00000444   0x20A5             MOVS     R0,#+165
   \   00000446   0x.... 0x....      BL       man_ota_set_sequense
   1274          				break;
   \   0000044A   0xE022             B        ??man_ota_main_1
   1275          
   1276          			// GPS再開
   1277          			case MAN_OTA_SEQ_OTA_GPS_START:				// OTA  GPS再開
   1278          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_GPS_START_NG);
   \                     ??man_ota_main_84: (+1)
   \   0000044C   0x20A8             MOVS     R0,#+168
   \   0000044E   0x.... 0x....      BL       man_ota_set_sequense
   1279          				break;
   \   00000452   0xE01E             B        ??man_ota_main_1
   1280          
   1281          			// USB 端末用 OTA FILE SET
   1282          			case MAN_OTA_SEQ_USB_TERM_FILE_SET:
   1283          				man_ota_set_sequense(MAN_OTA_SEQ_USB_TERM_FILE_SET_NG);
   \                     ??man_ota_main_75: (+1)
   \   00000454   0x2081             MOVS     R0,#+129
   \   00000456   0x.... 0x....      BL       man_ota_set_sequense
   1284          				break;
   \   0000045A   0xE01A             B        ??man_ota_main_1
   1285          
   1286          			// USB 端末用 OTA DATA GET
   1287          			case MAN_OTA_SEQ_USB_TERM_DATA_GET:
   1288          				man_ota_set_sequense(MAN_OTA_SEQ_USB_TERM_DATA_GET_NG);
   \                     ??man_ota_main_76: (+1)
   \   0000045C   0x2085             MOVS     R0,#+133
   \   0000045E   0x.... 0x....      BL       man_ota_set_sequense
   1289          				break;
   \   00000462   0xE016             B        ??man_ota_main_1
   1290          
   1291          			// USB GPS CONFIG FILE SET
   1292          			case MAN_OTA_SEQ_USB_CONFIG_FILE_SET:
   1293          				man_ota_set_sequense(MAN_OTA_SEQ_USB_CONFIG_FILE_SET_NG);
   \                     ??man_ota_main_77: (+1)
   \   00000464   0x2089             MOVS     R0,#+137
   \   00000466   0x.... 0x....      BL       man_ota_set_sequense
   1294          				break;
   \   0000046A   0xE012             B        ??man_ota_main_1
   1295          
   1296          			// USB GPS CONFIG DATA GET
   1297          			case MAN_OTA_SEQ_USB_CONFIG_DATA_GET:
   1298          				man_ota_set_sequense(MAN_OTA_SEQ_USB_CONFIG_DATA_GET_NG);
   \                     ??man_ota_main_78: (+1)
   \   0000046C   0x208D             MOVS     R0,#+141
   \   0000046E   0x.... 0x....      BL       man_ota_set_sequense
   1299          				break;
   \   00000472   0xE00E             B        ??man_ota_main_1
   1300          
   1301          			// USB GPS UPDATER FILE SET
   1302          			case MAN_OTA_SEQ_USB_UPDATER_FILE_SET:
   1303          				man_ota_set_sequense(MAN_OTA_SEQ_USB_UPDATER_FILE_SET_NG);
   \                     ??man_ota_main_79: (+1)
   \   00000474   0x2091             MOVS     R0,#+145
   \   00000476   0x.... 0x....      BL       man_ota_set_sequense
   1304          				break;
   \   0000047A   0xE00A             B        ??man_ota_main_1
   1305          
   1306          			// USB GPS UPDATER DATA GET
   1307          			case MAN_OTA_SEQ_USB_UPDATER_DATA_GET:
   1308          				man_ota_set_sequense(MAN_OTA_SEQ_USB_UPDATER_DATA_GET_NG);
   \                     ??man_ota_main_80: (+1)
   \   0000047C   0x2095             MOVS     R0,#+149
   \   0000047E   0x.... 0x....      BL       man_ota_set_sequense
   1309          				break;
   \   00000482   0xE006             B        ??man_ota_main_1
   1310          
   1311          			// USB GPS FIRMWARE FILE SET
   1312          			case MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET:
   1313          				man_ota_set_sequense(MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_NG);
   \                     ??man_ota_main_81: (+1)
   \   00000484   0x2099             MOVS     R0,#+153
   \   00000486   0x.... 0x....      BL       man_ota_set_sequense
   1314          				break;
   \   0000048A   0xE002             B        ??man_ota_main_1
   1315          
   1316          			// USB GPS FIRMWARE DATA GET
   1317          			case MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET:
   1318          				man_ota_set_sequense(MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_NG);
   \                     ??man_ota_main_82: (+1)
   \   0000048C   0x209D             MOVS     R0,#+157
   \   0000048E   0x.... 0x....      BL       man_ota_set_sequense
   1319          				break;
   1320          
   1321          			}
   1322          		}
   1323          	}
   1324          
   1325          
   1326          	// 通知処理
   1327          	if (man_ota_work.noti_sts.flag == 1) {
   \                     ??man_ota_main_1: (+1)
   \   00000492   0x4856             LDR      R0,??man_ota_main_86
   \   00000494   0x6800             LDR      R0,[R0, #+0]
   \   00000496   0x2801             CMP      R0,#+1
   \   00000498   0xD151             BNE      ??man_ota_main_87
   1328          		man_ota_work.noti_sts.flag = 0;
   \   0000049A   0x2000             MOVS     R0,#+0
   \   0000049C   0x4953             LDR      R1,??man_ota_main_86
   \   0000049E   0x6008             STR      R0,[R1, #+0]
   1329          
   1330          		// 状態通知処理
   1331          		if (man_ota_work.noti_sts.id == MAN_FTP_NOTI_STATE) {
   \   000004A0   0x4853             LDR      R0,??man_ota_main_86+0x4
   \   000004A2   0x6800             LDR      R0,[R0, #+0]
   \   000004A4   0x21FA             MOVS     R1,#+250
   \   000004A6   0x0089             LSLS     R1,R1,#+2        ;; #+1000
   \   000004A8   0x4288             CMP      R0,R1
   \   000004AA   0xD148             BNE      ??man_ota_main_87
   1332          			switch (man_ota_work.noti_sts.status) {
   \   000004AC   0x4851             LDR      R0,??man_ota_main_86+0x8
   \   000004AE   0x6800             LDR      R0,[R0, #+0]
   \   000004B0   0x2808             CMP      R0,#+8
   \   000004B2   0xD004             BEQ      ??man_ota_main_88
   \   000004B4   0xD343             BCC      ??man_ota_main_89
   \   000004B6   0x280A             CMP      R0,#+10
   \   000004B8   0xD00D             BEQ      ??man_ota_main_90
   \   000004BA   0xD327             BCC      ??man_ota_main_91
   \   000004BC   0xE03F             B        ??man_ota_main_89
   1333          			case MAN_HTTP_STATE_GET_OK:
   1334          				if (man_ota_work.sequense == MAN_OTA_SEQ_OTA_FTP_GET_NG_W) {
   \                     ??man_ota_main_88: (+1)
   \   000004BE   0x4812             LDR      R0,??man_ota_main_45
   \   000004C0   0x7800             LDRB     R0,[R0, #+0]
   \   000004C2   0x281F             CMP      R0,#+31
   \   000004C4   0xD106             BNE      ??man_ota_main_92
   1335          					// タイマー中止
   1336          					man_timer_cancel_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_FTP_GET_NG_W, MAN_OTA_FTP_GET_NG_WAIT);
   \   000004C6   0x494C             LDR      R1,??man_ota_main_86+0xC  ;; 0x57e40
   \   000004C8   0x484C             LDR      R0,??man_ota_main_86+0x10  ;; 0x4060001f
   \   000004CA   0x.... 0x....      BL       man_timer_cancel_wait
   1337          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_OK);
   \   000004CE   0x201D             MOVS     R0,#+29
   \   000004D0   0x.... 0x....      BL       man_ota_set_sequense
   1338          				}
   1339          				break;
   \                     ??man_ota_main_92: (+1)
   \   000004D4   0xE033             B        ??man_ota_main_87
   1340          
   1341          			case MAN_HTTP_STATE_GET_NOFILE:				// FTP GET END
   1342          				// FTP_GET 応答待ち時
   1343          				if ( (man_ota_work.sequense == MAN_OTA_SEQ_OTA_FTP_GET) || (man_ota_work.sequense == MAN_OTA_SEQ_OTA_FTP_GET_NG) ) {
   \                     ??man_ota_main_90: (+1)
   \   000004D6   0x480C             LDR      R0,??man_ota_main_45
   \   000004D8   0x7800             LDRB     R0,[R0, #+0]
   \   000004DA   0x281C             CMP      R0,#+28
   \   000004DC   0xD003             BEQ      ??man_ota_main_93
   \   000004DE   0x480A             LDR      R0,??man_ota_main_45
   \   000004E0   0x7800             LDRB     R0,[R0, #+0]
   \   000004E2   0x281E             CMP      R0,#+30
   \   000004E4   0xD103             BNE      ??man_ota_main_94
   1344          					// FTP GET終了
   1345          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_END);
   \                     ??man_ota_main_93: (+1)
   \   000004E6   0x2023             MOVS     R0,#+35
   \   000004E8   0x.... 0x....      BL       man_ota_set_sequense
   \   000004EC   0xE00A             B        ??man_ota_main_95
   1346          				}
   1347          				// FTP_GET 応答待ち後
   1348          				else if (man_ota_work.sequense == MAN_OTA_SEQ_OTA_FTP_GET_NG_W) {
   \                     ??man_ota_main_94: (+1)
   \   000004EE   0x4806             LDR      R0,??man_ota_main_45
   \   000004F0   0x7800             LDRB     R0,[R0, #+0]
   \   000004F2   0x281F             CMP      R0,#+31
   \   000004F4   0xD106             BNE      ??man_ota_main_95
   1349          					// タイマー中止
   1350          					man_timer_cancel_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_FTP_GET_NG_W, MAN_OTA_FTP_GET_NG_WAIT);
   \   000004F6   0x4940             LDR      R1,??man_ota_main_86+0xC  ;; 0x57e40
   \   000004F8   0x4840             LDR      R0,??man_ota_main_86+0x10  ;; 0x4060001f
   \   000004FA   0x.... 0x....      BL       man_timer_cancel_wait
   1351          					// FTP GET終了
   1352          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_END);
   \   000004FE   0x2023             MOVS     R0,#+35
   \   00000500   0x.... 0x....      BL       man_ota_set_sequense
   1353          				}
   1354          				break;
   \                     ??man_ota_main_95: (+1)
   \   00000504   0xE01B             B        ??man_ota_main_87
   \   00000506   0xBF00             Nop      
   \                     ??man_ota_main_45:
   \   00000508   0x........         DC32     man_ota_work
   1355          
   1356          			case MAN_HTTP_STATE_GET_NG:			// ファイルなし等の異常発生
   1357          				if (man_ota_work.sequense == MAN_OTA_SEQ_OTA_FTP_GET_NG_W) {
   \                     ??man_ota_main_91: (+1)
   \   0000050C   0x483C             LDR      R0,??man_ota_main_86+0x14
   \   0000050E   0x7800             LDRB     R0,[R0, #+0]
   \   00000510   0x281F             CMP      R0,#+31
   \   00000512   0xD103             BNE      ??man_ota_main_96
   1358          					// タイマー中止
   1359          					man_timer_cancel_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_FTP_GET_NG_W, MAN_OTA_FTP_GET_NG_WAIT);
   \   00000514   0x4938             LDR      R1,??man_ota_main_86+0xC  ;; 0x57e40
   \   00000516   0x4839             LDR      R0,??man_ota_main_86+0x10  ;; 0x4060001f
   \   00000518   0x.... 0x....      BL       man_timer_cancel_wait
   1360          				}
   1361          				// リトライする
   1362          				if (man_ota_work.exec_info.retry <= MAN_OTA_RETRY_MAX) {
   \                     ??man_ota_main_96: (+1)
   \   0000051C   0x4838             LDR      R0,??man_ota_main_86+0x14
   \   0000051E   0x6D40             LDR      R0,[R0, #+84]
   \   00000520   0x2803             CMP      R0,#+3
   \   00000522   0xDA08             BGE      ??man_ota_main_97
   1363          					man_ota_work.exec_info.retry++;		// リトライカウンタの更新
   \   00000524   0x4836             LDR      R0,??man_ota_main_86+0x14
   \   00000526   0x6D40             LDR      R0,[R0, #+84]
   \   00000528   0x1C40             ADDS     R0,R0,#+1
   \   0000052A   0x4935             LDR      R1,??man_ota_main_86+0x14
   \   0000052C   0x6548             STR      R0,[R1, #+84]
   1364          					// FILE GET開始
   1365          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_REQ);
   \   0000052E   0x201B             MOVS     R0,#+27
   \   00000530   0x.... 0x....      BL       man_ota_set_sequense
   \   00000534   0xE002             B        ??man_ota_main_98
   1366          				}
   1367          				// 中止する
   1368          				else {
   1369          					// OTAを中止する
   1370          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_NG_A);
   \                     ??man_ota_main_97: (+1)
   \   00000536   0x2022             MOVS     R0,#+34
   \   00000538   0x.... 0x....      BL       man_ota_set_sequense
   1371          				}
   1372          				break;
   \                     ??man_ota_main_98: (+1)
   \   0000053C   0xE7FF             B        ??man_ota_main_87
   1373          
   1374          			default:
   1375          				break;
   1376          			}
   1377          		}
   1378          
   1379          
   1380          	}
   1381          
   1382          
   1383          	// 要求処理
   1384          	switch (man_ota_work.request.req_cmd) {
   \                     ??man_ota_main_89: (+1)
   \                     ??man_ota_main_87: (+1)
   \   0000053E   0x4830             LDR      R0,??man_ota_main_86+0x14
   \   00000540   0x6EC0             LDR      R0,[R0, #+108]
   \   00000542   0x2800             CMP      R0,#+0
   \   00000544   0xD008             BEQ      ??man_ota_main_99
   \   00000546   0x2802             CMP      R0,#+2
   \   00000548   0xD016             BEQ      ??man_ota_main_100
   \   0000054A   0xD306             BCC      ??man_ota_main_101
   \   0000054C   0x2804             CMP      R0,#+4
   \   0000054E   0xD033             BEQ      ??man_ota_main_102
   \   00000550   0xD321             BCC      ??man_ota_main_103
   \   00000552   0x2805             CMP      R0,#+5
   \   00000554   0xD041             BEQ      ??man_ota_main_104
   \   00000556   0xE055             B        ??man_ota_main_105
   1385          #ifdef ADLINK_DEBUG_MESSAGE
   1386                    int splen = sprintf(print_buf,"OTA Command:%s\n\r",comstr[man_ota_work.resp_cmd.id]);
   1387                    sysmgr_log_usb(print_buf,splen);
   1388          #endif
   1389          	case MAN_OTA_REQ_NON:					// 要求待ち
   1390          		break;
   \                     ??man_ota_main_99: (+1)
   \   00000558   0xE057             B        ??man_ota_main_106
   1391          
   1392          	case MAN_OTA_REQ_TERM_START:			// 端末OTA開始
   1393          		if (man_ota_work.sequense == MAN_OTA_SEQ_READY) {
   \                     ??man_ota_main_101: (+1)
   \   0000055A   0x4829             LDR      R0,??man_ota_main_86+0x14
   \   0000055C   0x7800             LDRB     R0,[R0, #+0]
   \   0000055E   0x2800             CMP      R0,#+0
   \   00000560   0xD109             BNE      ??man_ota_main_107
   1394          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_WAIT_REQ);
   \   00000562   0x2001             MOVS     R0,#+1
   \   00000564   0x.... 0x....      BL       man_ota_set_sequense
   1395          			man_ota_work.exec_info.req_cmd = man_ota_work.request.req_cmd;
   \   00000568   0x4825             LDR      R0,??man_ota_main_86+0x14
   \   0000056A   0x6EC0             LDR      R0,[R0, #+108]
   \   0000056C   0x4924             LDR      R1,??man_ota_main_86+0x14
   \   0000056E   0x6088             STR      R0,[R1, #+8]
   1396          			man_ota_work.request.req_cmd = MAN_OTA_REQ_NON;
   \   00000570   0x2000             MOVS     R0,#+0
   \   00000572   0x4923             LDR      R1,??man_ota_main_86+0x14
   \   00000574   0x66C8             STR      R0,[R1, #+108]
   1397          		}
   1398          		break;
   \                     ??man_ota_main_107: (+1)
   \   00000576   0xE048             B        ??man_ota_main_106
   1399          
   1400          	case MAN_OTA_REQ_GPS_START:				// GPS OTA開始
   1401          		if (man_ota_work.sequense == MAN_OTA_SEQ_READY) {
   \                     ??man_ota_main_100: (+1)
   \   00000578   0x4821             LDR      R0,??man_ota_main_86+0x14
   \   0000057A   0x7800             LDRB     R0,[R0, #+0]
   \   0000057C   0x2800             CMP      R0,#+0
   \   0000057E   0xD109             BNE      ??man_ota_main_108
   1402          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_WAIT_REQ);
   \   00000580   0x2001             MOVS     R0,#+1
   \   00000582   0x.... 0x....      BL       man_ota_set_sequense
   1403          			man_ota_work.exec_info.req_cmd = man_ota_work.request.req_cmd;
   \   00000586   0x481E             LDR      R0,??man_ota_main_86+0x14
   \   00000588   0x6EC0             LDR      R0,[R0, #+108]
   \   0000058A   0x491D             LDR      R1,??man_ota_main_86+0x14
   \   0000058C   0x6088             STR      R0,[R1, #+8]
   1404          			man_ota_work.request.req_cmd = MAN_OTA_REQ_NON;
   \   0000058E   0x2000             MOVS     R0,#+0
   \   00000590   0x491B             LDR      R1,??man_ota_main_86+0x14
   \   00000592   0x66C8             STR      R0,[R1, #+108]
   1405          		}
   1406          		break;
   \                     ??man_ota_main_108: (+1)
   \   00000594   0xE039             B        ??man_ota_main_106
   1407          
   1408          	case MAN_OTA_REQ_USB_TERM_START:		// USB経由での端末OTA開始
   1409          		if (man_ota_work.sequense == MAN_OTA_SEQ_READY) {
   \                     ??man_ota_main_103: (+1)
   \   00000596   0x481A             LDR      R0,??man_ota_main_86+0x14
   \   00000598   0x7800             LDRB     R0,[R0, #+0]
   \   0000059A   0x2800             CMP      R0,#+0
   \   0000059C   0xD10B             BNE      ??man_ota_main_109
   1410          			// レポート送信停止
   1411          			man_rpt_req_send_stop();
   \   0000059E   0x.... 0x....      BL       man_rpt_req_send_stop
   1412          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_WAIT_REQ);
   \   000005A2   0x2001             MOVS     R0,#+1
   \   000005A4   0x.... 0x....      BL       man_ota_set_sequense
   1413          			man_ota_work.exec_info.req_cmd = man_ota_work.request.req_cmd;
   \   000005A8   0x4815             LDR      R0,??man_ota_main_86+0x14
   \   000005AA   0x6EC0             LDR      R0,[R0, #+108]
   \   000005AC   0x4914             LDR      R1,??man_ota_main_86+0x14
   \   000005AE   0x6088             STR      R0,[R1, #+8]
   1414          			man_ota_work.request.req_cmd = MAN_OTA_REQ_NON;
   \   000005B0   0x2000             MOVS     R0,#+0
   \   000005B2   0x4913             LDR      R1,??man_ota_main_86+0x14
   \   000005B4   0x66C8             STR      R0,[R1, #+108]
   1415          		}
   1416          		break;
   \                     ??man_ota_main_109: (+1)
   \   000005B6   0xE028             B        ??man_ota_main_106
   1417          
   1418          	case MAN_OTA_REQ_USB_GPS_START:			// USB経由でのGPS OTA開始
   1419          		if (man_ota_work.sequense == MAN_OTA_SEQ_READY) {
   \                     ??man_ota_main_102: (+1)
   \   000005B8   0x4811             LDR      R0,??man_ota_main_86+0x14
   \   000005BA   0x7800             LDRB     R0,[R0, #+0]
   \   000005BC   0x2800             CMP      R0,#+0
   \   000005BE   0xD10B             BNE      ??man_ota_main_110
   1420          			// レポート送信停止
   1421          			man_rpt_req_send_stop();
   \   000005C0   0x.... 0x....      BL       man_rpt_req_send_stop
   1422          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_WAIT_REQ);
   \   000005C4   0x2001             MOVS     R0,#+1
   \   000005C6   0x.... 0x....      BL       man_ota_set_sequense
   1423          			man_ota_work.exec_info.req_cmd = man_ota_work.request.req_cmd;
   \   000005CA   0x480D             LDR      R0,??man_ota_main_86+0x14
   \   000005CC   0x6EC0             LDR      R0,[R0, #+108]
   \   000005CE   0x490C             LDR      R1,??man_ota_main_86+0x14
   \   000005D0   0x6088             STR      R0,[R1, #+8]
   1424          			man_ota_work.request.req_cmd = MAN_OTA_REQ_NON;
   \   000005D2   0x2000             MOVS     R0,#+0
   \   000005D4   0x490A             LDR      R1,??man_ota_main_86+0x14
   \   000005D6   0x66C8             STR      R0,[R1, #+108]
   1425          		}
   1426          		break;
   \                     ??man_ota_main_110: (+1)
   \   000005D8   0xE017             B        ??man_ota_main_106
   1427          
   1428          	case MAN_OTA_REQ_GPS_RETRY:
   1429          		if (man_ota_work.sequense == MAN_OTA_SEQ_READY) {
   \                     ??man_ota_main_104: (+1)
   \   000005DA   0x4809             LDR      R0,??man_ota_main_86+0x14
   \   000005DC   0x7800             LDRB     R0,[R0, #+0]
   \   000005DE   0x2800             CMP      R0,#+0
   \   000005E0   0xD102             BNE      ??man_ota_main_111
   1430          			// OTA復帰開始
   1431          			man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_RETRY_REQ);
   \   000005E2   0x207A             MOVS     R0,#+122
   \   000005E4   0x.... 0x....      BL       man_ota_set_sequense
   1432          		}
   1433          		break;
   \                     ??man_ota_main_111: (+1)
   \   000005E8   0xE00F             B        ??man_ota_main_106
   \   000005EA   0xBF00             Nop      
   \                     ??man_ota_main_86:
   \   000005EC   0x........         DC32     man_ota_work+0x88
   \   000005F0   0x........         DC32     man_ota_work+0x8C
   \   000005F4   0x........         DC32     man_ota_work+0x90
   \   000005F8   0x00057E40         DC32     0x57e40
   \   000005FC   0x4060001F         DC32     0x4060001f
   \   00000600   0x........         DC32     man_ota_work
   1434          
   1435          
   1436          	default:
   1437          		man_ota_work.request.req_cmd = MAN_OTA_REQ_NON;
   \                     ??man_ota_main_105: (+1)
   \   00000604   0x2000             MOVS     R0,#+0
   \   00000606   0x4902             LDR      R1,??man_ota_main_112
   \   00000608   0x66C8             STR      R0,[R1, #+108]
   1438          		break;
   1439          	}
   1440          
   1441          
   1442          	// シーケンス処理
   1443          	switch (man_ota_work.sequense) {
   \                     ??man_ota_main_106: (+1)
   \   0000060A   0x4801             LDR      R0,??man_ota_main_112
   \   0000060C   0xE002             B.N      ??man_ota_main_113
   \   0000060E   0xBF00             Nop      
   \                     ??man_ota_main_112:
   \   00000610   0x........         DC32     man_ota_work
   \                     ??man_ota_main_113: (+1)
   \   00000614   0x7800             LDRB     R0,[R0, #+0]
   \   00000616   0x2800             CMP      R0,#+0
   \   00000618   0xD100             BNE      .+4
   \   0000061A   0xE276             B        ??man_ota_main_114
   \   0000061C   0x1E40             SUBS     R0,R0,#+1
   \   0000061E   0xD100             BNE      .+4
   \   00000620   0xE278             B        ??man_ota_main_115
   \   00000622   0x1E40             SUBS     R0,R0,#+1
   \   00000624   0xD100             BNE      .+4
   \   00000626   0xE2AF             B        ??man_ota_main_116
   \   00000628   0x1E40             SUBS     R0,R0,#+1
   \   0000062A   0x2801             CMP      R0,#+1
   \   0000062C   0xD800             BHI      .+4
   \   0000062E   0xE2AD             B        ??man_ota_main_117
   \   00000630   0x1E80             SUBS     R0,R0,#+2
   \   00000632   0xD100             BNE      .+4
   \   00000634   0xE2AF             B        ??man_ota_main_118
   \   00000636   0x1E40             SUBS     R0,R0,#+1
   \   00000638   0xD100             BNE      .+4
   \   0000063A   0xE3B6             B        ??man_ota_main_119
   \   0000063C   0x1E40             SUBS     R0,R0,#+1
   \   0000063E   0xD100             BNE      .+4
   \   00000640   0xE3B5             B        ??man_ota_main_120
   \   00000642   0x1E40             SUBS     R0,R0,#+1
   \   00000644   0xD100             BNE      .+4
   \   00000646   0xE3BB             B        ??man_ota_main_121
   \   00000648   0x1E40             SUBS     R0,R0,#+1
   \   0000064A   0xD100             BNE      .+4
   \   0000064C   0xE3C7             B        ??man_ota_main_122
   \   0000064E   0x1E40             SUBS     R0,R0,#+1
   \   00000650   0xD100             BNE      .+4
   \   00000652   0xE3D1             B        ??man_ota_main_123
   \   00000654   0x1E40             SUBS     R0,R0,#+1
   \   00000656   0xD100             BNE      .+4
   \   00000658   0xE3D0             B        ??man_ota_main_124
   \   0000065A   0x1E40             SUBS     R0,R0,#+1
   \   0000065C   0xD100             BNE      .+4
   \   0000065E   0xE3E6             B        ??man_ota_main_125
   \   00000660   0x1E40             SUBS     R0,R0,#+1
   \   00000662   0xD100             BNE      .+4
   \   00000664   0xE3F2             B        ??man_ota_main_126
   \   00000666   0x1E40             SUBS     R0,R0,#+1
   \   00000668   0xD101             BNE      .+6
   \   0000066A   0xF000 0xFC01      BL       ??man_ota_main_127
   \   0000066E   0x1E40             SUBS     R0,R0,#+1
   \   00000670   0xD101             BNE      .+6
   \   00000672   0xF000 0xFBFF      BL       ??man_ota_main_128
   \   00000676   0x1E40             SUBS     R0,R0,#+1
   \   00000678   0xD101             BNE      .+6
   \   0000067A   0xF000 0xFC10      BL       ??man_ota_main_129
   \   0000067E   0x1E40             SUBS     R0,R0,#+1
   \   00000680   0xD101             BNE      .+6
   \   00000682   0xF000 0xFC11      BL       ??man_ota_main_130
   \   00000686   0x1E40             SUBS     R0,R0,#+1
   \   00000688   0x2801             CMP      R0,#+1
   \   0000068A   0xD801             BHI      .+6
   \   0000068C   0xF000 0xFC0E      BL       ??man_ota_main_131
   \   00000690   0x1E80             SUBS     R0,R0,#+2
   \   00000692   0xD101             BNE      .+6
   \   00000694   0xF000 0xFC35      BL       ??man_ota_main_132
   \   00000698   0x1E40             SUBS     R0,R0,#+1
   \   0000069A   0xD101             BNE      .+6
   \   0000069C   0xF000 0xFC46      BL       ??man_ota_main_133
   \   000006A0   0x1E40             SUBS     R0,R0,#+1
   \   000006A2   0xD101             BNE      .+6
   \   000006A4   0xF000 0xFC44      BL       ??man_ota_main_134
   \   000006A8   0x1E40             SUBS     R0,R0,#+1
   \   000006AA   0xD101             BNE      .+6
   \   000006AC   0xF000 0xFC58      BL       ??man_ota_main_135
   \   000006B0   0x1E40             SUBS     R0,R0,#+1
   \   000006B2   0xD101             BNE      .+6
   \   000006B4   0xF000 0xFC70      BL       ??man_ota_main_136
   \   000006B8   0x1E40             SUBS     R0,R0,#+1
   \   000006BA   0xD101             BNE      .+6
   \   000006BC   0xF000 0xFC6E      BL       ??man_ota_main_137
   \   000006C0   0x1E40             SUBS     R0,R0,#+1
   \   000006C2   0xD101             BNE      .+6
   \   000006C4   0xF000 0xFC6F      BL       ??man_ota_main_138
   \   000006C8   0x1E40             SUBS     R0,R0,#+1
   \   000006CA   0xD101             BNE      .+6
   \   000006CC   0xF000 0xFC77      BL       ??man_ota_main_139
   \   000006D0   0x1E40             SUBS     R0,R0,#+1
   \   000006D2   0xD101             BNE      .+6
   \   000006D4   0xF000 0xFC9E      BL       ??man_ota_main_140
   \   000006D8   0x1E40             SUBS     R0,R0,#+1
   \   000006DA   0xD101             BNE      .+6
   \   000006DC   0xF000 0xFC9C      BL       ??man_ota_main_141
   \   000006E0   0x1E40             SUBS     R0,R0,#+1
   \   000006E2   0xD101             BNE      .+6
   \   000006E4   0xF000 0xFD27      BL       ??man_ota_main_142
   \   000006E8   0x1E40             SUBS     R0,R0,#+1
   \   000006EA   0xD101             BNE      .+6
   \   000006EC   0xF000 0xFD38      BL       ??man_ota_main_143
   \   000006F0   0x1E40             SUBS     R0,R0,#+1
   \   000006F2   0x2801             CMP      R0,#+1
   \   000006F4   0xD801             BHI      .+6
   \   000006F6   0xF000 0xFD47      BL       ??man_ota_main_144
   \   000006FA   0x1E80             SUBS     R0,R0,#+2
   \   000006FC   0xD101             BNE      .+6
   \   000006FE   0xF000 0xFD55      BL       ??man_ota_main_145
   \   00000702   0x1E40             SUBS     R0,R0,#+1
   \   00000704   0xD101             BNE      .+6
   \   00000706   0xF000 0xFD67      BL       ??man_ota_main_146
   \   0000070A   0x1E40             SUBS     R0,R0,#+1
   \   0000070C   0xD101             BNE      .+6
   \   0000070E   0xF000 0xFE55      BL       ??man_ota_main_147
   \   00000712   0x1E40             SUBS     R0,R0,#+1
   \   00000714   0x2801             CMP      R0,#+1
   \   00000716   0xD801             BHI      .+6
   \   00000718   0xF000 0xFE75      BL       ??man_ota_main_148
   \   0000071C   0x1E80             SUBS     R0,R0,#+2
   \   0000071E   0xD101             BNE      .+6
   \   00000720   0xF000 0xFE81      BL       ??man_ota_main_149
   \   00000724   0x1E40             SUBS     R0,R0,#+1
   \   00000726   0xD101             BNE      .+6
   \   00000728   0xF000 0xFEA7      BL       ??man_ota_main_150
   \   0000072C   0x1E40             SUBS     R0,R0,#+1
   \   0000072E   0xD101             BNE      .+6
   \   00000730   0xF000 0xFEA5      BL       ??man_ota_main_151
   \   00000734   0x1E40             SUBS     R0,R0,#+1
   \   00000736   0xD101             BNE      .+6
   \   00000738   0xF000 0xFF5F      BL       ??man_ota_main_152
   \   0000073C   0x1E40             SUBS     R0,R0,#+1
   \   0000073E   0xD101             BNE      .+6
   \   00000740   0xF000 0xFF70      BL       ??man_ota_main_153
   \   00000744   0x1E40             SUBS     R0,R0,#+1
   \   00000746   0xD101             BNE      .+6
   \   00000748   0xF000 0xFF78      BL       ??man_ota_main_154
   \   0000074C   0x1E40             SUBS     R0,R0,#+1
   \   0000074E   0xD101             BNE      .+6
   \   00000750   0xF000 0xFF76      BL       ??man_ota_main_155
   \   00000754   0x1E40             SUBS     R0,R0,#+1
   \   00000756   0xD101             BNE      .+6
   \   00000758   0xF000 0xFF77      BL       ??man_ota_main_156
   \   0000075C   0x1E40             SUBS     R0,R0,#+1
   \   0000075E   0xD101             BNE      .+6
   \   00000760   0xF000 0xFF85      BL       ??man_ota_main_157
   \   00000764   0x1E40             SUBS     R0,R0,#+1
   \   00000766   0xD101             BNE      .+6
   \   00000768   0xF000 0xFFD0      BL       ??man_ota_main_158
   \   0000076C   0x1E40             SUBS     R0,R0,#+1
   \   0000076E   0xD101             BNE      .+6
   \   00000770   0xF000 0xFFDA      BL       ??man_ota_main_159
   \   00000774   0x1E40             SUBS     R0,R0,#+1
   \   00000776   0xD101             BNE      .+6
   \   00000778   0xF001 0xF840      BL       ??man_ota_main_160
   \   0000077C   0x1E40             SUBS     R0,R0,#+1
   \   0000077E   0xD101             BNE      .+6
   \   00000780   0xF001 0xF84A      BL       ??man_ota_main_161
   \   00000784   0x1E40             SUBS     R0,R0,#+1
   \   00000786   0xD101             BNE      .+6
   \   00000788   0xF001 0xF84B      BL       ??man_ota_main_162
   \   0000078C   0x1E40             SUBS     R0,R0,#+1
   \   0000078E   0xD101             BNE      .+6
   \   00000790   0xF001 0xF849      BL       ??man_ota_main_163
   \   00000794   0x1E40             SUBS     R0,R0,#+1
   \   00000796   0xD101             BNE      .+6
   \   00000798   0xF001 0xF871      BL       ??man_ota_main_164
   \   0000079C   0x1E40             SUBS     R0,R0,#+1
   \   0000079E   0xD101             BNE      .+6
   \   000007A0   0xF001 0xF880      BL       ??man_ota_main_165
   \   000007A4   0x1E40             SUBS     R0,R0,#+1
   \   000007A6   0xD101             BNE      .+6
   \   000007A8   0xF001 0xF8A3      BL       ??man_ota_main_166
   \   000007AC   0x1E40             SUBS     R0,R0,#+1
   \   000007AE   0xD101             BNE      .+6
   \   000007B0   0xF001 0xF8A1      BL       ??man_ota_main_167
   \   000007B4   0x1E40             SUBS     R0,R0,#+1
   \   000007B6   0xD101             BNE      .+6
   \   000007B8   0xF001 0xF972      BL       ??man_ota_main_168
   \   000007BC   0x1E40             SUBS     R0,R0,#+1
   \   000007BE   0xD101             BNE      .+6
   \   000007C0   0xF001 0xF97E      BL       ??man_ota_main_169
   \   000007C4   0x1E40             SUBS     R0,R0,#+1
   \   000007C6   0xD101             BNE      .+6
   \   000007C8   0xF001 0xF9A1      BL       ??man_ota_main_170
   \   000007CC   0x1E40             SUBS     R0,R0,#+1
   \   000007CE   0xD101             BNE      .+6
   \   000007D0   0xF001 0xF99F      BL       ??man_ota_main_171
   \   000007D4   0x1E40             SUBS     R0,R0,#+1
   \   000007D6   0xD101             BNE      .+6
   \   000007D8   0xF001 0xFA7E      BL       ??man_ota_main_172
   \   000007DC   0x1E40             SUBS     R0,R0,#+1
   \   000007DE   0xD101             BNE      .+6
   \   000007E0   0xF001 0xFA8A      BL       ??man_ota_main_173
   \   000007E4   0x1E40             SUBS     R0,R0,#+1
   \   000007E6   0xD101             BNE      .+6
   \   000007E8   0xF001 0xFAAD      BL       ??man_ota_main_174
   \   000007EC   0x1E40             SUBS     R0,R0,#+1
   \   000007EE   0xD101             BNE      .+6
   \   000007F0   0xF001 0xFAAB      BL       ??man_ota_main_175
   \   000007F4   0x1E40             SUBS     R0,R0,#+1
   \   000007F6   0xD101             BNE      .+6
   \   000007F8   0xF001 0xFB4F      BL       ??man_ota_main_176
   \   000007FC   0x1E40             SUBS     R0,R0,#+1
   \   000007FE   0xD101             BNE      .+6
   \   00000800   0xF001 0xFB62      BL       ??man_ota_main_177
   \   00000804   0x1E40             SUBS     R0,R0,#+1
   \   00000806   0xD101             BNE      .+6
   \   00000808   0xF001 0xFB7D      BL       ??man_ota_main_178
   \   0000080C   0x1E40             SUBS     R0,R0,#+1
   \   0000080E   0xD101             BNE      .+6
   \   00000810   0xF001 0xFB7B      BL       ??man_ota_main_179
   \   00000814   0x1E40             SUBS     R0,R0,#+1
   \   00000816   0xD101             BNE      .+6
   \   00000818   0xF001 0xFB7C      BL       ??man_ota_main_180
   \   0000081C   0x1E40             SUBS     R0,R0,#+1
   \   0000081E   0xD101             BNE      .+6
   \   00000820   0xF001 0xFB89      BL       ??man_ota_main_181
   \   00000824   0x1E40             SUBS     R0,R0,#+1
   \   00000826   0xD101             BNE      .+6
   \   00000828   0xF001 0xFB9C      BL       ??man_ota_main_182
   \   0000082C   0x1E40             SUBS     R0,R0,#+1
   \   0000082E   0xD101             BNE      .+6
   \   00000830   0xF001 0xFB9A      BL       ??man_ota_main_183
   \   00000834   0x1E40             SUBS     R0,R0,#+1
   \   00000836   0xD101             BNE      .+6
   \   00000838   0xF001 0xFBA1      BL       ??man_ota_main_184
   \   0000083C   0x1E40             SUBS     R0,R0,#+1
   \   0000083E   0xD101             BNE      .+6
   \   00000840   0xF001 0xFBBB      BL       ??man_ota_main_185
   \   00000844   0x1E40             SUBS     R0,R0,#+1
   \   00000846   0xD101             BNE      .+6
   \   00000848   0xF001 0xFBC6      BL       ??man_ota_main_186
   \   0000084C   0x1E40             SUBS     R0,R0,#+1
   \   0000084E   0xD101             BNE      .+6
   \   00000850   0xF001 0xFBC4      BL       ??man_ota_main_187
   \   00000854   0x1E40             SUBS     R0,R0,#+1
   \   00000856   0xD101             BNE      .+6
   \   00000858   0xF001 0xFBC5      BL       ??man_ota_main_188
   \   0000085C   0x1E40             SUBS     R0,R0,#+1
   \   0000085E   0xD101             BNE      .+6
   \   00000860   0xF001 0xFBD2      BL       ??man_ota_main_189
   \   00000864   0x1E40             SUBS     R0,R0,#+1
   \   00000866   0xD101             BNE      .+6
   \   00000868   0xF001 0xFC34      BL       ??man_ota_main_190
   \   0000086C   0x1E40             SUBS     R0,R0,#+1
   \   0000086E   0xD101             BNE      .+6
   \   00000870   0xF001 0xFC3D      BL       ??man_ota_main_191
   \   00000874   0x1E40             SUBS     R0,R0,#+1
   \   00000876   0xD101             BNE      .+6
   \   00000878   0xF001 0xFC3B      BL       ??man_ota_main_192
   \   0000087C   0x1E40             SUBS     R0,R0,#+1
   \   0000087E   0xD101             BNE      .+6
   \   00000880   0xF001 0xFC43      BL       ??man_ota_main_193
   \   00000884   0x1E40             SUBS     R0,R0,#+1
   \   00000886   0xD101             BNE      .+6
   \   00000888   0xF001 0xFC50      BL       ??man_ota_main_194
   \   0000088C   0x1E40             SUBS     R0,R0,#+1
   \   0000088E   0xD101             BNE      .+6
   \   00000890   0xF001 0xFC59      BL       ??man_ota_main_195
   \   00000894   0x1E40             SUBS     R0,R0,#+1
   \   00000896   0xD101             BNE      .+6
   \   00000898   0xF001 0xFC57      BL       ??man_ota_main_196
   \   0000089C   0x1E40             SUBS     R0,R0,#+1
   \   0000089E   0xD101             BNE      .+6
   \   000008A0   0xF001 0xFC6D      BL       ??man_ota_main_197
   \   000008A4   0x1E40             SUBS     R0,R0,#+1
   \   000008A6   0xD101             BNE      .+6
   \   000008A8   0xF001 0xFC7A      BL       ??man_ota_main_198
   \   000008AC   0x1E40             SUBS     R0,R0,#+1
   \   000008AE   0xD101             BNE      .+6
   \   000008B0   0xF001 0xFC91      BL       ??man_ota_main_199
   \   000008B4   0x1E40             SUBS     R0,R0,#+1
   \   000008B6   0xD101             BNE      .+6
   \   000008B8   0xF001 0xFC9E      BL       ??man_ota_main_200
   \   000008BC   0x1E40             SUBS     R0,R0,#+1
   \   000008BE   0xD101             BNE      .+6
   \   000008C0   0xF001 0xFC9C      BL       ??man_ota_main_201
   \   000008C4   0x1E40             SUBS     R0,R0,#+1
   \   000008C6   0xD101             BNE      .+6
   \   000008C8   0xF001 0xFC9D      BL       ??man_ota_main_202
   \   000008CC   0x1E40             SUBS     R0,R0,#+1
   \   000008CE   0xD101             BNE      .+6
   \   000008D0   0xF001 0xFC9E      BL       ??man_ota_main_203
   \   000008D4   0x1E40             SUBS     R0,R0,#+1
   \   000008D6   0xD101             BNE      .+6
   \   000008D8   0xF001 0xFCA9      BL       ??man_ota_main_204
   \   000008DC   0x1E40             SUBS     R0,R0,#+1
   \   000008DE   0xD101             BNE      .+6
   \   000008E0   0xF001 0xFCA7      BL       ??man_ota_main_205
   \   000008E4   0x1E40             SUBS     R0,R0,#+1
   \   000008E6   0xD101             BNE      .+6
   \   000008E8   0xF001 0xFCA8      BL       ??man_ota_main_206
   \   000008EC   0x1E40             SUBS     R0,R0,#+1
   \   000008EE   0xD101             BNE      .+6
   \   000008F0   0xF001 0xFCB5      BL       ??man_ota_main_207
   \   000008F4   0x1E40             SUBS     R0,R0,#+1
   \   000008F6   0xD101             BNE      .+6
   \   000008F8   0xF001 0xFD13      BL       ??man_ota_main_208
   \   000008FC   0x1E40             SUBS     R0,R0,#+1
   \   000008FE   0xD101             BNE      .+6
   \   00000900   0xF001 0xFD1C      BL       ??man_ota_main_209
   \   00000904   0x1E40             SUBS     R0,R0,#+1
   \   00000906   0xD101             BNE      .+6
   \   00000908   0xF001 0xFD1A      BL       ??man_ota_main_210
   \   0000090C   0x1E40             SUBS     R0,R0,#+1
   \   0000090E   0xD101             BNE      .+6
   \   00000910   0xF001 0xFD22      BL       ??man_ota_main_211
   \   00000914   0x1E40             SUBS     R0,R0,#+1
   \   00000916   0xD101             BNE      .+6
   \   00000918   0xF001 0xFD2F      BL       ??man_ota_main_212
   \   0000091C   0x1E40             SUBS     R0,R0,#+1
   \   0000091E   0xD101             BNE      .+6
   \   00000920   0xF001 0xFD3C      BL       ??man_ota_main_213
   \   00000924   0x1E40             SUBS     R0,R0,#+1
   \   00000926   0xD101             BNE      .+6
   \   00000928   0xF001 0xFD3A      BL       ??man_ota_main_214
   \   0000092C   0x1E40             SUBS     R0,R0,#+1
   \   0000092E   0xD101             BNE      .+6
   \   00000930   0xF001 0xFD52      BL       ??man_ota_main_215
   \   00000934   0x1E40             SUBS     R0,R0,#+1
   \   00000936   0xD101             BNE      .+6
   \   00000938   0xF001 0xFD5F      BL       ??man_ota_main_216
   \   0000093C   0x1E40             SUBS     R0,R0,#+1
   \   0000093E   0xD101             BNE      .+6
   \   00000940   0xF001 0xFDCF      BL       ??man_ota_main_217
   \   00000944   0x1E40             SUBS     R0,R0,#+1
   \   00000946   0xD101             BNE      .+6
   \   00000948   0xF001 0xFDD8      BL       ??man_ota_main_218
   \   0000094C   0x1E40             SUBS     R0,R0,#+1
   \   0000094E   0xD101             BNE      .+6
   \   00000950   0xF001 0xFDD6      BL       ??man_ota_main_219
   \   00000954   0x1E40             SUBS     R0,R0,#+1
   \   00000956   0xD101             BNE      .+6
   \   00000958   0xF001 0xFDDE      BL       ??man_ota_main_220
   \   0000095C   0x1E40             SUBS     R0,R0,#+1
   \   0000095E   0xD101             BNE      .+6
   \   00000960   0xF001 0xFDEB      BL       ??man_ota_main_221
   \   00000964   0x1E40             SUBS     R0,R0,#+1
   \   00000966   0xD101             BNE      .+6
   \   00000968   0xF001 0xFDF8      BL       ??man_ota_main_222
   \   0000096C   0x1E40             SUBS     R0,R0,#+1
   \   0000096E   0xD101             BNE      .+6
   \   00000970   0xF001 0xFDF6      BL       ??man_ota_main_223
   \   00000974   0x1E40             SUBS     R0,R0,#+1
   \   00000976   0xD101             BNE      .+6
   \   00000978   0xF001 0xFE17      BL       ??man_ota_main_224
   \   0000097C   0x1E40             SUBS     R0,R0,#+1
   \   0000097E   0xD101             BNE      .+6
   \   00000980   0xF001 0xFE24      BL       ??man_ota_main_225
   \   00000984   0x1E40             SUBS     R0,R0,#+1
   \   00000986   0xD101             BNE      .+6
   \   00000988   0xF001 0xFE2D      BL       ??man_ota_main_226
   \   0000098C   0x1E40             SUBS     R0,R0,#+1
   \   0000098E   0xD101             BNE      .+6
   \   00000990   0xF001 0xFE4A      BL       ??man_ota_main_227
   \   00000994   0x1E40             SUBS     R0,R0,#+1
   \   00000996   0xD101             BNE      .+6
   \   00000998   0xF001 0xFE4B      BL       ??man_ota_main_228
   \   0000099C   0x1E40             SUBS     R0,R0,#+1
   \   0000099E   0xD101             BNE      .+6
   \   000009A0   0xF001 0xFE52      BL       ??man_ota_main_229
   \   000009A4   0x1E40             SUBS     R0,R0,#+1
   \   000009A6   0xD101             BNE      .+6
   \   000009A8   0xF001 0xFE50      BL       ??man_ota_main_230
   \   000009AC   0x1E40             SUBS     R0,R0,#+1
   \   000009AE   0xD101             BNE      .+6
   \   000009B0   0xF001 0xFE51      BL       ??man_ota_main_231
   \   000009B4   0x1E40             SUBS     R0,R0,#+1
   \   000009B6   0xD101             BNE      .+6
   \   000009B8   0xF001 0xFE5C      BL       ??man_ota_main_232
   \   000009BC   0x1E40             SUBS     R0,R0,#+1
   \   000009BE   0xD101             BNE      .+6
   \   000009C0   0xF001 0xFE68      BL       ??man_ota_main_233
   \   000009C4   0x1E40             SUBS     R0,R0,#+1
   \   000009C6   0xD101             BNE      .+6
   \   000009C8   0xF001 0xFE66      BL       ??man_ota_main_234
   \   000009CC   0x1E40             SUBS     R0,R0,#+1
   \   000009CE   0xD101             BNE      .+6
   \   000009D0   0xF001 0xFE6D      BL       ??man_ota_main_235
   \   000009D4   0x1E40             SUBS     R0,R0,#+1
   \   000009D6   0xD101             BNE      .+6
   \   000009D8   0xF001 0xFE87      BL       ??man_ota_main_236
   \   000009DC   0x1E40             SUBS     R0,R0,#+1
   \   000009DE   0xD101             BNE      .+6
   \   000009E0   0xF001 0xFED0      BL       ??man_ota_main_237
   \   000009E4   0x1E40             SUBS     R0,R0,#+1
   \   000009E6   0xD101             BNE      .+6
   \   000009E8   0xF001 0xFECE      BL       ??man_ota_main_238
   \   000009EC   0x1E40             SUBS     R0,R0,#+1
   \   000009EE   0xD101             BNE      .+6
   \   000009F0   0xF001 0xFEF4      BL       ??man_ota_main_239
   \   000009F4   0x1E40             SUBS     R0,R0,#+1
   \   000009F6   0xD101             BNE      .+6
   \   000009F8   0xF001 0xFF01      BL       ??man_ota_main_240
   \   000009FC   0x1E40             SUBS     R0,R0,#+1
   \   000009FE   0xD101             BNE      .+6
   \   00000A00   0xF001 0xFF06      BL       ??man_ota_main_241
   \   00000A04   0x1E40             SUBS     R0,R0,#+1
   \   00000A06   0xD101             BNE      .+6
   \   00000A08   0xF001 0xFF04      BL       ??man_ota_main_242
   \   00000A0C   0x1E40             SUBS     R0,R0,#+1
   \   00000A0E   0xD101             BNE      .+6
   \   00000A10   0xF001 0xFFCD      BL       ??man_ota_main_243
   \   00000A14   0x1E40             SUBS     R0,R0,#+1
   \   00000A16   0xD101             BNE      .+6
   \   00000A18   0xF001 0xFFE0      BL       ??man_ota_main_244
   \   00000A1C   0x1E40             SUBS     R0,R0,#+1
   \   00000A1E   0xD101             BNE      .+6
   \   00000A20   0xF002 0xF806      BL       ??man_ota_main_245
   \   00000A24   0x1E40             SUBS     R0,R0,#+1
   \   00000A26   0xD101             BNE      .+6
   \   00000A28   0xF002 0xF804      BL       ??man_ota_main_246
   \   00000A2C   0x1E40             SUBS     R0,R0,#+1
   \   00000A2E   0xD101             BNE      .+6
   \   00000A30   0xF002 0xF82C      BL       ??man_ota_main_247
   \   00000A34   0x1E40             SUBS     R0,R0,#+1
   \   00000A36   0xD101             BNE      .+6
   \   00000A38   0xF002 0xF839      BL       ??man_ota_main_248
   \   00000A3C   0x1E40             SUBS     R0,R0,#+1
   \   00000A3E   0xD101             BNE      .+6
   \   00000A40   0xF002 0xF848      BL       ??man_ota_main_249
   \   00000A44   0x1E40             SUBS     R0,R0,#+1
   \   00000A46   0xD101             BNE      .+6
   \   00000A48   0xF002 0xF846      BL       ??man_ota_main_250
   \   00000A4C   0x1E40             SUBS     R0,R0,#+1
   \   00000A4E   0xD101             BNE      .+6
   \   00000A50   0xF002 0xF906      BL       ??man_ota_main_251
   \   00000A54   0x1E40             SUBS     R0,R0,#+1
   \   00000A56   0xD101             BNE      .+6
   \   00000A58   0xF002 0xF916      BL       ??man_ota_main_252
   \   00000A5C   0x1E40             SUBS     R0,R0,#+1
   \   00000A5E   0xD101             BNE      .+6
   \   00000A60   0xF002 0xF93A      BL       ??man_ota_main_253
   \   00000A64   0x1E40             SUBS     R0,R0,#+1
   \   00000A66   0xD101             BNE      .+6
   \   00000A68   0xF002 0xF937      BL       ??man_ota_main_254
   \   00000A6C   0x1E40             SUBS     R0,R0,#+1
   \   00000A6E   0xD101             BNE      .+6
   \   00000A70   0xF002 0xF95E      BL       ??man_ota_main_255
   \   00000A74   0x1E40             SUBS     R0,R0,#+1
   \   00000A76   0xD101             BNE      .+6
   \   00000A78   0xF002 0xF96B      BL       ??man_ota_main_256
   \   00000A7C   0x1E40             SUBS     R0,R0,#+1
   \   00000A7E   0xD101             BNE      .+6
   \   00000A80   0xF002 0xF976      BL       ??man_ota_main_257
   \   00000A84   0x1E40             SUBS     R0,R0,#+1
   \   00000A86   0xD101             BNE      .+6
   \   00000A88   0xF002 0xF973      BL       ??man_ota_main_258
   \   00000A8C   0x1E40             SUBS     R0,R0,#+1
   \   00000A8E   0xD101             BNE      .+6
   \   00000A90   0xF002 0xFA2E      BL       ??man_ota_main_259
   \   00000A94   0x1E40             SUBS     R0,R0,#+1
   \   00000A96   0xD101             BNE      .+6
   \   00000A98   0xF002 0xFA40      BL       ??man_ota_main_260
   \   00000A9C   0x1E40             SUBS     R0,R0,#+1
   \   00000A9E   0xD101             BNE      .+6
   \   00000AA0   0xF002 0xFA61      BL       ??man_ota_main_261
   \   00000AA4   0x1E40             SUBS     R0,R0,#+1
   \   00000AA6   0xD101             BNE      .+6
   \   00000AA8   0xF002 0xFA5E      BL       ??man_ota_main_262
   \   00000AAC   0x1E40             SUBS     R0,R0,#+1
   \   00000AAE   0xD101             BNE      .+6
   \   00000AB0   0xF002 0xFA86      BL       ??man_ota_main_263
   \   00000AB4   0x1E40             SUBS     R0,R0,#+1
   \   00000AB6   0xD101             BNE      .+6
   \   00000AB8   0xF002 0xFA92      BL       ??man_ota_main_264
   \   00000ABC   0x1E40             SUBS     R0,R0,#+1
   \   00000ABE   0xD101             BNE      .+6
   \   00000AC0   0xF002 0xFAA2      BL       ??man_ota_main_265
   \   00000AC4   0x1E40             SUBS     R0,R0,#+1
   \   00000AC6   0xD101             BNE      .+6
   \   00000AC8   0xF002 0xFA9F      BL       ??man_ota_main_266
   \   00000ACC   0x1E40             SUBS     R0,R0,#+1
   \   00000ACE   0xD101             BNE      .+6
   \   00000AD0   0xF002 0xFB5E      BL       ??man_ota_main_267
   \   00000AD4   0x1F40             SUBS     R0,R0,#+5
   \   00000AD6   0xD101             BNE      .+6
   \   00000AD8   0xF002 0xFB6E      BL       ??man_ota_main_268
   \   00000ADC   0x1E40             SUBS     R0,R0,#+1
   \   00000ADE   0xD101             BNE      .+6
   \   00000AE0   0xF002 0xFC02      BL       ??man_ota_main_269
   \   00000AE4   0x1E40             SUBS     R0,R0,#+1
   \   00000AE6   0xD101             BNE      .+6
   \   00000AE8   0xF002 0xFBFF      BL       ??man_ota_main_270
   \   00000AEC   0x1E40             SUBS     R0,R0,#+1
   \   00000AEE   0xD101             BNE      .+6
   \   00000AF0   0xF002 0xFC59      BL       ??man_ota_main_271
   \   00000AF4   0x1E40             SUBS     R0,R0,#+1
   \   00000AF6   0xD101             BNE      .+6
   \   00000AF8   0xF002 0xFC56      BL       ??man_ota_main_272
   \   00000AFC   0x1E40             SUBS     R0,R0,#+1
   \   00000AFE   0x2801             CMP      R0,#+1
   \   00000B00   0xD801             BHI      .+6
   \   00000B02   0xF002 0xFC55      BL       ??man_ota_main_273
   \   00000B06   0xF002 0xFC56      BL       ??man_ota_main_274
   1444          	case MAN_OTA_SEQ_READY:
   1445                          sysmgr_buf_lock(0);
   \                     ??man_ota_main_114: (+1)
   \   00000B0A   0x2000             MOVS     R0,#+0
   \   00000B0C   0x.... 0x....      BL       sysmgr_buf_lock
   1446          		break;
   \   00000B10   0xF002 0xFC51      BL       ??man_ota_main_274
   1447          
   1448          	case MAN_OTA_SEQ_OTA_WAIT_REQ:						// コマンド応答待ち
   1449          		switch (man_ota_work.exec_info.req_cmd) {
   \                     ??man_ota_main_115: (+1)
   \   00000B14   0x48D3             LDR      R0,??man_ota_main_275
   \   00000B16   0x6880             LDR      R0,[R0, #+8]
   \   00000B18   0x2801             CMP      R0,#+1
   \   00000B1A   0xD006             BEQ      ??man_ota_main_276
   \   00000B1C   0xD332             BCC      ??man_ota_main_277
   \   00000B1E   0x2803             CMP      R0,#+3
   \   00000B20   0xD023             BEQ      ??man_ota_main_278
   \   00000B22   0xD312             BCC      ??man_ota_main_279
   \   00000B24   0x2804             CMP      R0,#+4
   \   00000B26   0xD027             BEQ      ??man_ota_main_280
   \   00000B28   0xE02C             B        ??man_ota_main_277
   1450          		case MAN_OTA_REQ_TERM_START:
   1451          			man_msg_set_type(MAN_MSG_TYPE_FIRM_ST);		// 端末ファームウェア更新開始
   \                     ??man_ota_main_276: (+1)
   \   00000B2A   0x2024             MOVS     R0,#+36
   \   00000B2C   0x.... 0x....      BL       man_msg_set_type
   1452          			man_ota_work.ota_mode = MAN_OTA_MODE_TERM;
   \   00000B30   0x2001             MOVS     R0,#+1
   \   00000B32   0x49CC             LDR      R1,??man_ota_main_275
   \   00000B34   0x7048             STRB     R0,[R1, #+1]
   1453          			// 2秒後に開始する
   1454          			man_timer_start_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_WAIT, MAN_OTA_START_WAIT_TIME, man_ota_req_callback);
   \   00000B36   0x4ACC             LDR      R2,??man_ota_main_275+0x4
   \   00000B38   0x21FA             MOVS     R1,#+250
   \   00000B3A   0x00C9             LSLS     R1,R1,#+3        ;; #+2000
   \   00000B3C   0x48CB             LDR      R0,??man_ota_main_275+0x8  ;; 0x40600002
   \   00000B3E   0x.... 0x....      BL       man_timer_start_wait
   1455          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_WAIT);
   \   00000B42   0x2002             MOVS     R0,#+2
   \   00000B44   0x.... 0x....      BL       man_ota_set_sequense
   1456          			break;
   \   00000B48   0xE01C             B        ??man_ota_main_277
   1457          		case MAN_OTA_REQ_GPS_START:
   1458          			man_msg_set_type(MAN_MSG_TYPE_GPS_ST);		// GPSチップファームウェア更新開始
   \                     ??man_ota_main_279: (+1)
   \   00000B4A   0x2027             MOVS     R0,#+39
   \   00000B4C   0x.... 0x....      BL       man_msg_set_type
   1459          			man_ota_work.ota_mode = MAN_OTA_MODE_GPS;
   \   00000B50   0x2002             MOVS     R0,#+2
   \   00000B52   0x49C4             LDR      R1,??man_ota_main_275
   \   00000B54   0x7048             STRB     R0,[R1, #+1]
   1460          			// 2秒後に開始する
   1461          			man_timer_start_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_WAIT, MAN_OTA_START_WAIT_TIME, man_ota_req_callback);
   \   00000B56   0x4AC4             LDR      R2,??man_ota_main_275+0x4
   \   00000B58   0x21FA             MOVS     R1,#+250
   \   00000B5A   0x00C9             LSLS     R1,R1,#+3        ;; #+2000
   \   00000B5C   0x48C3             LDR      R0,??man_ota_main_275+0x8  ;; 0x40600002
   \   00000B5E   0x.... 0x....      BL       man_timer_start_wait
   1462          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_WAIT);
   \   00000B62   0x2002             MOVS     R0,#+2
   \   00000B64   0x.... 0x....      BL       man_ota_set_sequense
   1463          			break;
   \   00000B68   0xE00C             B        ??man_ota_main_277
   1464          		case MAN_OTA_REQ_USB_TERM_START:
   1465          			man_ota_work.ota_mode = MAN_OTA_MODE_TERM;
   \                     ??man_ota_main_278: (+1)
   \   00000B6A   0x2001             MOVS     R0,#+1
   \   00000B6C   0x49BD             LDR      R1,??man_ota_main_275
   \   00000B6E   0x7048             STRB     R0,[R1, #+1]
   1466          			// OTA開始
   1467          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_REQ);
   \   00000B70   0x2005             MOVS     R0,#+5
   \   00000B72   0x.... 0x....      BL       man_ota_set_sequense
   1468          			break;
   \   00000B76   0xE005             B        ??man_ota_main_277
   1469          		case MAN_OTA_REQ_USB_GPS_START:
   1470          			man_ota_work.ota_mode = MAN_OTA_MODE_GPS;
   \                     ??man_ota_main_280: (+1)
   \   00000B78   0x2002             MOVS     R0,#+2
   \   00000B7A   0x49BA             LDR      R1,??man_ota_main_275
   \   00000B7C   0x7048             STRB     R0,[R1, #+1]
   1471          			// OTA開始
   1472          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_REQ);
   \   00000B7E   0x2005             MOVS     R0,#+5
   \   00000B80   0x.... 0x....      BL       man_ota_set_sequense
   1473          			break;
   1474          		}
   1475          		break;
   \                     ??man_ota_main_277: (+1)
   \   00000B84   0xF002 0xFC17      BL       ??man_ota_main_274
   1476          	case MAN_OTA_SEQ_OTA_WAIT:					// コマンド応答待ち中
   1477          		break;
   \                     ??man_ota_main_116: (+1)
   \   00000B88   0xF002 0xFC15      BL       ??man_ota_main_274
   1478          	case MAN_OTA_SEQ_OTA_WAIT_OK:				// コマンド応答待ち完了
   1479          	case MAN_OTA_SEQ_OTA_WAIT_NG:				// コマンド応答待ち異常
   1480          		// OTA開始
   1481          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_REQ);
   \                     ??man_ota_main_117: (+1)
   \   00000B8C   0x2005             MOVS     R0,#+5
   \   00000B8E   0x.... 0x....      BL       man_ota_set_sequense
   1482          		break;
   \   00000B92   0xF002 0xFC10      BL       ??man_ota_main_274
   1483          
   1484          
   1485          	// ************************************
   1486          	// OTA開始準備
   1487          	// ************************************
   1488          	case MAN_OTA_SEQ_OTA_REQ:
   1489          		man_ota_work.exec_info.file_num = 1;
   \                     ??man_ota_main_118: (+1)
   \   00000B96   0x2001             MOVS     R0,#+1
   \   00000B98   0x49B2             LDR      R1,??man_ota_main_275
   \   00000B9A   0x6388             STR      R0,[R1, #+56]
   1490          		man_ota_work.exec_info.start_file_num = man_ota_work.exec_info.file_num;
   \   00000B9C   0x48B1             LDR      R0,??man_ota_main_275
   \   00000B9E   0x6B80             LDR      R0,[R0, #+56]
   \   00000BA0   0x49B0             LDR      R1,??man_ota_main_275
   \   00000BA2   0x6488             STR      R0,[R1, #+72]
   1491          		man_ota_work.exec_info.file_offset = 0;
   \   00000BA4   0x2000             MOVS     R0,#+0
   \   00000BA6   0x49AF             LDR      R1,??man_ota_main_275
   \   00000BA8   0x6508             STR      R0,[R1, #+80]
   1492          
   1493          
   1494          		switch (man_ota_work.exec_info.req_cmd) {
   \   00000BAA   0x48AE             LDR      R0,??man_ota_main_275
   \   00000BAC   0x6880             LDR      R0,[R0, #+8]
   \   00000BAE   0x2801             CMP      R0,#+1
   \   00000BB0   0xD009             BEQ      ??man_ota_main_281
   \   00000BB2   0xD200             BCS      .+4
   \   00000BB4   0xE0DB             B        ??man_ota_main_282
   \   00000BB6   0x2803             CMP      R0,#+3
   \   00000BB8   0xD100             BNE      .+4
   \   00000BBA   0xE0B8             B        ??man_ota_main_283
   \   00000BBC   0xD36B             BCC      ??man_ota_main_284
   \   00000BBE   0x2804             CMP      R0,#+4
   \   00000BC0   0xD100             BNE      .+4
   \   00000BC2   0xE0C1             B        ??man_ota_main_285
   \   00000BC4   0xE0D3             B        ??man_ota_main_282
   1495          		case MAN_OTA_REQ_TERM_START:
   1496          			// FTP情報設定
   1497          			memcpy(&man_ota_work.ftp_info.ip[0], &otastart->ip[0], MAN_DATA_IP_MAX+1);
   \                     ??man_ota_main_281: (+1)
   \   00000BC6   0x2241             MOVS     R2,#+65
   \   00000BC8   0x9900             LDR      R1,[SP, #+0]
   \   00000BCA   0x4CC1             LDR      R4,??man_ota_main_286
   \   00000BCC   0x0020             MOVS     R0,R4
   \   00000BCE   0x.... 0x....      BL       __aeabi_memcpy
   1498          			memcpy(&man_ota_work.ftp_info.port[0], &otastart->port[0], MAN_DATA_TCP_PORT_MAX+1);
   \   00000BD2   0x2206             MOVS     R2,#+6
   \   00000BD4   0x9800             LDR      R0,[SP, #+0]
   \   00000BD6   0x0001             MOVS     R1,R0
   \   00000BD8   0x3141             ADDS     R1,R1,#+65
   \   00000BDA   0x4CBE             LDR      R4,??man_ota_main_286+0x4
   \   00000BDC   0x0020             MOVS     R0,R4
   \   00000BDE   0x.... 0x....      BL       __aeabi_memcpy
   1499          			memcpy(&man_ota_work.ftp_info.username[0], &otastart->username[0], MAN_DATA_USER_NAME_MAX+1);
   \   00000BE2   0x2221             MOVS     R2,#+33
   \   00000BE4   0x9800             LDR      R0,[SP, #+0]
   \   00000BE6   0x0001             MOVS     R1,R0
   \   00000BE8   0x3147             ADDS     R1,R1,#+71
   \   00000BEA   0x4CBB             LDR      R4,??man_ota_main_286+0x8
   \   00000BEC   0x0020             MOVS     R0,R4
   \   00000BEE   0x.... 0x....      BL       __aeabi_memcpy
   1500          			memcpy(&man_ota_work.ftp_info.password[0], &otastart->password[0], MAN_DATA_PASSWORD_MAX+1);
   \   00000BF2   0x2221             MOVS     R2,#+33
   \   00000BF4   0x9800             LDR      R0,[SP, #+0]
   \   00000BF6   0x0001             MOVS     R1,R0
   \   00000BF8   0x3168             ADDS     R1,R1,#+104
   \   00000BFA   0x4CB8             LDR      R4,??man_ota_main_286+0xC
   \   00000BFC   0x0020             MOVS     R0,R4
   \   00000BFE   0x.... 0x....      BL       __aeabi_memcpy
   1501          
   1502          			// 現在の動作面と異なるファイルを採用する
   1503          			if (man_data_chk_program() == MAN_DATA_PRG_B_SIDE) {
   \   00000C02   0x.... 0x....      BL       man_data_chk_program
   \   00000C06   0x2801             CMP      R0,#+1
   \   00000C08   0xD117             BNE      ??man_ota_main_287
   1504          				memcpy(&man_ota_work.ftp_info.filename[0], &otastart->filename[0], MAN_DATA_FILENAME_MAX+1);
   \   00000C0A   0x2241             MOVS     R2,#+65
   \   00000C0C   0x9800             LDR      R0,[SP, #+0]
   \   00000C0E   0x0001             MOVS     R1,R0
   \   00000C10   0x3189             ADDS     R1,R1,#+137
   \   00000C12   0x4CB3             LDR      R4,??man_ota_main_286+0x10
   \   00000C14   0x0020             MOVS     R0,R4
   \   00000C16   0x.... 0x....      BL       __aeabi_memcpy
   1505          				memcpy(&man_ota_work.ftp_info.fileonly[0], &otastart->fileonly[0], MAN_DATA_FILENAME_MAX+1);
   \   00000C1A   0x2241             MOVS     R2,#+65
   \   00000C1C   0x9800             LDR      R0,[SP, #+0]
   \   00000C1E   0x0001             MOVS     R1,R0
   \   00000C20   0x31CA             ADDS     R1,R1,#+202
   \   00000C22   0x4CB0             LDR      R4,??man_ota_main_286+0x14
   \   00000C24   0x0020             MOVS     R0,R4
   \   00000C26   0x.... 0x....      BL       __aeabi_memcpy
   1506          				man_ota_work.flash_top = MAN_DATA_PRG_A_ADDR_TOP;
   \   00000C2A   0x2080             MOVS     R0,#+128
   \   00000C2C   0x0240             LSLS     R0,R0,#+9        ;; #+65536
   \   00000C2E   0x498D             LDR      R1,??man_ota_main_275
   \   00000C30   0x6048             STR      R0,[R1, #+4]
   1507          				man_ota_work.exec_info.file_offset = 0;
   \   00000C32   0x2000             MOVS     R0,#+0
   \   00000C34   0x498B             LDR      R1,??man_ota_main_275
   \   00000C36   0x6508             STR      R0,[R1, #+80]
   \   00000C38   0xE016             B        ??man_ota_main_288
   1508          			}
   1509          			else {
   1510          				memcpy(&man_ota_work.ftp_info.filename[0], &otastart->filename[0], MAN_DATA_FILENAME_MAX+1);
   \                     ??man_ota_main_287: (+1)
   \   00000C3A   0x2241             MOVS     R2,#+65
   \   00000C3C   0x9800             LDR      R0,[SP, #+0]
   \   00000C3E   0x0001             MOVS     R1,R0
   \   00000C40   0x3189             ADDS     R1,R1,#+137
   \   00000C42   0x4CA7             LDR      R4,??man_ota_main_286+0x10
   \   00000C44   0x0020             MOVS     R0,R4
   \   00000C46   0x.... 0x....      BL       __aeabi_memcpy
   1511          				memcpy(&man_ota_work.ftp_info.fileonly[0], &otastart->fileonly[0], MAN_DATA_FILENAME_MAX+1);
   \   00000C4A   0x2241             MOVS     R2,#+65
   \   00000C4C   0x9800             LDR      R0,[SP, #+0]
   \   00000C4E   0x0001             MOVS     R1,R0
   \   00000C50   0x31CA             ADDS     R1,R1,#+202
   \   00000C52   0x4CA4             LDR      R4,??man_ota_main_286+0x14
   \   00000C54   0x0020             MOVS     R0,R4
   \   00000C56   0x.... 0x....      BL       __aeabi_memcpy
   1512          				man_ota_work.flash_top = MAN_DATA_PRG_B_ADDR_TOP;
   \   00000C5A   0x2080             MOVS     R0,#+128
   \   00000C5C   0x02C0             LSLS     R0,R0,#+11       ;; #+262144
   \   00000C5E   0x4981             LDR      R1,??man_ota_main_275
   \   00000C60   0x6048             STR      R0,[R1, #+4]
   1513          				man_ota_work.exec_info.file_offset = 100;
   \   00000C62   0x2064             MOVS     R0,#+100
   \   00000C64   0x497F             LDR      R1,??man_ota_main_275
   \   00000C66   0x6508             STR      R0,[R1, #+80]
   1514          			}
   1515          
   1516          			man_data_set_ftp_info(man_ota_work.ftp_info);
   \                     ??man_ota_main_288: (+1)
   \   00000C68   0x4999             LDR      R1,??man_ota_main_286
   \   00000C6A   0xB084             SUB      SP,SP,#+16
   \   00000C6C   0x4668             MOV      R0,SP
   \   00000C6E   0x22FF             MOVS     R2,#+255
   \   00000C70   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   00000C72   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000C76   0xBC0F             POP      {R0-R3}
   \   00000C78   0x.... 0x....      BL       man_data_set_ftp_info
   1517          
   1518          			// 外部FLASH情報設定
   1519          			man_ota_work.file_info.addr_term = MAN_FLASH_TOP_OTA_TERM_FIRM;			// 
   \   00000C7C   0x2000             MOVS     R0,#+0
   \   00000C7E   0x499A             LDR      R1,??man_ota_main_286+0x18
   \   00000C80   0x6008             STR      R0,[R1, #+0]
   1520          			man_ota_work.file_info.size_term = 0;
   \   00000C82   0x2000             MOVS     R0,#+0
   \   00000C84   0x4999             LDR      R1,??man_ota_main_286+0x1C
   \   00000C86   0x6008             STR      R0,[R1, #+0]
   1521          			man_ota_work.file_info.block_top = MAN_FLASH_TOP_OTA_TERM_FIRM;
   \   00000C88   0x2000             MOVS     R0,#+0
   \   00000C8A   0x4999             LDR      R1,??man_ota_main_286+0x20
   \   00000C8C   0x6008             STR      R0,[R1, #+0]
   1522          			man_ota_work.file_info.block_num = MAN_FLASH_SIZE_TERM_FIRM / MAN_FLASH_BLOCK_SIZE;
   \   00000C8E   0x2004             MOVS     R0,#+4
   \   00000C90   0x4998             LDR      R1,??man_ota_main_286+0x24
   \   00000C92   0x6008             STR      R0,[R1, #+0]
   1523          			break;
   \   00000C94   0xE06B             B        ??man_ota_main_282
   1524          
   1525          		case MAN_OTA_REQ_GPS_START:
   1526          			// FTP情報設定
   1527          			memcpy(&man_ota_work.ftp_info.ip[0], &gpsota->ip[0], MAN_DATA_IP_MAX+1);
   \                     ??man_ota_main_284: (+1)
   \   00000C96   0x2241             MOVS     R2,#+65
   \   00000C98   0x0021             MOVS     R1,R4
   \   00000C9A   0x4D8D             LDR      R5,??man_ota_main_286
   \   00000C9C   0x0028             MOVS     R0,R5
   \   00000C9E   0x.... 0x....      BL       __aeabi_memcpy
   1528          			memcpy(&man_ota_work.ftp_info.port[0], &gpsota->port[0], MAN_DATA_TCP_PORT_MAX+1);
   \   00000CA2   0x2206             MOVS     R2,#+6
   \   00000CA4   0x0021             MOVS     R1,R4
   \   00000CA6   0x3141             ADDS     R1,R1,#+65
   \   00000CA8   0x4D8A             LDR      R5,??man_ota_main_286+0x4
   \   00000CAA   0x0028             MOVS     R0,R5
   \   00000CAC   0x.... 0x....      BL       __aeabi_memcpy
   1529          			memcpy(&man_ota_work.ftp_info.username[0], &gpsota->username[0], MAN_DATA_USER_NAME_MAX+1);
   \   00000CB0   0x2221             MOVS     R2,#+33
   \   00000CB2   0x0021             MOVS     R1,R4
   \   00000CB4   0x3147             ADDS     R1,R1,#+71
   \   00000CB6   0x4D88             LDR      R5,??man_ota_main_286+0x8
   \   00000CB8   0x0028             MOVS     R0,R5
   \   00000CBA   0x.... 0x....      BL       __aeabi_memcpy
   1530          			memcpy(&man_ota_work.ftp_info.password[0], &gpsota->password[0], MAN_DATA_PASSWORD_MAX+1);
   \   00000CBE   0x2221             MOVS     R2,#+33
   \   00000CC0   0x0021             MOVS     R1,R4
   \   00000CC2   0x3168             ADDS     R1,R1,#+104
   \   00000CC4   0x4D85             LDR      R5,??man_ota_main_286+0xC
   \   00000CC6   0x0028             MOVS     R0,R5
   \   00000CC8   0x.... 0x....      BL       __aeabi_memcpy
   1531          			// CONFIGの準備
   1532          			memcpy(&man_ota_work.ftp_info.filename[0], &gpsota->config[0], MAN_DATA_FILENAME_MAX+1);
   \   00000CCC   0x2241             MOVS     R2,#+65
   \   00000CCE   0x20FF             MOVS     R0,#+255
   \   00000CD0   0x300C             ADDS     R0,R0,#+12       ;; #+267
   \   00000CD2   0x1821             ADDS     R1,R4,R0
   \   00000CD4   0x4D82             LDR      R5,??man_ota_main_286+0x10
   \   00000CD6   0x0028             MOVS     R0,R5
   \   00000CD8   0x.... 0x....      BL       __aeabi_memcpy
   1533          			memcpy(&man_ota_work.ftp_info.fileonly[0], &gpsota->config_only[0], MAN_DATA_FILENAME_MAX+1);
   \   00000CDC   0x2241             MOVS     R2,#+65
   \   00000CDE   0x20A6             MOVS     R0,#+166
   \   00000CE0   0x0040             LSLS     R0,R0,#+1        ;; #+332
   \   00000CE2   0x1821             ADDS     R1,R4,R0
   \   00000CE4   0x4C7F             LDR      R4,??man_ota_main_286+0x14
   \   00000CE6   0x0020             MOVS     R0,R4
   \   00000CE8   0x.... 0x....      BL       __aeabi_memcpy
   1534          
   1535          			man_data_set_ftp_info(man_ota_work.ftp_info);
   \   00000CEC   0x4978             LDR      R1,??man_ota_main_286
   \   00000CEE   0xB084             SUB      SP,SP,#+16
   \   00000CF0   0x4668             MOV      R0,SP
   \   00000CF2   0x22FF             MOVS     R2,#+255
   \   00000CF4   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   00000CF6   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000CFA   0xBC0F             POP      {R0-R3}
   \   00000CFC   0x.... 0x....      BL       man_data_set_ftp_info
   1536          			man_ota_work.exec_info.exec_file = 0;
   \   00000D00   0x2000             MOVS     R0,#+0
   \   00000D02   0x4958             LDR      R1,??man_ota_main_275
   \   00000D04   0x6348             STR      R0,[R1, #+52]
   1537          
   1538          			// 外部FLASH情報設定
   1539          			man_ota_work.file_info.addr_update = MAN_FLASH_TOP_OTA_GPS_UPDATER;
   \   00000D06   0x2080             MOVS     R0,#+128
   \   00000D08   0x02C0             LSLS     R0,R0,#+11       ;; #+262144
   \   00000D0A   0x49CC             LDR      R1,??man_ota_main_289
   \   00000D0C   0x6008             STR      R0,[R1, #+0]
   1540          			man_ota_work.file_info.addr_config = MAN_FLASH_TOP_OTA_GPS_CONFIG;
   \   00000D0E   0x2080             MOVS     R0,#+128
   \   00000D10   0x0300             LSLS     R0,R0,#+12       ;; #+524288
   \   00000D12   0x49CB             LDR      R1,??man_ota_main_289+0x4
   \   00000D14   0x6008             STR      R0,[R1, #+0]
   1541          			man_ota_work.file_info.addr_firmware = MAN_FLASH_TOP_OTA_GPS_FIRM;
   \   00000D16   0x20C0             MOVS     R0,#+192
   \   00000D18   0x0300             LSLS     R0,R0,#+12       ;; #+786432
   \   00000D1A   0x49CA             LDR      R1,??man_ota_main_289+0x8
   \   00000D1C   0x6008             STR      R0,[R1, #+0]
   1542          			man_ota_work.file_info.block_top = MAN_FLASH_TOP_OTA_GPS_UPDATER;
   \   00000D1E   0x2080             MOVS     R0,#+128
   \   00000D20   0x02C0             LSLS     R0,R0,#+11       ;; #+262144
   \   00000D22   0x4973             LDR      R1,??man_ota_main_286+0x20
   \   00000D24   0x6008             STR      R0,[R1, #+0]
   1543          			man_ota_work.file_info.block_num = (MAN_FLASH_SIZE_GPS_UPDATER + MAN_FLASH_SIZE_GPS_CONFIG + MAN_FLASH_SIZE_GPS_FIRM) / MAN_FLASH_BLOCK_SIZE;
   \   00000D26   0x2018             MOVS     R0,#+24
   \   00000D28   0x4972             LDR      R1,??man_ota_main_286+0x24
   \   00000D2A   0x6008             STR      R0,[R1, #+0]
   1544          			break;
   \   00000D2C   0xE01F             B        ??man_ota_main_282
   1545          
   1546          		case MAN_OTA_REQ_USB_TERM_START:
   1547          			// 外部FLASH情報設定
   1548          			man_ota_work.file_info.addr_term = MAN_FLASH_TOP_OTA_TERM_FIRM;			// 
   \                     ??man_ota_main_283: (+1)
   \   00000D2E   0x2000             MOVS     R0,#+0
   \   00000D30   0x496D             LDR      R1,??man_ota_main_286+0x18
   \   00000D32   0x6008             STR      R0,[R1, #+0]
   1549          			man_ota_work.file_info.size_term = 0;
   \   00000D34   0x2000             MOVS     R0,#+0
   \   00000D36   0x496D             LDR      R1,??man_ota_main_286+0x1C
   \   00000D38   0x6008             STR      R0,[R1, #+0]
   1550          			man_ota_work.file_info.block_top = MAN_FLASH_TOP_OTA_TERM_FIRM;
   \   00000D3A   0x2000             MOVS     R0,#+0
   \   00000D3C   0x496C             LDR      R1,??man_ota_main_286+0x20
   \   00000D3E   0x6008             STR      R0,[R1, #+0]
   1551          			man_ota_work.file_info.block_num = MAN_FLASH_SIZE_TERM_FIRM / MAN_FLASH_BLOCK_SIZE;
   \   00000D40   0x2004             MOVS     R0,#+4
   \   00000D42   0x496C             LDR      R1,??man_ota_main_286+0x24
   \   00000D44   0x6008             STR      R0,[R1, #+0]
   1552          			break;
   \   00000D46   0xE012             B        ??man_ota_main_282
   1553          		case MAN_OTA_REQ_USB_GPS_START:
   1554          			// 外部FLASH情報設定
   1555          			man_ota_work.file_info.addr_update = MAN_FLASH_TOP_OTA_GPS_UPDATER;
   \                     ??man_ota_main_285: (+1)
   \   00000D48   0x2080             MOVS     R0,#+128
   \   00000D4A   0x02C0             LSLS     R0,R0,#+11       ;; #+262144
   \   00000D4C   0x49BB             LDR      R1,??man_ota_main_289
   \   00000D4E   0x6008             STR      R0,[R1, #+0]
   1556          			man_ota_work.file_info.addr_config = MAN_FLASH_TOP_OTA_GPS_CONFIG;
   \   00000D50   0x2080             MOVS     R0,#+128
   \   00000D52   0x0300             LSLS     R0,R0,#+12       ;; #+524288
   \   00000D54   0x49BA             LDR      R1,??man_ota_main_289+0x4
   \   00000D56   0x6008             STR      R0,[R1, #+0]
   1557          			man_ota_work.file_info.addr_firmware = MAN_FLASH_TOP_OTA_GPS_FIRM;
   \   00000D58   0x20C0             MOVS     R0,#+192
   \   00000D5A   0x0300             LSLS     R0,R0,#+12       ;; #+786432
   \   00000D5C   0x49B9             LDR      R1,??man_ota_main_289+0x8
   \   00000D5E   0x6008             STR      R0,[R1, #+0]
   1558          			man_ota_work.file_info.block_top = MAN_FLASH_TOP_OTA_GPS_UPDATER;
   \   00000D60   0x2080             MOVS     R0,#+128
   \   00000D62   0x02C0             LSLS     R0,R0,#+11       ;; #+262144
   \   00000D64   0x4962             LDR      R1,??man_ota_main_286+0x20
   \   00000D66   0x6008             STR      R0,[R1, #+0]
   1559          			man_ota_work.file_info.block_num = (MAN_FLASH_SIZE_GPS_UPDATER + MAN_FLASH_SIZE_GPS_CONFIG + MAN_FLASH_SIZE_GPS_FIRM) / MAN_FLASH_BLOCK_SIZE;
   \   00000D68   0x2018             MOVS     R0,#+24
   \   00000D6A   0x4962             LDR      R1,??man_ota_main_286+0x24
   \   00000D6C   0x6008             STR      R0,[R1, #+0]
   1560          			break;
   1561          		}
   1562          
   1563          		// OTA開始
   1564          		// 作業用バッファ確保(ロック）
   1565                          sysmgr_buf_lock(1);
   \                     ??man_ota_main_282: (+1)
   \   00000D6E   0x2001             MOVS     R0,#+1
   \   00000D70   0x.... 0x....      BL       sysmgr_buf_lock
   1566                          //作業用バッファクリア
   1567                          memset(man_ota_work.data_buff,0,MAN_OTA_RCV_DATA_BUFF_MAX);
   \   00000D74   0x49B4             LDR      R1,??man_ota_main_289+0xC  ;; 0x1388
   \   00000D76   0x2200             MOVS     R2,#+0
   \   00000D78   0x48B4             LDR      R0,??man_ota_main_289+0x10
   \   00000D7A   0x6804             LDR      R4,[R0, #+0]
   \   00000D7C   0x0020             MOVS     R0,R4
   \   00000D7E   0x.... 0x....      BL       __aeabi_memset
   1568                          memset(man_ota_work.resp_cmd.data,0,MAN_OTA_RCV_DATA_MAX);
   \   00000D82   0x2180             MOVS     R1,#+128
   \   00000D84   0x0149             LSLS     R1,R1,#+5        ;; #+4096
   \   00000D86   0x2200             MOVS     R2,#+0
   \   00000D88   0x48B1             LDR      R0,??man_ota_main_289+0x14
   \   00000D8A   0x6804             LDR      R4,[R0, #+0]
   \   00000D8C   0x0020             MOVS     R0,R4
   \   00000D8E   0x.... 0x....      BL       __aeabi_memset
   1569          		man_ope_req_ota_start(MAN_OTA_SEQ_OTA_START, man_ota_req_callback);
   \   00000D92   0x4935             LDR      R1,??man_ota_main_275+0x4
   \   00000D94   0x2006             MOVS     R0,#+6
   \   00000D96   0x.... 0x....      BL       man_ope_req_ota_start
   1570          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_START);
   \   00000D9A   0x2006             MOVS     R0,#+6
   \   00000D9C   0x.... 0x....      BL       man_ota_set_sequense
   1571          		man_ota_work.exec_info.result = MAN_OTA_STATUS_OK;
   \   00000DA0   0x2000             MOVS     R0,#+0
   \   00000DA2   0x4930             LDR      R1,??man_ota_main_275
   \   00000DA4   0x6588             STR      R0,[R1, #+88]
   1572          		break;
   \   00000DA6   0xF002 0xFB06      BL       ??man_ota_main_274
   1573          
   1574          
   1575          
   1576          	// ************************************
   1577          	// OTA開始
   1578          	// ************************************
   1579          	case MAN_OTA_SEQ_OTA_START:					// OTA開始実行中
   1580          		break;
   \                     ??man_ota_main_119: (+1)
   \   00000DAA   0xF002 0xFB04      BL       ??man_ota_main_274
   1581          
   1582          	case MAN_OTA_SEQ_OTA_START_OK:				// OTA開始完了(正常)
   1583          
   1584          		// 電圧・バッテリー残量計測停止
   1585          		man_battery_standby();
   \                     ??man_ota_main_120: (+1)
   \   00000DAE   0x.... 0x....      BL       man_battery_standby
   1586          		// 充電情報取得停止
   1587          		man_charge_standby();
   \   00000DB2   0x.... 0x....      BL       man_charge_standby
   1588          
   1589          		// 外部FLASH ERASE開始
   1590          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_FLASH_ERASE_REQ);
   \   00000DB6   0x2009             MOVS     R0,#+9
   \   00000DB8   0x.... 0x....      BL       man_ota_set_sequense
   1591          		break;
   \   00000DBC   0xF002 0xFAFB      BL       ??man_ota_main_274
   1592          
   1593          
   1594          	case MAN_OTA_SEQ_OTA_START_NG:				// OTA開始完了(異常)
   1595          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_121: (+1)
   \   00000DC0   0x2000             MOVS     R0,#+0
   \   00000DC2   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000DC4   0x4927             LDR      R1,??man_ota_main_275
   \   00000DC6   0x6588             STR      R0,[R1, #+88]
   1596          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00000DC8   0x20A2             MOVS     R0,#+162
   \   00000DCA   0x.... 0x....      BL       man_ota_set_sequense
   1597          		// エラー登録
   1598          		man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   00000DCE   0x4BD3             LDR      R3,??man_ota_main_290  ;; 0x63e
   \   00000DD0   0x2200             MOVS     R2,#+0
   \   00000DD2   0x2100             MOVS     R1,#+0
   \   00000DD4   0x201B             MOVS     R0,#+27
   \   00000DD6   0x.... 0x....      BL       man_error_set
   1599          		break;
   \   00000DDA   0xF002 0xFAEC      BL       ??man_ota_main_274
   1600          
   1601          	// ************************************
   1602          	// FLASH初期化
   1603          	// ************************************
   1604          	case MAN_OTA_SEQ_OTA_FLASH_ERASE_REQ:
   1605          		// FLASH BLOCK ERASE開始
   1606          		man_flash_erase_block(man_ota_work.file_info.block_top, man_ota_work.file_info.block_num, MAN_OTA_SEQ_OTA_FLASH_ERASE, man_ota_req_callback);
   \                     ??man_ota_main_122: (+1)
   \   00000DDE   0x4B22             LDR      R3,??man_ota_main_275+0x4
   \   00000DE0   0x220A             MOVS     R2,#+10
   \   00000DE2   0x4844             LDR      R0,??man_ota_main_286+0x24
   \   00000DE4   0x6801             LDR      R1,[R0, #+0]
   \   00000DE6   0x4842             LDR      R0,??man_ota_main_286+0x20
   \   00000DE8   0x6800             LDR      R0,[R0, #+0]
   \   00000DEA   0x.... 0x....      BL       man_flash_erase_block
   1607          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_FLASH_ERASE);
   \   00000DEE   0x200A             MOVS     R0,#+10
   \   00000DF0   0x.... 0x....      BL       man_ota_set_sequense
   1608          		break;
   \   00000DF4   0xF002 0xFADF      BL       ??man_ota_main_274
   1609          	case MAN_OTA_SEQ_OTA_FLASH_ERASE:
   1610          		break;
   \                     ??man_ota_main_123: (+1)
   \   00000DF8   0xF002 0xFADD      BL       ??man_ota_main_274
   1611          	case MAN_OTA_SEQ_OTA_FLASH_ERASE_OK:
   1612          		
   1613          		switch (man_ota_work.exec_info.req_cmd) {
   \                     ??man_ota_main_124: (+1)
   \   00000DFC   0x4819             LDR      R0,??man_ota_main_275
   \   00000DFE   0x6880             LDR      R0,[R0, #+8]
   \   00000E00   0x1E40             SUBS     R0,R0,#+1
   \   00000E02   0x2801             CMP      R0,#+1
   \   00000E04   0xD904             BLS      ??man_ota_main_291
   \   00000E06   0x1E80             SUBS     R0,R0,#+2
   \   00000E08   0xD006             BEQ      ??man_ota_main_292
   \   00000E0A   0x1E40             SUBS     R0,R0,#+1
   \   00000E0C   0xD008             BEQ      ??man_ota_main_293
   \   00000E0E   0xE00C             B        ??man_ota_main_294
   1614          		case MAN_OTA_REQ_TERM_START:
   1615          		case MAN_OTA_REQ_GPS_START:
   1616          			// FTP初期化開始
   1617          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_INIT_REQ);
   \                     ??man_ota_main_291: (+1)
   \   00000E10   0x2014             MOVS     R0,#+20
   \   00000E12   0x.... 0x....      BL       man_ota_set_sequense
   1618          			break;
   \   00000E16   0xE008             B        ??man_ota_main_294
   1619          		case MAN_OTA_REQ_USB_TERM_START:
   1620          			// USB 端末用 OTA FILE SET開始
   1621          			man_ota_set_sequense(MAN_OTA_SEQ_USB_TERM_FILE_SET_REQ);
   \                     ??man_ota_main_292: (+1)
   \   00000E18   0x207E             MOVS     R0,#+126
   \   00000E1A   0x.... 0x....      BL       man_ota_set_sequense
   1622          			break;
   \   00000E1E   0xE004             B        ??man_ota_main_294
   1623          		case MAN_OTA_REQ_USB_GPS_START:
   1624          			man_usb_ota_open();
   \                     ??man_ota_main_293: (+1)
   \   00000E20   0x.... 0x....      BL       man_usb_ota_open
   1625          			// USB GPS CONFIG FILE SET開始
   1626          			man_ota_set_sequense(MAN_OTA_SEQ_USB_CONFIG_FILE_SET_REQ);
   \   00000E24   0x2086             MOVS     R0,#+134
   \   00000E26   0x.... 0x....      BL       man_ota_set_sequense
   1627          			break;
   1628          		}
   1629          		break;
   \                     ??man_ota_main_294: (+1)
   \   00000E2A   0xF002 0xFAC4      BL       ??man_ota_main_274
   1630          	case MAN_OTA_SEQ_OTA_FLASH_ERASE_NG:
   1631          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_125: (+1)
   \   00000E2E   0x2000             MOVS     R0,#+0
   \   00000E30   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000E32   0x490C             LDR      R1,??man_ota_main_275
   \   00000E34   0x6588             STR      R0,[R1, #+88]
   1632          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00000E36   0x20A2             MOVS     R0,#+162
   \   00000E38   0x.... 0x....      BL       man_ota_set_sequense
   1633          		// エラー登録
   1634          		man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   00000E3C   0x4BD0             LDR      R3,??man_ota_main_295  ;; 0x662
   \   00000E3E   0x2200             MOVS     R2,#+0
   \   00000E40   0x2100             MOVS     R1,#+0
   \   00000E42   0x201B             MOVS     R0,#+27
   \   00000E44   0x.... 0x....      BL       man_error_set
   1635          		break;
   \   00000E48   0xF002 0xFAB5      BL       ??man_ota_main_274
   1636          
   1637          
   1638          	// ************************************
   1639          	// FTPリカバリ
   1640          	// ************************************
   1641          	case MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ:
   1642          		// 2秒後に開始する
   1643          		man_timer_start_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT, MAN_OTA_FTP_RECO_WAIT_TIME, man_ota_req_callback);
   \                     ??man_ota_main_126: (+1)
   \   00000E4C   0x4A06             LDR      R2,??man_ota_main_275+0x4
   \   00000E4E   0x21FA             MOVS     R1,#+250
   \   00000E50   0x00C9             LSLS     R1,R1,#+3        ;; #+2000
   \   00000E52   0x48CC             LDR      R0,??man_ota_main_295+0x4  ;; 0x4060000e
   \   00000E54   0x.... 0x....      BL       man_timer_start_wait
   1644          		man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT);
   \   00000E58   0x200E             MOVS     R0,#+14
   \   00000E5A   0x.... 0x....      BL       man_ota_set_sequense
   1645          		break;
   \   00000E5E   0xF002 0xFAAA      BL       ??man_ota_main_274
   \   00000E62   0xBF00             Nop      
   \                     ??man_ota_main_275:
   \   00000E64   0x........         DC32     man_ota_work
   \   00000E68   0x........         DC32     man_ota_req_callback
   \   00000E6C   0x40600002         DC32     0x40600002
   1646          	case MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT:
   1647          		break;
   \                     ??man_ota_main_127: (+1)
   \   00000E70   0xF002 0xFAA1      BL       ??man_ota_main_274
   1648          	case MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT_OK:
   1649          		// HTTPの使用状況を確認する
   1650          		if (sts == 0) {
   \                     ??man_ota_main_128: (+1)
   \   00000E74   0x2D00             CMP      R5,#+0
   \   00000E76   0xD110             BNE      ??man_ota_main_296
   1651          			// FTPリカバリ開始
   1652          			ret = man_http_ftp_recovery(MAN_OTA_SEQ_TERM_OTA_FTP_RECO, man_ota_req_callback);
   \   00000E78   0x49D4             LDR      R1,??man_ota_main_297
   \   00000E7A   0x2011             MOVS     R0,#+17
   \   00000E7C   0x.... 0x....      BL       man_http_ftp_recovery
   1653          			if (ret < 0) {
   \   00000E80   0x2800             CMP      R0,#+0
   \   00000E82   0xD507             BPL      ??man_ota_main_298
   1654          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \   00000E84   0x4BD2             LDR      R3,??man_ota_main_297+0x4  ;; 0x676
   \   00000E86   0x2200             MOVS     R2,#+0
   \   00000E88   0x48D2             LDR      R0,??man_ota_main_297+0x8
   \   00000E8A   0x7801             LDRB     R1,[R0, #+0]
   \   00000E8C   0x201B             MOVS     R0,#+27
   \   00000E8E   0x.... 0x....      BL       man_error_set
   \   00000E92   0xE002             B        ??man_ota_main_296
   1655          			}
   1656          			else {
   1657          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO);
   \                     ??man_ota_main_298: (+1)
   \   00000E94   0x2011             MOVS     R0,#+17
   \   00000E96   0x.... 0x....      BL       man_ota_set_sequense
   1658          			}
   1659          		}
   1660          		break;
   \                     ??man_ota_main_296: (+1)
   \   00000E9A   0xF002 0xFA8C      BL       ??man_ota_main_274
   1661          	case MAN_OTA_SEQ_TERM_OTA_FTP_RECO_WAIT_NG:
   1662          		// FTPリカバリ開始
   1663          		man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ);
   \                     ??man_ota_main_129: (+1)
   \   00000E9E   0x200D             MOVS     R0,#+13
   \   00000EA0   0x.... 0x....      BL       man_ota_set_sequense
   1664          		break;
   \   00000EA4   0xF002 0xFA87      BL       ??man_ota_main_274
   1665          
   1666          	case MAN_OTA_SEQ_TERM_OTA_FTP_RECO:
   1667          		break;
   \                     ??man_ota_main_130: (+1)
   \   00000EA8   0xF002 0xFA85      BL       ??man_ota_main_274
   1668          	case MAN_OTA_SEQ_TERM_OTA_FTP_RECO_OK:
   1669          	case MAN_OTA_SEQ_TERM_OTA_FTP_RECO_NG:
   1670          		// 外部電源OFF時は中止する
   1671          		if (sensor->ext_state != MAN_CHARGE_EXTSTAT_ON) {
   \                     ??man_ota_main_131: (+1)
   \   00000EAC   0x6F30             LDR      R0,[R6, #+112]
   \   00000EAE   0x2801             CMP      R0,#+1
   \   00000EB0   0xD022             BEQ      ??man_ota_main_299
   1672          			// 中止処理へ
   1673          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00000EB2   0x2000             MOVS     R0,#+0
   \   00000EB4   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000EB6   0x49C7             LDR      R1,??man_ota_main_297+0x8
   \   00000EB8   0x6588             STR      R0,[R1, #+88]
   1674          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00000EBA   0x20A2             MOVS     R0,#+162
   \   00000EBC   0x.... 0x....      BL       man_ota_set_sequense
   1675          			// エラー登録
   1676          			man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   00000EC0   0x4BDA             LDR      R3,??man_ota_main_300  ;; 0x68c
   \   00000EC2   0x2200             MOVS     R2,#+0
   \   00000EC4   0x2100             MOVS     R1,#+0
   \   00000EC6   0x201B             MOVS     R0,#+27
   \   00000EC8   0x.... 0x....      BL       man_error_set
   \   00000ECC   0xE017             B        ??man_ota_main_301
   \   00000ECE   0xBF00             Nop      
   \                     ??man_ota_main_286:
   \   00000ED0   0x........         DC32     man_ota_work+0xC8
   \   00000ED4   0x........         DC32     man_ota_work+0x109
   \   00000ED8   0x........         DC32     man_ota_work+0x10F
   \   00000EDC   0x........         DC32     man_ota_work+0x130
   \   00000EE0   0x........         DC32     man_ota_work+0x151
   \   00000EE4   0x........         DC32     man_ota_work+0x192
   \   00000EE8   0x........         DC32     man_ota_work+0xA4
   \   00000EEC   0x........         DC32     man_ota_work+0x94
   \   00000EF0   0x........         DC32     man_ota_work+0xB4
   \   00000EF4   0x........         DC32     man_ota_work+0xB8
   1677          		}
   1678          		else {
   1679          			// FTP OPEN開始
   1680          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_INIT_OK);
   \                     ??man_ota_main_299: (+1)
   \   00000EF8   0x2016             MOVS     R0,#+22
   \   00000EFA   0x.... 0x....      BL       man_ota_set_sequense
   1681          		}
   1682          		break;
   \                     ??man_ota_main_301: (+1)
   \   00000EFE   0xF002 0xFA5A      BL       ??man_ota_main_274
   1683          
   1684          
   1685          	// ************************************
   1686          	// FTP初期化
   1687          	// ************************************
   1688          	case MAN_OTA_SEQ_OTA_FTP_INIT_REQ:
   1689          		// HTTPの使用状況を確認する
   1690          		if (sts == 0) {
   \                     ??man_ota_main_132: (+1)
   \   00000F02   0x2D00             CMP      R5,#+0
   \   00000F04   0xD110             BNE      ??man_ota_main_302
   1691          			// FTP初期化開始
   1692          			ret = man_http_ftp_init(MAN_OTA_SEQ_OTA_FTP_INIT, man_ota_req_callback);
   \   00000F06   0x49B1             LDR      R1,??man_ota_main_297
   \   00000F08   0x2015             MOVS     R0,#+21
   \   00000F0A   0x.... 0x....      BL       man_http_ftp_init
   1693          			if (ret < 0) {
   \   00000F0E   0x2800             CMP      R0,#+0
   \   00000F10   0xD507             BPL      ??man_ota_main_303
   1694          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \   00000F12   0x4BC7             LDR      R3,??man_ota_main_300+0x4  ;; 0x69e
   \   00000F14   0x2200             MOVS     R2,#+0
   \   00000F16   0x48AF             LDR      R0,??man_ota_main_297+0x8
   \   00000F18   0x7801             LDRB     R1,[R0, #+0]
   \   00000F1A   0x201B             MOVS     R0,#+27
   \   00000F1C   0x.... 0x....      BL       man_error_set
   \   00000F20   0xE002             B        ??man_ota_main_302
   1695          			}
   1696          			else {
   1697          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_INIT);
   \                     ??man_ota_main_303: (+1)
   \   00000F22   0x2015             MOVS     R0,#+21
   \   00000F24   0x.... 0x....      BL       man_ota_set_sequense
   1698          			}
   1699          		}
   1700          		break;
   \                     ??man_ota_main_302: (+1)
   \   00000F28   0xF002 0xFA45      BL       ??man_ota_main_274
   1701          	case MAN_OTA_SEQ_OTA_FTP_INIT:				// OTA  FTP初期化実行中
   1702          		break;
   \                     ??man_ota_main_133: (+1)
   \   00000F2C   0xF002 0xFA43      BL       ??man_ota_main_274
   1703          	case MAN_OTA_SEQ_OTA_FTP_INIT_OK:			// OTA  FTP初期化(正常)
   1704          		// HTTPの使用状況を確認する
   1705          		if (sts == 0) {
   \                     ??man_ota_main_134: (+1)
   \   00000F30   0x2D00             CMP      R5,#+0
   \   00000F32   0xD113             BNE      ??man_ota_main_304
   1706          			// FTP OPEN開始
   1707          			ret = man_http_ftp_open(MAN_OTA_SEQ_OTA_FTP_OPEN, man_ota_req_callback);
   \   00000F34   0x49A5             LDR      R1,??man_ota_main_297
   \   00000F36   0x2018             MOVS     R0,#+24
   \   00000F38   0x.... 0x....      BL       man_http_ftp_open
   1708          			if (ret < 0) {
   \   00000F3C   0x2800             CMP      R0,#+0
   \   00000F3E   0xD507             BPL      ??man_ota_main_305
   1709          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \   00000F40   0x4BBC             LDR      R3,??man_ota_main_300+0x8  ;; 0x6ad
   \   00000F42   0x2200             MOVS     R2,#+0
   \   00000F44   0x48A3             LDR      R0,??man_ota_main_297+0x8
   \   00000F46   0x7801             LDRB     R1,[R0, #+0]
   \   00000F48   0x201B             MOVS     R0,#+27
   \   00000F4A   0x.... 0x....      BL       man_error_set
   \   00000F4E   0xE005             B        ??man_ota_main_304
   1710          			}
   1711          			else {
   1712          				man_ota_work.exec_info.retry = 0;//リトライカウンタの初期化
   \                     ??man_ota_main_305: (+1)
   \   00000F50   0x2000             MOVS     R0,#+0
   \   00000F52   0x49A0             LDR      R1,??man_ota_main_297+0x8
   \   00000F54   0x6548             STR      R0,[R1, #+84]
   1713          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_OPEN);
   \   00000F56   0x2018             MOVS     R0,#+24
   \   00000F58   0x.... 0x....      BL       man_ota_set_sequense
   1714          			}
   1715          		}
   1716          		break;
   \                     ??man_ota_main_304: (+1)
   \   00000F5C   0xF002 0xFA2B      BL       ??man_ota_main_274
   1717          	case MAN_OTA_SEQ_OTA_FTP_INIT_NG:			// OTA  FTP初期化(異常)
   1718          		if(man_ota_work.exec_info.retry < MAN_OTA_RETRY_MAX){
   \                     ??man_ota_main_135: (+1)
   \   00000F60   0x489C             LDR      R0,??man_ota_main_297+0x8
   \   00000F62   0x6D40             LDR      R0,[R0, #+84]
   \   00000F64   0x2802             CMP      R0,#+2
   \   00000F66   0xDA0B             BGE      ??man_ota_main_306
   1719          			man_ota_work.exec_info.retry ++;
   \   00000F68   0x489A             LDR      R0,??man_ota_main_297+0x8
   \   00000F6A   0x6D40             LDR      R0,[R0, #+84]
   \   00000F6C   0x1C40             ADDS     R0,R0,#+1
   \   00000F6E   0x4999             LDR      R1,??man_ota_main_297+0x8
   \   00000F70   0x6548             STR      R0,[R1, #+84]
   1720          			man_ota_work.req_state = MAN_OTA_STATE_NON;
   \   00000F72   0x2000             MOVS     R0,#+0
   \   00000F74   0x4997             LDR      R1,??man_ota_main_297+0x8
   \   00000F76   0x6608             STR      R0,[R1, #+96]
   1721          			//FTPリカバリ開始
   1722          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ);
   \   00000F78   0x200D             MOVS     R0,#+13
   \   00000F7A   0x.... 0x....      BL       man_ota_set_sequense
   \   00000F7E   0xE009             B        ??man_ota_main_307
   1723          		}else{
   1724          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_306: (+1)
   \   00000F80   0x2000             MOVS     R0,#+0
   \   00000F82   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000F84   0x4993             LDR      R1,??man_ota_main_297+0x8
   \   00000F86   0x6588             STR      R0,[R1, #+88]
   1725          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00000F88   0x20A2             MOVS     R0,#+162
   \   00000F8A   0x.... 0x....      BL       man_ota_set_sequense
   1726          			man_ota_work.exec_info.retry = 0;//リトライカウンタの初期化
   \   00000F8E   0x2000             MOVS     R0,#+0
   \   00000F90   0x4990             LDR      R1,??man_ota_main_297+0x8
   \   00000F92   0x6548             STR      R0,[R1, #+84]
   1727          		}
   1728          		break;
   \                     ??man_ota_main_307: (+1)
   \   00000F94   0xF002 0xFA0F      BL       ??man_ota_main_274
   1729          
   1730          
   1731          	// ************************************
   1732          	// FTP OPEN
   1733          	// ************************************
   1734          	case MAN_OTA_SEQ_OTA_FTP_OPEN:				// OTA  FTP OPEN実行中
   1735          		break;
   \                     ??man_ota_main_136: (+1)
   \   00000F98   0xF002 0xFA0D      BL       ??man_ota_main_274
   1736          	case MAN_OTA_SEQ_OTA_FTP_OPEN_OK:			// OTA  FTP OPEN(正常)
   1737          		// FTP GET開始
   1738          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_REQ);
   \                     ??man_ota_main_137: (+1)
   \   00000F9C   0x201B             MOVS     R0,#+27
   \   00000F9E   0x.... 0x....      BL       man_ota_set_sequense
   1739          		break;
   \   00000FA2   0xF002 0xFA08      BL       ??man_ota_main_274
   1740          	case MAN_OTA_SEQ_OTA_FTP_OPEN_NG:			// OTA  FTP OPEN(異常)
   1741          		// リセット発生時は復帰させる
   1742          		if (man_ota_work.req_state == MAN_OTA_STATE_RESET) {
   \                     ??man_ota_main_138: (+1)
   \   00000FA6   0x488B             LDR      R0,??man_ota_main_297+0x8
   \   00000FA8   0x6E00             LDR      R0,[R0, #+96]
   \   00000FAA   0x2801             CMP      R0,#+1
   \   00000FAC   0xD105             BNE      ??man_ota_main_308
   1743          			man_ota_work.req_state = MAN_OTA_STATE_NON;
   \   00000FAE   0x2000             MOVS     R0,#+0
   \   00000FB0   0x4988             LDR      R1,??man_ota_main_297+0x8
   \   00000FB2   0x6608             STR      R0,[R1, #+96]
   1744          			// FTPリカバリ開始
   1745          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ);
   \   00000FB4   0x200D             MOVS     R0,#+13
   \   00000FB6   0x.... 0x....      BL       man_ota_set_sequense
   1746          		}
   1747          		break;
   \                     ??man_ota_main_308: (+1)
   \   00000FBA   0xF002 0xF9FC      BL       ??man_ota_main_274
   1748          
   1749          
   1750          	// ************************************
   1751          	// FTP GET
   1752          	// ************************************
   1753          	case MAN_OTA_SEQ_OTA_FTP_GET_REQ:
   1754          		// HTTPの使用状況を確認する
   1755          		if (sts == 0) {
   \                     ??man_ota_main_139: (+1)
   \   00000FBE   0x2D00             CMP      R5,#+0
   \   00000FC0   0xD116             BNE      ??man_ota_main_309
   1756          			ret = man_http_ftp_get(man_ota_work.exec_info.file_num+man_ota_work.exec_info.file_offset, MAN_OTA_SEQ_OTA_FTP_GET, man_ota_req_callback);
   \   00000FC2   0x4A82             LDR      R2,??man_ota_main_297
   \   00000FC4   0x211C             MOVS     R1,#+28
   \   00000FC6   0x4883             LDR      R0,??man_ota_main_297+0x8
   \   00000FC8   0x6B80             LDR      R0,[R0, #+56]
   \   00000FCA   0x4B82             LDR      R3,??man_ota_main_297+0x8
   \   00000FCC   0x6D1B             LDR      R3,[R3, #+80]
   \   00000FCE   0x18C0             ADDS     R0,R0,R3
   \   00000FD0   0x.... 0x....      BL       man_http_ftp_get
   1757          			if (ret < 0) {
   \   00000FD4   0x2800             CMP      R0,#+0
   \   00000FD6   0xD507             BPL      ??man_ota_main_310
   1758          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \   00000FD8   0x4BDF             LDR      R3,??man_ota_main_311  ;; 0x6de
   \   00000FDA   0x2200             MOVS     R2,#+0
   \   00000FDC   0x487D             LDR      R0,??man_ota_main_297+0x8
   \   00000FDE   0x7801             LDRB     R1,[R0, #+0]
   \   00000FE0   0x201B             MOVS     R0,#+27
   \   00000FE2   0x.... 0x....      BL       man_error_set
   \   00000FE6   0xE013             B        ??man_ota_main_312
   1759          			}
   1760          			else {
   1761          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET);
   \                     ??man_ota_main_310: (+1)
   \   00000FE8   0x201C             MOVS     R0,#+28
   \   00000FEA   0x.... 0x....      BL       man_ota_set_sequense
   \   00000FEE   0xE00F             B        ??man_ota_main_312
   1762          				
   1763          #ifdef GNSS_DEBUG_MAN_OTA_FTP 
   1764          			int32_t		length;
   1765          			sprintf((char *)&man_ota_work.buff[0], "FTP GET(%d):%08x\n", man_ota_work.exec_info.file_num+man_ota_work.exec_info.file_offset, man_timer_get_1ms_count());
   1766          			length = strlen((char const *)&man_ota_work.buff[0]);
   1767          			man_usb_data_send(&man_ota_work.buff[0], length);
   1768          #endif
   1769          			}
   1770          		}
   1771          		else {
   1772          			// 外部電源OFF時は中止する
   1773          			if (sensor->ext_state != MAN_CHARGE_EXTSTAT_ON) {
   \                     ??man_ota_main_309: (+1)
   \   00000FF0   0x6F30             LDR      R0,[R6, #+112]
   \   00000FF2   0x2801             CMP      R0,#+1
   \   00000FF4   0xD00C             BEQ      ??man_ota_main_312
   1774          				// 中止処理へ
   1775          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00000FF6   0x2000             MOVS     R0,#+0
   \   00000FF8   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000FFA   0x4976             LDR      R1,??man_ota_main_297+0x8
   \   00000FFC   0x6588             STR      R0,[R1, #+88]
   1776          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00000FFE   0x20A2             MOVS     R0,#+162
   \   00001000   0x.... 0x....      BL       man_ota_set_sequense
   1777          				// エラー登録
   1778          				man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   00001004   0x4BD5             LDR      R3,??man_ota_main_311+0x4  ;; 0x6f2
   \   00001006   0x2200             MOVS     R2,#+0
   \   00001008   0x2100             MOVS     R1,#+0
   \   0000100A   0x201B             MOVS     R0,#+27
   \   0000100C   0x.... 0x....      BL       man_error_set
   1779          			}
   1780          		}
   1781          		break;
   \                     ??man_ota_main_312: (+1)
   \   00001010   0xF002 0xF9D1      BL       ??man_ota_main_274
   1782          	case MAN_OTA_SEQ_OTA_FTP_GET:				// OTA  FTP GET実行中
   1783          		break;
   \                     ??man_ota_main_140: (+1)
   \   00001014   0xF002 0xF9CF      BL       ??man_ota_main_274
   1784          	case MAN_OTA_SEQ_OTA_FTP_GET_OK:			// OTA  FTP GET(正常)
   1785          		man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \                     ??man_ota_main_141: (+1)
   \   00001018   0x2000             MOVS     R0,#+0
   \   0000101A   0x496E             LDR      R1,??man_ota_main_297+0x8
   \   0000101C   0x6548             STR      R0,[R1, #+84]
   1786          
   1787          
   1788          		// 端末のOTAの場合
   1789          		if (man_ota_work.exec_info.req_cmd == MAN_OTA_REQ_TERM_START) {
   \   0000101E   0x486D             LDR      R0,??man_ota_main_297+0x8
   \   00001020   0x6880             LDR      R0,[R0, #+8]
   \   00001022   0x2801             CMP      R0,#+1
   \   00001024   0xD116             BNE      ??man_ota_main_313
   1790          			// FILE GET開始
   1791          			man_ota_work.exec_info.file_num = 1;
   \   00001026   0x2001             MOVS     R0,#+1
   \   00001028   0x496A             LDR      R1,??man_ota_main_297+0x8
   \   0000102A   0x6388             STR      R0,[R1, #+56]
   1792          			man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \   0000102C   0x2000             MOVS     R0,#+0
   \   0000102E   0x4969             LDR      R1,??man_ota_main_297+0x8
   \   00001030   0x6548             STR      R0,[R1, #+84]
   1793          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_GET_REQ);
   \   00001032   0x2027             MOVS     R0,#+39
   \   00001034   0x.... 0x....      BL       man_ota_set_sequense
   \   00001038   0xE07B             B        ??man_ota_main_314
   \   0000103A   0xBF00             Nop      
   \                     ??man_ota_main_289:
   \   0000103C   0x........         DC32     man_ota_work+0xA8
   \   00001040   0x........         DC32     man_ota_work+0xAC
   \   00001044   0x........         DC32     man_ota_work+0xB0
   \   00001048   0x00001388         DC32     0x1388
   \   0000104C   0x........         DC32     man_ota_work+0xBC
   \   00001050   0x........         DC32     man_ota_work+0x84
   1794          			
   1795          		}
   1796          
   1797          		// GPSのOTAの場合
   1798          		else {
   1799          			if ( (man_ota_work.exec_info.exec_file & MAN_OTA_EXEC_GPS_CONFIG) == 0) {
   \                     ??man_ota_main_313: (+1)
   \   00001054   0x48D3             LDR      R0,??man_ota_main_315
   \   00001056   0x7800             LDRB     R0,[R0, #+0]
   \   00001058   0x0780             LSLS     R0,R0,#+30
   \   0000105A   0xD42E             BMI      ??man_ota_main_316
   1800          				man_ota_work.exec_info.exec_file |= MAN_OTA_EXEC_GPS_CONFIG;
   \   0000105C   0x485D             LDR      R0,??man_ota_main_297+0x8
   \   0000105E   0x6B40             LDR      R0,[R0, #+52]
   \   00001060   0x2102             MOVS     R1,#+2
   \   00001062   0x4301             ORRS     R1,R1,R0
   \   00001064   0x485B             LDR      R0,??man_ota_main_297+0x8
   \   00001066   0x6341             STR      R1,[R0, #+52]
   1801          
   1802          				// UPDATERの準備
   1803          				memcpy(&man_ota_work.ftp_info.filename[0], &gpsota->update[0], MAN_DATA_FILENAME_MAX+1);
   \   00001068   0x2241             MOVS     R2,#+65
   \   0000106A   0x20FF             MOVS     R0,#+255
   \   0000106C   0x308E             ADDS     R0,R0,#+142      ;; #+397
   \   0000106E   0x1821             ADDS     R1,R4,R0
   \   00001070   0x4DCD             LDR      R5,??man_ota_main_315+0x4
   \   00001072   0x0028             MOVS     R0,R5
   \   00001074   0x.... 0x....      BL       __aeabi_memcpy
   1804          				memcpy(&man_ota_work.ftp_info.fileonly[0], &gpsota->update_only[0], MAN_DATA_FILENAME_MAX+1);
   \   00001078   0x2241             MOVS     R2,#+65
   \   0000107A   0x20E7             MOVS     R0,#+231
   \   0000107C   0x0040             LSLS     R0,R0,#+1        ;; #+462
   \   0000107E   0x1821             ADDS     R1,R4,R0
   \   00001080   0x4CCA             LDR      R4,??man_ota_main_315+0x8
   \   00001082   0x0020             MOVS     R0,R4
   \   00001084   0x.... 0x....      BL       __aeabi_memcpy
   1805          
   1806          				man_data_set_ftp_info(man_ota_work.ftp_info);
   \   00001088   0x49C9             LDR      R1,??man_ota_main_315+0xC
   \   0000108A   0xB084             SUB      SP,SP,#+16
   \   0000108C   0x4668             MOV      R0,SP
   \   0000108E   0x22FF             MOVS     R2,#+255
   \   00001090   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   00001092   0x.... 0x....      BL       __aeabi_memcpy4
   \   00001096   0xBC0F             POP      {R0-R3}
   \   00001098   0x.... 0x....      BL       man_data_set_ftp_info
   1807          				man_ota_work.exec_info.file_num = 1;
   \   0000109C   0x2001             MOVS     R0,#+1
   \   0000109E   0x494D             LDR      R1,??man_ota_main_297+0x8
   \   000010A0   0x6388             STR      R0,[R1, #+56]
   1808          				man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \   000010A2   0x2000             MOVS     R0,#+0
   \   000010A4   0x494B             LDR      R1,??man_ota_main_297+0x8
   \   000010A6   0x6548             STR      R0,[R1, #+84]
   1809          				// FTP安定用に65秒待つ
   1810          				man_timer_start_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_FTP_DELAY, MAN_OTA_FTP_GET_WAIT_TIME, man_ota_req_callback);
   \   000010A8   0x4A48             LDR      R2,??man_ota_main_297
   \   000010AA   0x49C2             LDR      R1,??man_ota_main_315+0x10  ;; 0xfde8
   \   000010AC   0x48C2             LDR      R0,??man_ota_main_315+0x14  ;; 0x40600024
   \   000010AE   0x.... 0x....      BL       man_timer_start_wait
   1811          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_DELAY);
   \   000010B2   0x2024             MOVS     R0,#+36
   \   000010B4   0x.... 0x....      BL       man_ota_set_sequense
   \   000010B8   0xE03B             B        ??man_ota_main_314
   1812          				
   1813          
   1814          #ifdef GNSS_DEBUG_MAN_OTA_FTP 
   1815          			int32_t		length;
   1816          			sprintf((char *)&man_ota_work.buff[0], "FTP WAIT(%d):%08x\n", man_ota_work.exec_info.file_num+man_ota_work.exec_info.file_offset-1, man_timer_get_1ms_count());
   1817          			length = strlen((char const *)&man_ota_work.buff[0]);
   1818          			man_usb_data_send(&man_ota_work.buff[0], length);
   1819          #endif
   1820          			}
   1821          			else if ( (man_ota_work.exec_info.exec_file & MAN_OTA_EXEC_GPS_UPDATER) == 0) {
   \                     ??man_ota_main_316: (+1)
   \   000010BA   0x48BA             LDR      R0,??man_ota_main_315
   \   000010BC   0x7800             LDRB     R0,[R0, #+0]
   \   000010BE   0x0740             LSLS     R0,R0,#+29
   \   000010C0   0xD42E             BMI      ??man_ota_main_317
   1822          				man_ota_work.exec_info.exec_file |= MAN_OTA_EXEC_GPS_UPDATER;
   \   000010C2   0x4844             LDR      R0,??man_ota_main_297+0x8
   \   000010C4   0x6B40             LDR      R0,[R0, #+52]
   \   000010C6   0x2104             MOVS     R1,#+4
   \   000010C8   0x4301             ORRS     R1,R1,R0
   \   000010CA   0x4842             LDR      R0,??man_ota_main_297+0x8
   \   000010CC   0x6341             STR      R1,[R0, #+52]
   1823          
   1824          				// REMOTEの準備
   1825          				memcpy(&man_ota_work.ftp_info.filename[0], &gpsota->remote[0], MAN_DATA_FILENAME_MAX+1);
   \   000010CE   0x2241             MOVS     R2,#+65
   \   000010D0   0x0021             MOVS     R1,R4
   \   000010D2   0x3189             ADDS     R1,R1,#+137
   \   000010D4   0x4DB4             LDR      R5,??man_ota_main_315+0x4
   \   000010D6   0x0028             MOVS     R0,R5
   \   000010D8   0x.... 0x....      BL       __aeabi_memcpy
   1826          				memcpy(&man_ota_work.ftp_info.fileonly[0], &gpsota->remote_only[0], MAN_DATA_FILENAME_MAX+1);
   \   000010DC   0x2241             MOVS     R2,#+65
   \   000010DE   0x0021             MOVS     R1,R4
   \   000010E0   0x31CA             ADDS     R1,R1,#+202
   \   000010E2   0x4CB2             LDR      R4,??man_ota_main_315+0x8
   \   000010E4   0x0020             MOVS     R0,R4
   \   000010E6   0x.... 0x....      BL       __aeabi_memcpy
   1827          
   1828          				man_data_set_ftp_info(man_ota_work.ftp_info);
   \   000010EA   0x49B1             LDR      R1,??man_ota_main_315+0xC
   \   000010EC   0xB084             SUB      SP,SP,#+16
   \   000010EE   0x4668             MOV      R0,SP
   \   000010F0   0x22FF             MOVS     R2,#+255
   \   000010F2   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   000010F4   0x.... 0x....      BL       __aeabi_memcpy4
   \   000010F8   0xBC0F             POP      {R0-R3}
   \   000010FA   0x.... 0x....      BL       man_data_set_ftp_info
   1829          				man_ota_work.exec_info.file_num = 1;
   \   000010FE   0x2001             MOVS     R0,#+1
   \   00001100   0x4934             LDR      R1,??man_ota_main_297+0x8
   \   00001102   0x6388             STR      R0,[R1, #+56]
   1830          				man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \   00001104   0x2000             MOVS     R0,#+0
   \   00001106   0x4933             LDR      R1,??man_ota_main_297+0x8
   \   00001108   0x6548             STR      R0,[R1, #+84]
   1831          				// FTP安定用に65秒待つ
   1832          				man_timer_start_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_FTP_DELAY, MAN_OTA_FTP_GET_WAIT_TIME, man_ota_req_callback);
   \   0000110A   0x4A30             LDR      R2,??man_ota_main_297
   \   0000110C   0x49A9             LDR      R1,??man_ota_main_315+0x10  ;; 0xfde8
   \   0000110E   0x48AA             LDR      R0,??man_ota_main_315+0x14  ;; 0x40600024
   \   00001110   0x.... 0x....      BL       man_timer_start_wait
   1833          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_DELAY);
   \   00001114   0x2024             MOVS     R0,#+36
   \   00001116   0x.... 0x....      BL       man_ota_set_sequense
   \   0000111A   0xE00A             B        ??man_ota_main_314
   \                     ??man_ota_main_290:
   \   0000111C   0x0000063E         DC32     0x63e
   1834          
   1835          #ifdef GNSS_DEBUG_MAN_OTA_FTP 
   1836          			int32_t		length;
   1837          			sprintf((char *)&man_ota_work.buff[0], "FTP WAIT(%d):%08x\n", man_ota_work.exec_info.file_num+man_ota_work.exec_info.file_offset-1, man_timer_get_1ms_count());
   1838          			length = strlen((char const *)&man_ota_work.buff[0]);
   1839          			man_usb_data_send(&man_ota_work.buff[0], length);
   1840          #endif
   1841          			}
   1842          			else {
   1843          				man_ota_work.exec_info.exec_file |= MAN_OTA_EXEC_GPS_FIRMWARE;
   \                     ??man_ota_main_317: (+1)
   \   00001120   0x482C             LDR      R0,??man_ota_main_297+0x8
   \   00001122   0x6B40             LDR      R0,[R0, #+52]
   \   00001124   0x2101             MOVS     R1,#+1
   \   00001126   0x4301             ORRS     R1,R1,R0
   \   00001128   0x482A             LDR      R0,??man_ota_main_297+0x8
   \   0000112A   0x6341             STR      R1,[R0, #+52]
   1844          				// GPS更新開始
   1845          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_START_REQ);
   \   0000112C   0x2033             MOVS     R0,#+51
   \   0000112E   0x.... 0x....      BL       man_ota_set_sequense
   1846          			}
   1847          		}
   1848          		break;
   \                     ??man_ota_main_314: (+1)
   \   00001132   0xF002 0xF940      BL       ??man_ota_main_274
   1849          
   1850          	case MAN_OTA_SEQ_OTA_FTP_GET_NG:			// OTA  FTP GET(異常)
   1851          		// リセット発生時は復帰させる
   1852          		if (man_ota_work.req_state == MAN_OTA_STATE_RESET) {
   \                     ??man_ota_main_142: (+1)
   \   00001136   0x4827             LDR      R0,??man_ota_main_297+0x8
   \   00001138   0x6E00             LDR      R0,[R0, #+96]
   \   0000113A   0x2801             CMP      R0,#+1
   \   0000113C   0xD106             BNE      ??man_ota_main_318
   1853          			man_ota_work.req_state = MAN_OTA_STATE_NON;
   \   0000113E   0x2000             MOVS     R0,#+0
   \   00001140   0x4924             LDR      R1,??man_ota_main_297+0x8
   \   00001142   0x6608             STR      R0,[R1, #+96]
   1854          			// FTPリカバリ開始
   1855          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ);
   \   00001144   0x200D             MOVS     R0,#+13
   \   00001146   0x.... 0x....      BL       man_ota_set_sequense
   \   0000114A   0xE007             B        ??man_ota_main_319
   1856          		}
   1857          		else {
   1858          			// +CFTPGETFILE: 219(Socket connect timeout) は5分後に発行される
   1859          			// 360秒待ってもNGの場合は中止する
   1860          			man_timer_start_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_FTP_GET_NG_W, MAN_OTA_FTP_GET_NG_WAIT, man_ota_req_callback);
   \                     ??man_ota_main_318: (+1)
   \   0000114C   0x4A1F             LDR      R2,??man_ota_main_297
   \   0000114E   0x49D1             LDR      R1,??man_ota_main_320  ;; 0x57e40
   \   00001150   0x48D1             LDR      R0,??man_ota_main_320+0x4  ;; 0x4060001f
   \   00001152   0x.... 0x....      BL       man_timer_start_wait
   1861          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_NG_W);
   \   00001156   0x201F             MOVS     R0,#+31
   \   00001158   0x.... 0x....      BL       man_ota_set_sequense
   1862          		}
   1863          		break;
   \                     ??man_ota_main_319: (+1)
   \   0000115C   0xF002 0xF92B      BL       ??man_ota_main_274
   1864          	case MAN_OTA_SEQ_OTA_FTP_GET_NG_W:
   1865          		// リセット発生時は復帰させる
   1866          		if (man_ota_work.req_state == MAN_OTA_STATE_RESET) {
   \                     ??man_ota_main_143: (+1)
   \   00001160   0x481C             LDR      R0,??man_ota_main_297+0x8
   \   00001162   0x6E00             LDR      R0,[R0, #+96]
   \   00001164   0x2801             CMP      R0,#+1
   \   00001166   0xD109             BNE      ??man_ota_main_321
   1867          			man_ota_work.req_state = MAN_OTA_STATE_NON;
   \   00001168   0x2000             MOVS     R0,#+0
   \   0000116A   0x491A             LDR      R1,??man_ota_main_297+0x8
   \   0000116C   0x6608             STR      R0,[R1, #+96]
   1868          			// タイマー中止
   1869          			man_timer_cancel_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_FTP_GET_NG_W, MAN_OTA_FTP_GET_NG_WAIT);
   \   0000116E   0x49C9             LDR      R1,??man_ota_main_320  ;; 0x57e40
   \   00001170   0x48C9             LDR      R0,??man_ota_main_320+0x4  ;; 0x4060001f
   \   00001172   0x.... 0x....      BL       man_timer_cancel_wait
   1870          			// FTPリカバリ開始
   1871          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ);
   \   00001176   0x200D             MOVS     R0,#+13
   \   00001178   0x.... 0x....      BL       man_ota_set_sequense
   1872          		}
   1873          		// ここでは処理なし
   1874          		break;
   \                     ??man_ota_main_321: (+1)
   \   0000117C   0xF002 0xF91B      BL       ??man_ota_main_274
   \                     ??man_ota_main_295:
   \   00001180   0x00000662         DC32     0x662
   \   00001184   0x4060000E         DC32     0x4060000e
   1875          	case MAN_OTA_SEQ_OTA_FTP_GET_NG_W_OK:
   1876          	case MAN_OTA_SEQ_OTA_FTP_GET_NG_W_NG:
   1877          		// リトライする
   1878          		if (man_ota_work.exec_info.retry <= MAN_OTA_RETRY_MAX) {
   \                     ??man_ota_main_144: (+1)
   \   00001188   0x4812             LDR      R0,??man_ota_main_297+0x8
   \   0000118A   0x6D40             LDR      R0,[R0, #+84]
   \   0000118C   0x2803             CMP      R0,#+3
   \   0000118E   0xDA08             BGE      ??man_ota_main_322
   1879          			man_ota_work.exec_info.retry++;		// リトライカウンタの更新
   \   00001190   0x4810             LDR      R0,??man_ota_main_297+0x8
   \   00001192   0x6D40             LDR      R0,[R0, #+84]
   \   00001194   0x1C40             ADDS     R0,R0,#+1
   \   00001196   0x490F             LDR      R1,??man_ota_main_297+0x8
   \   00001198   0x6548             STR      R0,[R1, #+84]
   1880          			// FTP GET開始
   1881          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_REQ);
   \   0000119A   0x201B             MOVS     R0,#+27
   \   0000119C   0x.... 0x....      BL       man_ota_set_sequense
   \   000011A0   0xE002             B        ??man_ota_main_323
   1882          		}
   1883          		// 中止する
   1884          		else {
   1885          			// OTAを中止する
   1886          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_NG_A);
   \                     ??man_ota_main_322: (+1)
   \   000011A2   0x2022             MOVS     R0,#+34
   \   000011A4   0x.... 0x....      BL       man_ota_set_sequense
   1887          		}
   1888          		break;
   \                     ??man_ota_main_323: (+1)
   \   000011A8   0xF002 0xF905      BL       ??man_ota_main_274
   1889          	case MAN_OTA_SEQ_OTA_FTP_GET_NG_A:
   1890          		// 中止処理へ
   1891          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_145: (+1)
   \   000011AC   0x2000             MOVS     R0,#+0
   \   000011AE   0x43C0             MVNS     R0,R0            ;; #-1
   \   000011B0   0x4908             LDR      R1,??man_ota_main_297+0x8
   \   000011B2   0x6588             STR      R0,[R1, #+88]
   1892          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000011B4   0x20A2             MOVS     R0,#+162
   \   000011B6   0x.... 0x....      BL       man_ota_set_sequense
   1893          		// エラー登録
   1894          		man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   000011BA   0x4BB8             LDR      R3,??man_ota_main_320+0x8  ;; 0x766
   \   000011BC   0x2200             MOVS     R2,#+0
   \   000011BE   0x2100             MOVS     R1,#+0
   \   000011C0   0x201B             MOVS     R0,#+27
   \   000011C2   0x.... 0x....      BL       man_error_set
   1895          		break;
   \   000011C6   0xF002 0xF8F6      BL       ??man_ota_main_274
   \   000011CA   0xBF00             Nop      
   \                     ??man_ota_main_297:
   \   000011CC   0x........         DC32     man_ota_req_callback
   \   000011D0   0x00000676         DC32     0x676
   \   000011D4   0x........         DC32     man_ota_work
   1896          
   1897          	case MAN_OTA_SEQ_OTA_FTP_GET_END:
   1898          		// 端末のOTAの場合
   1899          		if (man_ota_work.exec_info.req_cmd == MAN_OTA_REQ_TERM_START) {
   \                     ??man_ota_main_146: (+1)
   \   000011D8   0x48B1             LDR      R0,??man_ota_main_320+0xC
   \   000011DA   0x6880             LDR      R0,[R0, #+8]
   \   000011DC   0x2801             CMP      R0,#+1
   \   000011DE   0xD12B             BNE      ??man_ota_main_324
   1900          			// FILE数登録
   1901          			man_ota_work.exec_info.quantity = man_ota_work.exec_info.file_num-1;
   \   000011E0   0x48AF             LDR      R0,??man_ota_main_320+0xC
   \   000011E2   0x6B80             LDR      R0,[R0, #+56]
   \   000011E4   0x1E40             SUBS     R0,R0,#+1
   \   000011E6   0x49AE             LDR      R1,??man_ota_main_320+0xC
   \   000011E8   0x61C8             STR      R0,[R1, #+28]
   1902          
   1903          			// 一致するファイルが存在する場合
   1904          			if (man_ota_work.exec_info.quantity >= 1) {
   \   000011EA   0x48AD             LDR      R0,??man_ota_main_320+0xC
   \   000011EC   0x69C0             LDR      R0,[R0, #+28]
   \   000011EE   0x2800             CMP      R0,#+0
   \   000011F0   0xD00D             BEQ      ??man_ota_main_325
   1905          				// FILE GET開始
   1906          				man_ota_work.exec_info.file_num = 1;
   \   000011F2   0x2001             MOVS     R0,#+1
   \   000011F4   0x49AA             LDR      R1,??man_ota_main_320+0xC
   \   000011F6   0x6388             STR      R0,[R1, #+56]
   1907          				man_ota_work.exec_info.start_file_num = man_ota_work.exec_info.file_num;
   \   000011F8   0x48A9             LDR      R0,??man_ota_main_320+0xC
   \   000011FA   0x6B80             LDR      R0,[R0, #+56]
   \   000011FC   0x49A8             LDR      R1,??man_ota_main_320+0xC
   \   000011FE   0x6488             STR      R0,[R1, #+72]
   1908          				man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \   00001200   0x2000             MOVS     R0,#+0
   \   00001202   0x49A7             LDR      R1,??man_ota_main_320+0xC
   \   00001204   0x6548             STR      R0,[R1, #+84]
   1909          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_GET_REQ);
   \   00001206   0x2027             MOVS     R0,#+39
   \   00001208   0x.... 0x....      BL       man_ota_set_sequense
   \   0000120C   0xE0C8             B        ??man_ota_main_326
   1910          			}
   1911          			// 一致するファイルが存在しない場合
   1912          			else {
   1913          				// 中止処理へ
   1914          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_325: (+1)
   \   0000120E   0x2000             MOVS     R0,#+0
   \   00001210   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001212   0x49A3             LDR      R1,??man_ota_main_320+0xC
   \   00001214   0x6588             STR      R0,[R1, #+88]
   1915          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001216   0x20A2             MOVS     R0,#+162
   \   00001218   0x.... 0x....      BL       man_ota_set_sequense
   1916          				// エラー登録
   1917          				man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   0000121C   0x4BA1             LDR      R3,??man_ota_main_320+0x10  ;; 0x77d
   \   0000121E   0x2200             MOVS     R2,#+0
   \   00001220   0x2100             MOVS     R1,#+0
   \   00001222   0x201B             MOVS     R0,#+27
   \   00001224   0x.... 0x....      BL       man_error_set
   \   00001228   0xE0BA             B        ??man_ota_main_326
   \   0000122A   0xBF00             Nop      
   \                     ??man_ota_main_300:
   \   0000122C   0x0000068C         DC32     0x68c
   \   00001230   0x0000069E         DC32     0x69e
   \   00001234   0x000006AD         DC32     0x6ad
   1918          			}
   1919          		}
   1920          		// GPSのOTAの場合
   1921          		else {
   1922          			if ( (man_ota_work.exec_info.exec_file & MAN_OTA_EXEC_GPS_CONFIG) == 0) {
   \                     ??man_ota_main_324: (+1)
   \   00001238   0x485A             LDR      R0,??man_ota_main_315
   \   0000123A   0x7800             LDRB     R0,[R0, #+0]
   \   0000123C   0x0780             LSLS     R0,R0,#+30
   \   0000123E   0xD444             BMI      ??man_ota_main_327
   1923          				man_ota_work.exec_info.exec_file |= MAN_OTA_EXEC_GPS_CONFIG;
   \   00001240   0x4897             LDR      R0,??man_ota_main_320+0xC
   \   00001242   0x6B40             LDR      R0,[R0, #+52]
   \   00001244   0x2102             MOVS     R1,#+2
   \   00001246   0x4301             ORRS     R1,R1,R0
   \   00001248   0x4895             LDR      R0,??man_ota_main_320+0xC
   \   0000124A   0x6341             STR      R1,[R0, #+52]
   1924          				// CONFIG FILE数登録
   1925          				man_ota_work.exec_info.quantity_config = man_ota_work.exec_info.file_num-1;
   \   0000124C   0x4894             LDR      R0,??man_ota_main_320+0xC
   \   0000124E   0x6B80             LDR      R0,[R0, #+56]
   \   00001250   0x1E40             SUBS     R0,R0,#+1
   \   00001252   0x4993             LDR      R1,??man_ota_main_320+0xC
   \   00001254   0x6248             STR      R0,[R1, #+36]
   1926          
   1927          				// 一致するCONFIGファイルが存在する場合
   1928          				if (man_ota_work.exec_info.quantity_config >= 1) {
   \   00001256   0x4892             LDR      R0,??man_ota_main_320+0xC
   \   00001258   0x6A40             LDR      R0,[R0, #+36]
   \   0000125A   0x2800             CMP      R0,#+0
   \   0000125C   0xD027             BEQ      ??man_ota_main_328
   1929          
   1930          					// UPDATERの準備
   1931          					memcpy(&man_ota_work.ftp_info.filename[0], &gpsota->update[0], MAN_DATA_FILENAME_MAX+1);
   \   0000125E   0x2241             MOVS     R2,#+65
   \   00001260   0x20FF             MOVS     R0,#+255
   \   00001262   0x308E             ADDS     R0,R0,#+142      ;; #+397
   \   00001264   0x1821             ADDS     R1,R4,R0
   \   00001266   0x4D50             LDR      R5,??man_ota_main_315+0x4
   \   00001268   0x0028             MOVS     R0,R5
   \   0000126A   0x.... 0x....      BL       __aeabi_memcpy
   1932          					memcpy(&man_ota_work.ftp_info.fileonly[0], &gpsota->update_only[0], MAN_DATA_FILENAME_MAX+1);
   \   0000126E   0x2241             MOVS     R2,#+65
   \   00001270   0x20E7             MOVS     R0,#+231
   \   00001272   0x0040             LSLS     R0,R0,#+1        ;; #+462
   \   00001274   0x1821             ADDS     R1,R4,R0
   \   00001276   0x4C4D             LDR      R4,??man_ota_main_315+0x8
   \   00001278   0x0020             MOVS     R0,R4
   \   0000127A   0x.... 0x....      BL       __aeabi_memcpy
   1933          
   1934          					man_data_set_ftp_info(man_ota_work.ftp_info);
   \   0000127E   0x494C             LDR      R1,??man_ota_main_315+0xC
   \   00001280   0xB084             SUB      SP,SP,#+16
   \   00001282   0x4668             MOV      R0,SP
   \   00001284   0x22FF             MOVS     R2,#+255
   \   00001286   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   00001288   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000128C   0xBC0F             POP      {R0-R3}
   \   0000128E   0x.... 0x....      BL       man_data_set_ftp_info
   1935          					man_ota_work.exec_info.file_num = 1;
   \   00001292   0x2001             MOVS     R0,#+1
   \   00001294   0x4982             LDR      R1,??man_ota_main_320+0xC
   \   00001296   0x6388             STR      R0,[R1, #+56]
   1936          					man_ota_work.exec_info.start_file_num = man_ota_work.exec_info.file_num;
   \   00001298   0x4881             LDR      R0,??man_ota_main_320+0xC
   \   0000129A   0x6B80             LDR      R0,[R0, #+56]
   \   0000129C   0x4980             LDR      R1,??man_ota_main_320+0xC
   \   0000129E   0x6488             STR      R0,[R1, #+72]
   1937          
   1938          					man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \   000012A0   0x2000             MOVS     R0,#+0
   \   000012A2   0x497F             LDR      R1,??man_ota_main_320+0xC
   \   000012A4   0x6548             STR      R0,[R1, #+84]
   1939          					// UPDATERのFTP GET開始
   1940          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_REQ);
   \   000012A6   0x201B             MOVS     R0,#+27
   \   000012A8   0x.... 0x....      BL       man_ota_set_sequense
   \   000012AC   0xE078             B        ??man_ota_main_326
   1941          				}
   1942          				// 一致するCONFIGファイルが存在しない場合
   1943          				else {
   1944          					// 中止処理へ
   1945          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_328: (+1)
   \   000012AE   0x2000             MOVS     R0,#+0
   \   000012B0   0x43C0             MVNS     R0,R0            ;; #-1
   \   000012B2   0x497B             LDR      R1,??man_ota_main_320+0xC
   \   000012B4   0x6588             STR      R0,[R1, #+88]
   1946          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000012B6   0x20A2             MOVS     R0,#+162
   \   000012B8   0x.... 0x....      BL       man_ota_set_sequense
   1947          					// エラー登録
   1948          					man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   000012BC   0x4BD7             LDR      R3,??man_ota_main_329  ;; 0x79c
   \   000012BE   0x2200             MOVS     R2,#+0
   \   000012C0   0x2100             MOVS     R1,#+0
   \   000012C2   0x201B             MOVS     R0,#+27
   \   000012C4   0x.... 0x....      BL       man_error_set
   \   000012C8   0xE06A             B        ??man_ota_main_326
   1949          				}
   1950          			}
   1951          			else if ( (man_ota_work.exec_info.exec_file & MAN_OTA_EXEC_GPS_UPDATER) == 0) {
   \                     ??man_ota_main_327: (+1)
   \   000012CA   0x4836             LDR      R0,??man_ota_main_315
   \   000012CC   0x7800             LDRB     R0,[R0, #+0]
   \   000012CE   0x0740             LSLS     R0,R0,#+29
   \   000012D0   0xD446             BMI      ??man_ota_main_330
   1952          				man_ota_work.exec_info.exec_file |= MAN_OTA_EXEC_GPS_UPDATER;
   \   000012D2   0x4873             LDR      R0,??man_ota_main_320+0xC
   \   000012D4   0x6B40             LDR      R0,[R0, #+52]
   \   000012D6   0x2104             MOVS     R1,#+4
   \   000012D8   0x4301             ORRS     R1,R1,R0
   \   000012DA   0x4871             LDR      R0,??man_ota_main_320+0xC
   \   000012DC   0x6341             STR      R1,[R0, #+52]
   1953          				// UPDATER FILE数登録
   1954          				man_ota_work.exec_info.quantity_update = man_ota_work.exec_info.file_num-1;
   \   000012DE   0x4870             LDR      R0,??man_ota_main_320+0xC
   \   000012E0   0x6B80             LDR      R0,[R0, #+56]
   \   000012E2   0x1E40             SUBS     R0,R0,#+1
   \   000012E4   0x496E             LDR      R1,??man_ota_main_320+0xC
   \   000012E6   0x6288             STR      R0,[R1, #+40]
   1955          
   1956          				// 一致するUPDATERファイルが存在する場合
   1957          				if (man_ota_work.exec_info.quantity_update >= 1) {
   \   000012E8   0x486D             LDR      R0,??man_ota_main_320+0xC
   \   000012EA   0x6A80             LDR      R0,[R0, #+40]
   \   000012EC   0x2800             CMP      R0,#+0
   \   000012EE   0xD025             BEQ      ??man_ota_main_331
   1958          
   1959          					// REMOTEの準備
   1960          					memcpy(&man_ota_work.ftp_info.filename[0], &gpsota->remote[0], MAN_DATA_FILENAME_MAX+1);
   \   000012F0   0x2241             MOVS     R2,#+65
   \   000012F2   0x0021             MOVS     R1,R4
   \   000012F4   0x3189             ADDS     R1,R1,#+137
   \   000012F6   0x4D2C             LDR      R5,??man_ota_main_315+0x4
   \   000012F8   0x0028             MOVS     R0,R5
   \   000012FA   0x.... 0x....      BL       __aeabi_memcpy
   1961          					memcpy(&man_ota_work.ftp_info.fileonly[0], &gpsota->remote_only[0], MAN_DATA_FILENAME_MAX+1);
   \   000012FE   0x2241             MOVS     R2,#+65
   \   00001300   0x0021             MOVS     R1,R4
   \   00001302   0x31CA             ADDS     R1,R1,#+202
   \   00001304   0x4C29             LDR      R4,??man_ota_main_315+0x8
   \   00001306   0x0020             MOVS     R0,R4
   \   00001308   0x.... 0x....      BL       __aeabi_memcpy
   1962          
   1963          					man_data_set_ftp_info(man_ota_work.ftp_info);
   \   0000130C   0x4928             LDR      R1,??man_ota_main_315+0xC
   \   0000130E   0xB084             SUB      SP,SP,#+16
   \   00001310   0x4668             MOV      R0,SP
   \   00001312   0x22FF             MOVS     R2,#+255
   \   00001314   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   00001316   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000131A   0xBC0F             POP      {R0-R3}
   \   0000131C   0x.... 0x....      BL       man_data_set_ftp_info
   1964          					man_ota_work.exec_info.file_num = 1;
   \   00001320   0x2001             MOVS     R0,#+1
   \   00001322   0x495F             LDR      R1,??man_ota_main_320+0xC
   \   00001324   0x6388             STR      R0,[R1, #+56]
   1965          					man_ota_work.exec_info.start_file_num = man_ota_work.exec_info.file_num;
   \   00001326   0x485E             LDR      R0,??man_ota_main_320+0xC
   \   00001328   0x6B80             LDR      R0,[R0, #+56]
   \   0000132A   0x495D             LDR      R1,??man_ota_main_320+0xC
   \   0000132C   0x6488             STR      R0,[R1, #+72]
   1966          
   1967          					man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \   0000132E   0x2000             MOVS     R0,#+0
   \   00001330   0x495B             LDR      R1,??man_ota_main_320+0xC
   \   00001332   0x6548             STR      R0,[R1, #+84]
   1968          					// REMOTEのFTP GET開始
   1969          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_REQ);
   \   00001334   0x201B             MOVS     R0,#+27
   \   00001336   0x.... 0x....      BL       man_ota_set_sequense
   \   0000133A   0xE031             B        ??man_ota_main_326
   1970          				}
   1971          				// 一致するUPDATERファイルが存在しない場合
   1972          				else {
   1973          					// 中止処理へ
   1974          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_331: (+1)
   \   0000133C   0x2000             MOVS     R0,#+0
   \   0000133E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001340   0x4957             LDR      R1,??man_ota_main_320+0xC
   \   00001342   0x6588             STR      R0,[R1, #+88]
   1975          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001344   0x20A2             MOVS     R0,#+162
   \   00001346   0x.... 0x....      BL       man_ota_set_sequense
   1976          					// エラー登録
   1977          					man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   0000134A   0x4BB5             LDR      R3,??man_ota_main_329+0x4  ;; 0x7b9
   \   0000134C   0x2200             MOVS     R2,#+0
   \   0000134E   0x2100             MOVS     R1,#+0
   \   00001350   0x201B             MOVS     R0,#+27
   \   00001352   0x.... 0x....      BL       man_error_set
   \   00001356   0xE023             B        ??man_ota_main_326
   \                     ??man_ota_main_311:
   \   00001358   0x000006DE         DC32     0x6de
   \   0000135C   0x000006F2         DC32     0x6f2
   1978          				}
   1979          			}
   1980          			else {
   1981          				man_ota_work.exec_info.exec_file |= MAN_OTA_EXEC_GPS_FIRMWARE;
   \                     ??man_ota_main_330: (+1)
   \   00001360   0x484F             LDR      R0,??man_ota_main_320+0xC
   \   00001362   0x6B40             LDR      R0,[R0, #+52]
   \   00001364   0x2101             MOVS     R1,#+1
   \   00001366   0x4301             ORRS     R1,R1,R0
   \   00001368   0x484D             LDR      R0,??man_ota_main_320+0xC
   \   0000136A   0x6341             STR      R1,[R0, #+52]
   1982          				// FIRMWARE FILE数登録
   1983          				man_ota_work.exec_info.quantity_remote = man_ota_work.exec_info.file_num-1;
   \   0000136C   0x484C             LDR      R0,??man_ota_main_320+0xC
   \   0000136E   0x6B80             LDR      R0,[R0, #+56]
   \   00001370   0x1E40             SUBS     R0,R0,#+1
   \   00001372   0x494B             LDR      R1,??man_ota_main_320+0xC
   \   00001374   0x6208             STR      R0,[R1, #+32]
   1984          
   1985          				// 一致するFIRMWAREファイルが存在する場合
   1986          				if (man_ota_work.exec_info.quantity_remote >= 1) {
   \   00001376   0x484A             LDR      R0,??man_ota_main_320+0xC
   \   00001378   0x6A00             LDR      R0,[R0, #+32]
   \   0000137A   0x2800             CMP      R0,#+0
   \   0000137C   0xD003             BEQ      ??man_ota_main_332
   1987          					// GPS更新開始
   1988          					man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_START_REQ);
   \   0000137E   0x2033             MOVS     R0,#+51
   \   00001380   0x.... 0x....      BL       man_ota_set_sequense
   \   00001384   0xE00C             B        ??man_ota_main_326
   1989          				}
   1990          				// 一致するFIRMWAREファイルが存在しない場合
   1991          				else {
   1992          					// 中止処理へ
   1993          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_332: (+1)
   \   00001386   0x2000             MOVS     R0,#+0
   \   00001388   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000138A   0x4945             LDR      R1,??man_ota_main_320+0xC
   \   0000138C   0x6588             STR      R0,[R1, #+88]
   1994          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   0000138E   0x20A2             MOVS     R0,#+162
   \   00001390   0x.... 0x....      BL       man_ota_set_sequense
   1995          					// エラー登録
   1996          					man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   00001394   0x4BCD             LDR      R3,??man_ota_main_333  ;; 0x7cc
   \   00001396   0x2200             MOVS     R2,#+0
   \   00001398   0x2100             MOVS     R1,#+0
   \   0000139A   0x201B             MOVS     R0,#+27
   \   0000139C   0x.... 0x....      BL       man_error_set
   1997          				}
   1998          			}
   1999          		}
   2000          		break;
   \                     ??man_ota_main_326: (+1)
   \   000013A0   0xF002 0xF809      BL       ??man_ota_main_274
   \                     ??man_ota_main_315:
   \   000013A4   0x........         DC32     man_ota_work+0x34
   \   000013A8   0x........         DC32     man_ota_work+0x151
   \   000013AC   0x........         DC32     man_ota_work+0x192
   \   000013B0   0x........         DC32     man_ota_work+0xC8
   \   000013B4   0x0000FDE8         DC32     0xfde8
   \   000013B8   0x40600024         DC32     0x40600024
   2001          
   2002          	// ************************************
   2003          	// FTP DELAY
   2004          	// ************************************
   2005          	case MAN_OTA_SEQ_OTA_FTP_DELAY:				// OTA  FTP DELAY実行中
   2006          		// リセット発生時は復帰させる
   2007          		if (man_ota_work.req_state == MAN_OTA_STATE_RESET) {
   \                     ??man_ota_main_147: (+1)
   \   000013BC   0x4838             LDR      R0,??man_ota_main_320+0xC
   \   000013BE   0x6E00             LDR      R0,[R0, #+96]
   \   000013C0   0x2801             CMP      R0,#+1
   \   000013C2   0xD109             BNE      ??man_ota_main_334
   2008          			man_ota_work.req_state = MAN_OTA_STATE_NON;
   \   000013C4   0x2000             MOVS     R0,#+0
   \   000013C6   0x4936             LDR      R1,??man_ota_main_320+0xC
   \   000013C8   0x6608             STR      R0,[R1, #+96]
   2009          			// タイマー中止
   2010          			man_timer_cancel_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_FTP_DELAY, MAN_OTA_FTP_GET_WAIT_TIME);
   \   000013CA   0x49C1             LDR      R1,??man_ota_main_333+0x4  ;; 0xfde8
   \   000013CC   0x48C1             LDR      R0,??man_ota_main_333+0x8  ;; 0x40600024
   \   000013CE   0x.... 0x....      BL       man_timer_cancel_wait
   2011          			// FTPリカバリ開始
   2012          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ);
   \   000013D2   0x200D             MOVS     R0,#+13
   \   000013D4   0x.... 0x....      BL       man_ota_set_sequense
   2013          		}
   2014          		
   2015          		// 外部電源OFF時は中止する
   2016          		if (sensor->ext_state != MAN_CHARGE_EXTSTAT_ON) {
   \                     ??man_ota_main_334: (+1)
   \   000013D8   0x6F30             LDR      R0,[R6, #+112]
   \   000013DA   0x2801             CMP      R0,#+1
   \   000013DC   0xD011             BEQ      ??man_ota_main_335
   2017          			// タイマー中止
   2018          			man_timer_cancel_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_OTA_FTP_DELAY, MAN_OTA_FTP_GET_WAIT_TIME);
   \   000013DE   0x49BC             LDR      R1,??man_ota_main_333+0x4  ;; 0xfde8
   \   000013E0   0x48BC             LDR      R0,??man_ota_main_333+0x8  ;; 0x40600024
   \   000013E2   0x.... 0x....      BL       man_timer_cancel_wait
   2019          
   2020          			// 中止処理へ
   2021          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   000013E6   0x2000             MOVS     R0,#+0
   \   000013E8   0x43C0             MVNS     R0,R0            ;; #-1
   \   000013EA   0x492D             LDR      R1,??man_ota_main_320+0xC
   \   000013EC   0x6588             STR      R0,[R1, #+88]
   2022          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000013EE   0x20A2             MOVS     R0,#+162
   \   000013F0   0x.... 0x....      BL       man_ota_set_sequense
   2023          			// エラー登録
   2024          			man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   000013F4   0x23FD             MOVS     R3,#+253
   \   000013F6   0x00DB             LSLS     R3,R3,#+3        ;; #+2024
   \   000013F8   0x2200             MOVS     R2,#+0
   \   000013FA   0x2100             MOVS     R1,#+0
   \   000013FC   0x201B             MOVS     R0,#+27
   \   000013FE   0x.... 0x....      BL       man_error_set
   2025          		}
   2026          		break;
   \                     ??man_ota_main_335: (+1)
   \   00001402   0xF001 0xFFD8      BL       ??man_ota_main_274
   2027          	case MAN_OTA_SEQ_OTA_FTP_DELAY_OK:			// OTA  FTP DELAY(正常)
   2028          	case MAN_OTA_SEQ_OTA_FTP_DELAY_NG:			// OTA  FTP DELAY(異常)
   2029          		if (man_ota_work.req_state == MAN_OTA_STATE_RESET) {
   \                     ??man_ota_main_148: (+1)
   \   00001406   0x4826             LDR      R0,??man_ota_main_320+0xC
   \   00001408   0x6E00             LDR      R0,[R0, #+96]
   \   0000140A   0x2801             CMP      R0,#+1
   \   0000140C   0xD106             BNE      ??man_ota_main_336
   2030          			man_ota_work.req_state = MAN_OTA_STATE_NON;
   \   0000140E   0x2000             MOVS     R0,#+0
   \   00001410   0x4923             LDR      R1,??man_ota_main_320+0xC
   \   00001412   0x6608             STR      R0,[R1, #+96]
   2031          			// FTPリカバリ開始
   2032          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FTP_RECO_REQ);
   \   00001414   0x200D             MOVS     R0,#+13
   \   00001416   0x.... 0x....      BL       man_ota_set_sequense
   \   0000141A   0xE002             B        ??man_ota_main_337
   2033          		}
   2034          		else {
   2035          				// 次のFTP GET開始
   2036          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_FTP_GET_REQ);
   \                     ??man_ota_main_336: (+1)
   \   0000141C   0x201B             MOVS     R0,#+27
   \   0000141E   0x.... 0x....      BL       man_ota_set_sequense
   2037          //			}
   2038          		}
   2039          		break;
   \                     ??man_ota_main_337: (+1)
   \   00001422   0xF001 0xFFC8      BL       ??man_ota_main_274
   2040          
   2041          
   2042          	// ************************************
   2043          	// TERM FILE GET
   2044          	// ************************************
   2045          	case MAN_OTA_SEQ_TERM_OTA_FILE_GET_REQ:		// 端末用 OTA  FILE GET開始
   2046          		// HTTPの使用状況を確認する
   2047          		if (sts == 0) {
   \                     ??man_ota_main_149: (+1)
   \   00001426   0x2D00             CMP      R5,#+0
   \   00001428   0xD125             BNE      ??man_ota_main_338
   2048          			ret = man_http_file_get(man_ota_work.exec_info.file_num+man_ota_work.exec_info.file_offset, MAN_OTA_SEQ_TERM_OTA_FILE_GET, man_ota_data_callback);
   \   0000142A   0x4AAB             LDR      R2,??man_ota_main_333+0xC
   \   0000142C   0x2128             MOVS     R1,#+40
   \   0000142E   0x481C             LDR      R0,??man_ota_main_320+0xC
   \   00001430   0x6B80             LDR      R0,[R0, #+56]
   \   00001432   0x4B1B             LDR      R3,??man_ota_main_320+0xC
   \   00001434   0x6D1B             LDR      R3,[R3, #+80]
   \   00001436   0x18C0             ADDS     R0,R0,R3
   \   00001438   0x.... 0x....      BL       man_http_file_get
   2049          			if (ret < 0) {
   \   0000143C   0x2800             CMP      R0,#+0
   \   0000143E   0xD507             BPL      ??man_ota_main_339
   2050          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \   00001440   0x4BA6             LDR      R3,??man_ota_main_333+0x10  ;; 0x802
   \   00001442   0x2200             MOVS     R2,#+0
   \   00001444   0x4816             LDR      R0,??man_ota_main_320+0xC
   \   00001446   0x7801             LDRB     R1,[R0, #+0]
   \   00001448   0x201B             MOVS     R0,#+27
   \   0000144A   0x.... 0x....      BL       man_error_set
   \   0000144E   0xE012             B        ??man_ota_main_338
   2051          			}
   2052          			else {
   2053          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_GET);
   \                     ??man_ota_main_339: (+1)
   \   00001450   0x2028             MOVS     R0,#+40
   \   00001452   0x.... 0x....      BL       man_ota_set_sequense
   2054          				man_ota_work.timer = man_timer_get_1ms_count();
   \   00001456   0x.... 0x....      BL       man_timer_get_1ms_count
   \   0000145A   0x49A1             LDR      R1,??man_ota_main_333+0x14
   \   0000145C   0x6008             STR      R0,[R1, #+0]
   2055          
   2056          				// 一時情報の初期化
   2057          				man_ota_work.exec_info.value = 0;
   \   0000145E   0x2000             MOVS     R0,#+0
   \   00001460   0x490F             LDR      R1,??man_ota_main_320+0xC
   \   00001462   0x62C8             STR      R0,[R1, #+44]
   2058          				man_ota_work.exec_info.end_file_addr = 0;
   \   00001464   0x2000             MOVS     R0,#+0
   \   00001466   0x490E             LDR      R1,??man_ota_main_320+0xC
   \   00001468   0x64C8             STR      R0,[R1, #+76]
   2059          				man_ota_work.data_len = 0;
   \   0000146A   0x2000             MOVS     R0,#+0
   \   0000146C   0x49DB             LDR      R1,??man_ota_main_340
   \   0000146E   0x6008             STR      R0,[R1, #+0]
   2060          				man_ota_work.summ = 0;
   \   00001470   0x2000             MOVS     R0,#+0
   \   00001472   0x49DB             LDR      R1,??man_ota_main_340+0x4
   \   00001474   0x6008             STR      R0,[R1, #+0]
   2061          			}
   2062          		}
   2063          		break;
   \                     ??man_ota_main_338: (+1)
   \   00001476   0xF001 0xFF9E      BL       ??man_ota_main_274
   2064          
   2065          	case MAN_OTA_SEQ_TERM_OTA_FILE_GET:			// 端末用 OTA  FILE GET
   2066          		// 5秒経過しても取得できない場合は、異常扱いとする
   2067          //		delay = man_timer_get_elapsed_time(man_ota_work.timer, man_timer_get_1ms_count());
   2068          //		if (delay > 5000) {
   2069          //			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_GET_NG);
   2070          //		}
   2071          		break;
   \                     ??man_ota_main_150: (+1)
   \   0000147A   0xF001 0xFF9C      BL       ??man_ota_main_274
   2072          
   2073          	case MAN_OTA_SEQ_TERM_OTA_FILE_GET_OK:		// 端末用 OTA  FILE GET(正常)
   2074          		man_ota_work.exec_info.counter++;
   \                     ??man_ota_main_151: (+1)
   \   0000147E   0x4808             LDR      R0,??man_ota_main_320+0xC
   \   00001480   0x6900             LDR      R0,[R0, #+16]
   \   00001482   0x1C40             ADDS     R0,R0,#+1
   \   00001484   0x4906             LDR      R1,??man_ota_main_320+0xC
   \   00001486   0x6108             STR      R0,[R1, #+16]
   2075          	
   2076          		if (man_ota_work.resp_cmd.data_len != 0) {
   \   00001488   0x48D6             LDR      R0,??man_ota_main_340+0x8
   \   0000148A   0x6800             LDR      R0,[R0, #+0]
   \   0000148C   0x2800             CMP      R0,#+0
   \   0000148E   0xD051             BEQ      ??man_ota_main_341
   2077          			// 外部FLASHにman_ota_work.resp_cmd.dataを書き込む
   2078          			// data部にはCR+LFが含まれているためman_ota_work.resp_cmd.data_len-2バイトをコピーする
   2079          			for (i=0; i<man_ota_work.resp_cmd.data_len-2; i++) {
   \   00001490   0x2400             MOVS     R4,#+0
   \   00001492   0xE042             B        ??man_ota_main_342
   \                     ??man_ota_main_320:
   \   00001494   0x00057E40         DC32     0x57e40
   \   00001498   0x4060001F         DC32     0x4060001f
   \   0000149C   0x00000766         DC32     0x766
   \   000014A0   0x........         DC32     man_ota_work
   \   000014A4   0x0000077D         DC32     0x77d
   2080          				man_ota_work.data_buff[man_ota_work.data_len] = man_ota_work.resp_cmd.data[i];
   \                     ??man_ota_main_343: (+1)
   \   000014A8   0x48CF             LDR      R0,??man_ota_main_340+0xC
   \   000014AA   0x6800             LDR      R0,[R0, #+0]
   \   000014AC   0x5D00             LDRB     R0,[R0, R4]
   \   000014AE   0x49CF             LDR      R1,??man_ota_main_340+0x10
   \   000014B0   0x6809             LDR      R1,[R1, #+0]
   \   000014B2   0x4ACA             LDR      R2,??man_ota_main_340
   \   000014B4   0x6812             LDR      R2,[R2, #+0]
   \   000014B6   0x5488             STRB     R0,[R1, R2]
   2081          				man_ota_work.summ += man_ota_work.resp_cmd.data[i];
   \   000014B8   0x48C9             LDR      R0,??man_ota_main_340+0x4
   \   000014BA   0x6800             LDR      R0,[R0, #+0]
   \   000014BC   0x49CA             LDR      R1,??man_ota_main_340+0xC
   \   000014BE   0x6809             LDR      R1,[R1, #+0]
   \   000014C0   0x5D09             LDRB     R1,[R1, R4]
   \   000014C2   0x1840             ADDS     R0,R0,R1
   \   000014C4   0x49C6             LDR      R1,??man_ota_main_340+0x4
   \   000014C6   0x6008             STR      R0,[R1, #+0]
   2082          				man_ota_work.data_len++;
   \   000014C8   0x48C4             LDR      R0,??man_ota_main_340
   \   000014CA   0x6800             LDR      R0,[R0, #+0]
   \   000014CC   0x1C40             ADDS     R0,R0,#+1
   \   000014CE   0x49C3             LDR      R1,??man_ota_main_340
   \   000014D0   0x6008             STR      R0,[R1, #+0]
   2083          
   2084          				// PAGEサイズを超えるとFLASHに書き込む
   2085          				if (man_ota_work.data_len >= MAN_FLASH_PAGE_SIZE) {
   \   000014D2   0x48C2             LDR      R0,??man_ota_main_340
   \   000014D4   0x6800             LDR      R0,[R0, #+0]
   \   000014D6   0x28FF             CMP      R0,#+255
   \   000014D8   0xDD1E             BLE      ??man_ota_main_344
   2086          					ret = man_flash_write_page(man_ota_work.file_info.addr_term + man_ota_work.file_info.size_term, &man_ota_work.data_buff[0], MAN_FLASH_PAGE_SIZE);
   \   000014DA   0x2280             MOVS     R2,#+128
   \   000014DC   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   000014DE   0x48C3             LDR      R0,??man_ota_main_340+0x10
   \   000014E0   0x6801             LDR      R1,[R0, #+0]
   \   000014E2   0x48C3             LDR      R0,??man_ota_main_340+0x14
   \   000014E4   0x6800             LDR      R0,[R0, #+0]
   \   000014E6   0x4BC3             LDR      R3,??man_ota_main_340+0x18
   \   000014E8   0x681B             LDR      R3,[R3, #+0]
   \   000014EA   0x18C0             ADDS     R0,R0,R3
   \   000014EC   0x.... 0x....      BL       man_flash_write_page
   2087          					if (ret < 0) {
   \   000014F0   0x2800             CMP      R0,#+0
   \   000014F2   0xD503             BPL      ??man_ota_main_345
   2088          						// 外部FLASH書き込み異常
   2089          						man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   000014F4   0x2000             MOVS     R0,#+0
   \   000014F6   0x43C0             MVNS     R0,R0            ;; #-1
   \   000014F8   0x49BF             LDR      R1,??man_ota_main_340+0x1C
   \   000014FA   0x6588             STR      R0,[R1, #+88]
   2090          					}
   2091          					man_ota_work.data_len -= MAN_FLASH_PAGE_SIZE;
   \                     ??man_ota_main_345: (+1)
   \   000014FC   0x48B7             LDR      R0,??man_ota_main_340
   \   000014FE   0x6800             LDR      R0,[R0, #+0]
   \   00001500   0x21FF             MOVS     R1,#+255
   \   00001502   0x43C9             MVNS     R1,R1            ;; #-256
   \   00001504   0x1840             ADDS     R0,R0,R1
   \   00001506   0x49B5             LDR      R1,??man_ota_main_340
   \   00001508   0x6008             STR      R0,[R1, #+0]
   2092          					man_ota_work.file_info.size_term += MAN_FLASH_PAGE_SIZE;
   \   0000150A   0x48BA             LDR      R0,??man_ota_main_340+0x18
   \   0000150C   0x6800             LDR      R0,[R0, #+0]
   \   0000150E   0x2180             MOVS     R1,#+128
   \   00001510   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \   00001512   0x1840             ADDS     R0,R0,R1
   \   00001514   0x49B7             LDR      R1,??man_ota_main_340+0x18
   \   00001516   0x6008             STR      R0,[R1, #+0]
   2093          				}
   2094          			}
   \                     ??man_ota_main_344: (+1)
   \   00001518   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_ota_main_342: (+1)
   \   0000151A   0x48B2             LDR      R0,??man_ota_main_340+0x8
   \   0000151C   0x6800             LDR      R0,[R0, #+0]
   \   0000151E   0x1E80             SUBS     R0,R0,#+2
   \   00001520   0x4284             CMP      R4,R0
   \   00001522   0xDBC1             BLT      ??man_ota_main_343
   2095          			// 次のシーケンスへ遷移
   2096          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_GET);
   \   00001524   0x2028             MOVS     R0,#+40
   \   00001526   0x.... 0x....      BL       man_ota_set_sequense
   2097          			man_ota_work.timer = man_timer_get_1ms_count();
   \   0000152A   0x.... 0x....      BL       man_timer_get_1ms_count
   \   0000152E   0x496C             LDR      R1,??man_ota_main_333+0x14
   \   00001530   0x6008             STR      R0,[R1, #+0]
   \   00001532   0xE05C             B        ??man_ota_main_346
   2098          		}
   2099          		else {
   2100          			// 残りをFLASHに書き込む
   2101          			if (man_ota_work.data_len > 0) {
   \                     ??man_ota_main_341: (+1)
   \   00001534   0x48A9             LDR      R0,??man_ota_main_340
   \   00001536   0x6800             LDR      R0,[R0, #+0]
   \   00001538   0x2801             CMP      R0,#+1
   \   0000153A   0xDB25             BLT      ??man_ota_main_347
   2102          				ret = man_flash_write_page(man_ota_work.file_info.addr_term + man_ota_work.file_info.size_term, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   0000153C   0x48A7             LDR      R0,??man_ota_main_340
   \   0000153E   0x6802             LDR      R2,[R0, #+0]
   \   00001540   0x48AA             LDR      R0,??man_ota_main_340+0x10
   \   00001542   0x6801             LDR      R1,[R0, #+0]
   \   00001544   0x48AA             LDR      R0,??man_ota_main_340+0x14
   \   00001546   0x6800             LDR      R0,[R0, #+0]
   \   00001548   0x4BAA             LDR      R3,??man_ota_main_340+0x18
   \   0000154A   0x681B             LDR      R3,[R3, #+0]
   \   0000154C   0x18C0             ADDS     R0,R0,R3
   \   0000154E   0x.... 0x....      BL       man_flash_write_page
   2103          				if (ret < 0) {
   \   00001552   0x2800             CMP      R0,#+0
   \   00001554   0xD50E             BPL      ??man_ota_main_348
   2104          					// 外部FLASH書き込み異常
   2105          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001556   0x2000             MOVS     R0,#+0
   \   00001558   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000155A   0x49A7             LDR      R1,??man_ota_main_340+0x1C
   \   0000155C   0x6588             STR      R0,[R1, #+88]
   2106          					// エラー登録
   2107          					man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.addr_term + man_ota_work.file_info.size_term, man_ota_work.data_len);
   \   0000155E   0x4BD0             LDR      R3,??man_ota_main_349  ;; 0x83b
   \   00001560   0x489E             LDR      R0,??man_ota_main_340
   \   00001562   0x6802             LDR      R2,[R0, #+0]
   \   00001564   0x48A2             LDR      R0,??man_ota_main_340+0x14
   \   00001566   0x6800             LDR      R0,[R0, #+0]
   \   00001568   0x49A2             LDR      R1,??man_ota_main_340+0x18
   \   0000156A   0x6809             LDR      R1,[R1, #+0]
   \   0000156C   0x1841             ADDS     R1,R0,R1
   \   0000156E   0x201B             MOVS     R0,#+27
   \   00001570   0x.... 0x....      BL       man_error_set
   2108          				}
   2109          				man_ota_work.file_info.size_term += man_ota_work.data_len;
   \                     ??man_ota_main_348: (+1)
   \   00001574   0x489F             LDR      R0,??man_ota_main_340+0x18
   \   00001576   0x6800             LDR      R0,[R0, #+0]
   \   00001578   0x4998             LDR      R1,??man_ota_main_340
   \   0000157A   0x6809             LDR      R1,[R1, #+0]
   \   0000157C   0x1840             ADDS     R0,R0,R1
   \   0000157E   0x499D             LDR      R1,??man_ota_main_340+0x18
   \   00001580   0x6008             STR      R0,[R1, #+0]
   2110          				man_ota_work.data_len = 0;
   \   00001582   0x2000             MOVS     R0,#+0
   \   00001584   0x4995             LDR      R1,??man_ota_main_340
   \   00001586   0x6008             STR      R0,[R1, #+0]
   2111          			}
   2112          
   2113          			// 外部FLASH書き込み異常時はチェックSUM異常扱いとする
   2114          			if (man_ota_work.exec_info.result != MAN_OTA_STATUS_NG) {
   \                     ??man_ota_main_347: (+1)
   \   00001588   0x489B             LDR      R0,??man_ota_main_340+0x1C
   \   0000158A   0x6D80             LDR      R0,[R0, #+88]
   \   0000158C   0x2100             MOVS     R1,#+0
   \   0000158E   0x43C9             MVNS     R1,R1            ;; #-1
   \   00001590   0x4288             CMP      R0,R1
   \   00001592   0xD00A             BEQ      ??man_ota_main_350
   2115          				// チェックSUM
   2116          				ret = man_ota_check_summ_data(man_ota_work.file_info.addr_term + man_ota_work.file_info.size_term-4, man_ota_work.summ);
   \   00001594   0x4892             LDR      R0,??man_ota_main_340+0x4
   \   00001596   0x6801             LDR      R1,[R0, #+0]
   \   00001598   0x4895             LDR      R0,??man_ota_main_340+0x14
   \   0000159A   0x6800             LDR      R0,[R0, #+0]
   \   0000159C   0x4A95             LDR      R2,??man_ota_main_340+0x18
   \   0000159E   0x6812             LDR      R2,[R2, #+0]
   \   000015A0   0x1880             ADDS     R0,R0,R2
   \   000015A2   0x1F00             SUBS     R0,R0,#+4
   \   000015A4   0x.... 0x....      BL       man_ota_check_summ_data
   \   000015A8   0xE001             B        ??man_ota_main_351
   2117          			}
   2118          			else {
   2119          				ret = -1;
   \                     ??man_ota_main_350: (+1)
   \   000015AA   0x2000             MOVS     R0,#+0
   \   000015AC   0x43C0             MVNS     R0,R0            ;; #-1
   2120          			}
   2121          
   2122          			// チェックSUM異常
   2123          			if(ret < 0) {
   \                     ??man_ota_main_351: (+1)
   \   000015AE   0x2800             CMP      R0,#+0
   \   000015B0   0xD50E             BPL      ??man_ota_main_352
   2124          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   000015B2   0x2000             MOVS     R0,#+0
   \   000015B4   0x43C0             MVNS     R0,R0            ;; #-1
   \   000015B6   0x4990             LDR      R1,??man_ota_main_340+0x1C
   \   000015B8   0x6588             STR      R0,[R1, #+88]
   2125          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000015BA   0x20A2             MOVS     R0,#+162
   \   000015BC   0x.... 0x....      BL       man_ota_set_sequense
   2126          				// エラー登録
   2127          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.size_term, 0);
   \   000015C0   0x4BD2             LDR      R3,??man_ota_main_353  ;; 0x84f
   \   000015C2   0x2200             MOVS     R2,#+0
   \   000015C4   0x488B             LDR      R0,??man_ota_main_340+0x18
   \   000015C6   0x6801             LDR      R1,[R0, #+0]
   \   000015C8   0x201B             MOVS     R0,#+27
   \   000015CA   0x.... 0x....      BL       man_error_set
   \   000015CE   0xE00E             B        ??man_ota_main_346
   2128          			}
   2129          			else {
   2130          				// 外部フラッシュ情報記憶
   2131          				man_ota_work.file_info.size_term -= 4;									//チェックSUM分の4Byteサイズを減らす
   \                     ??man_ota_main_352: (+1)
   \   000015D0   0x4888             LDR      R0,??man_ota_main_340+0x18
   \   000015D2   0x6800             LDR      R0,[R0, #+0]
   \   000015D4   0x1F00             SUBS     R0,R0,#+4
   \   000015D6   0x4987             LDR      R1,??man_ota_main_340+0x18
   \   000015D8   0x6008             STR      R0,[R1, #+0]
   2132          
   2133          
   2134          				man_ota_work.exec_info.value = man_ota_work.file_info.size_term;
   \   000015DA   0x4886             LDR      R0,??man_ota_main_340+0x18
   \   000015DC   0x6800             LDR      R0,[R0, #+0]
   \   000015DE   0x4986             LDR      R1,??man_ota_main_340+0x1C
   \   000015E0   0x62C8             STR      R0,[R1, #+44]
   2135          				man_ota_work.exec_info.write_num = 0;
   \   000015E2   0x2000             MOVS     R0,#+0
   \   000015E4   0x4984             LDR      R1,??man_ota_main_340+0x1C
   \   000015E6   0x6448             STR      R0,[R1, #+68]
   2136          				
   2137          				// 内部フラッシュ消去処理に移行
   2138          				man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_ERASE_REQ);
   \   000015E8   0x202B             MOVS     R0,#+43
   \   000015EA   0x.... 0x....      BL       man_ota_set_sequense
   2139          			}
   2140          		}
   2141          
   2142          #ifdef GNSS_DEBUG_MAN_OTA_FTP
   2143          			int32_t		length;
   2144          			sprintf((char *)&man_ota_work.buff[0], "FILE GET(%d:%d):%d[ms]\n", man_ota_work.exec_info.counter, man_ota_work.resp_cmd.data_len-2, man_timer_get_1ms_count()-man_ota_work.timer);
   2145          			length = strlen((char const *)&man_ota_work.buff[0]);
   2146          			man_usb_data_send(&man_ota_work.buff[0], length);
   2147          #endif
   2148          		man_ota_work.timer = man_timer_get_1ms_count();
   \                     ??man_ota_main_346: (+1)
   \   000015EE   0x.... 0x....      BL       man_timer_get_1ms_count
   \   000015F2   0x493B             LDR      R1,??man_ota_main_333+0x14
   \   000015F4   0x6008             STR      R0,[R1, #+0]
   2149          		break;
   \   000015F6   0xF001 0xFEDE      BL       ??man_ota_main_274
   2150          
   2151          	case MAN_OTA_SEQ_TERM_OTA_FILE_GET_NG:		// 端末用 OTA  FILE GET(異常)
   2152          		// 中止処理へ
   2153          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_152: (+1)
   \   000015FA   0x2000             MOVS     R0,#+0
   \   000015FC   0x43C0             MVNS     R0,R0            ;; #-1
   \   000015FE   0x497E             LDR      R1,??man_ota_main_340+0x1C
   \   00001600   0x6588             STR      R0,[R1, #+88]
   2154          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001602   0x20A2             MOVS     R0,#+162
   \   00001604   0x.... 0x....      BL       man_ota_set_sequense
   2155          		// エラー登録
   2156          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.counter, 0);
   \   00001608   0x4BC1             LDR      R3,??man_ota_main_353+0x4  ;; 0x86c
   \   0000160A   0x2200             MOVS     R2,#+0
   \   0000160C   0x487A             LDR      R0,??man_ota_main_340+0x1C
   \   0000160E   0x6901             LDR      R1,[R0, #+16]
   \   00001610   0x201B             MOVS     R0,#+27
   \   00001612   0x.... 0x....      BL       man_error_set
   2157          		break;
   \   00001616   0xF001 0xFECE      BL       ??man_ota_main_274
   \   0000161A   0xBF00             Nop      
   \                     ??man_ota_main_329:
   \   0000161C   0x0000079C         DC32     0x79c
   \   00001620   0x000007B9         DC32     0x7b9
   2158          		
   2159          
   2160          
   2161          	// 内臓FLASH 消去処理
   2162          	case MAN_OTA_SEQ_TERM_OTA_ERASE_REQ:		//  端末用 OTA 内臓FLASH消去要求
   2163          		man_data_flash_erase_sector(man_ota_work.flash_top, MAN_DATA_PRG_SECTOR_NUM, MAN_OTA_SEQ_TERM_OTA_ERASE, man_ota_req_callback);
   \                     ??man_ota_main_153: (+1)
   \   00001624   0x4BBB             LDR      R3,??man_ota_main_353+0x8
   \   00001626   0x222C             MOVS     R2,#+44
   \   00001628   0x2130             MOVS     R1,#+48
   \   0000162A   0x4873             LDR      R0,??man_ota_main_340+0x1C
   \   0000162C   0x6840             LDR      R0,[R0, #+4]
   \   0000162E   0x.... 0x....      BL       man_data_flash_erase_sector
   2164          		man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_ERASE);
   \   00001632   0x202C             MOVS     R0,#+44
   \   00001634   0x.... 0x....      BL       man_ota_set_sequense
   2165          		break;
   \   00001638   0xF001 0xFEBD      BL       ??man_ota_main_274
   2166          	case MAN_OTA_SEQ_TERM_OTA_ERASE:			//  端末用 OTA 内臓FLASH消去中
   2167          		break;
   \                     ??man_ota_main_154: (+1)
   \   0000163C   0xF001 0xFEBB      BL       ??man_ota_main_274
   2168          	case MAN_OTA_SEQ_TERM_OTA_ERASE_OK:			//  端末用 OTA 内臓FLASH消去完了(正常)
   2169          		//内部フラッシュへの書き込みに移行
   2170          		man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_SET_REQ);
   \                     ??man_ota_main_155: (+1)
   \   00001640   0x202F             MOVS     R0,#+47
   \   00001642   0x.... 0x....      BL       man_ota_set_sequense
   2171          		break;
   \   00001646   0xF001 0xFEB6      BL       ??man_ota_main_274
   2172          	case MAN_OTA_SEQ_TERM_OTA_ERASE_NG:			//  端末用 OTA 内臓FLASH消去完了(異常)
   2173          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_156: (+1)
   \   0000164A   0x2000             MOVS     R0,#+0
   \   0000164C   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000164E   0x496A             LDR      R1,??man_ota_main_340+0x1C
   \   00001650   0x6588             STR      R0,[R1, #+88]
   2174          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001652   0x20A2             MOVS     R0,#+162
   \   00001654   0x.... 0x....      BL       man_ota_set_sequense
   2175          		// エラー登録
   2176          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.flash_top, man_ota_work.data_len);
   \   00001658   0x2388             MOVS     R3,#+136
   \   0000165A   0x011B             LSLS     R3,R3,#+4        ;; #+2176
   \   0000165C   0x485F             LDR      R0,??man_ota_main_340
   \   0000165E   0x6802             LDR      R2,[R0, #+0]
   \   00001660   0x4865             LDR      R0,??man_ota_main_340+0x1C
   \   00001662   0x6841             LDR      R1,[R0, #+4]
   \   00001664   0x201B             MOVS     R0,#+27
   \   00001666   0x.... 0x....      BL       man_error_set
   2177          		break;
   \   0000166A   0xF001 0xFEA4      BL       ??man_ota_main_274
   2178          
   2179          
   2180          	// 内臓FLASHへの書き込み処理
   2181          	case MAN_OTA_SEQ_TERM_OTA_FILE_SET_REQ:		//端末用 OTA FILE SET(要求)
   2182          		//外部フラッシュからのデータ取得サイズを計算
   2183          		man_ota_work.data_len = (man_ota_work.exec_info.value - (man_ota_work.exec_info.write_num * MAN_OTA_FLASH_WRITE_SIZE));
   \                     ??man_ota_main_157: (+1)
   \   0000166E   0x4862             LDR      R0,??man_ota_main_340+0x1C
   \   00001670   0x6AC0             LDR      R0,[R0, #+44]
   \   00001672   0x4961             LDR      R1,??man_ota_main_340+0x1C
   \   00001674   0x6C49             LDR      R1,[R1, #+68]
   \   00001676   0x2280             MOVS     R2,#+128
   \   00001678   0x4351             MULS     R1,R2,R1
   \   0000167A   0x1A40             SUBS     R0,R0,R1
   \   0000167C   0x4957             LDR      R1,??man_ota_main_340
   \   0000167E   0x6008             STR      R0,[R1, #+0]
   2184          		if (MAN_OTA_FLASH_WRITE_SIZE < man_ota_work.data_len) {
   \   00001680   0x4856             LDR      R0,??man_ota_main_340
   \   00001682   0x6800             LDR      R0,[R0, #+0]
   \   00001684   0x2881             CMP      R0,#+129
   \   00001686   0xDB03             BLT      ??man_ota_main_354
   2185          			//4KBずつ読み出し
   2186          			man_ota_work.data_len = MAN_OTA_FLASH_WRITE_SIZE;
   \   00001688   0x2080             MOVS     R0,#+128
   \   0000168A   0x4954             LDR      R1,??man_ota_main_340
   \   0000168C   0x6008             STR      R0,[R1, #+0]
   \   0000168E   0xE003             B        ??man_ota_main_355
   2187          		}
   2188          		else {
   2189          			man_ota_work.data_len = man_ota_work.data_len;
   \                     ??man_ota_main_354: (+1)
   \   00001690   0x4852             LDR      R0,??man_ota_main_340
   \   00001692   0x6800             LDR      R0,[R0, #+0]
   \   00001694   0x4951             LDR      R1,??man_ota_main_340
   \   00001696   0x6008             STR      R0,[R1, #+0]
   2190          		}
   2191          
   2192          		if (0 > man_ota_work.data_len) {
   \                     ??man_ota_main_355: (+1)
   \   00001698   0x4850             LDR      R0,??man_ota_main_340
   \   0000169A   0x6800             LDR      R0,[R0, #+0]
   \   0000169C   0x2800             CMP      R0,#+0
   \   0000169E   0xD502             BPL      ??man_ota_main_356
   2193          			//最後の読み出し
   2194          			man_ota_work.data_len = 0;
   \   000016A0   0x2000             MOVS     R0,#+0
   \   000016A2   0x494E             LDR      R1,??man_ota_main_340
   \   000016A4   0x6008             STR      R0,[R1, #+0]
   2195          		}
   2196          		
   2197          		// 外部FLASHからデータを取得
   2198          		// 取得データはdata_buff[], data_len に格納
   2199          		if (man_ota_work.data_len != 0) {
   \                     ??man_ota_main_356: (+1)
   \   000016A6   0x484D             LDR      R0,??man_ota_main_340
   \   000016A8   0x6800             LDR      R0,[R0, #+0]
   \   000016AA   0x2800             CMP      R0,#+0
   \   000016AC   0xD01A             BEQ      ??man_ota_main_357
   2200          			flash_top = man_ota_work.file_info.addr_term + ( man_ota_work.exec_info.write_num * MAN_OTA_FLASH_WRITE_SIZE);
   \   000016AE   0x4850             LDR      R0,??man_ota_main_340+0x14
   \   000016B0   0x6800             LDR      R0,[R0, #+0]
   \   000016B2   0x4951             LDR      R1,??man_ota_main_340+0x1C
   \   000016B4   0x6C49             LDR      R1,[R1, #+68]
   \   000016B6   0x2280             MOVS     R2,#+128
   \   000016B8   0x4351             MULS     R1,R2,R1
   \   000016BA   0x1844             ADDS     R4,R0,R1
   2201          			ret = man_flash_read(flash_top, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   000016BC   0x4847             LDR      R0,??man_ota_main_340
   \   000016BE   0x6802             LDR      R2,[R0, #+0]
   \   000016C0   0x484A             LDR      R0,??man_ota_main_340+0x10
   \   000016C2   0x6801             LDR      R1,[R0, #+0]
   \   000016C4   0x0020             MOVS     R0,R4
   \   000016C6   0x.... 0x....      BL       man_flash_read
   \   000016CA   0xE00C             B        ??man_ota_main_358
   \                     ??man_ota_main_333:
   \   000016CC   0x000007CC         DC32     0x7cc
   \   000016D0   0x0000FDE8         DC32     0xfde8
   \   000016D4   0x40600024         DC32     0x40600024
   \   000016D8   0x........         DC32     man_ota_data_callback
   \   000016DC   0x00000802         DC32     0x802
   \   000016E0   0x........         DC32     man_ota_work+0x2C0
   2202          		}
   2203          		else {
   2204          			ret = 0;
   \                     ??man_ota_main_357: (+1)
   \   000016E4   0x2000             MOVS     R0,#+0
   2205          		}
   2206          
   2207          		// 失敗時
   2208          		if (ret < 0) {
   \                     ??man_ota_main_358: (+1)
   \   000016E6   0x2800             CMP      R0,#+0
   \   000016E8   0xD507             BPL      ??man_ota_main_359
   2209          			man_error_setting(MAN_ERROR_MAN_OTA,man_ota_work.sequense,0);
   \   000016EA   0x4BD0             LDR      R3,??man_ota_main_360  ;; 0x8a1
   \   000016EC   0x2200             MOVS     R2,#+0
   \   000016EE   0x4842             LDR      R0,??man_ota_main_340+0x1C
   \   000016F0   0x7801             LDRB     R1,[R0, #+0]
   \   000016F2   0x201B             MOVS     R0,#+27
   \   000016F4   0x.... 0x....      BL       man_error_set
   \   000016F8   0xE006             B        ??man_ota_main_361
   2210          		}
   2211          		// 成功時
   2212          		else {
   2213          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_SET);
   \                     ??man_ota_main_359: (+1)
   \   000016FA   0x2030             MOVS     R0,#+48
   \   000016FC   0x.... 0x....      BL       man_ota_set_sequense
   2214          			man_ota_work.timer = man_timer_get_1ms_count();
   \   00001700   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00001704   0x49CA             LDR      R1,??man_ota_main_360+0x4
   \   00001706   0x6008             STR      R0,[R1, #+0]
   2215          		}
   2216          		break;
   \                     ??man_ota_main_361: (+1)
   \   00001708   0xF001 0xFE55      BL       ??man_ota_main_274
   2217          		
   2218          	case MAN_OTA_SEQ_TERM_OTA_FILE_SET:			//端末用 OTA FILE SET
   2219          		delay = man_timer_get_elapsed_time(man_ota_work.timer, man_timer_get_1ms_count());
   \                     ??man_ota_main_158: (+1)
   \   0000170C   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00001710   0x0001             MOVS     R1,R0
   \   00001712   0x48C7             LDR      R0,??man_ota_main_360+0x4
   \   00001714   0x6800             LDR      R0,[R0, #+0]
   \   00001716   0x.... 0x....      BL       man_timer_get_elapsed_time
   2220          		if (delay > 20) {
   \   0000171A   0x2815             CMP      R0,#+21
   \   0000171C   0xD302             BCC      ??man_ota_main_362
   2221          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_SET_OK);
   \   0000171E   0x2031             MOVS     R0,#+49
   \   00001720   0x.... 0x....      BL       man_ota_set_sequense
   2222          		}
   2223          		break;
   \                     ??man_ota_main_362: (+1)
   \   00001724   0xF001 0xFE47      BL       ??man_ota_main_274
   2224          		
   2225          	case MAN_OTA_SEQ_TERM_OTA_FILE_SET_OK:		//端末用 OTA FILE SET(正常)
   2226          		if (man_ota_work.data_len != 0) {
   \                     ??man_ota_main_159: (+1)
   \   00001728   0x482C             LDR      R0,??man_ota_main_340
   \   0000172A   0x6800             LDR      R0,[R0, #+0]
   \   0000172C   0x2800             CMP      R0,#+0
   \   0000172E   0xD049             BEQ      ??man_ota_main_363
   2227          			// 内部FLASHへデータを入力
   2228          			if (man_ota_work.data_len <= MAN_OTA_FLASH_WRITE_SIZE) {
   \   00001730   0x482A             LDR      R0,??man_ota_main_340
   \   00001732   0x6800             LDR      R0,[R0, #+0]
   \   00001734   0x2881             CMP      R0,#+129
   \   00001736   0xDA35             BGE      ??man_ota_main_364
   2229          				// 内部FLASH書き込み
   2230          				flash_top = man_ota_work.flash_top + (man_ota_work.exec_info.write_num ) * MAN_OTA_FLASH_WRITE_SIZE;
   \   00001738   0x482F             LDR      R0,??man_ota_main_340+0x1C
   \   0000173A   0x6840             LDR      R0,[R0, #+4]
   \   0000173C   0x492E             LDR      R1,??man_ota_main_340+0x1C
   \   0000173E   0x6C49             LDR      R1,[R1, #+68]
   \   00001740   0x2280             MOVS     R2,#+128
   \   00001742   0x4351             MULS     R1,R2,R1
   \   00001744   0x1844             ADDS     R4,R0,R1
   2231          				ret = man_data_flash_write_sector(flash_top, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   00001746   0x4825             LDR      R0,??man_ota_main_340
   \   00001748   0x6802             LDR      R2,[R0, #+0]
   \   0000174A   0x4828             LDR      R0,??man_ota_main_340+0x10
   \   0000174C   0x6801             LDR      R1,[R0, #+0]
   \   0000174E   0x0020             MOVS     R0,R4
   \   00001750   0x.... 0x....      BL       man_data_flash_write_sector
   2232          
   2233          				// 失敗時
   2234          				if (ret < 0) {
   \   00001754   0x2800             CMP      R0,#+0
   \   00001756   0xD50E             BPL      ??man_ota_main_365
   2235          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001758   0x2000             MOVS     R0,#+0
   \   0000175A   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000175C   0x4926             LDR      R1,??man_ota_main_340+0x1C
   \   0000175E   0x6588             STR      R0,[R1, #+88]
   2236          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001760   0x20A2             MOVS     R0,#+162
   \   00001762   0x.... 0x....      BL       man_ota_set_sequense
   2237          					// エラー登録
   2238          					man_error_setting(MAN_ERROR_MAN_OTA, flash_top, man_ota_work.data_len);
   \   00001766   0x4BB3             LDR      R3,??man_ota_main_360+0x8  ;; 0x8be
   \   00001768   0x481C             LDR      R0,??man_ota_main_340
   \   0000176A   0x6802             LDR      R2,[R0, #+0]
   \   0000176C   0x0021             MOVS     R1,R4
   \   0000176E   0x201B             MOVS     R0,#+27
   \   00001770   0x.... 0x....      BL       man_error_set
   \   00001774   0xE030             B        ??man_ota_main_366
   2239          				}
   2240          
   2241          				// 成功時
   2242          				else {
   2243          					man_ota_work.exec_info.write_num++;
   \                     ??man_ota_main_365: (+1)
   \   00001776   0x4820             LDR      R0,??man_ota_main_340+0x1C
   \   00001778   0x6C40             LDR      R0,[R0, #+68]
   \   0000177A   0x1C40             ADDS     R0,R0,#+1
   \   0000177C   0x491E             LDR      R1,??man_ota_main_340+0x1C
   \   0000177E   0x6448             STR      R0,[R1, #+68]
   2244          					man_ota_work.exec_info.value_write = man_ota_work.exec_info.value_write + man_ota_work.data_len;
   \   00001780   0x481D             LDR      R0,??man_ota_main_340+0x1C
   \   00001782   0x6B00             LDR      R0,[R0, #+48]
   \   00001784   0x4915             LDR      R1,??man_ota_main_340
   \   00001786   0x6809             LDR      R1,[R1, #+0]
   \   00001788   0x1840             ADDS     R0,R0,R1
   \   0000178A   0x491B             LDR      R1,??man_ota_main_340+0x1C
   \   0000178C   0x6308             STR      R0,[R1, #+48]
   2245          					man_ota_work.exec_info.retry = 0;
   \   0000178E   0x2000             MOVS     R0,#+0
   \   00001790   0x4919             LDR      R1,??man_ota_main_340+0x1C
   \   00001792   0x6548             STR      R0,[R1, #+84]
   2246          					
   2247          					// delay
   2248          					man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_SET_WAIT);
   \   00001794   0x2032             MOVS     R0,#+50
   \   00001796   0x.... 0x....      BL       man_ota_set_sequense
   2249          					man_ota_work.timer = man_timer_get_1ms_count();
   \   0000179A   0x.... 0x....      BL       man_timer_get_1ms_count
   \   0000179E   0x49A4             LDR      R1,??man_ota_main_360+0x4
   \   000017A0   0x6008             STR      R0,[R1, #+0]
   \   000017A2   0xE019             B        ??man_ota_main_366
   2250          				}
   2251          			}
   2252          			else {
   2253          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_364: (+1)
   \   000017A4   0x2000             MOVS     R0,#+0
   \   000017A6   0x43C0             MVNS     R0,R0            ;; #-1
   \   000017A8   0x4913             LDR      R1,??man_ota_main_340+0x1C
   \   000017AA   0x6588             STR      R0,[R1, #+88]
   2254          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000017AC   0x20A2             MOVS     R0,#+162
   \   000017AE   0x.... 0x....      BL       man_ota_set_sequense
   2255          				// エラー登録
   2256          				man_error_setting(MAN_ERROR_MAN_OTA, 0, man_ota_work.data_len);
   \   000017B2   0x238D             MOVS     R3,#+141
   \   000017B4   0x011B             LSLS     R3,R3,#+4        ;; #+2256
   \   000017B6   0x4809             LDR      R0,??man_ota_main_340
   \   000017B8   0x6802             LDR      R2,[R0, #+0]
   \   000017BA   0x2100             MOVS     R1,#+0
   \   000017BC   0x201B             MOVS     R0,#+27
   \   000017BE   0x.... 0x....      BL       man_error_set
   \   000017C2   0xE009             B        ??man_ota_main_366
   2257          			}
   2258          		}
   2259          	
   2260          		else {
   2261          			// OTA 終了
   2262          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \                     ??man_ota_main_363: (+1)
   \   000017C4   0x20A2             MOVS     R0,#+162
   \   000017C6   0x.... 0x....      BL       man_ota_set_sequense
   2263          			man_ota_work.exec_info.value_write += man_ota_work.data_len;
   \   000017CA   0x480B             LDR      R0,??man_ota_main_340+0x1C
   \   000017CC   0x6B00             LDR      R0,[R0, #+48]
   \   000017CE   0x4903             LDR      R1,??man_ota_main_340
   \   000017D0   0x6809             LDR      R1,[R1, #+0]
   \   000017D2   0x1840             ADDS     R0,R0,R1
   \   000017D4   0x4908             LDR      R1,??man_ota_main_340+0x1C
   \   000017D6   0x6308             STR      R0,[R1, #+48]
   2264          		}
   2265          		break;
   \                     ??man_ota_main_366: (+1)
   \   000017D8   0xF001 0xFDED      BL       ??man_ota_main_274
   \                     ??man_ota_main_340:
   \   000017DC   0x........         DC32     man_ota_work+0xC0
   \   000017E0   0x........         DC32     man_ota_work+0xC4
   \   000017E4   0x........         DC32     man_ota_work+0x80
   \   000017E8   0x........         DC32     man_ota_work+0x84
   \   000017EC   0x........         DC32     man_ota_work+0xBC
   \   000017F0   0x........         DC32     man_ota_work+0xA4
   \   000017F4   0x........         DC32     man_ota_work+0x94
   \   000017F8   0x........         DC32     man_ota_work
   2266          
   2267          	case MAN_OTA_SEQ_TERM_OTA_FILE_SET_WAIT:	//端末用 OTA FILE SET(delay)
   2268          		delay = man_timer_get_elapsed_time(man_ota_work.timer, man_timer_get_1ms_count());
   \                     ??man_ota_main_160: (+1)
   \   000017FC   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00001800   0x0001             MOVS     R1,R0
   \   00001802   0x488B             LDR      R0,??man_ota_main_360+0x4
   \   00001804   0x6800             LDR      R0,[R0, #+0]
   \   00001806   0x.... 0x....      BL       man_timer_get_elapsed_time
   2269          		if (delay > 20) {
   \   0000180A   0x2815             CMP      R0,#+21
   \   0000180C   0xD302             BCC      ??man_ota_main_367
   2270          			// 次データのFILE SET開始
   2271          			man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_FILE_SET_REQ);
   \   0000180E   0x202F             MOVS     R0,#+47
   \   00001810   0x.... 0x....      BL       man_ota_set_sequense
   2272          		}
   2273          		break;
   \                     ??man_ota_main_367: (+1)
   \   00001814   0xF001 0xFDCF      BL       ??man_ota_main_274
   2274          
   2275          
   2276          
   2277          	// ************************************
   2278          	// GPS OTA START
   2279          	// ************************************
   2280          	case MAN_OTA_SEQ_GPS_OTA_START_REQ:		// GPS用 OTA 開始要求
   2281          		// GPSが異常状態の場合は注入から再開する
   2282          //		if (man_gps_get_state() == MAN_GPS_NOTI_OPEN_ERROR) {
   2283          //			man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_START_OK);
   2284          //		}
   2285          //		else {
   2286          //			man_gps_req_erase(MAN_OTA_SEQ_GPS_OTA_START, man_ota_req_callback);
   2287          //			man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_START);
   2288          //		}
   2289          		
   2290          		// 今回はここから開始する
   2291          		man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_START_OK);
   \                     ??man_ota_main_161: (+1)
   \   00001818   0x2035             MOVS     R0,#+53
   \   0000181A   0x.... 0x....      BL       man_ota_set_sequense
   2292          		break;
   \   0000181E   0xF001 0xFDCA      BL       ??man_ota_main_274
   2293          	case MAN_OTA_SEQ_GPS_OTA_START:			// GPS用 OTA 開始
   2294          		break;
   \                     ??man_ota_main_162: (+1)
   \   00001822   0xF001 0xFDC8      BL       ??man_ota_main_274
   2295          	case MAN_OTA_SEQ_GPS_OTA_START_OK:		// GPS用 OTA 開始(正常)
   2296          		// case文の次のmemcpy()は暴走するため、順番を変える
   2297          		man_ota_work.exec_info.file_num = 1;
   \                     ??man_ota_main_163: (+1)
   \   00001826   0x2001             MOVS     R0,#+1
   \   00001828   0x49BF             LDR      R1,??man_ota_main_368
   \   0000182A   0x6388             STR      R0,[R1, #+56]
   2298          		man_ota_work.exec_info.start_file_num = man_ota_work.exec_info.file_num;
   \   0000182C   0x48BE             LDR      R0,??man_ota_main_368
   \   0000182E   0x6B80             LDR      R0,[R0, #+56]
   \   00001830   0x49BD             LDR      R1,??man_ota_main_368
   \   00001832   0x6488             STR      R0,[R1, #+72]
   2299          
   2300          		man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \   00001834   0x2000             MOVS     R0,#+0
   \   00001836   0x49BC             LDR      R1,??man_ota_main_368
   \   00001838   0x6548             STR      R0,[R1, #+84]
   2301          		// UPDATERの準備
   2302          		memcpy(&man_ota_work.ftp_info.filename[0], &gpsota->update[0], MAN_DATA_FILENAME_MAX+1);
   \   0000183A   0x2241             MOVS     R2,#+65
   \   0000183C   0x20FF             MOVS     R0,#+255
   \   0000183E   0x308E             ADDS     R0,R0,#+142      ;; #+397
   \   00001840   0x1821             ADDS     R1,R4,R0
   \   00001842   0x4DBA             LDR      R5,??man_ota_main_368+0x4
   \   00001844   0x0028             MOVS     R0,R5
   \   00001846   0x.... 0x....      BL       __aeabi_memcpy
   2303          		memcpy(&man_ota_work.ftp_info.fileonly[0], &gpsota->update_only[0], MAN_DATA_FILENAME_MAX+1);
   \   0000184A   0x2241             MOVS     R2,#+65
   \   0000184C   0x20E7             MOVS     R0,#+231
   \   0000184E   0x0040             LSLS     R0,R0,#+1        ;; #+462
   \   00001850   0x1821             ADDS     R1,R4,R0
   \   00001852   0x4CB7             LDR      R4,??man_ota_main_368+0x8
   \   00001854   0x0020             MOVS     R0,R4
   \   00001856   0x.... 0x....      BL       __aeabi_memcpy
   2304          		man_data_set_ftp_info(man_ota_work.ftp_info);
   \   0000185A   0x49B6             LDR      R1,??man_ota_main_368+0xC
   \   0000185C   0xB084             SUB      SP,SP,#+16
   \   0000185E   0x4668             MOV      R0,SP
   \   00001860   0x22FF             MOVS     R2,#+255
   \   00001862   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   00001864   0x.... 0x....      BL       __aeabi_memcpy4
   \   00001868   0xBC0F             POP      {R0-R3}
   \   0000186A   0x.... 0x....      BL       man_data_set_ftp_info
   2305          
   2306          		// UPDATER FILE GET開始
   2307          		man_ota_work.data_len = 0;
   \   0000186E   0x2000             MOVS     R0,#+0
   \   00001870   0x49D4             LDR      R1,??man_ota_main_369
   \   00001872   0x6008             STR      R0,[R1, #+0]
   2308          		man_ota_set_sequense(MAN_OTA_SEQ_UPDATER_FILE_GET_REQ);
   \   00001874   0x2037             MOVS     R0,#+55
   \   00001876   0x.... 0x....      BL       man_ota_set_sequense
   2309          		break;
   \   0000187A   0xF001 0xFD9C      BL       ??man_ota_main_274
   2310          	case MAN_OTA_SEQ_GPS_OTA_START_NG:		// GPS用 OTA 開始(異常)
   2311          		// 中止処理へ
   2312          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_164: (+1)
   \   0000187E   0x2000             MOVS     R0,#+0
   \   00001880   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001882   0x49A9             LDR      R1,??man_ota_main_368
   \   00001884   0x6588             STR      R0,[R1, #+88]
   2313          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001886   0x20A2             MOVS     R0,#+162
   \   00001888   0x.... 0x....      BL       man_ota_set_sequense
   2314          		// エラー登録
   2315          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   0000188C   0x4BCE             LDR      R3,??man_ota_main_369+0x4  ;; 0x90b
   \   0000188E   0x48CF             LDR      R0,??man_ota_main_369+0x8
   \   00001890   0x6802             LDR      R2,[R0, #+0]
   \   00001892   0x48CC             LDR      R0,??man_ota_main_369
   \   00001894   0x6801             LDR      R1,[R0, #+0]
   \   00001896   0x201B             MOVS     R0,#+27
   \   00001898   0x.... 0x....      BL       man_error_set
   2316          		break;
   \   0000189C   0xF001 0xFD8B      BL       ??man_ota_main_274
   \                     ??man_ota_main_349:
   \   000018A0   0x0000083B         DC32     0x83b
   2317          
   2318          
   2319          
   2320          	// ************************************
   2321          	// UPDATER FILE GET
   2322          	// ************************************
   2323          	case MAN_OTA_SEQ_UPDATER_FILE_GET_REQ:
   2324          		// HTTPの使用状況を確認する
   2325          		if (sts == 0) {
   \                     ??man_ota_main_165: (+1)
   \   000018A4   0x2D00             CMP      R5,#+0
   \   000018A6   0xD122             BNE      ??man_ota_main_370
   2326          			ret = man_http_file_get(man_ota_work.exec_info.file_num+man_ota_work.exec_info.file_offset, MAN_OTA_SEQ_UPDATER_FILE_GET, man_ota_data_callback);
   \   000018A8   0x4AC9             LDR      R2,??man_ota_main_369+0xC
   \   000018AA   0x2138             MOVS     R1,#+56
   \   000018AC   0x489E             LDR      R0,??man_ota_main_368
   \   000018AE   0x6B80             LDR      R0,[R0, #+56]
   \   000018B0   0x4B9D             LDR      R3,??man_ota_main_368
   \   000018B2   0x6D1B             LDR      R3,[R3, #+80]
   \   000018B4   0x18C0             ADDS     R0,R0,R3
   \   000018B6   0x.... 0x....      BL       man_http_file_get
   2327          			if (ret < 0) {
   \   000018BA   0x2800             CMP      R0,#+0
   \   000018BC   0xD507             BPL      ??man_ota_main_371
   2328          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \   000018BE   0x4BC5             LDR      R3,??man_ota_main_369+0x10  ;; 0x918
   \   000018C0   0x2200             MOVS     R2,#+0
   \   000018C2   0x4899             LDR      R0,??man_ota_main_368
   \   000018C4   0x7801             LDRB     R1,[R0, #+0]
   \   000018C6   0x201B             MOVS     R0,#+27
   \   000018C8   0x.... 0x....      BL       man_error_set
   \   000018CC   0xE00F             B        ??man_ota_main_370
   2329          			}
   2330          			else {
   2331          				man_ota_set_sequense(MAN_OTA_SEQ_UPDATER_FILE_GET);
   \                     ??man_ota_main_371: (+1)
   \   000018CE   0x2038             MOVS     R0,#+56
   \   000018D0   0x.... 0x....      BL       man_ota_set_sequense
   2332          				man_ota_work.timer = man_timer_get_1ms_count();
   \   000018D4   0x.... 0x....      BL       man_timer_get_1ms_count
   \   000018D8   0x4955             LDR      R1,??man_ota_main_360+0x4
   \   000018DA   0x6008             STR      R0,[R1, #+0]
   2333          				// 一時情報の初期化
   2334          				man_ota_work.file_info.size_update = 0;
   \   000018DC   0x2000             MOVS     R0,#+0
   \   000018DE   0x49BE             LDR      R1,??man_ota_main_369+0x14
   \   000018E0   0x6008             STR      R0,[R1, #+0]
   2335          				man_ota_work.data_len = 0;
   \   000018E2   0x2000             MOVS     R0,#+0
   \   000018E4   0x49B7             LDR      R1,??man_ota_main_369
   \   000018E6   0x6008             STR      R0,[R1, #+0]
   2336          				man_ota_work.summ = 0;
   \   000018E8   0x2000             MOVS     R0,#+0
   \   000018EA   0x49BC             LDR      R1,??man_ota_main_369+0x18
   \   000018EC   0x6008             STR      R0,[R1, #+0]
   2337          			}
   2338          		}
   2339          		break;
   \                     ??man_ota_main_370: (+1)
   \   000018EE   0xF001 0xFD62      BL       ??man_ota_main_274
   2340          	case MAN_OTA_SEQ_UPDATER_FILE_GET:
   2341          		// 5秒経過しても取得できない場合は、異常扱いとする
   2342          //		delay = man_timer_get_elapsed_time(man_ota_work.timer, man_timer_get_1ms_count());
   2343          //		if (delay > 5000) {
   2344          //			man_ota_set_sequense(MAN_OTA_SEQ_UPDATER_FILE_GET_NG);
   2345          //		}
   2346          		break;
   \                     ??man_ota_main_166: (+1)
   \   000018F2   0xF001 0xFD60      BL       ??man_ota_main_274
   2347          	case MAN_OTA_SEQ_UPDATER_FILE_GET_OK:
   2348          		man_ota_work.exec_info.counter++;
   \                     ??man_ota_main_167: (+1)
   \   000018F6   0x488C             LDR      R0,??man_ota_main_368
   \   000018F8   0x6900             LDR      R0,[R0, #+16]
   \   000018FA   0x1C40             ADDS     R0,R0,#+1
   \   000018FC   0x498A             LDR      R1,??man_ota_main_368
   \   000018FE   0x6108             STR      R0,[R1, #+16]
   2349          #ifdef GNSS_DEBUG_MAN_OTA_FTP 
   2350          			sprintf((char *)&man_ota_work.buff[0], "FILE GET(%d:%d):%d[ms]x\n", man_ota_work.exec_info.counter, man_ota_work.resp_cmd.data_len-2, man_timer_get_1ms_count()-man_ota_work.timer);
   2351          			length = strlen((char const *)&man_ota_work.buff[0]);
   2352          			man_usb_data_send(&man_ota_work.buff[0], length);
   2353          #endif
   2354          
   2355          		if (man_ota_work.resp_cmd.data_len != 0) {
   \   00001900   0x48B2             LDR      R0,??man_ota_main_369+0x8
   \   00001902   0x6800             LDR      R0,[R0, #+0]
   \   00001904   0x2800             CMP      R0,#+0
   \   00001906   0xD04D             BEQ      ??man_ota_main_372
   2356          			// 外部FLASHにman_ota_work.resp_cmd.dataを書き込む
   2357          			// data部にはCR+LFが含まれているためman_ota_work.resp_cmd.data_len-2バイトをコピーする
   2358          			for (i=0; i<man_ota_work.resp_cmd.data_len-2; i++) {
   \   00001908   0x2400             MOVS     R4,#+0
   \   0000190A   0xE03E             B        ??man_ota_main_373
   \                     ??man_ota_main_353:
   \   0000190C   0x0000084F         DC32     0x84f
   \   00001910   0x0000086C         DC32     0x86c
   \   00001914   0x........         DC32     man_ota_req_callback
   2359          				man_ota_work.data_buff[man_ota_work.data_len] = man_ota_work.resp_cmd.data[i];
   \                     ??man_ota_main_374: (+1)
   \   00001918   0x48D3             LDR      R0,??man_ota_main_375
   \   0000191A   0x6800             LDR      R0,[R0, #+0]
   \   0000191C   0x5D00             LDRB     R0,[R0, R4]
   \   0000191E   0x49D3             LDR      R1,??man_ota_main_375+0x4
   \   00001920   0x6809             LDR      R1,[R1, #+0]
   \   00001922   0x4AA8             LDR      R2,??man_ota_main_369
   \   00001924   0x6812             LDR      R2,[R2, #+0]
   \   00001926   0x5488             STRB     R0,[R1, R2]
   2360          				man_ota_work.summ += man_ota_work.resp_cmd.data[i];
   \   00001928   0x48AC             LDR      R0,??man_ota_main_369+0x18
   \   0000192A   0x6800             LDR      R0,[R0, #+0]
   \   0000192C   0x49CE             LDR      R1,??man_ota_main_375
   \   0000192E   0x6809             LDR      R1,[R1, #+0]
   \   00001930   0x5D09             LDRB     R1,[R1, R4]
   \   00001932   0x1840             ADDS     R0,R0,R1
   \   00001934   0x49A9             LDR      R1,??man_ota_main_369+0x18
   \   00001936   0x6008             STR      R0,[R1, #+0]
   2361          				man_ota_work.data_len++;
   \   00001938   0x48A2             LDR      R0,??man_ota_main_369
   \   0000193A   0x6800             LDR      R0,[R0, #+0]
   \   0000193C   0x1C40             ADDS     R0,R0,#+1
   \   0000193E   0x49A1             LDR      R1,??man_ota_main_369
   \   00001940   0x6008             STR      R0,[R1, #+0]
   2362          
   2363          				// PAGEサイズを超えるとFLASHに書き込む
   2364          				if (man_ota_work.data_len >= MAN_FLASH_PAGE_SIZE) {
   \   00001942   0x48A0             LDR      R0,??man_ota_main_369
   \   00001944   0x6800             LDR      R0,[R0, #+0]
   \   00001946   0x28FF             CMP      R0,#+255
   \   00001948   0xDD1E             BLE      ??man_ota_main_376
   2365          					ret = man_flash_write_page(man_ota_work.file_info.addr_update + man_ota_work.file_info.size_update, &man_ota_work.data_buff[0], MAN_FLASH_PAGE_SIZE);
   \   0000194A   0x2280             MOVS     R2,#+128
   \   0000194C   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   0000194E   0x48C7             LDR      R0,??man_ota_main_375+0x4
   \   00001950   0x6801             LDR      R1,[R0, #+0]
   \   00001952   0x48C7             LDR      R0,??man_ota_main_375+0x8
   \   00001954   0x6800             LDR      R0,[R0, #+0]
   \   00001956   0x4BA0             LDR      R3,??man_ota_main_369+0x14
   \   00001958   0x681B             LDR      R3,[R3, #+0]
   \   0000195A   0x18C0             ADDS     R0,R0,R3
   \   0000195C   0x.... 0x....      BL       man_flash_write_page
   2366          					if (ret < 0) {
   \   00001960   0x2800             CMP      R0,#+0
   \   00001962   0xD503             BPL      ??man_ota_main_377
   2367          						// 外部FLASH書き込み異常
   2368          						man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001964   0x2000             MOVS     R0,#+0
   \   00001966   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001968   0x496F             LDR      R1,??man_ota_main_368
   \   0000196A   0x6588             STR      R0,[R1, #+88]
   2369          					}
   2370          					man_ota_work.data_len -= MAN_FLASH_PAGE_SIZE;
   \                     ??man_ota_main_377: (+1)
   \   0000196C   0x4895             LDR      R0,??man_ota_main_369
   \   0000196E   0x6800             LDR      R0,[R0, #+0]
   \   00001970   0x21FF             MOVS     R1,#+255
   \   00001972   0x43C9             MVNS     R1,R1            ;; #-256
   \   00001974   0x1840             ADDS     R0,R0,R1
   \   00001976   0x4993             LDR      R1,??man_ota_main_369
   \   00001978   0x6008             STR      R0,[R1, #+0]
   2371          					man_ota_work.file_info.size_update += MAN_FLASH_PAGE_SIZE;
   \   0000197A   0x4897             LDR      R0,??man_ota_main_369+0x14
   \   0000197C   0x6800             LDR      R0,[R0, #+0]
   \   0000197E   0x2180             MOVS     R1,#+128
   \   00001980   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \   00001982   0x1840             ADDS     R0,R0,R1
   \   00001984   0x4994             LDR      R1,??man_ota_main_369+0x14
   \   00001986   0x6008             STR      R0,[R1, #+0]
   2372          				}
   2373          			}
   \                     ??man_ota_main_376: (+1)
   \   00001988   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_ota_main_373: (+1)
   \   0000198A   0x4890             LDR      R0,??man_ota_main_369+0x8
   \   0000198C   0x6800             LDR      R0,[R0, #+0]
   \   0000198E   0x1E80             SUBS     R0,R0,#+2
   \   00001990   0x4284             CMP      R4,R0
   \   00001992   0xDBC1             BLT      ??man_ota_main_374
   2374          			// 次のシーケンスへ遷移
   2375          			man_ota_set_sequense(MAN_OTA_SEQ_UPDATER_FILE_GET);
   \   00001994   0x2038             MOVS     R0,#+56
   \   00001996   0x.... 0x....      BL       man_ota_set_sequense
   2376          			man_ota_work.timer = man_timer_get_1ms_count();
   \   0000199A   0x.... 0x....      BL       man_timer_get_1ms_count
   \   0000199E   0x4924             LDR      R1,??man_ota_main_360+0x4
   \   000019A0   0x6008             STR      R0,[R1, #+0]
   \   000019A2   0xE07B             B        ??man_ota_main_378
   2377          		}
   2378          		else {
   2379          			// 残りをFLASHに書き込む
   2380          			if (man_ota_work.data_len > 0) {
   \                     ??man_ota_main_372: (+1)
   \   000019A4   0x4887             LDR      R0,??man_ota_main_369
   \   000019A6   0x6800             LDR      R0,[R0, #+0]
   \   000019A8   0x2801             CMP      R0,#+1
   \   000019AA   0xDB1A             BLT      ??man_ota_main_379
   2381          				ret = man_flash_write_page(man_ota_work.file_info.addr_update + man_ota_work.file_info.size_update, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   000019AC   0x4885             LDR      R0,??man_ota_main_369
   \   000019AE   0x6802             LDR      R2,[R0, #+0]
   \   000019B0   0x48AE             LDR      R0,??man_ota_main_375+0x4
   \   000019B2   0x6801             LDR      R1,[R0, #+0]
   \   000019B4   0x48AE             LDR      R0,??man_ota_main_375+0x8
   \   000019B6   0x6800             LDR      R0,[R0, #+0]
   \   000019B8   0x4B87             LDR      R3,??man_ota_main_369+0x14
   \   000019BA   0x681B             LDR      R3,[R3, #+0]
   \   000019BC   0x18C0             ADDS     R0,R0,R3
   \   000019BE   0x.... 0x....      BL       man_flash_write_page
   2382          				if (ret < 0) {
   \   000019C2   0x2800             CMP      R0,#+0
   \   000019C4   0xD503             BPL      ??man_ota_main_380
   2383          					// 外部FLASH書き込み異常
   2384          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   000019C6   0x2000             MOVS     R0,#+0
   \   000019C8   0x43C0             MVNS     R0,R0            ;; #-1
   \   000019CA   0x4957             LDR      R1,??man_ota_main_368
   \   000019CC   0x6588             STR      R0,[R1, #+88]
   2385          				}
   2386          				man_ota_work.file_info.size_update += man_ota_work.data_len;
   \                     ??man_ota_main_380: (+1)
   \   000019CE   0x4882             LDR      R0,??man_ota_main_369+0x14
   \   000019D0   0x6800             LDR      R0,[R0, #+0]
   \   000019D2   0x497C             LDR      R1,??man_ota_main_369
   \   000019D4   0x6809             LDR      R1,[R1, #+0]
   \   000019D6   0x1840             ADDS     R0,R0,R1
   \   000019D8   0x497F             LDR      R1,??man_ota_main_369+0x14
   \   000019DA   0x6008             STR      R0,[R1, #+0]
   2387          				man_ota_work.data_len = 0;
   \   000019DC   0x2000             MOVS     R0,#+0
   \   000019DE   0x4979             LDR      R1,??man_ota_main_369
   \   000019E0   0x6008             STR      R0,[R1, #+0]
   2388          			}
   2389          
   2390          			// 外部FLASH書き込み異常時はチェックSUM異常扱いとする
   2391          			if (man_ota_work.exec_info.result != MAN_OTA_STATUS_NG) {
   \                     ??man_ota_main_379: (+1)
   \   000019E2   0x4851             LDR      R0,??man_ota_main_368
   \   000019E4   0x6D80             LDR      R0,[R0, #+88]
   \   000019E6   0x2100             MOVS     R1,#+0
   \   000019E8   0x43C9             MVNS     R1,R1            ;; #-1
   \   000019EA   0x4288             CMP      R0,R1
   \   000019EC   0xD00A             BEQ      ??man_ota_main_381
   2392          				// チェックSUMの確認
   2393          				ret = man_ota_check_summ_data(man_ota_work.file_info.addr_update + man_ota_work.file_info.size_update-4, man_ota_work.summ);
   \   000019EE   0x487B             LDR      R0,??man_ota_main_369+0x18
   \   000019F0   0x6801             LDR      R1,[R0, #+0]
   \   000019F2   0x489F             LDR      R0,??man_ota_main_375+0x8
   \   000019F4   0x6800             LDR      R0,[R0, #+0]
   \   000019F6   0x4A78             LDR      R2,??man_ota_main_369+0x14
   \   000019F8   0x6812             LDR      R2,[R2, #+0]
   \   000019FA   0x1880             ADDS     R0,R0,R2
   \   000019FC   0x1F00             SUBS     R0,R0,#+4
   \   000019FE   0x.... 0x....      BL       man_ota_check_summ_data
   \   00001A02   0xE001             B        ??man_ota_main_382
   2394          			}
   2395          			else {
   2396          				ret = -1;
   \                     ??man_ota_main_381: (+1)
   \   00001A04   0x2000             MOVS     R0,#+0
   \   00001A06   0x43C0             MVNS     R0,R0            ;; #-1
   2397          			}
   2398          
   2399          			// チェックSUM異常
   2400          			if (ret < 0) {
   \                     ??man_ota_main_382: (+1)
   \   00001A08   0x2800             CMP      R0,#+0
   \   00001A0A   0xD515             BPL      ??man_ota_main_383
   2401          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001A0C   0x2000             MOVS     R0,#+0
   \   00001A0E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001A10   0x4945             LDR      R1,??man_ota_main_368
   \   00001A12   0x6588             STR      R0,[R1, #+88]
   2402          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001A14   0x20A2             MOVS     R0,#+162
   \   00001A16   0x.... 0x....      BL       man_ota_set_sequense
   2403          				// エラー登録
   2404          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.size_update, 0);
   \   00001A1A   0x4BD1             LDR      R3,??man_ota_main_384  ;; 0x964
   \   00001A1C   0x2200             MOVS     R2,#+0
   \   00001A1E   0x486E             LDR      R0,??man_ota_main_369+0x14
   \   00001A20   0x6801             LDR      R1,[R0, #+0]
   \   00001A22   0x201B             MOVS     R0,#+27
   \   00001A24   0x.... 0x....      BL       man_error_set
   \   00001A28   0xE038             B        ??man_ota_main_378
   \   00001A2A   0xBF00             Nop      
   \                     ??man_ota_main_360:
   \   00001A2C   0x000008A1         DC32     0x8a1
   \   00001A30   0x........         DC32     man_ota_work+0x2C0
   \   00001A34   0x000008BE         DC32     0x8be
   2405          			}
   2406          			// チェックSUM正常
   2407          			else{
   2408          				//外部フラッシュ情報記憶
   2409          				man_ota_work.file_info.size_update -= 4;			//チェックSUM分の４Byteを引く
   \                     ??man_ota_main_383: (+1)
   \   00001A38   0x4867             LDR      R0,??man_ota_main_369+0x14
   \   00001A3A   0x6800             LDR      R0,[R0, #+0]
   \   00001A3C   0x1F00             SUBS     R0,R0,#+4
   \   00001A3E   0x4966             LDR      R1,??man_ota_main_369+0x14
   \   00001A40   0x6008             STR      R0,[R1, #+0]
   2410          				
   2411          				
   2412          				//CONFING FILE取得準備
   2413          				// case文の次のmemcpy()は暴走するため、順番を変える
   2414          				man_ota_work.exec_info.file_num = 1;
   \   00001A42   0x2001             MOVS     R0,#+1
   \   00001A44   0x4938             LDR      R1,??man_ota_main_368
   \   00001A46   0x6388             STR      R0,[R1, #+56]
   2415          				man_ota_work.exec_info.start_file_num = man_ota_work.exec_info.file_num;
   \   00001A48   0x4837             LDR      R0,??man_ota_main_368
   \   00001A4A   0x6B80             LDR      R0,[R0, #+56]
   \   00001A4C   0x4936             LDR      R1,??man_ota_main_368
   \   00001A4E   0x6488             STR      R0,[R1, #+72]
   2416          				man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \   00001A50   0x2000             MOVS     R0,#+0
   \   00001A52   0x4935             LDR      R1,??man_ota_main_368
   \   00001A54   0x6548             STR      R0,[R1, #+84]
   2417          				// CONFIGの準備
   2418          				memcpy(&man_ota_work.ftp_info.filename[0], &gpsota->config[0], MAN_DATA_FILENAME_MAX+1);
   \   00001A56   0x2241             MOVS     R2,#+65
   \   00001A58   0x20FF             MOVS     R0,#+255
   \   00001A5A   0x300C             ADDS     R0,R0,#+12       ;; #+267
   \   00001A5C   0x1821             ADDS     R1,R4,R0
   \   00001A5E   0x4D33             LDR      R5,??man_ota_main_368+0x4
   \   00001A60   0x0028             MOVS     R0,R5
   \   00001A62   0x.... 0x....      BL       __aeabi_memcpy
   2419          				memcpy(&man_ota_work.ftp_info.fileonly[0], &gpsota->config_only[0], MAN_DATA_FILENAME_MAX+1);
   \   00001A66   0x2241             MOVS     R2,#+65
   \   00001A68   0x20A6             MOVS     R0,#+166
   \   00001A6A   0x0040             LSLS     R0,R0,#+1        ;; #+332
   \   00001A6C   0x1821             ADDS     R1,R4,R0
   \   00001A6E   0x4C30             LDR      R4,??man_ota_main_368+0x8
   \   00001A70   0x0020             MOVS     R0,R4
   \   00001A72   0x.... 0x....      BL       __aeabi_memcpy
   2420          				man_data_set_ftp_info(man_ota_work.ftp_info);
   \   00001A76   0x492F             LDR      R1,??man_ota_main_368+0xC
   \   00001A78   0xB084             SUB      SP,SP,#+16
   \   00001A7A   0x4668             MOV      R0,SP
   \   00001A7C   0x22FF             MOVS     R2,#+255
   \   00001A7E   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   00001A80   0x.... 0x....      BL       __aeabi_memcpy4
   \   00001A84   0xBC0F             POP      {R0-R3}
   \   00001A86   0x.... 0x....      BL       man_data_set_ftp_info
   2421          				// CONFIG FILE GET開始
   2422          				man_ota_work.data_len = 0;
   \   00001A8A   0x2000             MOVS     R0,#+0
   \   00001A8C   0x494D             LDR      R1,??man_ota_main_369
   \   00001A8E   0x6008             STR      R0,[R1, #+0]
   2423          				man_ota_set_sequense(MAN_OTA_SEQ_CONFIG_FILE_GET_REQ);
   \   00001A90   0x203B             MOVS     R0,#+59
   \   00001A92   0x.... 0x....      BL       man_ota_set_sequense
   2424          				man_ota_work.exec_info.counter = 0;
   \   00001A96   0x2000             MOVS     R0,#+0
   \   00001A98   0x4923             LDR      R1,??man_ota_main_368
   \   00001A9A   0x6108             STR      R0,[R1, #+16]
   2425          			}
   2426          		}
   2427          		break;
   \                     ??man_ota_main_378: (+1)
   \   00001A9C   0xF001 0xFC8B      BL       ??man_ota_main_274
   2428          
   2429          	case MAN_OTA_SEQ_UPDATER_FILE_GET_NG:
   2430          		// 中止処理へ
   2431          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_168: (+1)
   \   00001AA0   0x2000             MOVS     R0,#+0
   \   00001AA2   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001AA4   0x4920             LDR      R1,??man_ota_main_368
   \   00001AA6   0x6588             STR      R0,[R1, #+88]
   2432          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001AA8   0x20A2             MOVS     R0,#+162
   \   00001AAA   0x.... 0x....      BL       man_ota_set_sequense
   2433          		// エラー登録
   2434          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.counter, 0);
   \   00001AAE   0x4BD0             LDR      R3,??man_ota_main_385  ;; 0x982
   \   00001AB0   0x2200             MOVS     R2,#+0
   \   00001AB2   0x481D             LDR      R0,??man_ota_main_368
   \   00001AB4   0x6901             LDR      R1,[R0, #+16]
   \   00001AB6   0x201B             MOVS     R0,#+27
   \   00001AB8   0x.... 0x....      BL       man_error_set
   2435          		break;
   \   00001ABC   0xF001 0xFC7B      BL       ??man_ota_main_274
   2436          
   2437          	// ************************************
   2438          	// CONFIG FILE GET
   2439          	// ************************************
   2440          	case MAN_OTA_SEQ_CONFIG_FILE_GET_REQ:
   2441          		// HTTPの使用状況を確認する
   2442          		if (sts == 0) {
   \                     ??man_ota_main_169: (+1)
   \   00001AC0   0x2D00             CMP      R5,#+0
   \   00001AC2   0xD122             BNE      ??man_ota_main_386
   2443          			ret = man_http_file_get(man_ota_work.exec_info.file_num+man_ota_work.exec_info.file_offset, MAN_OTA_SEQ_CONFIG_FILE_GET, man_ota_data_callback);
   \   00001AC4   0x4A42             LDR      R2,??man_ota_main_369+0xC
   \   00001AC6   0x213C             MOVS     R1,#+60
   \   00001AC8   0x4817             LDR      R0,??man_ota_main_368
   \   00001ACA   0x6B80             LDR      R0,[R0, #+56]
   \   00001ACC   0x4B16             LDR      R3,??man_ota_main_368
   \   00001ACE   0x6D1B             LDR      R3,[R3, #+80]
   \   00001AD0   0x18C0             ADDS     R0,R0,R3
   \   00001AD2   0x.... 0x....      BL       man_http_file_get
   2444          			if (ret < 0) {
   \   00001AD6   0x2800             CMP      R0,#+0
   \   00001AD8   0xD507             BPL      ??man_ota_main_387
   2445          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \   00001ADA   0x4BC6             LDR      R3,??man_ota_main_385+0x4  ;; 0x98d
   \   00001ADC   0x2200             MOVS     R2,#+0
   \   00001ADE   0x4812             LDR      R0,??man_ota_main_368
   \   00001AE0   0x7801             LDRB     R1,[R0, #+0]
   \   00001AE2   0x201B             MOVS     R0,#+27
   \   00001AE4   0x.... 0x....      BL       man_error_set
   \   00001AE8   0xE00F             B        ??man_ota_main_386
   2446          			}
   2447          			else {
   2448          				man_ota_set_sequense(MAN_OTA_SEQ_CONFIG_FILE_GET);
   \                     ??man_ota_main_387: (+1)
   \   00001AEA   0x203C             MOVS     R0,#+60
   \   00001AEC   0x.... 0x....      BL       man_ota_set_sequense
   2449          				man_ota_work.timer = man_timer_get_1ms_count();
   \   00001AF0   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00001AF4   0x49C0             LDR      R1,??man_ota_main_385+0x8
   \   00001AF6   0x6008             STR      R0,[R1, #+0]
   2450          
   2451          				// 一時情報の初期化
   2452          				man_ota_work.file_info.size_config = 0;
   \   00001AF8   0x2000             MOVS     R0,#+0
   \   00001AFA   0x49C0             LDR      R1,??man_ota_main_385+0xC
   \   00001AFC   0x6008             STR      R0,[R1, #+0]
   2453          				man_ota_work.data_len = 0;
   \   00001AFE   0x2000             MOVS     R0,#+0
   \   00001B00   0x4930             LDR      R1,??man_ota_main_369
   \   00001B02   0x6008             STR      R0,[R1, #+0]
   2454          				man_ota_work.summ = 0;
   \   00001B04   0x2000             MOVS     R0,#+0
   \   00001B06   0x4935             LDR      R1,??man_ota_main_369+0x18
   \   00001B08   0x6008             STR      R0,[R1, #+0]
   2455          			}
   2456          		}
   2457          		break;
   \                     ??man_ota_main_386: (+1)
   \   00001B0A   0xF001 0xFC54      BL       ??man_ota_main_274
   2458          	case MAN_OTA_SEQ_CONFIG_FILE_GET:
   2459          		// 5秒経過しても取得できない場合は、異常扱いとする
   2460          //		delay = man_timer_get_elapsed_time(man_ota_work.timer, man_timer_get_1ms_count());
   2461          //		if (delay > 5000) {
   2462          //			man_ota_set_sequense(MAN_OTA_SEQ_CONFIG_FILE_GET_NG);
   2463          //		}
   2464          		break;
   \                     ??man_ota_main_170: (+1)
   \   00001B0E   0xF001 0xFC52      BL       ??man_ota_main_274
   2465          	case MAN_OTA_SEQ_CONFIG_FILE_GET_OK:
   2466          		man_ota_work.exec_info.counter++;
   \                     ??man_ota_main_171: (+1)
   \   00001B12   0x4805             LDR      R0,??man_ota_main_368
   \   00001B14   0x6900             LDR      R0,[R0, #+16]
   \   00001B16   0x1C40             ADDS     R0,R0,#+1
   \   00001B18   0x4903             LDR      R1,??man_ota_main_368
   \   00001B1A   0x6108             STR      R0,[R1, #+16]
   2467          #ifdef GNSS_DEBUG_MAN_OTA_FTP 
   2468          			sprintf((char *)&man_ota_work.buff[0], "FILE GET(%d:%d):%d[ms]\n", man_ota_work.exec_info.counter, man_ota_work.resp_cmd.data_len-2, man_timer_get_1ms_count()-man_ota_work.timer);
   2469          			length = strlen((char const *)&man_ota_work.buff[0]);
   2470          			man_usb_data_send(&man_ota_work.buff[0], length);
   2471          #endif
   2472          
   2473          		if (man_ota_work.resp_cmd.data_len != 0) {
   \   00001B1C   0x482B             LDR      R0,??man_ota_main_369+0x8
   \   00001B1E   0x6800             LDR      R0,[R0, #+0]
   \   00001B20   0x2800             CMP      R0,#+0
   \   00001B22   0xD05D             BEQ      ??man_ota_main_388
   2474          			// 外部FLASHにman_ota_work.resp_cmd.dataを書き込む
   2475          			// data部にはCR+LFが含まれているためman_ota_work.resp_cmd.data_len-2バイトをコピーする
   2476          			for (i=0; i<man_ota_work.resp_cmd.data_len-2; i++) {
   \   00001B24   0x2400             MOVS     R4,#+0
   \   00001B26   0xE040             B        ??man_ota_main_389
   \                     ??man_ota_main_368:
   \   00001B28   0x........         DC32     man_ota_work
   \   00001B2C   0x........         DC32     man_ota_work+0x151
   \   00001B30   0x........         DC32     man_ota_work+0x192
   \   00001B34   0x........         DC32     man_ota_work+0xC8
   2477          				man_ota_work.data_buff[man_ota_work.data_len] = man_ota_work.resp_cmd.data[i];
   \                     ??man_ota_main_390: (+1)
   \   00001B38   0x484B             LDR      R0,??man_ota_main_375
   \   00001B3A   0x6800             LDR      R0,[R0, #+0]
   \   00001B3C   0x5D00             LDRB     R0,[R0, R4]
   \   00001B3E   0x494B             LDR      R1,??man_ota_main_375+0x4
   \   00001B40   0x6809             LDR      R1,[R1, #+0]
   \   00001B42   0x4A20             LDR      R2,??man_ota_main_369
   \   00001B44   0x6812             LDR      R2,[R2, #+0]
   \   00001B46   0x5488             STRB     R0,[R1, R2]
   2478          				man_ota_work.summ += man_ota_work.resp_cmd.data[i];
   \   00001B48   0x4824             LDR      R0,??man_ota_main_369+0x18
   \   00001B4A   0x6800             LDR      R0,[R0, #+0]
   \   00001B4C   0x4946             LDR      R1,??man_ota_main_375
   \   00001B4E   0x6809             LDR      R1,[R1, #+0]
   \   00001B50   0x5D09             LDRB     R1,[R1, R4]
   \   00001B52   0x1840             ADDS     R0,R0,R1
   \   00001B54   0x4921             LDR      R1,??man_ota_main_369+0x18
   \   00001B56   0x6008             STR      R0,[R1, #+0]
   2479          				man_ota_work.data_len++;
   \   00001B58   0x481A             LDR      R0,??man_ota_main_369
   \   00001B5A   0x6800             LDR      R0,[R0, #+0]
   \   00001B5C   0x1C40             ADDS     R0,R0,#+1
   \   00001B5E   0x4919             LDR      R1,??man_ota_main_369
   \   00001B60   0x6008             STR      R0,[R1, #+0]
   2480          
   2481          				// PAGEサイズを超えるとFLASHに書き込む
   2482          				if (man_ota_work.data_len >= MAN_FLASH_PAGE_SIZE) {
   \   00001B62   0x4818             LDR      R0,??man_ota_main_369
   \   00001B64   0x6800             LDR      R0,[R0, #+0]
   \   00001B66   0x28FF             CMP      R0,#+255
   \   00001B68   0xDD1E             BLE      ??man_ota_main_391
   2483          					ret = man_flash_write_page(man_ota_work.file_info.addr_config + man_ota_work.file_info.size_config, &man_ota_work.data_buff[0], MAN_FLASH_PAGE_SIZE);
   \   00001B6A   0x2280             MOVS     R2,#+128
   \   00001B6C   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   00001B6E   0x483F             LDR      R0,??man_ota_main_375+0x4
   \   00001B70   0x6801             LDR      R1,[R0, #+0]
   \   00001B72   0x48D2             LDR      R0,??man_ota_main_392
   \   00001B74   0x6800             LDR      R0,[R0, #+0]
   \   00001B76   0x4BA1             LDR      R3,??man_ota_main_385+0xC
   \   00001B78   0x681B             LDR      R3,[R3, #+0]
   \   00001B7A   0x18C0             ADDS     R0,R0,R3
   \   00001B7C   0x.... 0x....      BL       man_flash_write_page
   2484          					if (ret < 0) {
   \   00001B80   0x2800             CMP      R0,#+0
   \   00001B82   0xD503             BPL      ??man_ota_main_393
   2485          						// 外部FLASH書き込み異常
   2486          						man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001B84   0x2000             MOVS     R0,#+0
   \   00001B86   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001B88   0x49CD             LDR      R1,??man_ota_main_392+0x4
   \   00001B8A   0x6588             STR      R0,[R1, #+88]
   2487          					}
   2488          					man_ota_work.data_len -= MAN_FLASH_PAGE_SIZE;
   \                     ??man_ota_main_393: (+1)
   \   00001B8C   0x480D             LDR      R0,??man_ota_main_369
   \   00001B8E   0x6800             LDR      R0,[R0, #+0]
   \   00001B90   0x21FF             MOVS     R1,#+255
   \   00001B92   0x43C9             MVNS     R1,R1            ;; #-256
   \   00001B94   0x1840             ADDS     R0,R0,R1
   \   00001B96   0x490B             LDR      R1,??man_ota_main_369
   \   00001B98   0x6008             STR      R0,[R1, #+0]
   2489          					man_ota_work.file_info.size_config += MAN_FLASH_PAGE_SIZE;
   \   00001B9A   0x4898             LDR      R0,??man_ota_main_385+0xC
   \   00001B9C   0x6800             LDR      R0,[R0, #+0]
   \   00001B9E   0x2180             MOVS     R1,#+128
   \   00001BA0   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \   00001BA2   0x1840             ADDS     R0,R0,R1
   \   00001BA4   0x4995             LDR      R1,??man_ota_main_385+0xC
   \   00001BA6   0x6008             STR      R0,[R1, #+0]
   2490          				}
   2491          			}
   \                     ??man_ota_main_391: (+1)
   \   00001BA8   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_ota_main_389: (+1)
   \   00001BAA   0x4808             LDR      R0,??man_ota_main_369+0x8
   \   00001BAC   0x6800             LDR      R0,[R0, #+0]
   \   00001BAE   0x1E80             SUBS     R0,R0,#+2
   \   00001BB0   0x4284             CMP      R4,R0
   \   00001BB2   0xDBC1             BLT      ??man_ota_main_390
   2492          			// 次のシーケンスへ遷移
   2493          			man_ota_set_sequense(MAN_OTA_SEQ_CONFIG_FILE_GET);
   \   00001BB4   0x203C             MOVS     R0,#+60
   \   00001BB6   0x.... 0x....      BL       man_ota_set_sequense
   2494          			man_ota_work.timer = man_timer_get_1ms_count();
   \   00001BBA   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00001BBE   0x498E             LDR      R1,??man_ota_main_385+0x8
   \   00001BC0   0x6008             STR      R0,[R1, #+0]
   \   00001BC2   0xE087             B        ??man_ota_main_394
   \                     ??man_ota_main_369:
   \   00001BC4   0x........         DC32     man_ota_work+0xC0
   \   00001BC8   0x0000090B         DC32     0x90b
   \   00001BCC   0x........         DC32     man_ota_work+0x80
   \   00001BD0   0x........         DC32     man_ota_data_callback
   \   00001BD4   0x00000918         DC32     0x918
   \   00001BD8   0x........         DC32     man_ota_work+0x98
   \   00001BDC   0x........         DC32     man_ota_work+0xC4
   2495          		}
   2496          		else {
   2497          			if (man_ota_work.data_len > 0) {
   \                     ??man_ota_main_388: (+1)
   \   00001BE0   0x48B8             LDR      R0,??man_ota_main_392+0x8
   \   00001BE2   0x6800             LDR      R0,[R0, #+0]
   \   00001BE4   0x2801             CMP      R0,#+1
   \   00001BE6   0xDB1A             BLT      ??man_ota_main_395
   2498          				ret = man_flash_write_page(man_ota_work.file_info.addr_config + man_ota_work.file_info.size_config, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   00001BE8   0x48B6             LDR      R0,??man_ota_main_392+0x8
   \   00001BEA   0x6802             LDR      R2,[R0, #+0]
   \   00001BEC   0x481F             LDR      R0,??man_ota_main_375+0x4
   \   00001BEE   0x6801             LDR      R1,[R0, #+0]
   \   00001BF0   0x48B2             LDR      R0,??man_ota_main_392
   \   00001BF2   0x6800             LDR      R0,[R0, #+0]
   \   00001BF4   0x4B81             LDR      R3,??man_ota_main_385+0xC
   \   00001BF6   0x681B             LDR      R3,[R3, #+0]
   \   00001BF8   0x18C0             ADDS     R0,R0,R3
   \   00001BFA   0x.... 0x....      BL       man_flash_write_page
   2499          				if (ret < 0) {
   \   00001BFE   0x2800             CMP      R0,#+0
   \   00001C00   0xD503             BPL      ??man_ota_main_396
   2500          					// 外部FLASH書き込み異常
   2501          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001C02   0x2000             MOVS     R0,#+0
   \   00001C04   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001C06   0x49AE             LDR      R1,??man_ota_main_392+0x4
   \   00001C08   0x6588             STR      R0,[R1, #+88]
   2502          				}
   2503          				man_ota_work.file_info.size_config += man_ota_work.data_len;
   \                     ??man_ota_main_396: (+1)
   \   00001C0A   0x487C             LDR      R0,??man_ota_main_385+0xC
   \   00001C0C   0x6800             LDR      R0,[R0, #+0]
   \   00001C0E   0x49AD             LDR      R1,??man_ota_main_392+0x8
   \   00001C10   0x6809             LDR      R1,[R1, #+0]
   \   00001C12   0x1840             ADDS     R0,R0,R1
   \   00001C14   0x4979             LDR      R1,??man_ota_main_385+0xC
   \   00001C16   0x6008             STR      R0,[R1, #+0]
   2504          				man_ota_work.data_len = 0;
   \   00001C18   0x2000             MOVS     R0,#+0
   \   00001C1A   0x49AA             LDR      R1,??man_ota_main_392+0x8
   \   00001C1C   0x6008             STR      R0,[R1, #+0]
   2505          			}
   2506          
   2507          			// 外部FLASH書き込み異常時はチェックSUM異常扱いとする
   2508          			if (man_ota_work.exec_info.result != MAN_OTA_STATUS_NG) {
   \                     ??man_ota_main_395: (+1)
   \   00001C1E   0x48A8             LDR      R0,??man_ota_main_392+0x4
   \   00001C20   0x6D80             LDR      R0,[R0, #+88]
   \   00001C22   0x2100             MOVS     R1,#+0
   \   00001C24   0x43C9             MVNS     R1,R1            ;; #-1
   \   00001C26   0x4288             CMP      R0,R1
   \   00001C28   0xD00A             BEQ      ??man_ota_main_397
   2509          				// チェックSUM確認
   2510          				ret = man_ota_check_summ_data(man_ota_work.file_info.addr_config + man_ota_work.file_info.size_config-4, man_ota_work.summ);
   \   00001C2A   0x48C7             LDR      R0,??man_ota_main_398
   \   00001C2C   0x6801             LDR      R1,[R0, #+0]
   \   00001C2E   0x48A3             LDR      R0,??man_ota_main_392
   \   00001C30   0x6800             LDR      R0,[R0, #+0]
   \   00001C32   0x4A72             LDR      R2,??man_ota_main_385+0xC
   \   00001C34   0x6812             LDR      R2,[R2, #+0]
   \   00001C36   0x1880             ADDS     R0,R0,R2
   \   00001C38   0x1F00             SUBS     R0,R0,#+4
   \   00001C3A   0x.... 0x....      BL       man_ota_check_summ_data
   \   00001C3E   0xE001             B        ??man_ota_main_399
   2511          			}
   2512          			else {
   2513          				ret = -1;
   \                     ??man_ota_main_397: (+1)
   \   00001C40   0x2000             MOVS     R0,#+0
   \   00001C42   0x43C0             MVNS     R0,R0            ;; #-1
   2514          			}
   2515          
   2516          			// チェックSUM異常
   2517          			if(ret < 0){
   \                     ??man_ota_main_399: (+1)
   \   00001C44   0x2800             CMP      R0,#+0
   \   00001C46   0xD515             BPL      ??man_ota_main_400
   2518          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001C48   0x2000             MOVS     R0,#+0
   \   00001C4A   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001C4C   0x499C             LDR      R1,??man_ota_main_392+0x4
   \   00001C4E   0x6588             STR      R0,[R1, #+88]
   2519          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001C50   0x20A2             MOVS     R0,#+162
   \   00001C52   0x.... 0x....      BL       man_ota_set_sequense
   2520          				// エラー登録
   2521          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.size_config, 0);
   \   00001C56   0x4BBD             LDR      R3,??man_ota_main_398+0x4  ;; 0x9d9
   \   00001C58   0x2200             MOVS     R2,#+0
   \   00001C5A   0x4868             LDR      R0,??man_ota_main_385+0xC
   \   00001C5C   0x6801             LDR      R1,[R0, #+0]
   \   00001C5E   0x201B             MOVS     R0,#+27
   \   00001C60   0x.... 0x....      BL       man_error_set
   \   00001C64   0xE036             B        ??man_ota_main_394
   \   00001C66   0xBF00             Nop      
   \                     ??man_ota_main_375:
   \   00001C68   0x........         DC32     man_ota_work+0x84
   \   00001C6C   0x........         DC32     man_ota_work+0xBC
   \   00001C70   0x........         DC32     man_ota_work+0xA8
   2522          			}
   2523          			// チェックSUM正常
   2524          			else{
   2525          				//外部フラッシュ情報記憶
   2526          				man_ota_work.file_info.size_config -= 4;			//チェックSUM分の4Byteを引く
   \                     ??man_ota_main_400: (+1)
   \   00001C74   0x4861             LDR      R0,??man_ota_main_385+0xC
   \   00001C76   0x6800             LDR      R0,[R0, #+0]
   \   00001C78   0x1F00             SUBS     R0,R0,#+4
   \   00001C7A   0x4960             LDR      R1,??man_ota_main_385+0xC
   \   00001C7C   0x6008             STR      R0,[R1, #+0]
   2527          				
   2528          				
   2529          				// FIRMWARE FILE取得準備
   2530          				// case文の次のmemcpy()は暴走するため、順番を変える
   2531          				man_ota_work.exec_info.file_num = 1;
   \   00001C7E   0x2001             MOVS     R0,#+1
   \   00001C80   0x498F             LDR      R1,??man_ota_main_392+0x4
   \   00001C82   0x6388             STR      R0,[R1, #+56]
   2532          				man_ota_work.exec_info.start_file_num = man_ota_work.exec_info.file_num;
   \   00001C84   0x488E             LDR      R0,??man_ota_main_392+0x4
   \   00001C86   0x6B80             LDR      R0,[R0, #+56]
   \   00001C88   0x498D             LDR      R1,??man_ota_main_392+0x4
   \   00001C8A   0x6488             STR      R0,[R1, #+72]
   2533          				man_ota_work.exec_info.retry = 0;		// リトライカウンタの初期化
   \   00001C8C   0x2000             MOVS     R0,#+0
   \   00001C8E   0x498C             LDR      R1,??man_ota_main_392+0x4
   \   00001C90   0x6548             STR      R0,[R1, #+84]
   2534          				// FIRMWAREの準備
   2535          				memcpy(&man_ota_work.ftp_info.filename[0], &gpsota->remote[0], MAN_DATA_FILENAME_MAX+1);
   \   00001C92   0x2241             MOVS     R2,#+65
   \   00001C94   0x0021             MOVS     R1,R4
   \   00001C96   0x3189             ADDS     R1,R1,#+137
   \   00001C98   0x4DAD             LDR      R5,??man_ota_main_398+0x8
   \   00001C9A   0x0028             MOVS     R0,R5
   \   00001C9C   0x.... 0x....      BL       __aeabi_memcpy
   2536          				memcpy(&man_ota_work.ftp_info.fileonly[0], &gpsota->remote_only[0], MAN_DATA_FILENAME_MAX+1);
   \   00001CA0   0x2241             MOVS     R2,#+65
   \   00001CA2   0x0021             MOVS     R1,R4
   \   00001CA4   0x31CA             ADDS     R1,R1,#+202
   \   00001CA6   0x4CAB             LDR      R4,??man_ota_main_398+0xC
   \   00001CA8   0x0020             MOVS     R0,R4
   \   00001CAA   0x.... 0x....      BL       __aeabi_memcpy
   2537          				man_data_set_ftp_info(man_ota_work.ftp_info);
   \   00001CAE   0x49AA             LDR      R1,??man_ota_main_398+0x10
   \   00001CB0   0xB084             SUB      SP,SP,#+16
   \   00001CB2   0x4668             MOV      R0,SP
   \   00001CB4   0x22FF             MOVS     R2,#+255
   \   00001CB6   0x320C             ADDS     R2,R2,#+12       ;; #+267
   \   00001CB8   0x.... 0x....      BL       __aeabi_memcpy4
   \   00001CBC   0xBC0F             POP      {R0-R3}
   \   00001CBE   0x.... 0x....      BL       man_data_set_ftp_info
   2538          
   2539          				// FIRMWARE FILE GET開始
   2540          				man_ota_work.data_len = 0;
   \   00001CC2   0x2000             MOVS     R0,#+0
   \   00001CC4   0x497F             LDR      R1,??man_ota_main_392+0x8
   \   00001CC6   0x6008             STR      R0,[R1, #+0]
   2541          				man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_FILE_GET_REQ);
   \   00001CC8   0x203F             MOVS     R0,#+63
   \   00001CCA   0x.... 0x....      BL       man_ota_set_sequense
   2542          				man_ota_work.exec_info.counter = 0;
   \   00001CCE   0x2000             MOVS     R0,#+0
   \   00001CD0   0x497B             LDR      R1,??man_ota_main_392+0x4
   \   00001CD2   0x6108             STR      R0,[R1, #+16]
   2543          			}
   2544          		}
   2545          		break;
   \                     ??man_ota_main_394: (+1)
   \   00001CD4   0xF001 0xFB6F      BL       ??man_ota_main_274
   2546          
   2547          	case MAN_OTA_SEQ_CONFIG_FILE_GET_NG:
   2548          		// 中止処理へ
   2549          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_172: (+1)
   \   00001CD8   0x2000             MOVS     R0,#+0
   \   00001CDA   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001CDC   0x4978             LDR      R1,??man_ota_main_392+0x4
   \   00001CDE   0x6588             STR      R0,[R1, #+88]
   2550          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001CE0   0x20A2             MOVS     R0,#+162
   \   00001CE2   0x.... 0x....      BL       man_ota_set_sequense
   2551          		// エラー登録
   2552          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.counter, 0);
   \   00001CE6   0x4B9D             LDR      R3,??man_ota_main_398+0x14  ;; 0x9f8
   \   00001CE8   0x2200             MOVS     R2,#+0
   \   00001CEA   0x4875             LDR      R0,??man_ota_main_392+0x4
   \   00001CEC   0x6901             LDR      R1,[R0, #+16]
   \   00001CEE   0x201B             MOVS     R0,#+27
   \   00001CF0   0x.... 0x....      BL       man_error_set
   2553          		break;
   \   00001CF4   0xF001 0xFB5F      BL       ??man_ota_main_274
   2554          
   2555          
   2556          
   2557          	// ************************************
   2558          	// FIRMWARE FILE GET
   2559          	// ************************************
   2560          	case MAN_OTA_SEQ_FIRMWARE_FILE_GET_REQ:
   2561          		// HTTPの使用状況を確認する
   2562          		if (sts == 0) {
   \                     ??man_ota_main_173: (+1)
   \   00001CF8   0x2D00             CMP      R5,#+0
   \   00001CFA   0xD122             BNE      ??man_ota_main_401
   2563          			ret = man_http_file_get(man_ota_work.exec_info.file_num+man_ota_work.exec_info.file_offset, MAN_OTA_SEQ_FIRMWARE_FILE_GET, man_ota_data_callback);
   \   00001CFC   0x4A98             LDR      R2,??man_ota_main_398+0x18
   \   00001CFE   0x2140             MOVS     R1,#+64
   \   00001D00   0x486F             LDR      R0,??man_ota_main_392+0x4
   \   00001D02   0x6B80             LDR      R0,[R0, #+56]
   \   00001D04   0x4B6E             LDR      R3,??man_ota_main_392+0x4
   \   00001D06   0x6D1B             LDR      R3,[R3, #+80]
   \   00001D08   0x18C0             ADDS     R0,R0,R3
   \   00001D0A   0x.... 0x....      BL       man_http_file_get
   2564          			if (ret < 0) {
   \   00001D0E   0x2800             CMP      R0,#+0
   \   00001D10   0xD507             BPL      ??man_ota_main_402
   2565          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.sequense, 0);
   \   00001D12   0x4BDC             LDR      R3,??man_ota_main_403  ;; 0xa05
   \   00001D14   0x2200             MOVS     R2,#+0
   \   00001D16   0x486A             LDR      R0,??man_ota_main_392+0x4
   \   00001D18   0x7801             LDRB     R1,[R0, #+0]
   \   00001D1A   0x201B             MOVS     R0,#+27
   \   00001D1C   0x.... 0x....      BL       man_error_set
   \   00001D20   0xE00F             B        ??man_ota_main_401
   2566          			}
   2567          			else {
   2568          				man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_FILE_GET);
   \                     ??man_ota_main_402: (+1)
   \   00001D22   0x2040             MOVS     R0,#+64
   \   00001D24   0x.... 0x....      BL       man_ota_set_sequense
   2569          				man_ota_work.timer = man_timer_get_1ms_count();
   \   00001D28   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00001D2C   0x4932             LDR      R1,??man_ota_main_385+0x8
   \   00001D2E   0x6008             STR      R0,[R1, #+0]
   2570          
   2571          				// 一時情報の初期化
   2572          				man_ota_work.file_info.size_firmware = 0;
   \   00001D30   0x2000             MOVS     R0,#+0
   \   00001D32   0x49D5             LDR      R1,??man_ota_main_403+0x4
   \   00001D34   0x6008             STR      R0,[R1, #+0]
   2573          				man_ota_work.data_len = 0;
   \   00001D36   0x2000             MOVS     R0,#+0
   \   00001D38   0x4962             LDR      R1,??man_ota_main_392+0x8
   \   00001D3A   0x6008             STR      R0,[R1, #+0]
   2574          				man_ota_work.summ = 0;
   \   00001D3C   0x2000             MOVS     R0,#+0
   \   00001D3E   0x4982             LDR      R1,??man_ota_main_398
   \   00001D40   0x6008             STR      R0,[R1, #+0]
   2575          			}
   2576          		}
   2577          		break;
   \                     ??man_ota_main_401: (+1)
   \   00001D42   0xF001 0xFB38      BL       ??man_ota_main_274
   2578          	case MAN_OTA_SEQ_FIRMWARE_FILE_GET:
   2579          		// 5秒経過しても取得できない場合は、異常扱いとする
   2580          //		delay = man_timer_get_elapsed_time(man_ota_work.timer, man_timer_get_1ms_count());
   2581          //		if (delay > 5000) {
   2582          //			man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_FILE_GET_NG);
   2583          //		}
   2584          		break;
   \                     ??man_ota_main_174: (+1)
   \   00001D46   0xF001 0xFB36      BL       ??man_ota_main_274
   2585          	case MAN_OTA_SEQ_FIRMWARE_FILE_GET_OK:
   2586          		man_ota_work.exec_info.counter++;
   \                     ??man_ota_main_175: (+1)
   \   00001D4A   0x485D             LDR      R0,??man_ota_main_392+0x4
   \   00001D4C   0x6900             LDR      R0,[R0, #+16]
   \   00001D4E   0x1C40             ADDS     R0,R0,#+1
   \   00001D50   0x495B             LDR      R1,??man_ota_main_392+0x4
   \   00001D52   0x6108             STR      R0,[R1, #+16]
   2587          #ifdef GNSS_DEBUG_MAN_OTA_FTP 
   2588          			sprintf((char *)&man_ota_work.buff[0], "FILE GET(%d:%d):%d[ms]\n", man_ota_work.exec_info.counter, man_ota_work.resp_cmd.data_len-2, man_timer_get_1ms_count()-man_ota_work.timer);
   2589          			length = strlen((char const *)&man_ota_work.buff[0]);
   2590          			man_usb_data_send(&man_ota_work.buff[0], length);
   2591          #endif
   2592          
   2593          		if (man_ota_work.resp_cmd.data_len != 0) {
   \   00001D54   0x48DB             LDR      R0,??man_ota_main_404
   \   00001D56   0x6800             LDR      R0,[R0, #+0]
   \   00001D58   0x2800             CMP      R0,#+0
   \   00001D5A   0xD051             BEQ      ??man_ota_main_405
   2594          			// 外部FLASHにman_ota_work.resp_cmd.dataを書き込む
   2595          			// data部にはCR+LFが含まれているためman_ota_work.resp_cmd.data_len-2バイトをコピーする
   2596          			for (i=0; i<man_ota_work.resp_cmd.data_len-2; i++) {
   \   00001D5C   0x2400             MOVS     R4,#+0
   \   00001D5E   0xE03A             B        ??man_ota_main_406
   \                     ??man_ota_main_384:
   \   00001D60   0x00000964         DC32     0x964
   2597          				man_ota_work.data_buff[man_ota_work.data_len] = man_ota_work.resp_cmd.data[i];
   \                     ??man_ota_main_407: (+1)
   \   00001D64   0x48D8             LDR      R0,??man_ota_main_404+0x4
   \   00001D66   0x6800             LDR      R0,[R0, #+0]
   \   00001D68   0x5D00             LDRB     R0,[R0, R4]
   \   00001D6A   0x49D8             LDR      R1,??man_ota_main_404+0x8
   \   00001D6C   0x6809             LDR      R1,[R1, #+0]
   \   00001D6E   0x4A55             LDR      R2,??man_ota_main_392+0x8
   \   00001D70   0x6812             LDR      R2,[R2, #+0]
   \   00001D72   0x5488             STRB     R0,[R1, R2]
   2598          				man_ota_work.summ += man_ota_work.resp_cmd.data[i];
   \   00001D74   0x4874             LDR      R0,??man_ota_main_398
   \   00001D76   0x6800             LDR      R0,[R0, #+0]
   \   00001D78   0x49D3             LDR      R1,??man_ota_main_404+0x4
   \   00001D7A   0x6809             LDR      R1,[R1, #+0]
   \   00001D7C   0x5D09             LDRB     R1,[R1, R4]
   \   00001D7E   0x1840             ADDS     R0,R0,R1
   \   00001D80   0x4971             LDR      R1,??man_ota_main_398
   \   00001D82   0x6008             STR      R0,[R1, #+0]
   2599          				man_ota_work.data_len++;
   \   00001D84   0x484F             LDR      R0,??man_ota_main_392+0x8
   \   00001D86   0x6800             LDR      R0,[R0, #+0]
   \   00001D88   0x1C40             ADDS     R0,R0,#+1
   \   00001D8A   0x494E             LDR      R1,??man_ota_main_392+0x8
   \   00001D8C   0x6008             STR      R0,[R1, #+0]
   2600          
   2601          				// PAGEサイズを超えるとFLASHに書き込む
   2602          				if (man_ota_work.data_len >= MAN_FLASH_PAGE_SIZE) {
   \   00001D8E   0x484D             LDR      R0,??man_ota_main_392+0x8
   \   00001D90   0x6800             LDR      R0,[R0, #+0]
   \   00001D92   0x28FF             CMP      R0,#+255
   \   00001D94   0xDD1E             BLE      ??man_ota_main_408
   2603          					ret = man_flash_write_page(man_ota_work.file_info.addr_firmware + man_ota_work.file_info.size_firmware, &man_ota_work.data_buff[0], MAN_FLASH_PAGE_SIZE);
   \   00001D96   0x2280             MOVS     R2,#+128
   \   00001D98   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   00001D9A   0x48CC             LDR      R0,??man_ota_main_404+0x8
   \   00001D9C   0x6801             LDR      R1,[R0, #+0]
   \   00001D9E   0x48CC             LDR      R0,??man_ota_main_404+0xC
   \   00001DA0   0x6800             LDR      R0,[R0, #+0]
   \   00001DA2   0x4BB9             LDR      R3,??man_ota_main_403+0x4
   \   00001DA4   0x681B             LDR      R3,[R3, #+0]
   \   00001DA6   0x18C0             ADDS     R0,R0,R3
   \   00001DA8   0x.... 0x....      BL       man_flash_write_page
   2604          					if (ret < 0) {
   \   00001DAC   0x2800             CMP      R0,#+0
   \   00001DAE   0xD503             BPL      ??man_ota_main_409
   2605          						// 外部FLASH書き込み異常
   2606          						man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001DB0   0x2000             MOVS     R0,#+0
   \   00001DB2   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001DB4   0x4942             LDR      R1,??man_ota_main_392+0x4
   \   00001DB6   0x6588             STR      R0,[R1, #+88]
   2607          					}
   2608          					man_ota_work.data_len -= MAN_FLASH_PAGE_SIZE;
   \                     ??man_ota_main_409: (+1)
   \   00001DB8   0x4842             LDR      R0,??man_ota_main_392+0x8
   \   00001DBA   0x6800             LDR      R0,[R0, #+0]
   \   00001DBC   0x21FF             MOVS     R1,#+255
   \   00001DBE   0x43C9             MVNS     R1,R1            ;; #-256
   \   00001DC0   0x1840             ADDS     R0,R0,R1
   \   00001DC2   0x4940             LDR      R1,??man_ota_main_392+0x8
   \   00001DC4   0x6008             STR      R0,[R1, #+0]
   2609          					man_ota_work.file_info.size_firmware += MAN_FLASH_PAGE_SIZE;
   \   00001DC6   0x48B0             LDR      R0,??man_ota_main_403+0x4
   \   00001DC8   0x6800             LDR      R0,[R0, #+0]
   \   00001DCA   0x2180             MOVS     R1,#+128
   \   00001DCC   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \   00001DCE   0x1840             ADDS     R0,R0,R1
   \   00001DD0   0x49AD             LDR      R1,??man_ota_main_403+0x4
   \   00001DD2   0x6008             STR      R0,[R1, #+0]
   2610          				}
   2611          			}
   \                     ??man_ota_main_408: (+1)
   \   00001DD4   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_ota_main_406: (+1)
   \   00001DD6   0x48BB             LDR      R0,??man_ota_main_404
   \   00001DD8   0x6800             LDR      R0,[R0, #+0]
   \   00001DDA   0x1E80             SUBS     R0,R0,#+2
   \   00001DDC   0x4284             CMP      R4,R0
   \   00001DDE   0xDBC1             BLT      ??man_ota_main_407
   2612          			// 次のシーケンスへ遷移
   2613          			man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_FILE_GET);
   \   00001DE0   0x2040             MOVS     R0,#+64
   \   00001DE2   0x.... 0x....      BL       man_ota_set_sequense
   2614          			man_ota_work.timer = man_timer_get_1ms_count();
   \   00001DE6   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00001DEA   0x4903             LDR      R1,??man_ota_main_385+0x8
   \   00001DEC   0x6008             STR      R0,[R1, #+0]
   \   00001DEE   0xE052             B        ??man_ota_main_410
   \                     ??man_ota_main_385:
   \   00001DF0   0x00000982         DC32     0x982
   \   00001DF4   0x0000098D         DC32     0x98d
   \   00001DF8   0x........         DC32     man_ota_work+0x2C0
   \   00001DFC   0x........         DC32     man_ota_work+0x9C
   2615          		}
   2616          		else {
   2617          			// 残りをFLASHに書き込む
   2618          			if (man_ota_work.data_len > 0) {
   \                     ??man_ota_main_405: (+1)
   \   00001E00   0x4830             LDR      R0,??man_ota_main_392+0x8
   \   00001E02   0x6800             LDR      R0,[R0, #+0]
   \   00001E04   0x2801             CMP      R0,#+1
   \   00001E06   0xDB1A             BLT      ??man_ota_main_411
   2619          				ret = man_flash_write_page(man_ota_work.file_info.addr_firmware + man_ota_work.file_info.size_firmware, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   00001E08   0x482E             LDR      R0,??man_ota_main_392+0x8
   \   00001E0A   0x6802             LDR      R2,[R0, #+0]
   \   00001E0C   0x48AF             LDR      R0,??man_ota_main_404+0x8
   \   00001E0E   0x6801             LDR      R1,[R0, #+0]
   \   00001E10   0x48AF             LDR      R0,??man_ota_main_404+0xC
   \   00001E12   0x6800             LDR      R0,[R0, #+0]
   \   00001E14   0x4B9C             LDR      R3,??man_ota_main_403+0x4
   \   00001E16   0x681B             LDR      R3,[R3, #+0]
   \   00001E18   0x18C0             ADDS     R0,R0,R3
   \   00001E1A   0x.... 0x....      BL       man_flash_write_page
   2620          				if (ret < 0) {
   \   00001E1E   0x2800             CMP      R0,#+0
   \   00001E20   0xD503             BPL      ??man_ota_main_412
   2621          					// 外部FLASH書き込み異常
   2622          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001E22   0x2000             MOVS     R0,#+0
   \   00001E24   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001E26   0x4926             LDR      R1,??man_ota_main_392+0x4
   \   00001E28   0x6588             STR      R0,[R1, #+88]
   2623          				}
   2624          				man_ota_work.file_info.size_firmware += man_ota_work.data_len;
   \                     ??man_ota_main_412: (+1)
   \   00001E2A   0x4897             LDR      R0,??man_ota_main_403+0x4
   \   00001E2C   0x6800             LDR      R0,[R0, #+0]
   \   00001E2E   0x4925             LDR      R1,??man_ota_main_392+0x8
   \   00001E30   0x6809             LDR      R1,[R1, #+0]
   \   00001E32   0x1840             ADDS     R0,R0,R1
   \   00001E34   0x4994             LDR      R1,??man_ota_main_403+0x4
   \   00001E36   0x6008             STR      R0,[R1, #+0]
   2625          				man_ota_work.data_len = 0;
   \   00001E38   0x2000             MOVS     R0,#+0
   \   00001E3A   0x4922             LDR      R1,??man_ota_main_392+0x8
   \   00001E3C   0x6008             STR      R0,[R1, #+0]
   2626          			}
   2627          
   2628          			// 外部FLASH書き込み異常時はチェックSUM異常扱いとする
   2629          			if (man_ota_work.exec_info.result != MAN_OTA_STATUS_NG) {
   \                     ??man_ota_main_411: (+1)
   \   00001E3E   0x4820             LDR      R0,??man_ota_main_392+0x4
   \   00001E40   0x6D80             LDR      R0,[R0, #+88]
   \   00001E42   0x2100             MOVS     R1,#+0
   \   00001E44   0x43C9             MVNS     R1,R1            ;; #-1
   \   00001E46   0x4288             CMP      R0,R1
   \   00001E48   0xD00A             BEQ      ??man_ota_main_413
   2630          				// チェックSUM確認
   2631          				ret = man_ota_check_summ_data(man_ota_work.file_info.addr_firmware + man_ota_work.file_info.size_firmware-4, man_ota_work.summ);
   \   00001E4A   0x483F             LDR      R0,??man_ota_main_398
   \   00001E4C   0x6801             LDR      R1,[R0, #+0]
   \   00001E4E   0x48A0             LDR      R0,??man_ota_main_404+0xC
   \   00001E50   0x6800             LDR      R0,[R0, #+0]
   \   00001E52   0x4A8D             LDR      R2,??man_ota_main_403+0x4
   \   00001E54   0x6812             LDR      R2,[R2, #+0]
   \   00001E56   0x1880             ADDS     R0,R0,R2
   \   00001E58   0x1F00             SUBS     R0,R0,#+4
   \   00001E5A   0x.... 0x....      BL       man_ota_check_summ_data
   \   00001E5E   0xE001             B        ??man_ota_main_414
   2632          			}
   2633          			else {
   2634          				ret = -1;
   \                     ??man_ota_main_413: (+1)
   \   00001E60   0x2000             MOVS     R0,#+0
   \   00001E62   0x43C0             MVNS     R0,R0            ;; #-1
   2635          			}
   2636          
   2637          			// チェックSUM異常
   2638          			if(ret < 0){
   \                     ??man_ota_main_414: (+1)
   \   00001E64   0x2800             CMP      R0,#+0
   \   00001E66   0xD50E             BPL      ??man_ota_main_415
   2639          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00001E68   0x2000             MOVS     R0,#+0
   \   00001E6A   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001E6C   0x4914             LDR      R1,??man_ota_main_392+0x4
   \   00001E6E   0x6588             STR      R0,[R1, #+88]
   2640          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001E70   0x20A2             MOVS     R0,#+162
   \   00001E72   0x.... 0x....      BL       man_ota_set_sequense
   2641          				// エラー登録
   2642          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.size_firmware, 0);
   \   00001E76   0x4BDD             LDR      R3,??man_ota_main_416  ;; 0xa52
   \   00001E78   0x2200             MOVS     R2,#+0
   \   00001E7A   0x4883             LDR      R0,??man_ota_main_403+0x4
   \   00001E7C   0x6801             LDR      R1,[R0, #+0]
   \   00001E7E   0x201B             MOVS     R0,#+27
   \   00001E80   0x.... 0x....      BL       man_error_set
   \   00001E84   0xE007             B        ??man_ota_main_410
   2643          			}
   2644          			// チェックSUM正常
   2645          			else {
   2646          				// GPSへのFW書き込みへ遷移する
   2647          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_SET_REQ);
   \                     ??man_ota_main_415: (+1)
   \   00001E86   0x2043             MOVS     R0,#+67
   \   00001E88   0x.... 0x....      BL       man_ota_set_sequense
   2648          				//外部フラッシュ情報記憶
   2649          				man_ota_work.file_info.size_firmware -= 4;			// チェックSUM分の4Byteを引く
   \   00001E8C   0x487E             LDR      R0,??man_ota_main_403+0x4
   \   00001E8E   0x6800             LDR      R0,[R0, #+0]
   \   00001E90   0x1F00             SUBS     R0,R0,#+4
   \   00001E92   0x497D             LDR      R1,??man_ota_main_403+0x4
   \   00001E94   0x6008             STR      R0,[R1, #+0]
   2650          			}
   2651          		}
   2652          		break;
   \                     ??man_ota_main_410: (+1)
   \   00001E96   0xF001 0xFA8E      BL       ??man_ota_main_274
   2653          
   2654          	case MAN_OTA_SEQ_FIRMWARE_FILE_GET_NG:
   2655          		// 中止処理へ
   2656          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_176: (+1)
   \   00001E9A   0x2000             MOVS     R0,#+0
   \   00001E9C   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001E9E   0x4908             LDR      R1,??man_ota_main_392+0x4
   \   00001EA0   0x6588             STR      R0,[R1, #+88]
   2657          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001EA2   0x20A2             MOVS     R0,#+162
   \   00001EA4   0x.... 0x....      BL       man_ota_set_sequense
   2658          		// エラー登録
   2659          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.counter, 0);
   \   00001EA8   0x4BD1             LDR      R3,??man_ota_main_416+0x4  ;; 0xa63
   \   00001EAA   0x2200             MOVS     R2,#+0
   \   00001EAC   0x4804             LDR      R0,??man_ota_main_392+0x4
   \   00001EAE   0x6901             LDR      R1,[R0, #+16]
   \   00001EB0   0x201B             MOVS     R0,#+27
   \   00001EB2   0x.... 0x....      BL       man_error_set
   2660          		break;
   \   00001EB6   0xF001 0xFA7E      BL       ??man_ota_main_274
   \   00001EBA   0xBF00             Nop      
   \                     ??man_ota_main_392:
   \   00001EBC   0x........         DC32     man_ota_work+0xAC
   \   00001EC0   0x........         DC32     man_ota_work
   \   00001EC4   0x........         DC32     man_ota_work+0xC0
   2661          
   2662          
   2663          
   2664          	// ************************************
   2665          	// GPS ERASE & GPS FW SET
   2666          	// ************************************		
   2667          	case MAN_OTA_SEQ_GPS_OTA_SET_REQ:		//GPS FW 書き込み要求
   2668          		// GPSが異常状態の場合はリセット処理から実行する
   2669          		if (man_gps_get_state() == MAN_GPS_NOTI_OPEN_ERROR) {
   \                     ??man_ota_main_177: (+1)
   \   00001EC8   0x.... 0x....      BL       man_gps_get_state
   \   00001ECC   0x2807             CMP      R0,#+7
   \   00001ECE   0xD111             BNE      ??man_ota_main_417
   2670          			if (man_ota_work.request.forced_flag == 1) {
   \   00001ED0   0x48C8             LDR      R0,??man_ota_main_416+0x8
   \   00001ED2   0x6F00             LDR      R0,[R0, #+112]
   \   00001ED4   0x2801             CMP      R0,#+1
   \   00001ED6   0xD106             BNE      ??man_ota_main_418
   2671          				// 強制復帰処理へ
   2672          				man_ota_work.exec_info.retry = 0;
   \   00001ED8   0x2000             MOVS     R0,#+0
   \   00001EDA   0x49C6             LDR      R1,??man_ota_main_416+0x8
   \   00001EDC   0x6548             STR      R0,[R1, #+84]
   2673          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_RETRY_REQ);
   \   00001EDE   0x207A             MOVS     R0,#+122
   \   00001EE0   0x.... 0x....      BL       man_ota_set_sequense
   \   00001EE4   0xE00D             B        ??man_ota_main_419
   2674          			}
   2675          			else {
   2676          				// 復帰処理へ
   2677          				man_ota_work.exec_info.retry = 0;
   \                     ??man_ota_main_418: (+1)
   \   00001EE6   0x2000             MOVS     R0,#+0
   \   00001EE8   0x49C2             LDR      R1,??man_ota_main_416+0x8
   \   00001EEA   0x6548             STR      R0,[R1, #+84]
   2678          				man_ota_set_sequense(MAN_OTA_SEQ_GPS_RETRY_REQ);
   \   00001EEC   0x2047             MOVS     R0,#+71
   \   00001EEE   0x.... 0x....      BL       man_ota_set_sequense
   \   00001EF2   0xE006             B        ??man_ota_main_419
   2679          			}
   2680          		}
   2681          		else {
   2682          			// GPS ERASE開始
   2683          			man_gps_req_erase(MAN_OTA_SEQ_GPS_OTA_SET, man_ota_req_callback);
   \                     ??man_ota_main_417: (+1)
   \   00001EF4   0x49DF             LDR      R1,??man_ota_main_420
   \   00001EF6   0x2044             MOVS     R0,#+68
   \   00001EF8   0x.... 0x....      BL       man_gps_req_erase
   2684          			man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_SET);
   \   00001EFC   0x2044             MOVS     R0,#+68
   \   00001EFE   0x.... 0x....      BL       man_ota_set_sequense
   2685          		}
   2686          		break;
   \                     ??man_ota_main_419: (+1)
   \   00001F02   0xF001 0xFA58      BL       ??man_ota_main_274
   2687          		
   2688          	case MAN_OTA_SEQ_GPS_OTA_SET:			//GPS FW 書き込み開始
   2689          		break;
   \                     ??man_ota_main_178: (+1)
   \   00001F06   0xF001 0xFA56      BL       ??man_ota_main_274
   2690          		
   2691          	case MAN_OTA_SEQ_GPS_OTA_SET_OK:		//GPS FW 書き込み開始(正常)
   2692          		// UPDATER FW SET処理へ
   2693          		man_ota_set_sequense(MAN_OTA_SEQ_UDL_SET_REQ);
   \                     ??man_ota_main_179: (+1)
   \   00001F0A   0x204B             MOVS     R0,#+75
   \   00001F0C   0x.... 0x....      BL       man_ota_set_sequense
   2694          		break;
   \   00001F10   0xF001 0xFA51      BL       ??man_ota_main_274
   2695          
   2696          	case MAN_OTA_SEQ_GPS_OTA_SET_NG:		//GPS FW 書き込み開始(異常)
   2697          		// 中止処理へ
   2698          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_180: (+1)
   \   00001F14   0x2000             MOVS     R0,#+0
   \   00001F16   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001F18   0x49B6             LDR      R1,??man_ota_main_416+0x8
   \   00001F1A   0x6588             STR      R0,[R1, #+88]
   2699          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001F1C   0x20A2             MOVS     R0,#+162
   \   00001F1E   0x.... 0x....      BL       man_ota_set_sequense
   2700          		
   2701          		// エラー登録
   2702          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00001F22   0x4BD5             LDR      R3,??man_ota_main_420+0x4  ;; 0xa8e
   \   00001F24   0x4867             LDR      R0,??man_ota_main_404
   \   00001F26   0x6802             LDR      R2,[R0, #+0]
   \   00001F28   0x48D4             LDR      R0,??man_ota_main_420+0x8
   \   00001F2A   0x6801             LDR      R1,[R0, #+0]
   \   00001F2C   0x201B             MOVS     R0,#+27
   \   00001F2E   0x.... 0x....      BL       man_error_set
   2703          		break;
   \   00001F32   0xF001 0xFA40      BL       ??man_ota_main_274
   2704          
   2705          	// GPS OTAリトライ開始
   2706          	// GPSリセット後にupdater注入から再開
   2707          	case MAN_OTA_SEQ_GPS_RETRY_REQ:
   2708          		man_gps_req_reset(MAN_OTA_SEQ_GPS_RETRY, man_ota_req_callback);
   \                     ??man_ota_main_181: (+1)
   \   00001F36   0x49CF             LDR      R1,??man_ota_main_420
   \   00001F38   0x2048             MOVS     R0,#+72
   \   00001F3A   0x.... 0x....      BL       man_gps_req_reset
   2709          		man_ota_set_sequense(MAN_OTA_SEQ_GPS_RETRY);
   \   00001F3E   0x2048             MOVS     R0,#+72
   \   00001F40   0x.... 0x....      BL       man_ota_set_sequense
   2710          		break;
   \   00001F44   0xF001 0xFA37      BL       ??man_ota_main_274
   \                     ??man_ota_main_398:
   \   00001F48   0x........         DC32     man_ota_work+0xC4
   \   00001F4C   0x000009D9         DC32     0x9d9
   \   00001F50   0x........         DC32     man_ota_work+0x151
   \   00001F54   0x........         DC32     man_ota_work+0x192
   \   00001F58   0x........         DC32     man_ota_work+0xC8
   \   00001F5C   0x000009F8         DC32     0x9f8
   \   00001F60   0x........         DC32     man_ota_data_callback
   2711          	case MAN_OTA_SEQ_GPS_RETRY:
   2712          		break;
   \                     ??man_ota_main_182: (+1)
   \   00001F64   0xF001 0xFA27      BL       ??man_ota_main_274
   2713          	case MAN_OTA_SEQ_GPS_RETRY_OK:
   2714          		// updater file setから再開
   2715          		man_ota_work.exec_info.file_num = 1;
   \                     ??man_ota_main_183: (+1)
   \   00001F68   0x2001             MOVS     R0,#+1
   \   00001F6A   0x49A2             LDR      R1,??man_ota_main_416+0x8
   \   00001F6C   0x6388             STR      R0,[R1, #+56]
   2716          		man_ota_work.data_len = 0;
   \   00001F6E   0x2000             MOVS     R0,#+0
   \   00001F70   0x49C2             LDR      R1,??man_ota_main_420+0x8
   \   00001F72   0x6008             STR      R0,[R1, #+0]
   2717          		man_ota_set_sequense(MAN_OTA_SEQ_UDL_SET_REQ);
   \   00001F74   0x204B             MOVS     R0,#+75
   \   00001F76   0x.... 0x....      BL       man_ota_set_sequense
   2718          		break;
   \   00001F7A   0xF001 0xFA1C      BL       ??man_ota_main_274
   2719          	case MAN_OTA_SEQ_GPS_RETRY_NG:
   2720          		if (man_ota_work.exec_info.retry <= MAN_OTA_GPS_RETRY_MAX) {
   \                     ??man_ota_main_184: (+1)
   \   00001F7E   0x489D             LDR      R0,??man_ota_main_416+0x8
   \   00001F80   0x6D40             LDR      R0,[R0, #+84]
   \   00001F82   0x2805             CMP      R0,#+5
   \   00001F84   0xDA08             BGE      ??man_ota_main_421
   2721          			man_ota_set_sequense(MAN_OTA_SEQ_GPS_RETRY_REQ);
   \   00001F86   0x2047             MOVS     R0,#+71
   \   00001F88   0x.... 0x....      BL       man_ota_set_sequense
   2722          			//リトライカウンタ増加
   2723          			man_ota_work.exec_info.retry ++;
   \   00001F8C   0x4899             LDR      R0,??man_ota_main_416+0x8
   \   00001F8E   0x6D40             LDR      R0,[R0, #+84]
   \   00001F90   0x1C40             ADDS     R0,R0,#+1
   \   00001F92   0x4998             LDR      R1,??man_ota_main_416+0x8
   \   00001F94   0x6548             STR      R0,[R1, #+84]
   \   00001F96   0xE00E             B        ??man_ota_main_422
   2724          		}
   2725          		else {
   2726          			// 中止処理へ
   2727          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_421: (+1)
   \   00001F98   0x2000             MOVS     R0,#+0
   \   00001F9A   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001F9C   0x4995             LDR      R1,??man_ota_main_416+0x8
   \   00001F9E   0x6588             STR      R0,[R1, #+88]
   2728          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001FA0   0x20A2             MOVS     R0,#+162
   \   00001FA2   0x.... 0x....      BL       man_ota_set_sequense
   2729          			
   2730          			// エラー登録
   2731          			man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00001FA6   0x4BCF             LDR      R3,??man_ota_main_423  ;; 0xaab
   \   00001FA8   0x4846             LDR      R0,??man_ota_main_404
   \   00001FAA   0x6802             LDR      R2,[R0, #+0]
   \   00001FAC   0x48B3             LDR      R0,??man_ota_main_420+0x8
   \   00001FAE   0x6801             LDR      R1,[R0, #+0]
   \   00001FB0   0x201B             MOVS     R0,#+27
   \   00001FB2   0x.... 0x....      BL       man_error_set
   2732          		}
   2733          		break;
   \                     ??man_ota_main_422: (+1)
   \   00001FB6   0xF001 0xF9FE      BL       ??man_ota_main_274
   2734          
   2735          	// UDLコマンド送信
   2736          	case MAN_OTA_SEQ_UDL_SET_REQ:			// GPS UDLコマンド送信 要求
   2737          		// UDLコマンド送信開始
   2738          		man_gps_req_udl(MAN_OTA_SEQ_UDL_SET, man_ota_req_callback);
   \                     ??man_ota_main_185: (+1)
   \   00001FBA   0x49AE             LDR      R1,??man_ota_main_420
   \   00001FBC   0x204C             MOVS     R0,#+76
   \   00001FBE   0x.... 0x....      BL       man_gps_req_udl
   2739          		man_ota_set_sequense(MAN_OTA_SEQ_UDL_SET);
   \   00001FC2   0x204C             MOVS     R0,#+76
   \   00001FC4   0x.... 0x....      BL       man_ota_set_sequense
   2740          		man_ota_work.exec_info.file_size = 0;
   \   00001FC8   0x2000             MOVS     R0,#+0
   \   00001FCA   0x498A             LDR      R1,??man_ota_main_416+0x8
   \   00001FCC   0x6408             STR      R0,[R1, #+64]
   2741          		man_ota_work.exec_info.counter = 0;
   \   00001FCE   0x2000             MOVS     R0,#+0
   \   00001FD0   0x4988             LDR      R1,??man_ota_main_416+0x8
   \   00001FD2   0x6108             STR      R0,[R1, #+16]
   2742          		break;
   \   00001FD4   0xF001 0xF9EF      BL       ??man_ota_main_274
   2743          	case MAN_OTA_SEQ_UDL_SET:				// GPS UDLコマンド送信中
   2744          		break;
   \                     ??man_ota_main_186: (+1)
   \   00001FD8   0xF001 0xF9ED      BL       ??man_ota_main_274
   2745          	case MAN_OTA_SEQ_UDL_SET_OK:			// GPS UDLコマンド送信完了(成功)
   2746          		// updater PACKETデータ取得
   2747          		man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_SET);
   \                     ??man_ota_main_187: (+1)
   \   00001FDC   0x204F             MOVS     R0,#+79
   \   00001FDE   0x.... 0x....      BL       man_ota_set_sequense
   2748          		break;
   \   00001FE2   0xF001 0xF9E8      BL       ??man_ota_main_274
   2749          	case MAN_OTA_SEQ_UDL_SET_NG:			// GPS UDLコマンド送信完了(失敗)
   2750          		// 中止処理へ
   2751          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_188: (+1)
   \   00001FE6   0x2000             MOVS     R0,#+0
   \   00001FE8   0x43C0             MVNS     R0,R0            ;; #-1
   \   00001FEA   0x4982             LDR      R1,??man_ota_main_416+0x8
   \   00001FEC   0x6588             STR      R0,[R1, #+88]
   2752          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00001FEE   0x20A2             MOVS     R0,#+162
   \   00001FF0   0x.... 0x....      BL       man_ota_set_sequense
   2753          		// エラー登録
   2754          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00001FF4   0x4BBC             LDR      R3,??man_ota_main_423+0x4  ;; 0xac2
   \   00001FF6   0x4833             LDR      R0,??man_ota_main_404
   \   00001FF8   0x6802             LDR      R2,[R0, #+0]
   \   00001FFA   0x48A0             LDR      R0,??man_ota_main_420+0x8
   \   00001FFC   0x6801             LDR      R1,[R0, #+0]
   \   00001FFE   0x201B             MOVS     R0,#+27
   \   00002000   0x.... 0x....      BL       man_error_set
   2755          		break;
   \   00002004   0xF001 0xF9D7      BL       ??man_ota_main_274
   2756          
   2757          
   2758          	// updater PACKETデータ取得
   2759          	case MAN_OTA_SEQ_UDLPKT_SET:
   2760          		// パケット(32KB) + 終了パケット(14B)
   2761          		//    0 -7 :: 4096
   2762          		//    8    :: 14
   2763          		if ( (man_ota_work.exec_info.counter % 9) == 8 ) {
   \                     ??man_ota_main_189: (+1)
   \   00002008   0x487A             LDR      R0,??man_ota_main_416+0x8
   \   0000200A   0x6900             LDR      R0,[R0, #+16]
   \   0000200C   0x2109             MOVS     R1,#+9
   \   0000200E   0x.... 0x....      BL       __aeabi_idivmod
   \   00002012   0x2908             CMP      R1,#+8
   \   00002014   0xD103             BNE      ??man_ota_main_424
   2764          			man_ota_work.exec_info.snd_max_size = 14;
   \   00002016   0x200E             MOVS     R0,#+14
   \   00002018   0x4976             LDR      R1,??man_ota_main_416+0x8
   \   0000201A   0x60C8             STR      R0,[R1, #+12]
   \   0000201C   0xE003             B        ??man_ota_main_425
   2765          		}
   2766          		else {
   2767          			man_ota_work.exec_info.snd_max_size = 4096;
   \                     ??man_ota_main_424: (+1)
   \   0000201E   0x2080             MOVS     R0,#+128
   \   00002020   0x0140             LSLS     R0,R0,#+5        ;; #+4096
   \   00002022   0x4974             LDR      R1,??man_ota_main_416+0x8
   \   00002024   0x60C8             STR      R0,[R1, #+12]
   2768          		}
   2769          		man_ota_work.exec_info.counter++;
   \                     ??man_ota_main_425: (+1)
   \   00002026   0x4873             LDR      R0,??man_ota_main_416+0x8
   \   00002028   0x6900             LDR      R0,[R0, #+16]
   \   0000202A   0x1C40             ADDS     R0,R0,#+1
   \   0000202C   0x4971             LDR      R1,??man_ota_main_416+0x8
   \   0000202E   0x6108             STR      R0,[R1, #+16]
   2770          
   2771          		if ( (man_ota_work.file_info.size_update - man_ota_work.exec_info.file_size) >= man_ota_work.exec_info.snd_max_size ) {
   \   00002030   0x48D8             LDR      R0,??man_ota_main_426
   \   00002032   0x6800             LDR      R0,[R0, #+0]
   \   00002034   0x496F             LDR      R1,??man_ota_main_416+0x8
   \   00002036   0x6C09             LDR      R1,[R1, #+64]
   \   00002038   0x1A40             SUBS     R0,R0,R1
   \   0000203A   0x496E             LDR      R1,??man_ota_main_416+0x8
   \   0000203C   0x68C9             LDR      R1,[R1, #+12]
   \   0000203E   0x4288             CMP      R0,R1
   \   00002040   0xDB28             BLT      ??man_ota_main_427
   2772          			// updater 書き込みファイル取得
   2773          			man_ota_work.data_len = man_ota_work.exec_info.snd_max_size;
   \   00002042   0x486C             LDR      R0,??man_ota_main_416+0x8
   \   00002044   0x68C0             LDR      R0,[R0, #+12]
   \   00002046   0x498D             LDR      R1,??man_ota_main_420+0x8
   \   00002048   0x6008             STR      R0,[R1, #+0]
   2774          			man_flash_read(man_ota_work.file_info.addr_update + man_ota_work.exec_info.file_size, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   0000204A   0x488C             LDR      R0,??man_ota_main_420+0x8
   \   0000204C   0x6802             LDR      R2,[R0, #+0]
   \   0000204E   0x481F             LDR      R0,??man_ota_main_404+0x8
   \   00002050   0x6801             LDR      R1,[R0, #+0]
   \   00002052   0x48D1             LDR      R0,??man_ota_main_426+0x4
   \   00002054   0x6800             LDR      R0,[R0, #+0]
   \   00002056   0x4B67             LDR      R3,??man_ota_main_416+0x8
   \   00002058   0x6C1B             LDR      R3,[R3, #+64]
   \   0000205A   0x18C0             ADDS     R0,R0,R3
   \   0000205C   0x.... 0x....      BL       man_flash_read
   2775          			// 32K+14バイト時は応答を待つ
   2776          			// データの最後も応答を待つ
   2777          			if ( (man_ota_work.exec_info.snd_max_size == 14) || (man_ota_work.file_info.size_update <= (man_ota_work.exec_info.file_size+man_ota_work.data_len)) ) {
   \   00002060   0x4864             LDR      R0,??man_ota_main_416+0x8
   \   00002062   0x68C0             LDR      R0,[R0, #+12]
   \   00002064   0x280E             CMP      R0,#+14
   \   00002066   0xD008             BEQ      ??man_ota_main_428
   \   00002068   0x4862             LDR      R0,??man_ota_main_416+0x8
   \   0000206A   0x6C00             LDR      R0,[R0, #+64]
   \   0000206C   0x4983             LDR      R1,??man_ota_main_420+0x8
   \   0000206E   0x6809             LDR      R1,[R1, #+0]
   \   00002070   0x1840             ADDS     R0,R0,R1
   \   00002072   0x49C8             LDR      R1,??man_ota_main_426
   \   00002074   0x6809             LDR      R1,[R1, #+0]
   \   00002076   0x4288             CMP      R0,R1
   \   00002078   0xDB08             BLT      ??man_ota_main_429
   2778          				// 応答待ち
   2779          				man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_END_REQ);
   \                     ??man_ota_main_428: (+1)
   \   0000207A   0x2054             MOVS     R0,#+84
   \   0000207C   0x.... 0x....      BL       man_ota_set_sequense
   \   00002080   0xE01D             B        ??man_ota_main_430
   \   00002082   0xBF00             Nop      
   \                     ??man_ota_main_403:
   \   00002084   0x00000A05         DC32     0xa05
   \   00002088   0x........         DC32     man_ota_work+0xA0
   2780          			}
   2781          			else {
   2782          				// 送信のみ
   2783          				man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_NEXT_REQ);
   \                     ??man_ota_main_429: (+1)
   \   0000208C   0x2050             MOVS     R0,#+80
   \   0000208E   0x.... 0x....      BL       man_ota_set_sequense
   \   00002092   0xE014             B        ??man_ota_main_430
   2784          			}
   2785          		}
   2786          		// データの最後は応答を待つ
   2787          		else {
   2788          			man_ota_work.data_len = man_ota_work.file_info.size_update - man_ota_work.exec_info.file_size;
   \                     ??man_ota_main_427: (+1)
   \   00002094   0x48BF             LDR      R0,??man_ota_main_426
   \   00002096   0x6800             LDR      R0,[R0, #+0]
   \   00002098   0x4956             LDR      R1,??man_ota_main_416+0x8
   \   0000209A   0x6C09             LDR      R1,[R1, #+64]
   \   0000209C   0x1A40             SUBS     R0,R0,R1
   \   0000209E   0x4977             LDR      R1,??man_ota_main_420+0x8
   \   000020A0   0x6008             STR      R0,[R1, #+0]
   2789          			man_flash_read(man_ota_work.file_info.addr_update + man_ota_work.exec_info.file_size, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   000020A2   0x4876             LDR      R0,??man_ota_main_420+0x8
   \   000020A4   0x6802             LDR      R2,[R0, #+0]
   \   000020A6   0x4809             LDR      R0,??man_ota_main_404+0x8
   \   000020A8   0x6801             LDR      R1,[R0, #+0]
   \   000020AA   0x48BB             LDR      R0,??man_ota_main_426+0x4
   \   000020AC   0x6800             LDR      R0,[R0, #+0]
   \   000020AE   0x4B51             LDR      R3,??man_ota_main_416+0x8
   \   000020B0   0x6C1B             LDR      R3,[R3, #+64]
   \   000020B2   0x18C0             ADDS     R0,R0,R3
   \   000020B4   0x.... 0x....      BL       man_flash_read
   2790          			// 応答待ち
   2791          			man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_END_REQ);
   \   000020B8   0x2054             MOVS     R0,#+84
   \   000020BA   0x.... 0x....      BL       man_ota_set_sequense
   2792          		}
   2793          		break;
   \                     ??man_ota_main_430: (+1)
   \   000020BE   0xF001 0xF97A      BL       ??man_ota_main_274
   \   000020C2   0xBF00             Nop      
   \                     ??man_ota_main_404:
   \   000020C4   0x........         DC32     man_ota_work+0x80
   \   000020C8   0x........         DC32     man_ota_work+0x84
   \   000020CC   0x........         DC32     man_ota_work+0xBC
   \   000020D0   0x........         DC32     man_ota_work+0xB0
   2794          
   2795          
   2796          	// GPS updater PACKET(応答なし)データ送信
   2797          	case MAN_OTA_SEQ_UDLPKT_NEXT_REQ:		// GPS updater PACKET(応答なし)データ送信 要求
   2798          		man_gps_req_packet_next(&man_ota_work.data_buff[0], man_ota_work.data_len, MAN_OTA_SEQ_UDLPKT_NEXT, man_ota_req_callback);
   \                     ??man_ota_main_190: (+1)
   \   000020D4   0x4B67             LDR      R3,??man_ota_main_420
   \   000020D6   0x2251             MOVS     R2,#+81
   \   000020D8   0x4868             LDR      R0,??man_ota_main_420+0x8
   \   000020DA   0x6801             LDR      R1,[R0, #+0]
   \   000020DC   0x48D4             LDR      R0,??man_ota_main_431
   \   000020DE   0x6800             LDR      R0,[R0, #+0]
   \   000020E0   0x.... 0x....      BL       man_gps_req_packet_next
   2799          		man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_NEXT);
   \   000020E4   0x2051             MOVS     R0,#+81
   \   000020E6   0x.... 0x....      BL       man_ota_set_sequense
   2800          		break;
   \   000020EA   0xF001 0xF964      BL       ??man_ota_main_274
   2801          	case MAN_OTA_SEQ_UDLPKT_NEXT:			// GPS updater PACKET(応答なし)データ送信中
   2802          		break;
   \                     ??man_ota_main_191: (+1)
   \   000020EE   0xF001 0xF962      BL       ??man_ota_main_274
   2803          	case MAN_OTA_SEQ_UDLPKT_NEXT_OK:		// GPS updater PACKET(応答なし)データ送信完了(成功)
   2804          		man_ota_work.exec_info.file_size += man_ota_work.data_len;
   \                     ??man_ota_main_192: (+1)
   \   000020F2   0x4840             LDR      R0,??man_ota_main_416+0x8
   \   000020F4   0x6C00             LDR      R0,[R0, #+64]
   \   000020F6   0x4961             LDR      R1,??man_ota_main_420+0x8
   \   000020F8   0x6809             LDR      R1,[R1, #+0]
   \   000020FA   0x1840             ADDS     R0,R0,R1
   \   000020FC   0x493D             LDR      R1,??man_ota_main_416+0x8
   \   000020FE   0x6408             STR      R0,[R1, #+64]
   2805          		// updater PACKETデータ取得へ遷移
   2806          		man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_SET);
   \   00002100   0x204F             MOVS     R0,#+79
   \   00002102   0x.... 0x....      BL       man_ota_set_sequense
   2807          		break;
   \   00002106   0xF001 0xF956      BL       ??man_ota_main_274
   2808          	case MAN_OTA_SEQ_UDLPKT_NEXT_NG:		// GPS updater PACKET(応答なし)データ送信完了(失敗)
   2809          		// 中止処理へ
   2810          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_193: (+1)
   \   0000210A   0x2000             MOVS     R0,#+0
   \   0000210C   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000210E   0x4939             LDR      R1,??man_ota_main_416+0x8
   \   00002110   0x6588             STR      R0,[R1, #+88]
   2811          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002112   0x20A2             MOVS     R0,#+162
   \   00002114   0x.... 0x....      BL       man_ota_set_sequense
   2812          		// エラー登録
   2813          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00002118   0x4BC6             LDR      R3,??man_ota_main_431+0x4  ;; 0xafd
   \   0000211A   0x48C7             LDR      R0,??man_ota_main_431+0x8
   \   0000211C   0x6802             LDR      R2,[R0, #+0]
   \   0000211E   0x4857             LDR      R0,??man_ota_main_420+0x8
   \   00002120   0x6801             LDR      R1,[R0, #+0]
   \   00002122   0x201B             MOVS     R0,#+27
   \   00002124   0x.... 0x....      BL       man_error_set
   2814          		break;
   \   00002128   0xF001 0xF945      BL       ??man_ota_main_274
   2815          
   2816          
   2817          	// GPS updater PACKET(応答あり)データ送信
   2818          	case MAN_OTA_SEQ_UDLPKT_END_REQ:		// GPS updater PACKET(応答あり)データ送信 要求
   2819          		man_gps_req_packet_end(&man_ota_work.data_buff[0], man_ota_work.data_len, MAN_OTA_SEQ_UDLPKT_END, man_ota_req_callback);
   \                     ??man_ota_main_194: (+1)
   \   0000212C   0x4B51             LDR      R3,??man_ota_main_420
   \   0000212E   0x2255             MOVS     R2,#+85
   \   00002130   0x4852             LDR      R0,??man_ota_main_420+0x8
   \   00002132   0x6801             LDR      R1,[R0, #+0]
   \   00002134   0x48BE             LDR      R0,??man_ota_main_431
   \   00002136   0x6800             LDR      R0,[R0, #+0]
   \   00002138   0x.... 0x....      BL       man_gps_req_packet_end
   2820          		man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_END);
   \   0000213C   0x2055             MOVS     R0,#+85
   \   0000213E   0x.... 0x....      BL       man_ota_set_sequense
   2821          		break;
   \   00002142   0xF001 0xF938      BL       ??man_ota_main_274
   2822          	case MAN_OTA_SEQ_UDLPKT_END:			// GPS updater PACKET(応答あり)データ送信中
   2823          		break;
   \                     ??man_ota_main_195: (+1)
   \   00002146   0xF001 0xF936      BL       ??man_ota_main_274
   2824          	case MAN_OTA_SEQ_UDLPKT_END_OK:			// GPS updater PACKET(応答あり)データ送信完了(成功)
   2825          		man_ota_work.exec_info.file_size += man_ota_work.data_len;
   \                     ??man_ota_main_196: (+1)
   \   0000214A   0x482A             LDR      R0,??man_ota_main_416+0x8
   \   0000214C   0x6C00             LDR      R0,[R0, #+64]
   \   0000214E   0x494B             LDR      R1,??man_ota_main_420+0x8
   \   00002150   0x6809             LDR      R1,[R1, #+0]
   \   00002152   0x1840             ADDS     R0,R0,R1
   \   00002154   0x4927             LDR      R1,??man_ota_main_416+0x8
   \   00002156   0x6408             STR      R0,[R1, #+64]
   2826          		// 全て送信済み
   2827          		if (man_ota_work.file_info.size_update <= man_ota_work.exec_info.file_size)  {
   \   00002158   0x4826             LDR      R0,??man_ota_main_416+0x8
   \   0000215A   0x6C00             LDR      R0,[R0, #+64]
   \   0000215C   0x498D             LDR      R1,??man_ota_main_426
   \   0000215E   0x6809             LDR      R1,[R1, #+0]
   \   00002160   0x4288             CMP      R0,R1
   \   00002162   0xDB07             BLT      ??man_ota_main_432
   2828          			man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_DONE);
   \   00002164   0x2058             MOVS     R0,#+88
   \   00002166   0x.... 0x....      BL       man_ota_set_sequense
   2829          			man_ota_work.timer = man_timer_get_1ms_count();
   \   0000216A   0x.... 0x....      BL       man_timer_get_1ms_count
   \   0000216E   0x49CC             LDR      R1,??man_ota_main_433
   \   00002170   0x6008             STR      R0,[R1, #+0]
   \   00002172   0xE002             B        ??man_ota_main_434
   2830          		}
   2831          		// 送信途中
   2832          		else {
   2833          			// updater PACKETデータ取得へ遷移
   2834          			man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_SET);
   \                     ??man_ota_main_432: (+1)
   \   00002174   0x204F             MOVS     R0,#+79
   \   00002176   0x.... 0x....      BL       man_ota_set_sequense
   2835          		}
   2836          		break;
   \                     ??man_ota_main_434: (+1)
   \   0000217A   0xF001 0xF91C      BL       ??man_ota_main_274
   2837          	case MAN_OTA_SEQ_UDLPKT_END_NG:			// GPS updater PACKET(応答あり)データ送信完了(失敗)
   2838          		// 中止処理へ
   2839          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_197: (+1)
   \   0000217E   0x2000             MOVS     R0,#+0
   \   00002180   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002182   0x491C             LDR      R1,??man_ota_main_416+0x8
   \   00002184   0x6588             STR      R0,[R1, #+88]
   2840          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002186   0x20A2             MOVS     R0,#+162
   \   00002188   0x.... 0x....      BL       man_ota_set_sequense
   2841          		// エラー登録
   2842          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   0000218C   0x4BC5             LDR      R3,??man_ota_main_433+0x4  ;; 0xb1a
   \   0000218E   0x48AA             LDR      R0,??man_ota_main_431+0x8
   \   00002190   0x6802             LDR      R2,[R0, #+0]
   \   00002192   0x483A             LDR      R0,??man_ota_main_420+0x8
   \   00002194   0x6801             LDR      R1,[R0, #+0]
   \   00002196   0x201B             MOVS     R0,#+27
   \   00002198   0x.... 0x....      BL       man_error_set
   2843          		break;
   \   0000219C   0xF001 0xF90B      BL       ??man_ota_main_274
   2844          
   2845          
   2846          	// GPS UDL DONE受信待ち
   2847          	case MAN_OTA_SEQ_UDLPKT_DONE:			// GPS UDL DONE待ち
   2848          		// 20秒経過しても取得できない場合は、異常扱いとする
   2849          		delay = man_timer_get_elapsed_time(man_ota_work.timer, man_timer_get_1ms_count());
   \                     ??man_ota_main_198: (+1)
   \   000021A0   0x.... 0x....      BL       man_timer_get_1ms_count
   \   000021A4   0x0001             MOVS     R1,R0
   \   000021A6   0x48BE             LDR      R0,??man_ota_main_433
   \   000021A8   0x6800             LDR      R0,[R0, #+0]
   \   000021AA   0x.... 0x....      BL       man_timer_get_elapsed_time
   2850          		if (delay > 20000) {
   \   000021AE   0x49BE             LDR      R1,??man_ota_main_433+0x8  ;; 0x4e21
   \   000021B0   0x4288             CMP      R0,R1
   \   000021B2   0xD30E             BCC      ??man_ota_main_435
   2851          			// 中止処理へ
   2852          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   000021B4   0x2000             MOVS     R0,#+0
   \   000021B6   0x43C0             MVNS     R0,R0            ;; #-1
   \   000021B8   0x490E             LDR      R1,??man_ota_main_416+0x8
   \   000021BA   0x6588             STR      R0,[R1, #+88]
   2853          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000021BC   0x20A2             MOVS     R0,#+162
   \   000021BE   0x.... 0x....      BL       man_ota_set_sequense
   2854          			// エラー登録
   2855          			man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   000021C2   0x4BE4             LDR      R3,??man_ota_main_436  ;; 0xb27
   \   000021C4   0x489C             LDR      R0,??man_ota_main_431+0x8
   \   000021C6   0x6802             LDR      R2,[R0, #+0]
   \   000021C8   0x482C             LDR      R0,??man_ota_main_420+0x8
   \   000021CA   0x6801             LDR      R1,[R0, #+0]
   \   000021CC   0x201B             MOVS     R0,#+27
   \   000021CE   0x.... 0x....      BL       man_error_set
   2856          		}
   2857          		break;
   \                     ??man_ota_main_435: (+1)
   \   000021D2   0xF001 0xF8F0      BL       ??man_ota_main_274
   2858          	case MAN_OTA_SEQ_UDLPKT_DONE_OK:		// GPS UDL DONE受信
   2859          		// updater注入安定(100ms)を待つ
   2860          		man_timer_start_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_UDLPKT_DONE_WAIT, 100, man_ota_req_callback);
   \                     ??man_ota_main_199: (+1)
   \   000021D6   0x4A27             LDR      R2,??man_ota_main_420
   \   000021D8   0x2164             MOVS     R1,#+100
   \   000021DA   0x48DF             LDR      R0,??man_ota_main_436+0x4  ;; 0x4060005a
   \   000021DC   0x.... 0x....      BL       man_timer_start_wait
   2861          		man_ota_set_sequense(MAN_OTA_SEQ_UDLPKT_DONE_WAIT);
   \   000021E0   0x205A             MOVS     R0,#+90
   \   000021E2   0x.... 0x....      BL       man_ota_set_sequense
   2862          		break;
   \   000021E6   0xF001 0xF8E6      BL       ??man_ota_main_274
   \   000021EA   0xBF00             Nop      
   \                     ??man_ota_main_416:
   \   000021EC   0x00000A52         DC32     0xa52
   \   000021F0   0x00000A63         DC32     0xa63
   \   000021F4   0x........         DC32     man_ota_work
   2863          
   2864          
   2865          	// updater注入安定(100ms)待ち
   2866          	case MAN_OTA_SEQ_UDLPKT_DONE_WAIT:		//  GPS UDL DONE安定100ms待ち
   2867          		break;
   \                     ??man_ota_main_200: (+1)
   \   000021F8   0xF001 0xF8DD      BL       ??man_ota_main_274
   2868          	case MAN_OTA_SEQ_UDLPKT_DONE_WAIT_OK:	//  GPS UDL DONE安定100ms待ち完了
   2869          		// firmware注入開始
   2870          		man_ota_set_sequense(MAN_OTA_SEQ_FDL_SET_REQ);
   \                     ??man_ota_main_201: (+1)
   \   000021FC   0x205D             MOVS     R0,#+93
   \   000021FE   0x.... 0x....      BL       man_ota_set_sequense
   2871          		break;
   \   00002202   0xF001 0xF8D8      BL       ??man_ota_main_274
   2872          	case MAN_OTA_SEQ_UDLPKT_DONE_WAIT_NG:	//  GPS UDL DONE安定100ms待ち完了
   2873          		// firmware注入開始
   2874          		man_ota_set_sequense(MAN_OTA_SEQ_FDL_SET_REQ);
   \                     ??man_ota_main_202: (+1)
   \   00002206   0x205D             MOVS     R0,#+93
   \   00002208   0x.... 0x....      BL       man_ota_set_sequense
   2875          		break;
   \   0000220C   0xF001 0xF8D3      BL       ??man_ota_main_274
   2876          
   2877          
   2878          	// FDLコマンド送信
   2879          	case MAN_OTA_SEQ_FDL_SET_REQ:			// GPS FDLコマンド送信 要求
   2880          		// FDLコマンド送信開始
   2881          		man_gps_req_fdl(MAN_OTA_SEQ_FDL_SET, man_ota_req_callback);
   \                     ??man_ota_main_203: (+1)
   \   00002210   0x4918             LDR      R1,??man_ota_main_420
   \   00002212   0x205E             MOVS     R0,#+94
   \   00002214   0x.... 0x....      BL       man_gps_req_fdl
   2882          		man_ota_set_sequense(MAN_OTA_SEQ_FDL_SET);
   \   00002218   0x205E             MOVS     R0,#+94
   \   0000221A   0x.... 0x....      BL       man_ota_set_sequense
   2883          		man_ota_work.exec_info.file_size = 0;
   \   0000221E   0x2000             MOVS     R0,#+0
   \   00002220   0x49DD             LDR      R1,??man_ota_main_437
   \   00002222   0x6408             STR      R0,[R1, #+64]
   2884          		man_ota_work.exec_info.counter = 0;
   \   00002224   0x2000             MOVS     R0,#+0
   \   00002226   0x49DC             LDR      R1,??man_ota_main_437
   \   00002228   0x6108             STR      R0,[R1, #+16]
   2885          		break;
   \   0000222A   0xF001 0xF8C4      BL       ??man_ota_main_274
   2886          	case MAN_OTA_SEQ_FDL_SET:				// GPS FDLコマンド送信中
   2887          		break;
   \                     ??man_ota_main_204: (+1)
   \   0000222E   0xF001 0xF8C2      BL       ??man_ota_main_274
   2888          	case MAN_OTA_SEQ_FDL_SET_OK:			// GPS FDLコマンド送信完了(成功)
   2889          		// config PACKETデータ取得へ遷移
   2890          		man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_SET);
   \                     ??man_ota_main_205: (+1)
   \   00002232   0x2061             MOVS     R0,#+97
   \   00002234   0x.... 0x....      BL       man_ota_set_sequense
   2891          		break;
   \   00002238   0xF001 0xF8BD      BL       ??man_ota_main_274
   2892          	case MAN_OTA_SEQ_FDL_SET_NG:			// GPS FDLコマンド送信完了(失敗)
   2893          		// 中止処理へ
   2894          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_206: (+1)
   \   0000223C   0x2000             MOVS     R0,#+0
   \   0000223E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002240   0x49D5             LDR      R1,??man_ota_main_437
   \   00002242   0x6588             STR      R0,[R1, #+88]
   2895          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002244   0x20A2             MOVS     R0,#+162
   \   00002246   0x.... 0x....      BL       man_ota_set_sequense
   2896          		// エラー登録
   2897          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   0000224A   0x4BD4             LDR      R3,??man_ota_main_437+0x4  ;; 0xb51
   \   0000224C   0x487A             LDR      R0,??man_ota_main_431+0x8
   \   0000224E   0x6802             LDR      R2,[R0, #+0]
   \   00002250   0x480A             LDR      R0,??man_ota_main_420+0x8
   \   00002252   0x6801             LDR      R1,[R0, #+0]
   \   00002254   0x201B             MOVS     R0,#+27
   \   00002256   0x.... 0x....      BL       man_error_set
   2898          		break;
   \   0000225A   0xF001 0xF8AC      BL       ??man_ota_main_274
   2899          
   2900          
   2901          	// config PACKETデータ取得
   2902          	case MAN_OTA_SEQ_CFGPKT_SET:
   2903          		// パケット(32KB) + 終了パケット(14B)
   2904          		//    0 -7 :: 4096
   2905          		//    8    :: 14
   2906          		if ( (man_ota_work.exec_info.counter % 9) == 8 ) {
   \                     ??man_ota_main_207: (+1)
   \   0000225E   0x48CE             LDR      R0,??man_ota_main_437
   \   00002260   0x6900             LDR      R0,[R0, #+16]
   \   00002262   0x2109             MOVS     R1,#+9
   \   00002264   0x.... 0x....      BL       __aeabi_idivmod
   \   00002268   0x2908             CMP      R1,#+8
   \   0000226A   0xD109             BNE      ??man_ota_main_438
   2907          			man_ota_work.exec_info.snd_max_size = 14;
   \   0000226C   0x200E             MOVS     R0,#+14
   \   0000226E   0x49CA             LDR      R1,??man_ota_main_437
   \   00002270   0x60C8             STR      R0,[R1, #+12]
   \   00002272   0xE009             B        ??man_ota_main_439
   \                     ??man_ota_main_420:
   \   00002274   0x........         DC32     man_ota_req_callback
   \   00002278   0x00000A8E         DC32     0xa8e
   \   0000227C   0x........         DC32     man_ota_work+0xC0
   2908          		}
   2909          		else {
   2910          			man_ota_work.exec_info.snd_max_size = 4096;
   \                     ??man_ota_main_438: (+1)
   \   00002280   0x2080             MOVS     R0,#+128
   \   00002282   0x0140             LSLS     R0,R0,#+5        ;; #+4096
   \   00002284   0x49C4             LDR      R1,??man_ota_main_437
   \   00002286   0x60C8             STR      R0,[R1, #+12]
   2911          		}
   2912          		man_ota_work.exec_info.counter++;
   \                     ??man_ota_main_439: (+1)
   \   00002288   0x48C3             LDR      R0,??man_ota_main_437
   \   0000228A   0x6900             LDR      R0,[R0, #+16]
   \   0000228C   0x1C40             ADDS     R0,R0,#+1
   \   0000228E   0x49C2             LDR      R1,??man_ota_main_437
   \   00002290   0x6108             STR      R0,[R1, #+16]
   2913          
   2914          		if ( (man_ota_work.file_info.size_config - man_ota_work.exec_info.file_size) >= man_ota_work.exec_info.snd_max_size ) {
   \   00002292   0x48E2             LDR      R0,??man_ota_main_440
   \   00002294   0x6800             LDR      R0,[R0, #+0]
   \   00002296   0x49C0             LDR      R1,??man_ota_main_437
   \   00002298   0x6C09             LDR      R1,[R1, #+64]
   \   0000229A   0x1A40             SUBS     R0,R0,R1
   \   0000229C   0x49BE             LDR      R1,??man_ota_main_437
   \   0000229E   0x68C9             LDR      R1,[R1, #+12]
   \   000022A0   0x4288             CMP      R0,R1
   \   000022A2   0xDB27             BLT      ??man_ota_main_441
   2915          			// config 書き込みファイル取得
   2916          			man_ota_work.data_len = man_ota_work.exec_info.snd_max_size;
   \   000022A4   0x48BC             LDR      R0,??man_ota_main_437
   \   000022A6   0x68C0             LDR      R0,[R0, #+12]
   \   000022A8   0x49DD             LDR      R1,??man_ota_main_440+0x4
   \   000022AA   0x6008             STR      R0,[R1, #+0]
   2917          			man_flash_read(man_ota_work.file_info.addr_config + man_ota_work.exec_info.file_size, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   000022AC   0x48DC             LDR      R0,??man_ota_main_440+0x4
   \   000022AE   0x6802             LDR      R2,[R0, #+0]
   \   000022B0   0x485F             LDR      R0,??man_ota_main_431
   \   000022B2   0x6801             LDR      R1,[R0, #+0]
   \   000022B4   0x48DB             LDR      R0,??man_ota_main_440+0x8
   \   000022B6   0x6800             LDR      R0,[R0, #+0]
   \   000022B8   0x4BB7             LDR      R3,??man_ota_main_437
   \   000022BA   0x6C1B             LDR      R3,[R3, #+64]
   \   000022BC   0x18C0             ADDS     R0,R0,R3
   \   000022BE   0x.... 0x....      BL       man_flash_read
   2918          			// 32K+14バイト時は応答を待つ
   2919          			// データの最後も応答を待つ
   2920          			if ( (man_ota_work.exec_info.snd_max_size == 14) || (man_ota_work.file_info.size_config <= (man_ota_work.exec_info.file_size+man_ota_work.data_len)) ) {
   \   000022C2   0x48B5             LDR      R0,??man_ota_main_437
   \   000022C4   0x68C0             LDR      R0,[R0, #+12]
   \   000022C6   0x280E             CMP      R0,#+14
   \   000022C8   0xD008             BEQ      ??man_ota_main_442
   \   000022CA   0x48B3             LDR      R0,??man_ota_main_437
   \   000022CC   0x6C00             LDR      R0,[R0, #+64]
   \   000022CE   0x49D4             LDR      R1,??man_ota_main_440+0x4
   \   000022D0   0x6809             LDR      R1,[R1, #+0]
   \   000022D2   0x1840             ADDS     R0,R0,R1
   \   000022D4   0x49D1             LDR      R1,??man_ota_main_440
   \   000022D6   0x6809             LDR      R1,[R1, #+0]
   \   000022D8   0x4288             CMP      R0,R1
   \   000022DA   0xDB07             BLT      ??man_ota_main_443
   2921          				// 応答待ち
   2922          				man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_END_REQ);
   \                     ??man_ota_main_442: (+1)
   \   000022DC   0x2066             MOVS     R0,#+102
   \   000022DE   0x.... 0x....      BL       man_ota_set_sequense
   \   000022E2   0xE01C             B        ??man_ota_main_444
   \                     ??man_ota_main_423:
   \   000022E4   0x00000AAB         DC32     0xaab
   \   000022E8   0x00000AC2         DC32     0xac2
   2923          			}
   2924          			else {
   2925          				// 送信のみ
   2926          				man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_NEXT_REQ);
   \                     ??man_ota_main_443: (+1)
   \   000022EC   0x2062             MOVS     R0,#+98
   \   000022EE   0x.... 0x....      BL       man_ota_set_sequense
   \   000022F2   0xE014             B        ??man_ota_main_444
   2927          			}
   2928          		}
   2929          		// データの最後は応答を待つ
   2930          		else {
   2931          			man_ota_work.data_len = man_ota_work.file_info.size_config - man_ota_work.exec_info.file_size;
   \                     ??man_ota_main_441: (+1)
   \   000022F4   0x48C9             LDR      R0,??man_ota_main_440
   \   000022F6   0x6800             LDR      R0,[R0, #+0]
   \   000022F8   0x49A7             LDR      R1,??man_ota_main_437
   \   000022FA   0x6C09             LDR      R1,[R1, #+64]
   \   000022FC   0x1A40             SUBS     R0,R0,R1
   \   000022FE   0x49C8             LDR      R1,??man_ota_main_440+0x4
   \   00002300   0x6008             STR      R0,[R1, #+0]
   2932          			man_flash_read(man_ota_work.file_info.addr_config + man_ota_work.exec_info.file_size, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   00002302   0x48C7             LDR      R0,??man_ota_main_440+0x4
   \   00002304   0x6802             LDR      R2,[R0, #+0]
   \   00002306   0x484A             LDR      R0,??man_ota_main_431
   \   00002308   0x6801             LDR      R1,[R0, #+0]
   \   0000230A   0x48C6             LDR      R0,??man_ota_main_440+0x8
   \   0000230C   0x6800             LDR      R0,[R0, #+0]
   \   0000230E   0x4BA2             LDR      R3,??man_ota_main_437
   \   00002310   0x6C1B             LDR      R3,[R3, #+64]
   \   00002312   0x18C0             ADDS     R0,R0,R3
   \   00002314   0x.... 0x....      BL       man_flash_read
   2933          			// 応答待ち
   2934          			man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_END_REQ);
   \   00002318   0x2066             MOVS     R0,#+102
   \   0000231A   0x.... 0x....      BL       man_ota_set_sequense
   2935          		}
   2936          		break;
   \                     ??man_ota_main_444: (+1)
   \   0000231E   0xF001 0xF84A      BL       ??man_ota_main_274
   2937          
   2938          
   2939          	// config PACKET(応答なし)データ送信
   2940          	case MAN_OTA_SEQ_CFGPKT_NEXT_REQ:		// GPS config PACKET(応答なし)データ送信 要求
   2941          		man_gps_req_packet_next(&man_ota_work.data_buff[0], man_ota_work.data_len, MAN_OTA_SEQ_CFGPKT_NEXT, man_ota_req_callback);
   \                     ??man_ota_main_208: (+1)
   \   00002322   0x4BD9             LDR      R3,??man_ota_main_445
   \   00002324   0x2263             MOVS     R2,#+99
   \   00002326   0x48BE             LDR      R0,??man_ota_main_440+0x4
   \   00002328   0x6801             LDR      R1,[R0, #+0]
   \   0000232A   0x4841             LDR      R0,??man_ota_main_431
   \   0000232C   0x6800             LDR      R0,[R0, #+0]
   \   0000232E   0x.... 0x....      BL       man_gps_req_packet_next
   2942          		man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_NEXT);
   \   00002332   0x2063             MOVS     R0,#+99
   \   00002334   0x.... 0x....      BL       man_ota_set_sequense
   2943          		break;
   \   00002338   0xF001 0xF83D      BL       ??man_ota_main_274
   2944          	case MAN_OTA_SEQ_CFGPKT_NEXT:			// GPS config PACKET(応答なし)データ送信中
   2945          		break;
   \                     ??man_ota_main_209: (+1)
   \   0000233C   0xF001 0xF83B      BL       ??man_ota_main_274
   2946          	case MAN_OTA_SEQ_CFGPKT_NEXT_OK:		// GPS config PACKET(応答なし)データ送信完了(成功)
   2947          		man_ota_work.exec_info.file_size += man_ota_work.data_len;
   \                     ??man_ota_main_210: (+1)
   \   00002340   0x4895             LDR      R0,??man_ota_main_437
   \   00002342   0x6C00             LDR      R0,[R0, #+64]
   \   00002344   0x49B6             LDR      R1,??man_ota_main_440+0x4
   \   00002346   0x6809             LDR      R1,[R1, #+0]
   \   00002348   0x1840             ADDS     R0,R0,R1
   \   0000234A   0x4993             LDR      R1,??man_ota_main_437
   \   0000234C   0x6408             STR      R0,[R1, #+64]
   2948          		// config PACKETデータ取得へ遷移
   2949          		man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_SET);
   \   0000234E   0x2061             MOVS     R0,#+97
   \   00002350   0x.... 0x....      BL       man_ota_set_sequense
   2950          		break;
   \   00002354   0xF001 0xF82F      BL       ??man_ota_main_274
   2951          	case MAN_OTA_SEQ_CFGPKT_NEXT_NG:		// GPS config PACKET(応答なし)データ送信完了(失敗)
   2952          		// 中止処理へ
   2953          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_211: (+1)
   \   00002358   0x2000             MOVS     R0,#+0
   \   0000235A   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000235C   0x498E             LDR      R1,??man_ota_main_437
   \   0000235E   0x6588             STR      R0,[R1, #+88]
   2954          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002360   0x20A2             MOVS     R0,#+162
   \   00002362   0x.... 0x....      BL       man_ota_set_sequense
   2955          		// エラー登録
   2956          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00002366   0x4BC9             LDR      R3,??man_ota_main_445+0x4  ;; 0xb8c
   \   00002368   0x4833             LDR      R0,??man_ota_main_431+0x8
   \   0000236A   0x6802             LDR      R2,[R0, #+0]
   \   0000236C   0x48AC             LDR      R0,??man_ota_main_440+0x4
   \   0000236E   0x6801             LDR      R1,[R0, #+0]
   \   00002370   0x201B             MOVS     R0,#+27
   \   00002372   0x.... 0x....      BL       man_error_set
   2957          		break;
   \   00002376   0xF001 0xF81E      BL       ??man_ota_main_274
   2958          
   2959          	// config PACKET(応答あり)データ送信
   2960          	case MAN_OTA_SEQ_CFGPKT_END_REQ:		// GPS config PACKET(応答あり)データ送信 要求
   2961          		man_gps_req_packet_end(&man_ota_work.data_buff[0], man_ota_work.data_len, MAN_OTA_SEQ_CFGPKT_END, man_ota_req_callback);
   \                     ??man_ota_main_212: (+1)
   \   0000237A   0x4BC3             LDR      R3,??man_ota_main_445
   \   0000237C   0x2267             MOVS     R2,#+103
   \   0000237E   0x48A8             LDR      R0,??man_ota_main_440+0x4
   \   00002380   0x6801             LDR      R1,[R0, #+0]
   \   00002382   0x482B             LDR      R0,??man_ota_main_431
   \   00002384   0x6800             LDR      R0,[R0, #+0]
   \   00002386   0x.... 0x....      BL       man_gps_req_packet_end
   2962          		man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_END);
   \   0000238A   0x2067             MOVS     R0,#+103
   \   0000238C   0x.... 0x....      BL       man_ota_set_sequense
   2963          		break;
   \   00002390   0xF001 0xF811      BL       ??man_ota_main_274
   \                     ??man_ota_main_426:
   \   00002394   0x........         DC32     man_ota_work+0x98
   \   00002398   0x........         DC32     man_ota_work+0xA8
   2964          	case MAN_OTA_SEQ_CFGPKT_END:			// GPS config PACKET(応答あり)データ送信中
   2965          		break;
   \                     ??man_ota_main_213: (+1)
   \   0000239C   0xF001 0xF80B      BL       ??man_ota_main_274
   2966          	case MAN_OTA_SEQ_CFGPKT_END_OK:			// GPS config PACKET(応答あり)データ送信完了(成功)
   2967          		man_ota_work.exec_info.file_size += man_ota_work.data_len;
   \                     ??man_ota_main_214: (+1)
   \   000023A0   0x487D             LDR      R0,??man_ota_main_437
   \   000023A2   0x6C00             LDR      R0,[R0, #+64]
   \   000023A4   0x499E             LDR      R1,??man_ota_main_440+0x4
   \   000023A6   0x6809             LDR      R1,[R1, #+0]
   \   000023A8   0x1840             ADDS     R0,R0,R1
   \   000023AA   0x497B             LDR      R1,??man_ota_main_437
   \   000023AC   0x6408             STR      R0,[R1, #+64]
   2968          		// 全て送信済み
   2969          		if (man_ota_work.file_info.size_config <= man_ota_work.exec_info.file_size)  {
   \   000023AE   0x487A             LDR      R0,??man_ota_main_437
   \   000023B0   0x6C00             LDR      R0,[R0, #+64]
   \   000023B2   0x499A             LDR      R1,??man_ota_main_440
   \   000023B4   0x6809             LDR      R1,[R1, #+0]
   \   000023B6   0x4288             CMP      R0,R1
   \   000023B8   0xDB09             BLT      ??man_ota_main_446
   2970          			// firmware PACKETデータ取得へ遷移
   2971          			man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_SET);
   \   000023BA   0x206A             MOVS     R0,#+106
   \   000023BC   0x.... 0x....      BL       man_ota_set_sequense
   2972          			man_ota_work.exec_info.file_size = 0;
   \   000023C0   0x2000             MOVS     R0,#+0
   \   000023C2   0x4975             LDR      R1,??man_ota_main_437
   \   000023C4   0x6408             STR      R0,[R1, #+64]
   2973          			man_ota_work.exec_info.counter = 0;
   \   000023C6   0x2000             MOVS     R0,#+0
   \   000023C8   0x4973             LDR      R1,??man_ota_main_437
   \   000023CA   0x6108             STR      R0,[R1, #+16]
   \   000023CC   0xE002             B        ??man_ota_main_447
   2974          		}
   2975          		// 送信途中
   2976          		else {
   2977          			// config PACKETデータ取得へ遷移
   2978          			man_ota_set_sequense(MAN_OTA_SEQ_CFGPKT_SET);
   \                     ??man_ota_main_446: (+1)
   \   000023CE   0x2061             MOVS     R0,#+97
   \   000023D0   0x.... 0x....      BL       man_ota_set_sequense
   2979          		}
   2980          		break;
   \                     ??man_ota_main_447: (+1)
   \   000023D4   0xF000 0xFFEF      BL       ??man_ota_main_274
   2981          	case MAN_OTA_SEQ_CFGPKT_END_NG:			// GPS config PACKET(応答あり)データ送信完了(失敗)
   2982          		// 中止処理へ
   2983          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_215: (+1)
   \   000023D8   0x2000             MOVS     R0,#+0
   \   000023DA   0x43C0             MVNS     R0,R0            ;; #-1
   \   000023DC   0x496E             LDR      R1,??man_ota_main_437
   \   000023DE   0x6588             STR      R0,[R1, #+88]
   2984          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000023E0   0x20A2             MOVS     R0,#+162
   \   000023E2   0x.... 0x....      BL       man_ota_set_sequense
   2985          		// エラー登録
   2986          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   000023E6   0x4BAA             LDR      R3,??man_ota_main_445+0x8  ;; 0xbaa
   \   000023E8   0x4813             LDR      R0,??man_ota_main_431+0x8
   \   000023EA   0x6802             LDR      R2,[R0, #+0]
   \   000023EC   0x488C             LDR      R0,??man_ota_main_440+0x4
   \   000023EE   0x6801             LDR      R1,[R0, #+0]
   \   000023F0   0x201B             MOVS     R0,#+27
   \   000023F2   0x.... 0x....      BL       man_error_set
   2987          		break;
   \   000023F6   0xF000 0xFFDE      BL       ??man_ota_main_274
   2988          
   2989          
   2990          	// firmware PACKETデータ取得
   2991          	case MAN_OTA_SEQ_FRMPKT_SET:
   2992          		// PACKET先頭情報の保持
   2993          		if ( (man_ota_work.exec_info.counter % 9) == 0 ) {
   \                     ??man_ota_main_216: (+1)
   \   000023FA   0x4867             LDR      R0,??man_ota_main_437
   \   000023FC   0x6900             LDR      R0,[R0, #+16]
   \   000023FE   0x2109             MOVS     R1,#+9
   \   00002400   0x.... 0x....      BL       __aeabi_idivmod
   \   00002404   0x2900             CMP      R1,#+0
   \   00002406   0xD107             BNE      ??man_ota_main_448
   2994          			man_ota_work.exec_info.pkt_top_cnt = man_ota_work.exec_info.counter;
   \   00002408   0x4863             LDR      R0,??man_ota_main_437
   \   0000240A   0x6900             LDR      R0,[R0, #+16]
   \   0000240C   0x4962             LDR      R1,??man_ota_main_437
   \   0000240E   0x6148             STR      R0,[R1, #+20]
   2995          			man_ota_work.exec_info.pkt_top_size = man_ota_work.exec_info.file_size;
   \   00002410   0x4861             LDR      R0,??man_ota_main_437
   \   00002412   0x6C00             LDR      R0,[R0, #+64]
   \   00002414   0x4960             LDR      R1,??man_ota_main_437
   \   00002416   0x6188             STR      R0,[R1, #+24]
   2996          		}
   2997          		// パケット(32KB) + 終了パケット(14B)
   2998          		//    0 -7 :: 4096
   2999          		//    8    :: 14
   3000          		if ( (man_ota_work.exec_info.counter % 9) == 8 ) {
   \                     ??man_ota_main_448: (+1)
   \   00002418   0x485F             LDR      R0,??man_ota_main_437
   \   0000241A   0x6900             LDR      R0,[R0, #+16]
   \   0000241C   0x2109             MOVS     R1,#+9
   \   0000241E   0x.... 0x....      BL       __aeabi_idivmod
   \   00002422   0x2908             CMP      R1,#+8
   \   00002424   0xD10A             BNE      ??man_ota_main_449
   3001          			man_ota_work.exec_info.snd_max_size = 14;
   \   00002426   0x200E             MOVS     R0,#+14
   \   00002428   0x495B             LDR      R1,??man_ota_main_437
   \   0000242A   0x60C8             STR      R0,[R1, #+12]
   \   0000242C   0xE00A             B        ??man_ota_main_450
   \   0000242E   0xBF00             Nop      
   \                     ??man_ota_main_431:
   \   00002430   0x........         DC32     man_ota_work+0xBC
   \   00002434   0x00000AFD         DC32     0xafd
   \   00002438   0x........         DC32     man_ota_work+0x80
   3002          		}
   3003          		else {
   3004          			man_ota_work.exec_info.snd_max_size = 4096;
   \                     ??man_ota_main_449: (+1)
   \   0000243C   0x2080             MOVS     R0,#+128
   \   0000243E   0x0140             LSLS     R0,R0,#+5        ;; #+4096
   \   00002440   0x4955             LDR      R1,??man_ota_main_437
   \   00002442   0x60C8             STR      R0,[R1, #+12]
   3005          		}
   3006          		man_ota_work.exec_info.counter++;
   \                     ??man_ota_main_450: (+1)
   \   00002444   0x4854             LDR      R0,??man_ota_main_437
   \   00002446   0x6900             LDR      R0,[R0, #+16]
   \   00002448   0x1C40             ADDS     R0,R0,#+1
   \   0000244A   0x4953             LDR      R1,??man_ota_main_437
   \   0000244C   0x6108             STR      R0,[R1, #+16]
   3007          
   3008          		if ( (man_ota_work.file_info.size_firmware - man_ota_work.exec_info.file_size) >= man_ota_work.exec_info.snd_max_size ) {
   \   0000244E   0x48E0             LDR      R0,??man_ota_main_451
   \   00002450   0x6800             LDR      R0,[R0, #+0]
   \   00002452   0x4951             LDR      R1,??man_ota_main_437
   \   00002454   0x6C09             LDR      R1,[R1, #+64]
   \   00002456   0x1A40             SUBS     R0,R0,R1
   \   00002458   0x494F             LDR      R1,??man_ota_main_437
   \   0000245A   0x68C9             LDR      R1,[R1, #+12]
   \   0000245C   0x4288             CMP      R0,R1
   \   0000245E   0xDB29             BLT      ??man_ota_main_452
   3009          			// firmware 書き込みファイル取得
   3010          			man_ota_work.data_len = man_ota_work.exec_info.snd_max_size;
   \   00002460   0x484D             LDR      R0,??man_ota_main_437
   \   00002462   0x68C0             LDR      R0,[R0, #+12]
   \   00002464   0x496E             LDR      R1,??man_ota_main_440+0x4
   \   00002466   0x6008             STR      R0,[R1, #+0]
   3011          			man_flash_read(man_ota_work.file_info.addr_firmware + man_ota_work.exec_info.file_size, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   00002468   0x486D             LDR      R0,??man_ota_main_440+0x4
   \   0000246A   0x6802             LDR      R2,[R0, #+0]
   \   0000246C   0x48D9             LDR      R0,??man_ota_main_451+0x4
   \   0000246E   0x6801             LDR      R1,[R0, #+0]
   \   00002470   0x48D9             LDR      R0,??man_ota_main_451+0x8
   \   00002472   0x6800             LDR      R0,[R0, #+0]
   \   00002474   0x4B48             LDR      R3,??man_ota_main_437
   \   00002476   0x6C1B             LDR      R3,[R3, #+64]
   \   00002478   0x18C0             ADDS     R0,R0,R3
   \   0000247A   0x.... 0x....      BL       man_flash_read
   3012          			// 32K+14バイト時は応答を待つ
   3013          			// データの最後も応答を待つ
   3014          			if ( (man_ota_work.exec_info.snd_max_size == 14) || (man_ota_work.file_info.size_firmware <= (man_ota_work.exec_info.file_size+man_ota_work.data_len)) ) {
   \   0000247E   0x4846             LDR      R0,??man_ota_main_437
   \   00002480   0x68C0             LDR      R0,[R0, #+12]
   \   00002482   0x280E             CMP      R0,#+14
   \   00002484   0xD008             BEQ      ??man_ota_main_453
   \   00002486   0x4844             LDR      R0,??man_ota_main_437
   \   00002488   0x6C00             LDR      R0,[R0, #+64]
   \   0000248A   0x4965             LDR      R1,??man_ota_main_440+0x4
   \   0000248C   0x6809             LDR      R1,[R1, #+0]
   \   0000248E   0x1840             ADDS     R0,R0,R1
   \   00002490   0x49CF             LDR      R1,??man_ota_main_451
   \   00002492   0x6809             LDR      R1,[R1, #+0]
   \   00002494   0x4288             CMP      R0,R1
   \   00002496   0xDB09             BLT      ??man_ota_main_454
   3015          				// 応答待ち
   3016          				man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_END_REQ);
   \                     ??man_ota_main_453: (+1)
   \   00002498   0x206F             MOVS     R0,#+111
   \   0000249A   0x.... 0x....      BL       man_ota_set_sequense
   \   0000249E   0xE01E             B        ??man_ota_main_455
   \                     ??man_ota_main_433:
   \   000024A0   0x........         DC32     man_ota_work+0x2C0
   \   000024A4   0x00000B1A         DC32     0xb1a
   \   000024A8   0x00004E21         DC32     0x4e21
   3017          			}
   3018          			else {
   3019          				// 送信のみ
   3020          				man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_NEXT_REQ);
   \                     ??man_ota_main_454: (+1)
   \   000024AC   0x206B             MOVS     R0,#+107
   \   000024AE   0x.... 0x....      BL       man_ota_set_sequense
   \   000024B2   0xE014             B        ??man_ota_main_455
   3021          			}
   3022          		}
   3023          		// データの最後は応答を待つ
   3024          		else {
   3025          			man_ota_work.data_len = man_ota_work.file_info.size_firmware - man_ota_work.exec_info.file_size;
   \                     ??man_ota_main_452: (+1)
   \   000024B4   0x48C6             LDR      R0,??man_ota_main_451
   \   000024B6   0x6800             LDR      R0,[R0, #+0]
   \   000024B8   0x4937             LDR      R1,??man_ota_main_437
   \   000024BA   0x6C09             LDR      R1,[R1, #+64]
   \   000024BC   0x1A40             SUBS     R0,R0,R1
   \   000024BE   0x4958             LDR      R1,??man_ota_main_440+0x4
   \   000024C0   0x6008             STR      R0,[R1, #+0]
   3026          			man_flash_read(man_ota_work.file_info.addr_firmware + man_ota_work.exec_info.file_size, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   000024C2   0x4857             LDR      R0,??man_ota_main_440+0x4
   \   000024C4   0x6802             LDR      R2,[R0, #+0]
   \   000024C6   0x48C3             LDR      R0,??man_ota_main_451+0x4
   \   000024C8   0x6801             LDR      R1,[R0, #+0]
   \   000024CA   0x48C3             LDR      R0,??man_ota_main_451+0x8
   \   000024CC   0x6800             LDR      R0,[R0, #+0]
   \   000024CE   0x4B32             LDR      R3,??man_ota_main_437
   \   000024D0   0x6C1B             LDR      R3,[R3, #+64]
   \   000024D2   0x18C0             ADDS     R0,R0,R3
   \   000024D4   0x.... 0x....      BL       man_flash_read
   3027          			// 応答待ち
   3028          			man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_END_REQ);
   \   000024D8   0x206F             MOVS     R0,#+111
   \   000024DA   0x.... 0x....      BL       man_ota_set_sequense
   3029          		}
   3030          		break;
   \                     ??man_ota_main_455: (+1)
   \   000024DE   0xF000 0xFF6A      BL       ??man_ota_main_274
   3031          
   3032          
   3033          	// firmware PACKET(応答なし)データ送信
   3034          	case MAN_OTA_SEQ_FRMPKT_NEXT_REQ:		// GPS firmware PACKET(応答なし)データ送信 要求
   3035          		man_gps_req_packet_next(&man_ota_work.data_buff[0], man_ota_work.data_len, MAN_OTA_SEQ_FRMPKT_NEXT, man_ota_req_callback);
   \                     ??man_ota_main_217: (+1)
   \   000024E2   0x4B69             LDR      R3,??man_ota_main_445
   \   000024E4   0x226C             MOVS     R2,#+108
   \   000024E6   0x484E             LDR      R0,??man_ota_main_440+0x4
   \   000024E8   0x6801             LDR      R1,[R0, #+0]
   \   000024EA   0x48BA             LDR      R0,??man_ota_main_451+0x4
   \   000024EC   0x6800             LDR      R0,[R0, #+0]
   \   000024EE   0x.... 0x....      BL       man_gps_req_packet_next
   3036          		man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_NEXT);
   \   000024F2   0x206C             MOVS     R0,#+108
   \   000024F4   0x.... 0x....      BL       man_ota_set_sequense
   3037          		break;
   \   000024F8   0xF000 0xFF5D      BL       ??man_ota_main_274
   3038          	case MAN_OTA_SEQ_FRMPKT_NEXT:			// GPS firmware PACKET(応答なし)データ送信中
   3039          		break;
   \                     ??man_ota_main_218: (+1)
   \   000024FC   0xF000 0xFF5B      BL       ??man_ota_main_274
   3040          	case MAN_OTA_SEQ_FRMPKT_NEXT_OK:		// GPS firmware PACKET(応答なし)データ送信完了(成功)
   3041          		man_ota_work.exec_info.file_size += man_ota_work.data_len;
   \                     ??man_ota_main_219: (+1)
   \   00002500   0x4825             LDR      R0,??man_ota_main_437
   \   00002502   0x6C00             LDR      R0,[R0, #+64]
   \   00002504   0x4946             LDR      R1,??man_ota_main_440+0x4
   \   00002506   0x6809             LDR      R1,[R1, #+0]
   \   00002508   0x1840             ADDS     R0,R0,R1
   \   0000250A   0x4923             LDR      R1,??man_ota_main_437
   \   0000250C   0x6408             STR      R0,[R1, #+64]
   3042          		// firmware PACKETデータ取得へ遷移
   3043          		man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_SET);
   \   0000250E   0x206A             MOVS     R0,#+106
   \   00002510   0x.... 0x....      BL       man_ota_set_sequense
   3044          		break;
   \   00002514   0xF000 0xFF4F      BL       ??man_ota_main_274
   3045          	case MAN_OTA_SEQ_FRMPKT_NEXT_NG:		// GPS firmware PACKET(応答なし)データ送信完了(失敗)
   3046          		// 中止処理へ
   3047          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_220: (+1)
   \   00002518   0x2000             MOVS     R0,#+0
   \   0000251A   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000251C   0x491E             LDR      R1,??man_ota_main_437
   \   0000251E   0x6588             STR      R0,[R1, #+88]
   3048          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002520   0x20A2             MOVS     R0,#+162
   \   00002522   0x.... 0x....      BL       man_ota_set_sequense
   3049          		// エラー登録
   3050          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00002526   0x4BDF             LDR      R3,??man_ota_main_456  ;; 0xbea
   \   00002528   0x48DF             LDR      R0,??man_ota_main_456+0x4
   \   0000252A   0x6802             LDR      R2,[R0, #+0]
   \   0000252C   0x483C             LDR      R0,??man_ota_main_440+0x4
   \   0000252E   0x6801             LDR      R1,[R0, #+0]
   \   00002530   0x201B             MOVS     R0,#+27
   \   00002532   0x.... 0x....      BL       man_error_set
   3051          		break;
   \   00002536   0xF000 0xFF3E      BL       ??man_ota_main_274
   3052          
   3053          
   3054          	// firmware PACKET(応答あり)データ送信
   3055          	case MAN_OTA_SEQ_FRMPKT_END_REQ:		// GPS firmware PACKET(応答あり)データ送信 要求
   3056          		man_gps_req_packet_end(&man_ota_work.data_buff[0], man_ota_work.data_len, MAN_OTA_SEQ_FRMPKT_END, man_ota_req_callback);
   \                     ??man_ota_main_221: (+1)
   \   0000253A   0x4B53             LDR      R3,??man_ota_main_445
   \   0000253C   0x2270             MOVS     R2,#+112
   \   0000253E   0x4838             LDR      R0,??man_ota_main_440+0x4
   \   00002540   0x6801             LDR      R1,[R0, #+0]
   \   00002542   0x48A4             LDR      R0,??man_ota_main_451+0x4
   \   00002544   0x6800             LDR      R0,[R0, #+0]
   \   00002546   0x.... 0x....      BL       man_gps_req_packet_end
   3057          		man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_END);
   \   0000254A   0x2070             MOVS     R0,#+112
   \   0000254C   0x.... 0x....      BL       man_ota_set_sequense
   3058          		break;
   \   00002550   0xF000 0xFF31      BL       ??man_ota_main_274
   \                     ??man_ota_main_436:
   \   00002554   0x00000B27         DC32     0xb27
   \   00002558   0x4060005A         DC32     0x4060005a
   3059          	case MAN_OTA_SEQ_FRMPKT_END:			// GPS firmware PACKET(応答あり)データ送信中
   3060          		break;
   \                     ??man_ota_main_222: (+1)
   \   0000255C   0xF000 0xFF2B      BL       ??man_ota_main_274
   3061          	case MAN_OTA_SEQ_FRMPKT_END_OK:			// GPS firmware PACKET(応答あり)データ送信完了(成功)
   3062          		man_ota_work.exec_info.file_size += man_ota_work.data_len;
   \                     ??man_ota_main_223: (+1)
   \   00002560   0x480D             LDR      R0,??man_ota_main_437
   \   00002562   0x6C00             LDR      R0,[R0, #+64]
   \   00002564   0x492E             LDR      R1,??man_ota_main_440+0x4
   \   00002566   0x6809             LDR      R1,[R1, #+0]
   \   00002568   0x1840             ADDS     R0,R0,R1
   \   0000256A   0x490B             LDR      R1,??man_ota_main_437
   \   0000256C   0x6408             STR      R0,[R1, #+64]
   3063          		// 全て送信済み
   3064          		if (man_ota_work.file_info.size_firmware <= man_ota_work.exec_info.file_size)  {
   \   0000256E   0x480A             LDR      R0,??man_ota_main_437
   \   00002570   0x6C00             LDR      R0,[R0, #+64]
   \   00002572   0x4997             LDR      R1,??man_ota_main_451
   \   00002574   0x6809             LDR      R1,[R1, #+0]
   \   00002576   0x4288             CMP      R0,R1
   \   00002578   0xDB12             BLT      ??man_ota_main_457
   3065          			man_ota_set_sequense(MAN_OTA_SEQ_FDLPKT_DONE);
   \   0000257A   0x2074             MOVS     R0,#+116
   \   0000257C   0x.... 0x....      BL       man_ota_set_sequense
   3066          			man_ota_work.exec_info.file_size = 0;
   \   00002580   0x2000             MOVS     R0,#+0
   \   00002582   0x4905             LDR      R1,??man_ota_main_437
   \   00002584   0x6408             STR      R0,[R1, #+64]
   3067          			man_ota_work.exec_info.counter = 0;
   \   00002586   0x2000             MOVS     R0,#+0
   \   00002588   0x4903             LDR      R1,??man_ota_main_437
   \   0000258A   0x6108             STR      R0,[R1, #+16]
   3068          			man_ota_work.timer = man_timer_get_1ms_count();
   \   0000258C   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00002590   0x49C6             LDR      R1,??man_ota_main_456+0x8
   \   00002592   0x6008             STR      R0,[R1, #+0]
   \   00002594   0xE007             B        ??man_ota_main_458
   \   00002596   0xBF00             Nop      
   \                     ??man_ota_main_437:
   \   00002598   0x........         DC32     man_ota_work
   \   0000259C   0x00000B51         DC32     0xb51
   3069          		}
   3070          		// 送信途中
   3071          		else {
   3072          			// firmware PACKETデータ取得へ遷移
   3073          			man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_SET);
   \                     ??man_ota_main_457: (+1)
   \   000025A0   0x206A             MOVS     R0,#+106
   \   000025A2   0x.... 0x....      BL       man_ota_set_sequense
   3074          		}
   3075          		break;
   \                     ??man_ota_main_458: (+1)
   \   000025A6   0xF000 0xFF06      BL       ??man_ota_main_274
   3076          	case MAN_OTA_SEQ_FRMPKT_END_NG:			// GPS firmware PACKET(応答あり)データ送信完了(失敗)
   3077          		// 中止処理へ
   3078          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_224: (+1)
   \   000025AA   0x2000             MOVS     R0,#+0
   \   000025AC   0x43C0             MVNS     R0,R0            ;; #-1
   \   000025AE   0x49C0             LDR      R1,??man_ota_main_456+0xC
   \   000025B0   0x6588             STR      R0,[R1, #+88]
   3079          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000025B2   0x20A2             MOVS     R0,#+162
   \   000025B4   0x.... 0x....      BL       man_ota_set_sequense
   3080          		// エラー登録
   3081          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   000025B8   0x4BBE             LDR      R3,??man_ota_main_456+0x10  ;; 0xc09
   \   000025BA   0x48BB             LDR      R0,??man_ota_main_456+0x4
   \   000025BC   0x6802             LDR      R2,[R0, #+0]
   \   000025BE   0x4818             LDR      R0,??man_ota_main_440+0x4
   \   000025C0   0x6801             LDR      R1,[R0, #+0]
   \   000025C2   0x201B             MOVS     R0,#+27
   \   000025C4   0x.... 0x....      BL       man_error_set
   3082          		break;
   \   000025C8   0xF000 0xFEF5      BL       ??man_ota_main_274
   3083          	case MAN_OTA_SEQ_FRMPKT_END_RETRY:
   3084          		// PACKETの先頭に戻す
   3085          		man_ota_work.exec_info.file_size = man_ota_work.exec_info.pkt_top_size;
   \                     ??man_ota_main_225: (+1)
   \   000025CC   0x48B8             LDR      R0,??man_ota_main_456+0xC
   \   000025CE   0x6980             LDR      R0,[R0, #+24]
   \   000025D0   0x49B7             LDR      R1,??man_ota_main_456+0xC
   \   000025D2   0x6408             STR      R0,[R1, #+64]
   3086          		man_ota_work.exec_info.counter = man_ota_work.exec_info.pkt_top_cnt;
   \   000025D4   0x48B6             LDR      R0,??man_ota_main_456+0xC
   \   000025D6   0x6940             LDR      R0,[R0, #+20]
   \   000025D8   0x49B5             LDR      R1,??man_ota_main_456+0xC
   \   000025DA   0x6108             STR      R0,[R1, #+16]
   3087          		// firmware PACKETデータ取得へ遷移
   3088          		man_ota_set_sequense(MAN_OTA_SEQ_FRMPKT_SET);
   \   000025DC   0x206A             MOVS     R0,#+106
   \   000025DE   0x.... 0x....      BL       man_ota_set_sequense
   3089          		break;
   \   000025E2   0xF000 0xFEE8      BL       ??man_ota_main_274
   3090          
   3091          
   3092          
   3093          
   3094          	case MAN_OTA_SEQ_FDLPKT_DONE:			// GPS FDL DONE待ち
   3095          		// 20秒経過しても取得できない場合は、異常扱いとする
   3096          		delay = man_timer_get_elapsed_time(man_ota_work.timer, man_timer_get_1ms_count());
   \                     ??man_ota_main_226: (+1)
   \   000025E6   0x.... 0x....      BL       man_timer_get_1ms_count
   \   000025EA   0x0001             MOVS     R1,R0
   \   000025EC   0x48AF             LDR      R0,??man_ota_main_456+0x8
   \   000025EE   0x6800             LDR      R0,[R0, #+0]
   \   000025F0   0x.... 0x....      BL       man_timer_get_elapsed_time
   3097          		if (delay > 20000) {
   \   000025F4   0x49D7             LDR      R1,??man_ota_main_459  ;; 0x4e21
   \   000025F6   0x4288             CMP      R0,R1
   \   000025F8   0xD30E             BCC      ??man_ota_main_460
   3098          			// 中止処理へ
   3099          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   000025FA   0x2000             MOVS     R0,#+0
   \   000025FC   0x43C0             MVNS     R0,R0            ;; #-1
   \   000025FE   0x49AC             LDR      R1,??man_ota_main_456+0xC
   \   00002600   0x6588             STR      R0,[R1, #+88]
   3100          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002602   0x20A2             MOVS     R0,#+162
   \   00002604   0x.... 0x....      BL       man_ota_set_sequense
   3101          			// エラー登録
   3102          			man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00002608   0x4BDE             LDR      R3,??man_ota_main_461  ;; 0xc1e
   \   0000260A   0x48A7             LDR      R0,??man_ota_main_456+0x4
   \   0000260C   0x6802             LDR      R2,[R0, #+0]
   \   0000260E   0x4804             LDR      R0,??man_ota_main_440+0x4
   \   00002610   0x6801             LDR      R1,[R0, #+0]
   \   00002612   0x201B             MOVS     R0,#+27
   \   00002614   0x.... 0x....      BL       man_error_set
   3103          		}
   3104          		break;
   \                     ??man_ota_main_460: (+1)
   \   00002618   0xF000 0xFECD      BL       ??man_ota_main_274
   \                     ??man_ota_main_440:
   \   0000261C   0x........         DC32     man_ota_work+0x9C
   \   00002620   0x........         DC32     man_ota_work+0xC0
   \   00002624   0x........         DC32     man_ota_work+0xAC
   3105          	case MAN_OTA_SEQ_FDLPKT_DONE_OK:		// GPS FDL DONE受信
   3106          		// firmware注入安定(1000ms)を待ちに遷移
   3107          		man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_SET_END_OK);
   \                     ??man_ota_main_227: (+1)
   \   00002628   0x2076             MOVS     R0,#+118
   \   0000262A   0x.... 0x....      BL       man_ota_set_sequense
   3108          		break;
   \   0000262E   0xF000 0xFEC2      BL       ??man_ota_main_274
   3109          
   3110          
   3111          	case MAN_OTA_SEQ_FIRMWARE_SET_END_OK:
   3112          		// firmware注入安定(1000ms)を待つ
   3113          		man_timer_start_wait(TIMER_MAN_ID_APL_OTA + MAN_OTA_SEQ_FIRMWARE_END_WAIT, 1000, man_ota_req_callback);
   \                     ??man_ota_main_228: (+1)
   \   00002632   0x4A15             LDR      R2,??man_ota_main_445
   \   00002634   0x21FA             MOVS     R1,#+250
   \   00002636   0x0089             LSLS     R1,R1,#+2        ;; #+1000
   \   00002638   0x48D3             LDR      R0,??man_ota_main_461+0x4  ;; 0x40600077
   \   0000263A   0x.... 0x....      BL       man_timer_start_wait
   3114          		man_ota_set_sequense(MAN_OTA_SEQ_FIRMWARE_END_WAIT);
   \   0000263E   0x2077             MOVS     R0,#+119
   \   00002640   0x.... 0x....      BL       man_ota_set_sequense
   3115          		break;
   \   00002644   0xF000 0xFEB7      BL       ??man_ota_main_274
   3116          	case MAN_OTA_SEQ_FIRMWARE_END_WAIT:
   3117          		break;
   \                     ??man_ota_main_229: (+1)
   \   00002648   0xF000 0xFEB5      BL       ??man_ota_main_274
   3118          	case MAN_OTA_SEQ_FIRMWARE_END_WAIT_OK:
   3119          		//GPS OTA終了処理へ
   3120          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \                     ??man_ota_main_230: (+1)
   \   0000264C   0x20A2             MOVS     R0,#+162
   \   0000264E   0x.... 0x....      BL       man_ota_set_sequense
   3121          		break;
   \   00002652   0xF000 0xFEB0      BL       ??man_ota_main_274
   3122          	case MAN_OTA_SEQ_FIRMWARE_END_WAIT_NG:
   3123          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_231: (+1)
   \   00002656   0x2000             MOVS     R0,#+0
   \   00002658   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000265A   0x4995             LDR      R1,??man_ota_main_456+0xC
   \   0000265C   0x6588             STR      R0,[R1, #+88]
   3124          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   0000265E   0x20A2             MOVS     R0,#+162
   \   00002660   0x.... 0x....      BL       man_ota_set_sequense
   3125          		// エラー登録
   3126          		man_error_setting(MAN_ERROR_MAN_OTA, 0, 0);
   \   00002664   0x4BDA             LDR      R3,??man_ota_main_462  ;; 0xc36
   \   00002666   0x2200             MOVS     R2,#+0
   \   00002668   0x2100             MOVS     R1,#+0
   \   0000266A   0x201B             MOVS     R0,#+27
   \   0000266C   0x.... 0x....      BL       man_error_set
   3127          		break;
   \   00002670   0xF000 0xFEA1      BL       ??man_ota_main_274
   3128          
   3129          
   3130          
   3131          
   3132          	// ************************************
   3133          	// GPS用 OTA リトライ準備開始
   3134          	// ************************************
   3135          	case MAN_OTA_SEQ_GPS_OTA_RETRY_REQ:		// GPS用 OTA リトライ準備開始要求
   3136          		// OTA復帰開始(RESET)
   3137          		man_gps_req_retry_ota(MAN_OTA_SEQ_GPS_OTA_RETRY, man_ota_req_callback);
   \                     ??man_ota_main_232: (+1)
   \   00002674   0x4904             LDR      R1,??man_ota_main_445
   \   00002676   0x207B             MOVS     R0,#+123
   \   00002678   0x.... 0x....      BL       man_gps_req_retry_ota
   3138          		man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_RETRY);
   \   0000267C   0x207B             MOVS     R0,#+123
   \   0000267E   0x.... 0x....      BL       man_ota_set_sequense
   3139          		break;
   \   00002682   0xF000 0xFE98      BL       ??man_ota_main_274
   \   00002686   0xBF00             Nop      
   \                     ??man_ota_main_445:
   \   00002688   0x........         DC32     man_ota_req_callback
   \   0000268C   0x00000B8C         DC32     0xb8c
   \   00002690   0x00000BAA         DC32     0xbaa
   3140          	case MAN_OTA_SEQ_GPS_OTA_RETRY:			// GPS用 OTA リトライ準備
   3141          		break;
   \                     ??man_ota_main_233: (+1)
   \   00002694   0xF000 0xFE8F      BL       ??man_ota_main_274
   3142          	case MAN_OTA_SEQ_GPS_OTA_RETRY_OK:		// GPS用 OTA リトライ準備(正常)
   3143          		// updater file setから再開
   3144          		man_ota_work.exec_info.file_num = 1;
   \                     ??man_ota_main_234: (+1)
   \   00002698   0x2001             MOVS     R0,#+1
   \   0000269A   0x4985             LDR      R1,??man_ota_main_456+0xC
   \   0000269C   0x6388             STR      R0,[R1, #+56]
   3145          		man_ota_work.data_len = 0;
   \   0000269E   0x2000             MOVS     R0,#+0
   \   000026A0   0x49CC             LDR      R1,??man_ota_main_462+0x4
   \   000026A2   0x6008             STR      R0,[R1, #+0]
   3146          		man_ota_set_sequense(MAN_OTA_SEQ_UDL_SET_REQ);
   \   000026A4   0x204B             MOVS     R0,#+75
   \   000026A6   0x.... 0x....      BL       man_ota_set_sequense
   3147          		break;
   \   000026AA   0xF000 0xFE84      BL       ??man_ota_main_274
   3148          	case MAN_OTA_SEQ_GPS_OTA_RETRY_NG:		// GPS用 OTA リトライ準備(異常)
   3149          		// リトライする
   3150          		if (man_ota_work.exec_info.retry <= MAN_OTA_GPS_FORCED_RETRY_MAX) {
   \                     ??man_ota_main_235: (+1)
   \   000026AE   0x4880             LDR      R0,??man_ota_main_456+0xC
   \   000026B0   0x6D40             LDR      R0,[R0, #+84]
   \   000026B2   0x280B             CMP      R0,#+11
   \   000026B4   0xDA08             BGE      ??man_ota_main_463
   3151          			man_ota_work.exec_info.retry++;		// リトライカウンタの更新
   \   000026B6   0x487E             LDR      R0,??man_ota_main_456+0xC
   \   000026B8   0x6D40             LDR      R0,[R0, #+84]
   \   000026BA   0x1C40             ADDS     R0,R0,#+1
   \   000026BC   0x497C             LDR      R1,??man_ota_main_456+0xC
   \   000026BE   0x6548             STR      R0,[R1, #+84]
   3152          			// OTA復帰開始(RESET)
   3153          			man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_RETRY_REQ);
   \   000026C0   0x207A             MOVS     R0,#+122
   \   000026C2   0x.... 0x....      BL       man_ota_set_sequense
   \   000026C6   0xE00E             B        ??man_ota_main_464
   3154          		}
   3155          		else {
   3156          			// 中止処理へ
   3157          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_463: (+1)
   \   000026C8   0x2000             MOVS     R0,#+0
   \   000026CA   0x43C0             MVNS     R0,R0            ;; #-1
   \   000026CC   0x4978             LDR      R1,??man_ota_main_456+0xC
   \   000026CE   0x6588             STR      R0,[R1, #+88]
   3158          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000026D0   0x20A2             MOVS     R0,#+162
   \   000026D2   0x.... 0x....      BL       man_ota_set_sequense
   3159          			// エラー登録
   3160          			man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   000026D6   0x4BC0             LDR      R3,??man_ota_main_462+0x8  ;; 0xc58
   \   000026D8   0x4873             LDR      R0,??man_ota_main_456+0x4
   \   000026DA   0x6802             LDR      R2,[R0, #+0]
   \   000026DC   0x48BD             LDR      R0,??man_ota_main_462+0x4
   \   000026DE   0x6801             LDR      R1,[R0, #+0]
   \   000026E0   0x201B             MOVS     R0,#+27
   \   000026E2   0x.... 0x....      BL       man_error_set
   3161          		}
   3162          		break;
   \                     ??man_ota_main_464: (+1)
   \   000026E6   0xF000 0xFE66      BL       ??man_ota_main_274
   3163          
   3164          
   3165          	// ************************************
   3166          	// USB TERM FILE GET
   3167          	// ************************************
   3168          	case MAN_OTA_SEQ_USB_TERM_FILE_SET_REQ:		// USB 端末用 OTA FILE SET開始
   3169          		// FILE情報設定
   3170          		if (man_data_chk_program() == MAN_DATA_PRG_B_SIDE) {
   \                     ??man_ota_main_236: (+1)
   \   000026EA   0x.... 0x....      BL       man_data_chk_program
   \   000026EE   0x2801             CMP      R0,#+1
   \   000026F0   0xD115             BNE      ??man_ota_main_465
   3171          			memcpy(&man_ota_work.usb_file_info.filename[0], &usbota->filename[0], MAN_DATA_FILENAME_MAX+1);
   \   000026F2   0x2241             MOVS     R2,#+65
   \   000026F4   0x9901             LDR      R1,[SP, #+4]
   \   000026F6   0x4CDB             LDR      R4,??man_ota_main_466
   \   000026F8   0x0020             MOVS     R0,R4
   \   000026FA   0x.... 0x....      BL       __aeabi_memcpy
   3172          			memcpy(&man_ota_work.usb_file_info.fileonly[0], &usbota->fileonly[0], MAN_DATA_FILENAME_MAX+1);
   \   000026FE   0x2241             MOVS     R2,#+65
   \   00002700   0x9801             LDR      R0,[SP, #+4]
   \   00002702   0x0001             MOVS     R1,R0
   \   00002704   0x3141             ADDS     R1,R1,#+65
   \   00002706   0x4CD8             LDR      R4,??man_ota_main_466+0x4
   \   00002708   0x0020             MOVS     R0,R4
   \   0000270A   0x.... 0x....      BL       __aeabi_memcpy
   3173          			man_ota_work.flash_top = MAN_DATA_PRG_A_ADDR_TOP;
   \   0000270E   0x2080             MOVS     R0,#+128
   \   00002710   0x0240             LSLS     R0,R0,#+9        ;; #+65536
   \   00002712   0x4967             LDR      R1,??man_ota_main_456+0xC
   \   00002714   0x6048             STR      R0,[R1, #+4]
   3174          			man_ota_work.exec_info.file_offset = 0;
   \   00002716   0x2000             MOVS     R0,#+0
   \   00002718   0x4965             LDR      R1,??man_ota_main_456+0xC
   \   0000271A   0x6508             STR      R0,[R1, #+80]
   \   0000271C   0xE014             B        ??man_ota_main_467
   3175          		}
   3176          		else {
   3177          			memcpy(&man_ota_work.usb_file_info.filename[0], &usbota->filename[0], MAN_DATA_FILENAME_MAX+1);
   \                     ??man_ota_main_465: (+1)
   \   0000271E   0x2241             MOVS     R2,#+65
   \   00002720   0x9901             LDR      R1,[SP, #+4]
   \   00002722   0x4CD0             LDR      R4,??man_ota_main_466
   \   00002724   0x0020             MOVS     R0,R4
   \   00002726   0x.... 0x....      BL       __aeabi_memcpy
   3178          			memcpy(&man_ota_work.usb_file_info.fileonly[0], &usbota->fileonly[0], MAN_DATA_FILENAME_MAX+1);
   \   0000272A   0x2241             MOVS     R2,#+65
   \   0000272C   0x9801             LDR      R0,[SP, #+4]
   \   0000272E   0x0001             MOVS     R1,R0
   \   00002730   0x3141             ADDS     R1,R1,#+65
   \   00002732   0x4CCD             LDR      R4,??man_ota_main_466+0x4
   \   00002734   0x0020             MOVS     R0,R4
   \   00002736   0x.... 0x....      BL       __aeabi_memcpy
   3179          			man_ota_work.flash_top = MAN_DATA_PRG_B_ADDR_TOP;
   \   0000273A   0x2080             MOVS     R0,#+128
   \   0000273C   0x02C0             LSLS     R0,R0,#+11       ;; #+262144
   \   0000273E   0x495C             LDR      R1,??man_ota_main_456+0xC
   \   00002740   0x6048             STR      R0,[R1, #+4]
   3180          			man_ota_work.exec_info.file_offset = 100;
   \   00002742   0x2064             MOVS     R0,#+100
   \   00002744   0x495A             LDR      R1,??man_ota_main_456+0xC
   \   00002746   0x6508             STR      R0,[R1, #+80]
   3181          		}
   3182          		man_usb_set_file_info(man_ota_work.usb_file_info);
   \                     ??man_ota_main_467: (+1)
   \   00002748   0x49C6             LDR      R1,??man_ota_main_466
   \   0000274A   0xB084             SUB      SP,SP,#+16
   \   0000274C   0x4668             MOV      R0,SP
   \   0000274E   0x2282             MOVS     R2,#+130
   \   00002750   0x.... 0x....      BL       __aeabi_memcpy
   \   00002754   0xBC0F             POP      {R0-R3}
   \   00002756   0x.... 0x....      BL       man_usb_set_file_info
   3183          
   3184          		man_ota_work.exec_info.file_num = 1;
   \   0000275A   0x2001             MOVS     R0,#+1
   \   0000275C   0x4954             LDR      R1,??man_ota_main_456+0xC
   \   0000275E   0x6388             STR      R0,[R1, #+56]
   3185          		man_usb_ota_open();
   \   00002760   0x.... 0x....      BL       man_usb_ota_open
   3186          		// 取得ファイル情報送信
   3187          		man_usb_send_file_info(man_ota_work.exec_info.file_num+man_ota_work.exec_info.file_offset, MAN_OTA_USB_DATA_SIZE, MAN_OTA_SEQ_USB_TERM_FILE_SET, man_ota_req_callback);
   \   00002764   0x4BD6             LDR      R3,??man_ota_main_468
   \   00002766   0x227F             MOVS     R2,#+127
   \   00002768   0x2180             MOVS     R1,#+128
   \   0000276A   0x0089             LSLS     R1,R1,#+2        ;; #+512
   \   0000276C   0x4850             LDR      R0,??man_ota_main_456+0xC
   \   0000276E   0x6B80             LDR      R0,[R0, #+56]
   \   00002770   0x4C4F             LDR      R4,??man_ota_main_456+0xC
   \   00002772   0x6D24             LDR      R4,[R4, #+80]
   \   00002774   0x1900             ADDS     R0,R0,R4
   \   00002776   0x.... 0x....      BL       man_usb_send_file_info
   3188          		man_ota_set_sequense(MAN_OTA_SEQ_USB_TERM_FILE_SET);
   \   0000277A   0x207F             MOVS     R0,#+127
   \   0000277C   0x.... 0x....      BL       man_ota_set_sequense
   3189          		break;
   \   00002780   0xF000 0xFE19      BL       ??man_ota_main_274
   3190          	case MAN_OTA_SEQ_USB_TERM_FILE_SET:			// USB 端末用 OTA FILE SET
   3191          		break;
   \                     ??man_ota_main_237: (+1)
   \   00002784   0xF000 0xFE17      BL       ??man_ota_main_274
   3192          	case MAN_OTA_SEQ_USB_TERM_FILE_SET_OK:		// USB 端末用 OTA FILE SET(正常)
   3193          		usb_get_file_info = man_usb_get_file_info();
   \                     ??man_ota_main_238: (+1)
   \   00002788   0x.... 0x....      BL       man_usb_get_file_info
   3194          		// FILEサイズを保存
   3195          		man_ota_work.exec_info.usb_file_size = usb_get_file_info->file_size;
   \   0000278C   0x6800             LDR      R0,[R0, #+0]
   \   0000278E   0x4948             LDR      R1,??man_ota_main_456+0xC
   \   00002790   0x65C8             STR      R0,[R1, #+92]
   3196          
   3197          		// 想定サイズを超える場合は異常とする
   3198          		if (man_ota_work.exec_info.usb_file_size <= MAN_FLASH_SIZE_TERM_FIRM) {
   \   00002792   0x4847             LDR      R0,??man_ota_main_456+0xC
   \   00002794   0x6DC0             LDR      R0,[R0, #+92]
   \   00002796   0x49CB             LDR      R1,??man_ota_main_468+0x4  ;; 0x40001
   \   00002798   0x4288             CMP      R0,R1
   \   0000279A   0xDA09             BGE      ??man_ota_main_469
   3199          			man_ota_work.data_len = 0;
   \   0000279C   0x2000             MOVS     R0,#+0
   \   0000279E   0x498D             LDR      R1,??man_ota_main_462+0x4
   \   000027A0   0x6008             STR      R0,[R1, #+0]
   3200          			man_ota_work.summ = 0;
   \   000027A2   0x2000             MOVS     R0,#+0
   \   000027A4   0x49C8             LDR      R1,??man_ota_main_468+0x8
   \   000027A6   0x6008             STR      R0,[R1, #+0]
   3201          			// データ取得開始
   3202          			man_ota_set_sequense(MAN_OTA_SEQ_USB_TERM_DATA_GET_REQ);
   \   000027A8   0x2082             MOVS     R0,#+130
   \   000027AA   0x.... 0x....      BL       man_ota_set_sequense
   \   000027AE   0xE00D             B        ??man_ota_main_470
   3203          		}
   3204          		else {
   3205          			// 中止処理へ
   3206          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_469: (+1)
   \   000027B0   0x2000             MOVS     R0,#+0
   \   000027B2   0x43C0             MVNS     R0,R0            ;; #-1
   \   000027B4   0x493E             LDR      R1,??man_ota_main_456+0xC
   \   000027B6   0x6588             STR      R0,[R1, #+88]
   3207          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000027B8   0x20A2             MOVS     R0,#+162
   \   000027BA   0x.... 0x....      BL       man_ota_set_sequense
   3208          			// エラー登録
   3209          			man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.usb_file_size, 0);
   \   000027BE   0x4BC3             LDR      R3,??man_ota_main_468+0xC  ;; 0xc89
   \   000027C0   0x2200             MOVS     R2,#+0
   \   000027C2   0x483B             LDR      R0,??man_ota_main_456+0xC
   \   000027C4   0x6DC1             LDR      R1,[R0, #+92]
   \   000027C6   0x201B             MOVS     R0,#+27
   \   000027C8   0x.... 0x....      BL       man_error_set
   3210          		}
   3211          		break;
   \                     ??man_ota_main_470: (+1)
   \   000027CC   0xF000 0xFDF3      BL       ??man_ota_main_274
   \                     ??man_ota_main_451:
   \   000027D0   0x........         DC32     man_ota_work+0xA0
   \   000027D4   0x........         DC32     man_ota_work+0xBC
   \   000027D8   0x........         DC32     man_ota_work+0xB0
   3212          	case MAN_OTA_SEQ_USB_TERM_FILE_SET_NG:		// USB 端末用 OTA FILE SET(異常)
   3213          		// 中止処理へ
   3214          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_239: (+1)
   \   000027DC   0x2000             MOVS     R0,#+0
   \   000027DE   0x43C0             MVNS     R0,R0            ;; #-1
   \   000027E0   0x4933             LDR      R1,??man_ota_main_456+0xC
   \   000027E2   0x6588             STR      R0,[R1, #+88]
   3215          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000027E4   0x20A2             MOVS     R0,#+162
   \   000027E6   0x.... 0x....      BL       man_ota_set_sequense
   3216          		// エラー登録
   3217          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   000027EA   0x4BB9             LDR      R3,??man_ota_main_468+0x10  ;; 0xc91
   \   000027EC   0x482E             LDR      R0,??man_ota_main_456+0x4
   \   000027EE   0x6802             LDR      R2,[R0, #+0]
   \   000027F0   0x4878             LDR      R0,??man_ota_main_462+0x4
   \   000027F2   0x6801             LDR      R1,[R0, #+0]
   \   000027F4   0x201B             MOVS     R0,#+27
   \   000027F6   0x.... 0x....      BL       man_error_set
   3218          		break;
   \   000027FA   0xF000 0xFDDC      BL       ??man_ota_main_274
   3219          
   3220          	case MAN_OTA_SEQ_USB_TERM_DATA_GET_REQ:		// USB 端末用 OTA DATA GET開始
   3221          		// データ取得開始
   3222          		man_usb_get_data(MAN_OTA_SEQ_USB_TERM_DATA_GET, man_ota_data_callback);
   \                     ??man_ota_main_240: (+1)
   \   000027FE   0x49DA             LDR      R1,??man_ota_main_471
   \   00002800   0x2083             MOVS     R0,#+131
   \   00002802   0x.... 0x....      BL       man_usb_get_data
   3223          		man_ota_set_sequense(MAN_OTA_SEQ_USB_TERM_DATA_GET);
   \   00002806   0x2083             MOVS     R0,#+131
   \   00002808   0x.... 0x....      BL       man_ota_set_sequense
   3224          		break;
   \   0000280C   0xF000 0xFDD3      BL       ??man_ota_main_274
   3225          	case MAN_OTA_SEQ_USB_TERM_DATA_GET:			// USB 端末用 OTA DATA GET
   3226          		break;
   \                     ??man_ota_main_241: (+1)
   \   00002810   0xF000 0xFDD1      BL       ??man_ota_main_274
   3227          	case MAN_OTA_SEQ_USB_TERM_DATA_GET_OK:		// USB 端末用 OTA DATA GET(正常)
   3228          		if (man_ota_work.resp_cmd.data_len != 0) {
   \                     ??man_ota_main_242: (+1)
   \   00002814   0x4824             LDR      R0,??man_ota_main_456+0x4
   \   00002816   0x6800             LDR      R0,[R0, #+0]
   \   00002818   0x2800             CMP      R0,#+0
   \   0000281A   0xD04D             BEQ      ??man_ota_main_472
   3229          			// 外部FLASHにman_ota_work.resp_cmd.dataを書き込む
   3230          			// data部にはCR+LFが含まれているためman_ota_work.resp_cmd.data_len-2バイトをコピーする
   3231          			for (i=0; i<man_ota_work.resp_cmd.data_len-2; i++) {
   \   0000281C   0x2400             MOVS     R4,#+0
   \   0000281E   0xE038             B        ??man_ota_main_473
   3232          				man_ota_work.data_buff[man_ota_work.data_len] = man_ota_work.resp_cmd.data[i];
   \                     ??man_ota_main_474: (+1)
   \   00002820   0x48D2             LDR      R0,??man_ota_main_471+0x4
   \   00002822   0x6800             LDR      R0,[R0, #+0]
   \   00002824   0x5D00             LDRB     R0,[R0, R4]
   \   00002826   0x49D2             LDR      R1,??man_ota_main_471+0x8
   \   00002828   0x6809             LDR      R1,[R1, #+0]
   \   0000282A   0x4A6A             LDR      R2,??man_ota_main_462+0x4
   \   0000282C   0x6812             LDR      R2,[R2, #+0]
   \   0000282E   0x5488             STRB     R0,[R1, R2]
   3233          				man_ota_work.summ += man_ota_work.resp_cmd.data[i];
   \   00002830   0x48A5             LDR      R0,??man_ota_main_468+0x8
   \   00002832   0x6800             LDR      R0,[R0, #+0]
   \   00002834   0x49CD             LDR      R1,??man_ota_main_471+0x4
   \   00002836   0x6809             LDR      R1,[R1, #+0]
   \   00002838   0x5D09             LDRB     R1,[R1, R4]
   \   0000283A   0x1840             ADDS     R0,R0,R1
   \   0000283C   0x49A2             LDR      R1,??man_ota_main_468+0x8
   \   0000283E   0x6008             STR      R0,[R1, #+0]
   3234          				man_ota_work.data_len++;
   \   00002840   0x4864             LDR      R0,??man_ota_main_462+0x4
   \   00002842   0x6800             LDR      R0,[R0, #+0]
   \   00002844   0x1C40             ADDS     R0,R0,#+1
   \   00002846   0x4963             LDR      R1,??man_ota_main_462+0x4
   \   00002848   0x6008             STR      R0,[R1, #+0]
   3235          
   3236          				// PAGEサイズを超えるとFLASHに書き込む
   3237          				if (man_ota_work.data_len >= MAN_FLASH_PAGE_SIZE) {
   \   0000284A   0x4862             LDR      R0,??man_ota_main_462+0x4
   \   0000284C   0x6800             LDR      R0,[R0, #+0]
   \   0000284E   0x28FF             CMP      R0,#+255
   \   00002850   0xDD1E             BLE      ??man_ota_main_475
   3238          					ret = man_flash_write_page(man_ota_work.file_info.addr_term + man_ota_work.file_info.size_term, &man_ota_work.data_buff[0], MAN_FLASH_PAGE_SIZE);
   \   00002852   0x2280             MOVS     R2,#+128
   \   00002854   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   00002856   0x48C6             LDR      R0,??man_ota_main_471+0x8
   \   00002858   0x6801             LDR      R1,[R0, #+0]
   \   0000285A   0x48C6             LDR      R0,??man_ota_main_471+0xC
   \   0000285C   0x6800             LDR      R0,[R0, #+0]
   \   0000285E   0x4BC6             LDR      R3,??man_ota_main_471+0x10
   \   00002860   0x681B             LDR      R3,[R3, #+0]
   \   00002862   0x18C0             ADDS     R0,R0,R3
   \   00002864   0x.... 0x....      BL       man_flash_write_page
   3239          					if (ret < 0) {
   \   00002868   0x2800             CMP      R0,#+0
   \   0000286A   0xD503             BPL      ??man_ota_main_476
   3240          						// 外部FLASH書き込み異常
   3241          						man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   0000286C   0x2000             MOVS     R0,#+0
   \   0000286E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002870   0x490F             LDR      R1,??man_ota_main_456+0xC
   \   00002872   0x6588             STR      R0,[R1, #+88]
   3242          					}
   3243          					man_ota_work.data_len -= MAN_FLASH_PAGE_SIZE;
   \                     ??man_ota_main_476: (+1)
   \   00002874   0x4857             LDR      R0,??man_ota_main_462+0x4
   \   00002876   0x6800             LDR      R0,[R0, #+0]
   \   00002878   0x21FF             MOVS     R1,#+255
   \   0000287A   0x43C9             MVNS     R1,R1            ;; #-256
   \   0000287C   0x1840             ADDS     R0,R0,R1
   \   0000287E   0x4955             LDR      R1,??man_ota_main_462+0x4
   \   00002880   0x6008             STR      R0,[R1, #+0]
   3244          					man_ota_work.file_info.size_term += MAN_FLASH_PAGE_SIZE;
   \   00002882   0x48BD             LDR      R0,??man_ota_main_471+0x10
   \   00002884   0x6800             LDR      R0,[R0, #+0]
   \   00002886   0x2180             MOVS     R1,#+128
   \   00002888   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \   0000288A   0x1840             ADDS     R0,R0,R1
   \   0000288C   0x49BA             LDR      R1,??man_ota_main_471+0x10
   \   0000288E   0x6008             STR      R0,[R1, #+0]
   3245          				}
   3246          			}
   \                     ??man_ota_main_475: (+1)
   \   00002890   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_ota_main_473: (+1)
   \   00002892   0x4805             LDR      R0,??man_ota_main_456+0x4
   \   00002894   0x6800             LDR      R0,[R0, #+0]
   \   00002896   0x1E80             SUBS     R0,R0,#+2
   \   00002898   0x4284             CMP      R4,R0
   \   0000289A   0xDBC1             BLT      ??man_ota_main_474
   3247          			// 次のシーケンスへ遷移
   3248          			man_ota_set_sequense(MAN_OTA_SEQ_USB_TERM_DATA_GET_REQ);
   \   0000289C   0x2082             MOVS     R0,#+130
   \   0000289E   0x.... 0x....      BL       man_ota_set_sequense
   \   000028A2   0xE082             B        ??man_ota_main_477
   \                     ??man_ota_main_456:
   \   000028A4   0x00000BEA         DC32     0xbea
   \   000028A8   0x........         DC32     man_ota_work+0x80
   \   000028AC   0x........         DC32     man_ota_work+0x2C0
   \   000028B0   0x........         DC32     man_ota_work
   \   000028B4   0x00000C09         DC32     0xc09
   3249          		}
   3250          		else {
   3251          			// 残りをFLASHに書き込む
   3252          			if (man_ota_work.data_len > 0) {
   \                     ??man_ota_main_472: (+1)
   \   000028B8   0x4846             LDR      R0,??man_ota_main_462+0x4
   \   000028BA   0x6800             LDR      R0,[R0, #+0]
   \   000028BC   0x2801             CMP      R0,#+1
   \   000028BE   0xDB25             BLT      ??man_ota_main_478
   3253          				ret = man_flash_write_page(man_ota_work.file_info.addr_term + man_ota_work.file_info.size_term, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   000028C0   0x4844             LDR      R0,??man_ota_main_462+0x4
   \   000028C2   0x6802             LDR      R2,[R0, #+0]
   \   000028C4   0x48AA             LDR      R0,??man_ota_main_471+0x8
   \   000028C6   0x6801             LDR      R1,[R0, #+0]
   \   000028C8   0x48AA             LDR      R0,??man_ota_main_471+0xC
   \   000028CA   0x6800             LDR      R0,[R0, #+0]
   \   000028CC   0x4BAA             LDR      R3,??man_ota_main_471+0x10
   \   000028CE   0x681B             LDR      R3,[R3, #+0]
   \   000028D0   0x18C0             ADDS     R0,R0,R3
   \   000028D2   0x.... 0x....      BL       man_flash_write_page
   3254          				if (ret < 0) {
   \   000028D6   0x2800             CMP      R0,#+0
   \   000028D8   0xD50E             BPL      ??man_ota_main_479
   3255          					// 外部FLASH書き込み異常
   3256          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   000028DA   0x2000             MOVS     R0,#+0
   \   000028DC   0x43C0             MVNS     R0,R0            ;; #-1
   \   000028DE   0x49DE             LDR      R1,??man_ota_main_480
   \   000028E0   0x6588             STR      R0,[R1, #+88]
   3257          					// エラー登録
   3258          					man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.addr_term + man_ota_work.file_info.size_term, man_ota_work.data_len);
   \   000028E2   0x4BDE             LDR      R3,??man_ota_main_480+0x4  ;; 0xcba
   \   000028E4   0x483B             LDR      R0,??man_ota_main_462+0x4
   \   000028E6   0x6802             LDR      R2,[R0, #+0]
   \   000028E8   0x48A2             LDR      R0,??man_ota_main_471+0xC
   \   000028EA   0x6800             LDR      R0,[R0, #+0]
   \   000028EC   0x49A2             LDR      R1,??man_ota_main_471+0x10
   \   000028EE   0x6809             LDR      R1,[R1, #+0]
   \   000028F0   0x1841             ADDS     R1,R0,R1
   \   000028F2   0x201B             MOVS     R0,#+27
   \   000028F4   0x.... 0x....      BL       man_error_set
   3259          				}
   3260          				man_ota_work.file_info.size_term += man_ota_work.data_len;
   \                     ??man_ota_main_479: (+1)
   \   000028F8   0x489F             LDR      R0,??man_ota_main_471+0x10
   \   000028FA   0x6800             LDR      R0,[R0, #+0]
   \   000028FC   0x4935             LDR      R1,??man_ota_main_462+0x4
   \   000028FE   0x6809             LDR      R1,[R1, #+0]
   \   00002900   0x1840             ADDS     R0,R0,R1
   \   00002902   0x499D             LDR      R1,??man_ota_main_471+0x10
   \   00002904   0x6008             STR      R0,[R1, #+0]
   3261          				man_ota_work.data_len = 0;
   \   00002906   0x2000             MOVS     R0,#+0
   \   00002908   0x4932             LDR      R1,??man_ota_main_462+0x4
   \   0000290A   0x6008             STR      R0,[R1, #+0]
   3262          			}
   3263          
   3264          			// 外部FLASH書き込み異常時はチェックSUM異常扱いとする
   3265          			if (man_ota_work.exec_info.result != MAN_OTA_STATUS_NG) {
   \                     ??man_ota_main_478: (+1)
   \   0000290C   0x48D2             LDR      R0,??man_ota_main_480
   \   0000290E   0x6D80             LDR      R0,[R0, #+88]
   \   00002910   0x2100             MOVS     R1,#+0
   \   00002912   0x43C9             MVNS     R1,R1            ;; #-1
   \   00002914   0x4288             CMP      R0,R1
   \   00002916   0xD00A             BEQ      ??man_ota_main_481
   3266          				// チェックSUM
   3267          				ret = man_ota_check_summ_data(man_ota_work.file_info.addr_term + man_ota_work.file_info.size_term-4, man_ota_work.summ);
   \   00002918   0x486B             LDR      R0,??man_ota_main_468+0x8
   \   0000291A   0x6801             LDR      R1,[R0, #+0]
   \   0000291C   0x4895             LDR      R0,??man_ota_main_471+0xC
   \   0000291E   0x6800             LDR      R0,[R0, #+0]
   \   00002920   0x4A95             LDR      R2,??man_ota_main_471+0x10
   \   00002922   0x6812             LDR      R2,[R2, #+0]
   \   00002924   0x1880             ADDS     R0,R0,R2
   \   00002926   0x1F00             SUBS     R0,R0,#+4
   \   00002928   0x.... 0x....      BL       man_ota_check_summ_data
   \   0000292C   0xE001             B        ??man_ota_main_482
   3268          			}
   3269          			else {
   3270          				ret = -1;
   \                     ??man_ota_main_481: (+1)
   \   0000292E   0x2000             MOVS     R0,#+0
   \   00002930   0x43C0             MVNS     R0,R0            ;; #-1
   3271          			}
   3272          
   3273          			// チェックSUM異常
   3274          			if(ret < 0) {
   \                     ??man_ota_main_482: (+1)
   \   00002932   0x2800             CMP      R0,#+0
   \   00002934   0xD510             BPL      ??man_ota_main_483
   3275          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002936   0x2000             MOVS     R0,#+0
   \   00002938   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000293A   0x49C7             LDR      R1,??man_ota_main_480
   \   0000293C   0x6588             STR      R0,[R1, #+88]
   3276          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   0000293E   0x20A2             MOVS     R0,#+162
   \   00002940   0x.... 0x....      BL       man_ota_set_sequense
   3277          				// エラー登録
   3278          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.size_term, 0);
   \   00002944   0x4BCE             LDR      R3,??man_ota_main_484  ;; 0xcce
   \   00002946   0x2200             MOVS     R2,#+0
   \   00002948   0x488B             LDR      R0,??man_ota_main_471+0x10
   \   0000294A   0x6801             LDR      R1,[R0, #+0]
   \   0000294C   0x201B             MOVS     R0,#+27
   \   0000294E   0x.... 0x....      BL       man_error_set
   \   00002952   0xE02A             B        ??man_ota_main_477
   \                     ??man_ota_main_459:
   \   00002954   0x00004E21         DC32     0x4e21
   3279          			}
   3280          			else {
   3281          
   3282          				// 受信したサイズを確認する
   3283          				if (man_ota_work.exec_info.usb_file_size != man_ota_work.file_info.size_term) {
   \                     ??man_ota_main_483: (+1)
   \   00002958   0x48BF             LDR      R0,??man_ota_main_480
   \   0000295A   0x6DC0             LDR      R0,[R0, #+92]
   \   0000295C   0x4986             LDR      R1,??man_ota_main_471+0x10
   \   0000295E   0x6809             LDR      R1,[R1, #+0]
   \   00002960   0x4288             CMP      R0,R1
   \   00002962   0xD013             BEQ      ??man_ota_main_485
   3284          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002964   0x2000             MOVS     R0,#+0
   \   00002966   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002968   0x49BB             LDR      R1,??man_ota_main_480
   \   0000296A   0x6588             STR      R0,[R1, #+88]
   3285          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   0000296C   0x20A2             MOVS     R0,#+162
   \   0000296E   0x.... 0x....      BL       man_ota_set_sequense
   3286          					// エラー登録
   3287          					man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.usb_file_size, man_ota_work.file_info.size_term);
   \   00002972   0x4BC4             LDR      R3,??man_ota_main_484+0x4  ;; 0xcd7
   \   00002974   0x4880             LDR      R0,??man_ota_main_471+0x10
   \   00002976   0x6802             LDR      R2,[R0, #+0]
   \   00002978   0x48B7             LDR      R0,??man_ota_main_480
   \   0000297A   0x6DC1             LDR      R1,[R0, #+92]
   \   0000297C   0x201B             MOVS     R0,#+27
   \   0000297E   0x.... 0x....      BL       man_error_set
   \   00002982   0xE012             B        ??man_ota_main_477
   \                     ??man_ota_main_461:
   \   00002984   0x00000C1E         DC32     0xc1e
   \   00002988   0x40600077         DC32     0x40600077
   3288          				}
   3289          				else {
   3290          					// 外部フラッシュ情報記憶
   3291          					man_ota_work.file_info.size_term -= 4;									// チェックSUM分の4Byteサイズを減らす
   \                     ??man_ota_main_485: (+1)
   \   0000298C   0x487A             LDR      R0,??man_ota_main_471+0x10
   \   0000298E   0x6800             LDR      R0,[R0, #+0]
   \   00002990   0x1F00             SUBS     R0,R0,#+4
   \   00002992   0x4979             LDR      R1,??man_ota_main_471+0x10
   \   00002994   0x6008             STR      R0,[R1, #+0]
   3292          
   3293          					man_ota_work.exec_info.value = man_ota_work.file_info.size_term;
   \   00002996   0x4878             LDR      R0,??man_ota_main_471+0x10
   \   00002998   0x6800             LDR      R0,[R0, #+0]
   \   0000299A   0x49AF             LDR      R1,??man_ota_main_480
   \   0000299C   0x62C8             STR      R0,[R1, #+44]
   3294          					man_ota_work.exec_info.write_num = 0;
   \   0000299E   0x2000             MOVS     R0,#+0
   \   000029A0   0x49AD             LDR      R1,??man_ota_main_480
   \   000029A2   0x6448             STR      R0,[R1, #+68]
   3295          				
   3296          					// 内部フラッシュ消去処理に移行
   3297          					man_ota_set_sequense(MAN_OTA_SEQ_TERM_OTA_ERASE_REQ);
   \   000029A4   0x202B             MOVS     R0,#+43
   \   000029A6   0x.... 0x....      BL       man_ota_set_sequense
   3298          				}
   3299          			}
   3300          		}
   3301          		break;
   \                     ??man_ota_main_477: (+1)
   \   000029AA   0xF000 0xFD04      BL       ??man_ota_main_274
   3302          	case MAN_OTA_SEQ_USB_TERM_DATA_GET_NG:		// USB 端末用 OTA DATA GET(異常)
   3303          		// 中止処理へ
   3304          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_243: (+1)
   \   000029AE   0x2000             MOVS     R0,#+0
   \   000029B0   0x43C0             MVNS     R0,R0            ;; #-1
   \   000029B2   0x49A9             LDR      R1,??man_ota_main_480
   \   000029B4   0x6588             STR      R0,[R1, #+88]
   3305          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   000029B6   0x20A2             MOVS     R0,#+162
   \   000029B8   0x.... 0x....      BL       man_ota_set_sequense
   3306          		// エラー登録
   3307          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   000029BC   0x4BDA             LDR      R3,??man_ota_main_486  ;; 0xceb
   \   000029BE   0x48DB             LDR      R0,??man_ota_main_486+0x4
   \   000029C0   0x6802             LDR      R2,[R0, #+0]
   \   000029C2   0x4804             LDR      R0,??man_ota_main_462+0x4
   \   000029C4   0x6801             LDR      R1,[R0, #+0]
   \   000029C6   0x201B             MOVS     R0,#+27
   \   000029C8   0x.... 0x....      BL       man_error_set
   3308          		break;
   \   000029CC   0xF000 0xFCF3      BL       ??man_ota_main_274
   \                     ??man_ota_main_462:
   \   000029D0   0x00000C36         DC32     0xc36
   \   000029D4   0x........         DC32     man_ota_work+0xC0
   \   000029D8   0x00000C58         DC32     0xc58
   3309          
   3310          
   3311          	// ************************************
   3312          	// USB CONFIG FILE GET
   3313          	// ************************************
   3314          	case MAN_OTA_SEQ_USB_CONFIG_FILE_SET_REQ:	// USB GPS CONFIG FILE SET開始
   3315          		// CONFIGの準備
   3316          		memcpy(&man_ota_work.usb_file_info.filename[0], &usbgpsota->config[0], MAN_DATA_FILENAME_MAX+1);
   \                     ??man_ota_main_244: (+1)
   \   000029DC   0x2241             MOVS     R2,#+65
   \   000029DE   0x0039             MOVS     R1,R7
   \   000029E0   0x3182             ADDS     R1,R1,#+130
   \   000029E2   0x4C20             LDR      R4,??man_ota_main_466
   \   000029E4   0x0020             MOVS     R0,R4
   \   000029E6   0x.... 0x....      BL       __aeabi_memcpy
   3317          		memcpy(&man_ota_work.usb_file_info.fileonly[0], &usbgpsota->config_only[0], MAN_DATA_FILENAME_MAX+1);
   \   000029EA   0x2241             MOVS     R2,#+65
   \   000029EC   0x0039             MOVS     R1,R7
   \   000029EE   0x31C3             ADDS     R1,R1,#+195
   \   000029F0   0x4C1D             LDR      R4,??man_ota_main_466+0x4
   \   000029F2   0x0020             MOVS     R0,R4
   \   000029F4   0x.... 0x....      BL       __aeabi_memcpy
   3318          		man_usb_set_file_info(man_ota_work.usb_file_info);
   \   000029F8   0x491A             LDR      R1,??man_ota_main_466
   \   000029FA   0xB084             SUB      SP,SP,#+16
   \   000029FC   0x4668             MOV      R0,SP
   \   000029FE   0x2282             MOVS     R2,#+130
   \   00002A00   0x.... 0x....      BL       __aeabi_memcpy
   \   00002A04   0xBC0F             POP      {R0-R3}
   \   00002A06   0x.... 0x....      BL       man_usb_set_file_info
   3319          		man_ota_work.exec_info.exec_file = 0;
   \   00002A0A   0x2000             MOVS     R0,#+0
   \   00002A0C   0x4992             LDR      R1,??man_ota_main_480
   \   00002A0E   0x6348             STR      R0,[R1, #+52]
   3320          
   3321          		man_ota_work.exec_info.file_num = 1;
   \   00002A10   0x2001             MOVS     R0,#+1
   \   00002A12   0x4991             LDR      R1,??man_ota_main_480
   \   00002A14   0x6388             STR      R0,[R1, #+56]
   3322          		man_usb_send_file_info(man_ota_work.exec_info.file_num, MAN_OTA_USB_DATA_SIZE, MAN_OTA_SEQ_USB_CONFIG_FILE_SET, man_ota_req_callback);
   \   00002A16   0x4B2A             LDR      R3,??man_ota_main_468
   \   00002A18   0x2287             MOVS     R2,#+135
   \   00002A1A   0x2180             MOVS     R1,#+128
   \   00002A1C   0x0089             LSLS     R1,R1,#+2        ;; #+512
   \   00002A1E   0x488E             LDR      R0,??man_ota_main_480
   \   00002A20   0x6B80             LDR      R0,[R0, #+56]
   \   00002A22   0x.... 0x....      BL       man_usb_send_file_info
   3323          		man_ota_set_sequense(MAN_OTA_SEQ_USB_CONFIG_FILE_SET);
   \   00002A26   0x2087             MOVS     R0,#+135
   \   00002A28   0x.... 0x....      BL       man_ota_set_sequense
   3324          		break;
   \   00002A2C   0xF000 0xFCC3      BL       ??man_ota_main_274
   3325          	case MAN_OTA_SEQ_USB_CONFIG_FILE_SET:		// USB GPS CONFIG FILE SET
   3326          		break;
   \                     ??man_ota_main_245: (+1)
   \   00002A30   0xF000 0xFCC1      BL       ??man_ota_main_274
   3327          	case MAN_OTA_SEQ_USB_CONFIG_FILE_SET_OK:	// USB GPS CONFIG FILE SET(正常)
   3328          		usb_get_file_info = man_usb_get_file_info();
   \                     ??man_ota_main_246: (+1)
   \   00002A34   0x.... 0x....      BL       man_usb_get_file_info
   3329          		// FILEサイズを保存
   3330          		man_ota_work.exec_info.usb_file_size = usb_get_file_info->file_size;
   \   00002A38   0x6800             LDR      R0,[R0, #+0]
   \   00002A3A   0x4987             LDR      R1,??man_ota_main_480
   \   00002A3C   0x65C8             STR      R0,[R1, #+92]
   3331          	
   3332          		// 想定サイズを超える場合は異常とする
   3333          		if (man_ota_work.exec_info.usb_file_size <= MAN_FLASH_SIZE_GPS_CONFIG) {
   \   00002A3E   0x4886             LDR      R0,??man_ota_main_480
   \   00002A40   0x6DC0             LDR      R0,[R0, #+92]
   \   00002A42   0x4920             LDR      R1,??man_ota_main_468+0x4  ;; 0x40001
   \   00002A44   0x4288             CMP      R0,R1
   \   00002A46   0xDA11             BGE      ??man_ota_main_487
   3334          			// 一時情報の初期化
   3335          			man_ota_work.file_info.size_config = 0;
   \   00002A48   0x2000             MOVS     R0,#+0
   \   00002A4A   0x49C6             LDR      R1,??man_ota_main_488
   \   00002A4C   0x6008             STR      R0,[R1, #+0]
   3336          			man_ota_work.data_len = 0;
   \   00002A4E   0x2000             MOVS     R0,#+0
   \   00002A50   0x49C5             LDR      R1,??man_ota_main_488+0x4
   \   00002A52   0x6008             STR      R0,[R1, #+0]
   3337          			man_ota_work.summ = 0;
   \   00002A54   0x2000             MOVS     R0,#+0
   \   00002A56   0x491C             LDR      R1,??man_ota_main_468+0x8
   \   00002A58   0x6008             STR      R0,[R1, #+0]
   3338          			// データ取得開始
   3339          			man_ota_set_sequense(MAN_OTA_SEQ_USB_CONFIG_DATA_GET_REQ);
   \   00002A5A   0x208A             MOVS     R0,#+138
   \   00002A5C   0x.... 0x....      BL       man_ota_set_sequense
   \   00002A60   0xE012             B        ??man_ota_main_489
   \   00002A62   0xBF00             Nop      
   \                     ??man_ota_main_466:
   \   00002A64   0x........         DC32     man_ota_work+0x1D3
   \   00002A68   0x........         DC32     man_ota_work+0x214
   3340          		}
   3341          		else {
   3342          			// 中止処理へ
   3343          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_487: (+1)
   \   00002A6C   0x2000             MOVS     R0,#+0
   \   00002A6E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002A70   0x4979             LDR      R1,??man_ota_main_480
   \   00002A72   0x6588             STR      R0,[R1, #+88]
   3344          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002A74   0x20A2             MOVS     R0,#+162
   \   00002A76   0x.... 0x....      BL       man_ota_set_sequense
   3345          			// エラー登録
   3346          			man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.usb_file_size, 0);
   \   00002A7A   0x4BBC             LDR      R3,??man_ota_main_488+0x8  ;; 0xd12
   \   00002A7C   0x2200             MOVS     R2,#+0
   \   00002A7E   0x4876             LDR      R0,??man_ota_main_480
   \   00002A80   0x6DC1             LDR      R1,[R0, #+92]
   \   00002A82   0x201B             MOVS     R0,#+27
   \   00002A84   0x.... 0x....      BL       man_error_set
   3347          		}
   3348          		break;
   \                     ??man_ota_main_489: (+1)
   \   00002A88   0xF000 0xFC95      BL       ??man_ota_main_274
   3349          	case MAN_OTA_SEQ_USB_CONFIG_FILE_SET_NG:	// USB GPS CONFIG FILE SET(異常)
   3350          		// 中止処理へ
   3351          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_247: (+1)
   \   00002A8C   0x2000             MOVS     R0,#+0
   \   00002A8E   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002A90   0x4971             LDR      R1,??man_ota_main_480
   \   00002A92   0x6588             STR      R0,[R1, #+88]
   3352          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002A94   0x20A2             MOVS     R0,#+162
   \   00002A96   0x.... 0x....      BL       man_ota_set_sequense
   3353          		// エラー登録
   3354          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00002A9A   0x4BDA             LDR      R3,??man_ota_main_490  ;; 0xd1a
   \   00002A9C   0x48A3             LDR      R0,??man_ota_main_486+0x4
   \   00002A9E   0x6802             LDR      R2,[R0, #+0]
   \   00002AA0   0x48B1             LDR      R0,??man_ota_main_488+0x4
   \   00002AA2   0x6801             LDR      R1,[R0, #+0]
   \   00002AA4   0x201B             MOVS     R0,#+27
   \   00002AA6   0x.... 0x....      BL       man_error_set
   3355          		break;
   \   00002AAA   0xF000 0xFC84      BL       ??man_ota_main_274
   3356          	case MAN_OTA_SEQ_USB_CONFIG_DATA_GET_REQ:	// USB GPS CONFIG DATA GET開始
   3357          		// データ取得開始
   3358          		man_usb_get_data(MAN_OTA_SEQ_USB_CONFIG_DATA_GET, man_ota_data_callback);
   \                     ??man_ota_main_248: (+1)
   \   00002AAE   0x492E             LDR      R1,??man_ota_main_471
   \   00002AB0   0x208B             MOVS     R0,#+139
   \   00002AB2   0x.... 0x....      BL       man_usb_get_data
   3359          		man_ota_set_sequense(MAN_OTA_SEQ_USB_CONFIG_DATA_GET);
   \   00002AB6   0x208B             MOVS     R0,#+139
   \   00002AB8   0x.... 0x....      BL       man_ota_set_sequense
   3360          		break;
   \   00002ABC   0xF000 0xFC7B      BL       ??man_ota_main_274
   \                     ??man_ota_main_468:
   \   00002AC0   0x........         DC32     man_ota_req_callback
   \   00002AC4   0x00040001         DC32     0x40001
   \   00002AC8   0x........         DC32     man_ota_work+0xC4
   \   00002ACC   0x00000C89         DC32     0xc89
   \   00002AD0   0x00000C91         DC32     0xc91
   3361          	case MAN_OTA_SEQ_USB_CONFIG_DATA_GET:		// USB GPS CONFIG DATA GET
   3362          		break;
   \                     ??man_ota_main_249: (+1)
   \   00002AD4   0xF000 0xFC6F      BL       ??man_ota_main_274
   3363          	case MAN_OTA_SEQ_USB_CONFIG_DATA_GET_OK:	// USB GPS CONFIG DATA GET(正常)
   3364          		if (man_ota_work.resp_cmd.data_len != 0) {
   \                     ??man_ota_main_250: (+1)
   \   00002AD8   0x4894             LDR      R0,??man_ota_main_486+0x4
   \   00002ADA   0x6800             LDR      R0,[R0, #+0]
   \   00002ADC   0x2800             CMP      R0,#+0
   \   00002ADE   0xD04D             BEQ      ??man_ota_main_491
   3365          			// 外部FLASHにman_ota_work.resp_cmd.dataを書き込む
   3366          			// data部にはCR+LFが含まれているためman_ota_work.resp_cmd.data_len-2バイトをコピーする
   3367          			for (i=0; i<man_ota_work.resp_cmd.data_len-2; i++) {
   \   00002AE0   0x2400             MOVS     R4,#+0
   \   00002AE2   0xE038             B        ??man_ota_main_492
   3368          				man_ota_work.data_buff[man_ota_work.data_len] = man_ota_work.resp_cmd.data[i];
   \                     ??man_ota_main_493: (+1)
   \   00002AE4   0x4821             LDR      R0,??man_ota_main_471+0x4
   \   00002AE6   0x6800             LDR      R0,[R0, #+0]
   \   00002AE8   0x5D00             LDRB     R0,[R0, R4]
   \   00002AEA   0x4921             LDR      R1,??man_ota_main_471+0x8
   \   00002AEC   0x6809             LDR      R1,[R1, #+0]
   \   00002AEE   0x4A9E             LDR      R2,??man_ota_main_488+0x4
   \   00002AF0   0x6812             LDR      R2,[R2, #+0]
   \   00002AF2   0x5488             STRB     R0,[R1, R2]
   3369          				man_ota_work.summ += man_ota_work.resp_cmd.data[i];
   \   00002AF4   0x48C4             LDR      R0,??man_ota_main_490+0x4
   \   00002AF6   0x6800             LDR      R0,[R0, #+0]
   \   00002AF8   0x491C             LDR      R1,??man_ota_main_471+0x4
   \   00002AFA   0x6809             LDR      R1,[R1, #+0]
   \   00002AFC   0x5D09             LDRB     R1,[R1, R4]
   \   00002AFE   0x1840             ADDS     R0,R0,R1
   \   00002B00   0x49C1             LDR      R1,??man_ota_main_490+0x4
   \   00002B02   0x6008             STR      R0,[R1, #+0]
   3370          				man_ota_work.data_len++;
   \   00002B04   0x4898             LDR      R0,??man_ota_main_488+0x4
   \   00002B06   0x6800             LDR      R0,[R0, #+0]
   \   00002B08   0x1C40             ADDS     R0,R0,#+1
   \   00002B0A   0x4997             LDR      R1,??man_ota_main_488+0x4
   \   00002B0C   0x6008             STR      R0,[R1, #+0]
   3371          
   3372          				// PAGEサイズを超えるとFLASHに書き込む
   3373          				if (man_ota_work.data_len >= MAN_FLASH_PAGE_SIZE) {
   \   00002B0E   0x4896             LDR      R0,??man_ota_main_488+0x4
   \   00002B10   0x6800             LDR      R0,[R0, #+0]
   \   00002B12   0x28FF             CMP      R0,#+255
   \   00002B14   0xDD1E             BLE      ??man_ota_main_494
   3374          					ret = man_flash_write_page(man_ota_work.file_info.addr_config + man_ota_work.file_info.size_config, &man_ota_work.data_buff[0], MAN_FLASH_PAGE_SIZE);
   \   00002B16   0x2280             MOVS     R2,#+128
   \   00002B18   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   00002B1A   0x4815             LDR      R0,??man_ota_main_471+0x8
   \   00002B1C   0x6801             LDR      R1,[R0, #+0]
   \   00002B1E   0x48BB             LDR      R0,??man_ota_main_490+0x8
   \   00002B20   0x6800             LDR      R0,[R0, #+0]
   \   00002B22   0x4B90             LDR      R3,??man_ota_main_488
   \   00002B24   0x681B             LDR      R3,[R3, #+0]
   \   00002B26   0x18C0             ADDS     R0,R0,R3
   \   00002B28   0x.... 0x....      BL       man_flash_write_page
   3375          					if (ret < 0) {
   \   00002B2C   0x2800             CMP      R0,#+0
   \   00002B2E   0xD503             BPL      ??man_ota_main_495
   3376          						// 外部FLASH書き込み異常
   3377          						man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002B30   0x2000             MOVS     R0,#+0
   \   00002B32   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002B34   0x4948             LDR      R1,??man_ota_main_480
   \   00002B36   0x6588             STR      R0,[R1, #+88]
   3378          					}
   3379          					man_ota_work.data_len -= MAN_FLASH_PAGE_SIZE;
   \                     ??man_ota_main_495: (+1)
   \   00002B38   0x488B             LDR      R0,??man_ota_main_488+0x4
   \   00002B3A   0x6800             LDR      R0,[R0, #+0]
   \   00002B3C   0x21FF             MOVS     R1,#+255
   \   00002B3E   0x43C9             MVNS     R1,R1            ;; #-256
   \   00002B40   0x1840             ADDS     R0,R0,R1
   \   00002B42   0x4989             LDR      R1,??man_ota_main_488+0x4
   \   00002B44   0x6008             STR      R0,[R1, #+0]
   3380          					man_ota_work.file_info.size_config += MAN_FLASH_PAGE_SIZE;
   \   00002B46   0x4887             LDR      R0,??man_ota_main_488
   \   00002B48   0x6800             LDR      R0,[R0, #+0]
   \   00002B4A   0x2180             MOVS     R1,#+128
   \   00002B4C   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \   00002B4E   0x1840             ADDS     R0,R0,R1
   \   00002B50   0x4984             LDR      R1,??man_ota_main_488
   \   00002B52   0x6008             STR      R0,[R1, #+0]
   3381          				}
   3382          			}
   \                     ??man_ota_main_494: (+1)
   \   00002B54   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_ota_main_492: (+1)
   \   00002B56   0x4875             LDR      R0,??man_ota_main_486+0x4
   \   00002B58   0x6800             LDR      R0,[R0, #+0]
   \   00002B5A   0x1E80             SUBS     R0,R0,#+2
   \   00002B5C   0x4284             CMP      R4,R0
   \   00002B5E   0xDBC1             BLT      ??man_ota_main_493
   3383          			// 次のシーケンスへ遷移
   3384          			man_ota_set_sequense(MAN_OTA_SEQ_USB_CONFIG_DATA_GET_REQ);
   \   00002B60   0x208A             MOVS     R0,#+138
   \   00002B62   0x.... 0x....      BL       man_ota_set_sequense
   \   00002B66   0xE075             B        ??man_ota_main_496
   \                     ??man_ota_main_471:
   \   00002B68   0x........         DC32     man_ota_data_callback
   \   00002B6C   0x........         DC32     man_ota_work+0x84
   \   00002B70   0x........         DC32     man_ota_work+0xBC
   \   00002B74   0x........         DC32     man_ota_work+0xA4
   \   00002B78   0x........         DC32     man_ota_work+0x94
   3385          		}
   3386          		else {
   3387          			// 残りをFLASHに書き込む
   3388          			if (man_ota_work.data_len > 0) {
   \                     ??man_ota_main_491: (+1)
   \   00002B7C   0x487A             LDR      R0,??man_ota_main_488+0x4
   \   00002B7E   0x6800             LDR      R0,[R0, #+0]
   \   00002B80   0x2801             CMP      R0,#+1
   \   00002B82   0xDB25             BLT      ??man_ota_main_497
   3389          				ret = man_flash_write_page(man_ota_work.file_info.addr_config + man_ota_work.file_info.size_config, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   00002B84   0x4878             LDR      R0,??man_ota_main_488+0x4
   \   00002B86   0x6802             LDR      R2,[R0, #+0]
   \   00002B88   0x48D8             LDR      R0,??man_ota_main_498
   \   00002B8A   0x6801             LDR      R1,[R0, #+0]
   \   00002B8C   0x489F             LDR      R0,??man_ota_main_490+0x8
   \   00002B8E   0x6800             LDR      R0,[R0, #+0]
   \   00002B90   0x4B74             LDR      R3,??man_ota_main_488
   \   00002B92   0x681B             LDR      R3,[R3, #+0]
   \   00002B94   0x18C0             ADDS     R0,R0,R3
   \   00002B96   0x.... 0x....      BL       man_flash_write_page
   3390          				if (ret < 0) {
   \   00002B9A   0x2800             CMP      R0,#+0
   \   00002B9C   0xD50E             BPL      ??man_ota_main_499
   3391          					// 外部FLASH書き込み異常
   3392          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002B9E   0x2000             MOVS     R0,#+0
   \   00002BA0   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002BA2   0x492D             LDR      R1,??man_ota_main_480
   \   00002BA4   0x6588             STR      R0,[R1, #+88]
   3393          					// エラー登録
   3394          					man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.addr_config + man_ota_work.file_info.size_config, man_ota_work.data_len);
   \   00002BA6   0x4BDA             LDR      R3,??man_ota_main_500  ;; 0xd42
   \   00002BA8   0x486F             LDR      R0,??man_ota_main_488+0x4
   \   00002BAA   0x6802             LDR      R2,[R0, #+0]
   \   00002BAC   0x4897             LDR      R0,??man_ota_main_490+0x8
   \   00002BAE   0x6800             LDR      R0,[R0, #+0]
   \   00002BB0   0x496C             LDR      R1,??man_ota_main_488
   \   00002BB2   0x6809             LDR      R1,[R1, #+0]
   \   00002BB4   0x1841             ADDS     R1,R0,R1
   \   00002BB6   0x201B             MOVS     R0,#+27
   \   00002BB8   0x.... 0x....      BL       man_error_set
   3395          				}
   3396          				man_ota_work.file_info.size_config += man_ota_work.data_len;
   \                     ??man_ota_main_499: (+1)
   \   00002BBC   0x4869             LDR      R0,??man_ota_main_488
   \   00002BBE   0x6800             LDR      R0,[R0, #+0]
   \   00002BC0   0x4969             LDR      R1,??man_ota_main_488+0x4
   \   00002BC2   0x6809             LDR      R1,[R1, #+0]
   \   00002BC4   0x1840             ADDS     R0,R0,R1
   \   00002BC6   0x4967             LDR      R1,??man_ota_main_488
   \   00002BC8   0x6008             STR      R0,[R1, #+0]
   3397          				man_ota_work.data_len = 0;
   \   00002BCA   0x2000             MOVS     R0,#+0
   \   00002BCC   0x4966             LDR      R1,??man_ota_main_488+0x4
   \   00002BCE   0x6008             STR      R0,[R1, #+0]
   3398          			}
   3399          
   3400          			// 外部FLASH書き込み異常時はチェックSUM異常扱いとする
   3401          			if (man_ota_work.exec_info.result != MAN_OTA_STATUS_NG) {
   \                     ??man_ota_main_497: (+1)
   \   00002BD0   0x4821             LDR      R0,??man_ota_main_480
   \   00002BD2   0x6D80             LDR      R0,[R0, #+88]
   \   00002BD4   0x2100             MOVS     R1,#+0
   \   00002BD6   0x43C9             MVNS     R1,R1            ;; #-1
   \   00002BD8   0x4288             CMP      R0,R1
   \   00002BDA   0xD00A             BEQ      ??man_ota_main_501
   3402          				// チェックSUM
   3403          				ret = man_ota_check_summ_data(man_ota_work.file_info.addr_config + man_ota_work.file_info.size_config-4, man_ota_work.summ);
   \   00002BDC   0x488A             LDR      R0,??man_ota_main_490+0x4
   \   00002BDE   0x6801             LDR      R1,[R0, #+0]
   \   00002BE0   0x488A             LDR      R0,??man_ota_main_490+0x8
   \   00002BE2   0x6800             LDR      R0,[R0, #+0]
   \   00002BE4   0x4A5F             LDR      R2,??man_ota_main_488
   \   00002BE6   0x6812             LDR      R2,[R2, #+0]
   \   00002BE8   0x1880             ADDS     R0,R0,R2
   \   00002BEA   0x1F00             SUBS     R0,R0,#+4
   \   00002BEC   0x.... 0x....      BL       man_ota_check_summ_data
   \   00002BF0   0xE001             B        ??man_ota_main_502
   3404          			}
   3405          			else {
   3406          				ret = -1;
   \                     ??man_ota_main_501: (+1)
   \   00002BF2   0x2000             MOVS     R0,#+0
   \   00002BF4   0x43C0             MVNS     R0,R0            ;; #-1
   3407          			}
   3408          
   3409          			// チェックSUM異常
   3410          			if(ret < 0) {
   \                     ??man_ota_main_502: (+1)
   \   00002BF6   0x2800             CMP      R0,#+0
   \   00002BF8   0xD50E             BPL      ??man_ota_main_503
   3411          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002BFA   0x2000             MOVS     R0,#+0
   \   00002BFC   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002BFE   0x4916             LDR      R1,??man_ota_main_480
   \   00002C00   0x6588             STR      R0,[R1, #+88]
   3412          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002C02   0x20A2             MOVS     R0,#+162
   \   00002C04   0x.... 0x....      BL       man_ota_set_sequense
   3413          				// エラー登録
   3414          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.size_config, 0);
   \   00002C08   0x4BC2             LDR      R3,??man_ota_main_500+0x4  ;; 0xd56
   \   00002C0A   0x2200             MOVS     R2,#+0
   \   00002C0C   0x4855             LDR      R0,??man_ota_main_488
   \   00002C0E   0x6801             LDR      R1,[R0, #+0]
   \   00002C10   0x201B             MOVS     R0,#+27
   \   00002C12   0x.... 0x....      BL       man_error_set
   \   00002C16   0xE01D             B        ??man_ota_main_496
   3415          			}
   3416          			else {
   3417          
   3418          				// 受信したサイズを確認する
   3419          				if (man_ota_work.exec_info.usb_file_size != man_ota_work.file_info.size_config) {
   \                     ??man_ota_main_503: (+1)
   \   00002C18   0x480F             LDR      R0,??man_ota_main_480
   \   00002C1A   0x6DC0             LDR      R0,[R0, #+92]
   \   00002C1C   0x4951             LDR      R1,??man_ota_main_488
   \   00002C1E   0x6809             LDR      R1,[R1, #+0]
   \   00002C20   0x4288             CMP      R0,R1
   \   00002C22   0xD00F             BEQ      ??man_ota_main_504
   3420          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002C24   0x2000             MOVS     R0,#+0
   \   00002C26   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002C28   0x490B             LDR      R1,??man_ota_main_480
   \   00002C2A   0x6588             STR      R0,[R1, #+88]
   3421          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002C2C   0x20A2             MOVS     R0,#+162
   \   00002C2E   0x.... 0x....      BL       man_ota_set_sequense
   3422          					// エラー登録
   3423          					man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.usb_file_size, man_ota_work.file_info.size_config);
   \   00002C32   0x4BB9             LDR      R3,??man_ota_main_500+0x8  ;; 0xd5f
   \   00002C34   0x484B             LDR      R0,??man_ota_main_488
   \   00002C36   0x6802             LDR      R2,[R0, #+0]
   \   00002C38   0x4807             LDR      R0,??man_ota_main_480
   \   00002C3A   0x6DC1             LDR      R1,[R0, #+92]
   \   00002C3C   0x201B             MOVS     R0,#+27
   \   00002C3E   0x.... 0x....      BL       man_error_set
   \   00002C42   0xE007             B        ??man_ota_main_496
   3424          				}
   3425          				else {
   3426          					// 外部フラッシュ情報記憶
   3427          					man_ota_work.file_info.size_config -= 4;									// チェックSUM分の4Byteサイズを減らす
   \                     ??man_ota_main_504: (+1)
   \   00002C44   0x4847             LDR      R0,??man_ota_main_488
   \   00002C46   0x6800             LDR      R0,[R0, #+0]
   \   00002C48   0x1F00             SUBS     R0,R0,#+4
   \   00002C4A   0x4946             LDR      R1,??man_ota_main_488
   \   00002C4C   0x6008             STR      R0,[R1, #+0]
   3428          
   3429          //					man_ota_work.exec_info.value = man_ota_work.file_info.size_config;
   3430          //					man_ota_work.exec_info.write_num = 0;
   3431          				
   3432          					// USB UPDATER FILE GET処理に移行
   3433          					man_ota_set_sequense(MAN_OTA_SEQ_USB_UPDATER_FILE_SET_REQ);
   \   00002C4E   0x208E             MOVS     R0,#+142
   \   00002C50   0x.... 0x....      BL       man_ota_set_sequense
   3434          				}
   3435          			}
   3436          		}
   3437          		break;
   \                     ??man_ota_main_496: (+1)
   \   00002C54   0xE3AF             B        ??man_ota_main_274
   \   00002C56   0xBF00             Nop      
   \                     ??man_ota_main_480:
   \   00002C58   0x........         DC32     man_ota_work
   \   00002C5C   0x00000CBA         DC32     0xcba
   3438          	case MAN_OTA_SEQ_USB_CONFIG_DATA_GET_NG:	// USB GPS CONFIG DATA GET(異常)
   3439          		// 中止処理へ
   3440          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_251: (+1)
   \   00002C60   0x2000             MOVS     R0,#+0
   \   00002C62   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002C64   0x49D4             LDR      R1,??man_ota_main_505
   \   00002C66   0x6588             STR      R0,[R1, #+88]
   3441          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002C68   0x20A2             MOVS     R0,#+162
   \   00002C6A   0x.... 0x....      BL       man_ota_set_sequense
   3442          		// エラー登録
   3443          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00002C6E   0x4BD3             LDR      R3,??man_ota_main_505+0x4  ;; 0xd73
   \   00002C70   0x482E             LDR      R0,??man_ota_main_486+0x4
   \   00002C72   0x6802             LDR      R2,[R0, #+0]
   \   00002C74   0x483C             LDR      R0,??man_ota_main_488+0x4
   \   00002C76   0x6801             LDR      R1,[R0, #+0]
   \   00002C78   0x201B             MOVS     R0,#+27
   \   00002C7A   0x.... 0x....      BL       man_error_set
   3444          		break;
   \   00002C7E   0xE39A             B        ??man_ota_main_274
   \                     ??man_ota_main_484:
   \   00002C80   0x00000CCE         DC32     0xcce
   \   00002C84   0x00000CD7         DC32     0xcd7
   3445          
   3446          	// ************************************
   3447          	// USB UPDATER FILE GET
   3448          	// ************************************
   3449          	case MAN_OTA_SEQ_USB_UPDATER_FILE_SET_REQ:	// USB GPS UPDATER FILE SET開始
   3450          		// UPDATERの準備
   3451          		memcpy(&man_ota_work.usb_file_info.filename[0], &usbgpsota->update[0], MAN_DATA_FILENAME_MAX+1);
   \                     ??man_ota_main_252: (+1)
   \   00002C88   0x2241             MOVS     R2,#+65
   \   00002C8A   0x2082             MOVS     R0,#+130
   \   00002C8C   0x0040             LSLS     R0,R0,#+1        ;; #+260
   \   00002C8E   0x1839             ADDS     R1,R7,R0
   \   00002C90   0x4CD7             LDR      R4,??man_ota_main_506
   \   00002C92   0x0020             MOVS     R0,R4
   \   00002C94   0x.... 0x....      BL       __aeabi_memcpy
   3452          		memcpy(&man_ota_work.usb_file_info.fileonly[0], &usbgpsota->update_only[0], MAN_DATA_FILENAME_MAX+1);
   \   00002C98   0x2241             MOVS     R2,#+65
   \   00002C9A   0x20FF             MOVS     R0,#+255
   \   00002C9C   0x3046             ADDS     R0,R0,#+70       ;; #+325
   \   00002C9E   0x1839             ADDS     R1,R7,R0
   \   00002CA0   0x4CD4             LDR      R4,??man_ota_main_506+0x4
   \   00002CA2   0x0020             MOVS     R0,R4
   \   00002CA4   0x.... 0x....      BL       __aeabi_memcpy
   3453          		man_usb_set_file_info(man_ota_work.usb_file_info);
   \   00002CA8   0x49D1             LDR      R1,??man_ota_main_506
   \   00002CAA   0xB084             SUB      SP,SP,#+16
   \   00002CAC   0x4668             MOV      R0,SP
   \   00002CAE   0x2282             MOVS     R2,#+130
   \   00002CB0   0x.... 0x....      BL       __aeabi_memcpy
   \   00002CB4   0xBC0F             POP      {R0-R3}
   \   00002CB6   0x.... 0x....      BL       man_usb_set_file_info
   3454          
   3455          		man_ota_work.exec_info.file_num = 1;
   \   00002CBA   0x2001             MOVS     R0,#+1
   \   00002CBC   0x49BE             LDR      R1,??man_ota_main_505
   \   00002CBE   0x6388             STR      R0,[R1, #+56]
   3456          		man_usb_send_file_info(man_ota_work.exec_info.file_num, MAN_OTA_USB_DATA_SIZE, MAN_OTA_SEQ_USB_UPDATER_FILE_SET, man_ota_req_callback);
   \   00002CC0   0x4BCD             LDR      R3,??man_ota_main_506+0x8
   \   00002CC2   0x228F             MOVS     R2,#+143
   \   00002CC4   0x2180             MOVS     R1,#+128
   \   00002CC6   0x0089             LSLS     R1,R1,#+2        ;; #+512
   \   00002CC8   0x48BB             LDR      R0,??man_ota_main_505
   \   00002CCA   0x6B80             LDR      R0,[R0, #+56]
   \   00002CCC   0x.... 0x....      BL       man_usb_send_file_info
   3457          		man_ota_set_sequense(MAN_OTA_SEQ_USB_UPDATER_FILE_SET);
   \   00002CD0   0x208F             MOVS     R0,#+143
   \   00002CD2   0x.... 0x....      BL       man_ota_set_sequense
   3458          		break;
   \   00002CD6   0xE36E             B        ??man_ota_main_274
   3459          	case MAN_OTA_SEQ_USB_UPDATER_FILE_SET:		// USB GPS UPDATER FILE SET
   3460          		break;
   \                     ??man_ota_main_253: (+1)
   \   00002CD8   0xE36D             B        ??man_ota_main_274
   3461          	case MAN_OTA_SEQ_USB_UPDATER_FILE_SET_OK:	// USB GPS UPDATER FILE SET(正常)
   3462          		usb_get_file_info = man_usb_get_file_info();
   \                     ??man_ota_main_254: (+1)
   \   00002CDA   0x.... 0x....      BL       man_usb_get_file_info
   3463          		// FILEサイズを保存
   3464          		man_ota_work.exec_info.usb_file_size = usb_get_file_info->file_size;
   \   00002CDE   0x6800             LDR      R0,[R0, #+0]
   \   00002CE0   0x49B5             LDR      R1,??man_ota_main_505
   \   00002CE2   0x65C8             STR      R0,[R1, #+92]
   3465          	
   3466          		// 想定サイズを超える場合は異常とする
   3467          		if (man_ota_work.exec_info.usb_file_size <= MAN_FLASH_SIZE_GPS_UPDATER) {
   \   00002CE4   0x48B4             LDR      R0,??man_ota_main_505
   \   00002CE6   0x6DC0             LDR      R0,[R0, #+92]
   \   00002CE8   0x49C4             LDR      R1,??man_ota_main_506+0xC  ;; 0x40001
   \   00002CEA   0x4288             CMP      R0,R1
   \   00002CEC   0xDA0C             BGE      ??man_ota_main_507
   3468          			// 一時情報の初期化
   3469          			man_ota_work.file_info.size_update = 0;
   \   00002CEE   0x2000             MOVS     R0,#+0
   \   00002CF0   0x49C3             LDR      R1,??man_ota_main_506+0x10
   \   00002CF2   0x6008             STR      R0,[R1, #+0]
   3470          			man_ota_work.data_len = 0;
   \   00002CF4   0x2000             MOVS     R0,#+0
   \   00002CF6   0x491C             LDR      R1,??man_ota_main_488+0x4
   \   00002CF8   0x6008             STR      R0,[R1, #+0]
   3471          			man_ota_work.summ = 0;
   \   00002CFA   0x2000             MOVS     R0,#+0
   \   00002CFC   0x4942             LDR      R1,??man_ota_main_490+0x4
   \   00002CFE   0x6008             STR      R0,[R1, #+0]
   3472          			// データ取得開始
   3473          			man_ota_set_sequense(MAN_OTA_SEQ_USB_UPDATER_DATA_GET_REQ);
   \   00002D00   0x2092             MOVS     R0,#+146
   \   00002D02   0x.... 0x....      BL       man_ota_set_sequense
   \   00002D06   0xE00D             B        ??man_ota_main_508
   3474          		}
   3475          		else {
   3476          			// 中止処理へ
   3477          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_507: (+1)
   \   00002D08   0x2000             MOVS     R0,#+0
   \   00002D0A   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002D0C   0x49AA             LDR      R1,??man_ota_main_505
   \   00002D0E   0x6588             STR      R0,[R1, #+88]
   3478          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002D10   0x20A2             MOVS     R0,#+162
   \   00002D12   0x.... 0x....      BL       man_ota_set_sequense
   3479          			// エラー登録
   3480          			man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.usb_file_size, 0);
   \   00002D16   0x4BBB             LDR      R3,??man_ota_main_506+0x14  ;; 0xd98
   \   00002D18   0x2200             MOVS     R2,#+0
   \   00002D1A   0x48A7             LDR      R0,??man_ota_main_505
   \   00002D1C   0x6DC1             LDR      R1,[R0, #+92]
   \   00002D1E   0x201B             MOVS     R0,#+27
   \   00002D20   0x.... 0x....      BL       man_error_set
   3481          		}
   3482          		break;
   \                     ??man_ota_main_508: (+1)
   \   00002D24   0xE347             B        ??man_ota_main_274
   \   00002D26   0xBF00             Nop      
   \                     ??man_ota_main_486:
   \   00002D28   0x00000CEB         DC32     0xceb
   \   00002D2C   0x........         DC32     man_ota_work+0x80
   3483          	case MAN_OTA_SEQ_USB_UPDATER_FILE_SET_NG:	// USB GPS UPDATER FILE SET(異常)
   3484          		// 中止処理へ
   3485          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_255: (+1)
   \   00002D30   0x2000             MOVS     R0,#+0
   \   00002D32   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002D34   0x49A0             LDR      R1,??man_ota_main_505
   \   00002D36   0x6588             STR      R0,[R1, #+88]
   3486          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002D38   0x20A2             MOVS     R0,#+162
   \   00002D3A   0x.... 0x....      BL       man_ota_set_sequense
   3487          		// エラー登録
   3488          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00002D3E   0x23DA             MOVS     R3,#+218
   \   00002D40   0x011B             LSLS     R3,R3,#+4        ;; #+3488
   \   00002D42   0x48D6             LDR      R0,??man_ota_main_509
   \   00002D44   0x6802             LDR      R2,[R0, #+0]
   \   00002D46   0x4808             LDR      R0,??man_ota_main_488+0x4
   \   00002D48   0x6801             LDR      R1,[R0, #+0]
   \   00002D4A   0x201B             MOVS     R0,#+27
   \   00002D4C   0x.... 0x....      BL       man_error_set
   3489          		break;
   \   00002D50   0xE331             B        ??man_ota_main_274
   3490          	case MAN_OTA_SEQ_USB_UPDATER_DATA_GET_REQ:	// USB GPS UPDATER DATA GET開始
   3491          		// データ取得開始
   3492          		man_usb_get_data(MAN_OTA_SEQ_USB_UPDATER_DATA_GET, man_ota_data_callback);
   \                     ??man_ota_main_256: (+1)
   \   00002D52   0x49D3             LDR      R1,??man_ota_main_509+0x4
   \   00002D54   0x2093             MOVS     R0,#+147
   \   00002D56   0x.... 0x....      BL       man_usb_get_data
   3493          		man_ota_set_sequense(MAN_OTA_SEQ_USB_UPDATER_DATA_GET);
   \   00002D5A   0x2093             MOVS     R0,#+147
   \   00002D5C   0x.... 0x....      BL       man_ota_set_sequense
   3494          		break;
   \   00002D60   0xE329             B        ??man_ota_main_274
   \   00002D62   0xBF00             Nop      
   \                     ??man_ota_main_488:
   \   00002D64   0x........         DC32     man_ota_work+0x9C
   \   00002D68   0x........         DC32     man_ota_work+0xC0
   \   00002D6C   0x00000D12         DC32     0xd12
   3495          	case MAN_OTA_SEQ_USB_UPDATER_DATA_GET:		// USB GPS UPDATER DATA GET
   3496          		break;
   \                     ??man_ota_main_257: (+1)
   \   00002D70   0xE321             B        ??man_ota_main_274
   3497          	case MAN_OTA_SEQ_USB_UPDATER_DATA_GET_OK:	// USB GPS UPDATER DATA GET(正常)
   3498          		if (man_ota_work.resp_cmd.data_len != 0) {
   \                     ??man_ota_main_258: (+1)
   \   00002D72   0x48CA             LDR      R0,??man_ota_main_509
   \   00002D74   0x6800             LDR      R0,[R0, #+0]
   \   00002D76   0x2800             CMP      R0,#+0
   \   00002D78   0xD04A             BEQ      ??man_ota_main_510
   3499          			// 外部FLASHにman_ota_work.resp_cmd.dataを書き込む
   3500          			// data部にはCR+LFが含まれているためman_ota_work.resp_cmd.data_len-2バイトをコピーする
   3501          			for (i=0; i<man_ota_work.resp_cmd.data_len-2; i++) {
   \   00002D7A   0x2400             MOVS     R4,#+0
   \   00002D7C   0xE038             B        ??man_ota_main_511
   3502          				man_ota_work.data_buff[man_ota_work.data_len] = man_ota_work.resp_cmd.data[i];
   \                     ??man_ota_main_512: (+1)
   \   00002D7E   0x48C9             LDR      R0,??man_ota_main_509+0x8
   \   00002D80   0x6800             LDR      R0,[R0, #+0]
   \   00002D82   0x5D00             LDRB     R0,[R0, R4]
   \   00002D84   0x4959             LDR      R1,??man_ota_main_498
   \   00002D86   0x6809             LDR      R1,[R1, #+0]
   \   00002D88   0x4AC7             LDR      R2,??man_ota_main_509+0xC
   \   00002D8A   0x6812             LDR      R2,[R2, #+0]
   \   00002D8C   0x5488             STRB     R0,[R1, R2]
   3503          				man_ota_work.summ += man_ota_work.resp_cmd.data[i];
   \   00002D8E   0x481E             LDR      R0,??man_ota_main_490+0x4
   \   00002D90   0x6800             LDR      R0,[R0, #+0]
   \   00002D92   0x49C4             LDR      R1,??man_ota_main_509+0x8
   \   00002D94   0x6809             LDR      R1,[R1, #+0]
   \   00002D96   0x5D09             LDRB     R1,[R1, R4]
   \   00002D98   0x1840             ADDS     R0,R0,R1
   \   00002D9A   0x491B             LDR      R1,??man_ota_main_490+0x4
   \   00002D9C   0x6008             STR      R0,[R1, #+0]
   3504          				man_ota_work.data_len++;
   \   00002D9E   0x48C2             LDR      R0,??man_ota_main_509+0xC
   \   00002DA0   0x6800             LDR      R0,[R0, #+0]
   \   00002DA2   0x1C40             ADDS     R0,R0,#+1
   \   00002DA4   0x49C0             LDR      R1,??man_ota_main_509+0xC
   \   00002DA6   0x6008             STR      R0,[R1, #+0]
   3505          
   3506          				// PAGEサイズを超えるとFLASHに書き込む
   3507          				if (man_ota_work.data_len >= MAN_FLASH_PAGE_SIZE) {
   \   00002DA8   0x48BF             LDR      R0,??man_ota_main_509+0xC
   \   00002DAA   0x6800             LDR      R0,[R0, #+0]
   \   00002DAC   0x28FF             CMP      R0,#+255
   \   00002DAE   0xDD1E             BLE      ??man_ota_main_513
   3508          					ret = man_flash_write_page(man_ota_work.file_info.addr_update + man_ota_work.file_info.size_update, &man_ota_work.data_buff[0], MAN_FLASH_PAGE_SIZE);
   \   00002DB0   0x2280             MOVS     R2,#+128
   \   00002DB2   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   00002DB4   0x484D             LDR      R0,??man_ota_main_498
   \   00002DB6   0x6801             LDR      R1,[R0, #+0]
   \   00002DB8   0x48BC             LDR      R0,??man_ota_main_509+0x10
   \   00002DBA   0x6800             LDR      R0,[R0, #+0]
   \   00002DBC   0x4B90             LDR      R3,??man_ota_main_506+0x10
   \   00002DBE   0x681B             LDR      R3,[R3, #+0]
   \   00002DC0   0x18C0             ADDS     R0,R0,R3
   \   00002DC2   0x.... 0x....      BL       man_flash_write_page
   3509          					if (ret < 0) {
   \   00002DC6   0x2800             CMP      R0,#+0
   \   00002DC8   0xD503             BPL      ??man_ota_main_514
   3510          						// 外部FLASH書き込み異常
   3511          						man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002DCA   0x2000             MOVS     R0,#+0
   \   00002DCC   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002DCE   0x497A             LDR      R1,??man_ota_main_505
   \   00002DD0   0x6588             STR      R0,[R1, #+88]
   3512          					}
   3513          					man_ota_work.data_len -= MAN_FLASH_PAGE_SIZE;
   \                     ??man_ota_main_514: (+1)
   \   00002DD2   0x48B5             LDR      R0,??man_ota_main_509+0xC
   \   00002DD4   0x6800             LDR      R0,[R0, #+0]
   \   00002DD6   0x21FF             MOVS     R1,#+255
   \   00002DD8   0x43C9             MVNS     R1,R1            ;; #-256
   \   00002DDA   0x1840             ADDS     R0,R0,R1
   \   00002DDC   0x49B2             LDR      R1,??man_ota_main_509+0xC
   \   00002DDE   0x6008             STR      R0,[R1, #+0]
   3514          					man_ota_work.file_info.size_update += MAN_FLASH_PAGE_SIZE;
   \   00002DE0   0x4887             LDR      R0,??man_ota_main_506+0x10
   \   00002DE2   0x6800             LDR      R0,[R0, #+0]
   \   00002DE4   0x2180             MOVS     R1,#+128
   \   00002DE6   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \   00002DE8   0x1840             ADDS     R0,R0,R1
   \   00002DEA   0x4985             LDR      R1,??man_ota_main_506+0x10
   \   00002DEC   0x6008             STR      R0,[R1, #+0]
   3515          				}
   3516          			}
   \                     ??man_ota_main_513: (+1)
   \   00002DEE   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_ota_main_511: (+1)
   \   00002DF0   0x48AA             LDR      R0,??man_ota_main_509
   \   00002DF2   0x6800             LDR      R0,[R0, #+0]
   \   00002DF4   0x1E80             SUBS     R0,R0,#+2
   \   00002DF6   0x4284             CMP      R4,R0
   \   00002DF8   0xDBC1             BLT      ??man_ota_main_512
   3517          			// 次のシーケンスへ遷移
   3518          			man_ota_set_sequense(MAN_OTA_SEQ_USB_UPDATER_DATA_GET_REQ);
   \   00002DFA   0x2092             MOVS     R0,#+146
   \   00002DFC   0x.... 0x....      BL       man_ota_set_sequense
   \   00002E00   0xE072             B        ??man_ota_main_515
   \   00002E02   0xBF00             Nop      
   \                     ??man_ota_main_490:
   \   00002E04   0x00000D1A         DC32     0xd1a
   \   00002E08   0x........         DC32     man_ota_work+0xC4
   \   00002E0C   0x........         DC32     man_ota_work+0xAC
   3519          		}
   3520          		else {
   3521          			// 残りをFLASHに書き込む
   3522          			if (man_ota_work.data_len > 0) {
   \                     ??man_ota_main_510: (+1)
   \   00002E10   0x48A5             LDR      R0,??man_ota_main_509+0xC
   \   00002E12   0x6800             LDR      R0,[R0, #+0]
   \   00002E14   0x2801             CMP      R0,#+1
   \   00002E16   0xDB25             BLT      ??man_ota_main_516
   3523          				ret = man_flash_write_page(man_ota_work.file_info.addr_update + man_ota_work.file_info.size_update, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   00002E18   0x48A3             LDR      R0,??man_ota_main_509+0xC
   \   00002E1A   0x6802             LDR      R2,[R0, #+0]
   \   00002E1C   0x4833             LDR      R0,??man_ota_main_498
   \   00002E1E   0x6801             LDR      R1,[R0, #+0]
   \   00002E20   0x48A2             LDR      R0,??man_ota_main_509+0x10
   \   00002E22   0x6800             LDR      R0,[R0, #+0]
   \   00002E24   0x4B76             LDR      R3,??man_ota_main_506+0x10
   \   00002E26   0x681B             LDR      R3,[R3, #+0]
   \   00002E28   0x18C0             ADDS     R0,R0,R3
   \   00002E2A   0x.... 0x....      BL       man_flash_write_page
   3524          				if (ret < 0) {
   \   00002E2E   0x2800             CMP      R0,#+0
   \   00002E30   0xD50E             BPL      ??man_ota_main_517
   3525          					// 外部FLASH書き込み異常
   3526          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002E32   0x2000             MOVS     R0,#+0
   \   00002E34   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002E36   0x4960             LDR      R1,??man_ota_main_505
   \   00002E38   0x6588             STR      R0,[R1, #+88]
   3527          					// エラー登録
   3528          					man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.addr_update + man_ota_work.file_info.size_update, man_ota_work.data_len);
   \   00002E3A   0x4BD4             LDR      R3,??man_ota_main_518  ;; 0xdc8
   \   00002E3C   0x489A             LDR      R0,??man_ota_main_509+0xC
   \   00002E3E   0x6802             LDR      R2,[R0, #+0]
   \   00002E40   0x489A             LDR      R0,??man_ota_main_509+0x10
   \   00002E42   0x6800             LDR      R0,[R0, #+0]
   \   00002E44   0x496E             LDR      R1,??man_ota_main_506+0x10
   \   00002E46   0x6809             LDR      R1,[R1, #+0]
   \   00002E48   0x1841             ADDS     R1,R0,R1
   \   00002E4A   0x201B             MOVS     R0,#+27
   \   00002E4C   0x.... 0x....      BL       man_error_set
   3529          				}
   3530          				man_ota_work.file_info.size_update += man_ota_work.data_len;
   \                     ??man_ota_main_517: (+1)
   \   00002E50   0x486B             LDR      R0,??man_ota_main_506+0x10
   \   00002E52   0x6800             LDR      R0,[R0, #+0]
   \   00002E54   0x4994             LDR      R1,??man_ota_main_509+0xC
   \   00002E56   0x6809             LDR      R1,[R1, #+0]
   \   00002E58   0x1840             ADDS     R0,R0,R1
   \   00002E5A   0x4969             LDR      R1,??man_ota_main_506+0x10
   \   00002E5C   0x6008             STR      R0,[R1, #+0]
   3531          				man_ota_work.data_len = 0;
   \   00002E5E   0x2000             MOVS     R0,#+0
   \   00002E60   0x4991             LDR      R1,??man_ota_main_509+0xC
   \   00002E62   0x6008             STR      R0,[R1, #+0]
   3532          			}
   3533          
   3534          			// 外部FLASH書き込み異常時はチェックSUM異常扱いとする
   3535          			if (man_ota_work.exec_info.result != MAN_OTA_STATUS_NG) {
   \                     ??man_ota_main_516: (+1)
   \   00002E64   0x4854             LDR      R0,??man_ota_main_505
   \   00002E66   0x6D80             LDR      R0,[R0, #+88]
   \   00002E68   0x2100             MOVS     R1,#+0
   \   00002E6A   0x43C9             MVNS     R1,R1            ;; #-1
   \   00002E6C   0x4288             CMP      R0,R1
   \   00002E6E   0xD00A             BEQ      ??man_ota_main_519
   3536          				// チェックSUM
   3537          				ret = man_ota_check_summ_data(man_ota_work.file_info.addr_update + man_ota_work.file_info.size_update-4, man_ota_work.summ);
   \   00002E70   0x48CF             LDR      R0,??man_ota_main_520
   \   00002E72   0x6801             LDR      R1,[R0, #+0]
   \   00002E74   0x488D             LDR      R0,??man_ota_main_509+0x10
   \   00002E76   0x6800             LDR      R0,[R0, #+0]
   \   00002E78   0x4A61             LDR      R2,??man_ota_main_506+0x10
   \   00002E7A   0x6812             LDR      R2,[R2, #+0]
   \   00002E7C   0x1880             ADDS     R0,R0,R2
   \   00002E7E   0x1F00             SUBS     R0,R0,#+4
   \   00002E80   0x.... 0x....      BL       man_ota_check_summ_data
   \   00002E84   0xE001             B        ??man_ota_main_521
   3538          			}
   3539          			else {
   3540          				ret = -1;
   \                     ??man_ota_main_519: (+1)
   \   00002E86   0x2000             MOVS     R0,#+0
   \   00002E88   0x43C0             MVNS     R0,R0            ;; #-1
   3541          			}
   3542          
   3543          			// チェックSUM異常
   3544          			if(ret < 0) {
   \                     ??man_ota_main_521: (+1)
   \   00002E8A   0x2800             CMP      R0,#+0
   \   00002E8C   0xD50E             BPL      ??man_ota_main_522
   3545          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002E8E   0x2000             MOVS     R0,#+0
   \   00002E90   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002E92   0x4949             LDR      R1,??man_ota_main_505
   \   00002E94   0x6588             STR      R0,[R1, #+88]
   3546          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002E96   0x20A2             MOVS     R0,#+162
   \   00002E98   0x.... 0x....      BL       man_ota_set_sequense
   3547          				// エラー登録
   3548          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.size_update, 0);
   \   00002E9C   0x4BC5             LDR      R3,??man_ota_main_520+0x4  ;; 0xddc
   \   00002E9E   0x2200             MOVS     R2,#+0
   \   00002EA0   0x4857             LDR      R0,??man_ota_main_506+0x10
   \   00002EA2   0x6801             LDR      R1,[R0, #+0]
   \   00002EA4   0x201B             MOVS     R0,#+27
   \   00002EA6   0x.... 0x....      BL       man_error_set
   \   00002EAA   0xE01D             B        ??man_ota_main_515
   3549          			}
   3550          			else {
   3551          
   3552          				// 受信したサイズを確認する
   3553          				if (man_ota_work.exec_info.usb_file_size != man_ota_work.file_info.size_update) {
   \                     ??man_ota_main_522: (+1)
   \   00002EAC   0x4842             LDR      R0,??man_ota_main_505
   \   00002EAE   0x6DC0             LDR      R0,[R0, #+92]
   \   00002EB0   0x4953             LDR      R1,??man_ota_main_506+0x10
   \   00002EB2   0x6809             LDR      R1,[R1, #+0]
   \   00002EB4   0x4288             CMP      R0,R1
   \   00002EB6   0xD00F             BEQ      ??man_ota_main_523
   3554          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00002EB8   0x2000             MOVS     R0,#+0
   \   00002EBA   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002EBC   0x493E             LDR      R1,??man_ota_main_505
   \   00002EBE   0x6588             STR      R0,[R1, #+88]
   3555          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002EC0   0x20A2             MOVS     R0,#+162
   \   00002EC2   0x.... 0x....      BL       man_ota_set_sequense
   3556          					// エラー登録
   3557          					man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.usb_file_size, man_ota_work.file_info.size_update);
   \   00002EC6   0x4BD3             LDR      R3,??man_ota_main_524  ;; 0xde5
   \   00002EC8   0x484D             LDR      R0,??man_ota_main_506+0x10
   \   00002ECA   0x6802             LDR      R2,[R0, #+0]
   \   00002ECC   0x483A             LDR      R0,??man_ota_main_505
   \   00002ECE   0x6DC1             LDR      R1,[R0, #+92]
   \   00002ED0   0x201B             MOVS     R0,#+27
   \   00002ED2   0x.... 0x....      BL       man_error_set
   \   00002ED6   0xE007             B        ??man_ota_main_515
   3558          				}
   3559          				else {
   3560          					// 外部フラッシュ情報記憶
   3561          					man_ota_work.file_info.size_update -= 4;									// チェックSUM分の4Byteサイズを減らす
   \                     ??man_ota_main_523: (+1)
   \   00002ED8   0x4849             LDR      R0,??man_ota_main_506+0x10
   \   00002EDA   0x6800             LDR      R0,[R0, #+0]
   \   00002EDC   0x1F00             SUBS     R0,R0,#+4
   \   00002EDE   0x4948             LDR      R1,??man_ota_main_506+0x10
   \   00002EE0   0x6008             STR      R0,[R1, #+0]
   3562          //
   3563          //					man_ota_work.exec_info.value = man_ota_work.file_info.size_update;
   3564          //					man_ota_work.exec_info.write_num = 0;
   3565          				
   3566          					// USB FIRMWARE FILE GET処理に移行
   3567          					man_ota_set_sequense(MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_REQ);
   \   00002EE2   0x2096             MOVS     R0,#+150
   \   00002EE4   0x.... 0x....      BL       man_ota_set_sequense
   3568          				}
   3569          			}
   3570          		}
   3571          		break;
   \                     ??man_ota_main_515: (+1)
   \   00002EE8   0xE265             B        ??man_ota_main_274
   \   00002EEA   0xBF00             Nop      
   \                     ??man_ota_main_498:
   \   00002EEC   0x........         DC32     man_ota_work+0xBC
   3572          	case MAN_OTA_SEQ_USB_UPDATER_DATA_GET_NG:	// USB GPS UPDATER DATA GET(異常)
   3573          		// 中止処理へ
   3574          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_259: (+1)
   \   00002EF0   0x2000             MOVS     R0,#+0
   \   00002EF2   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002EF4   0x4930             LDR      R1,??man_ota_main_505
   \   00002EF6   0x6588             STR      R0,[R1, #+88]
   3575          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002EF8   0x20A2             MOVS     R0,#+162
   \   00002EFA   0x.... 0x....      BL       man_ota_set_sequense
   3576          		// エラー登録
   3577          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00002EFE   0x4BC6             LDR      R3,??man_ota_main_524+0x4  ;; 0xdf9
   \   00002F00   0x4866             LDR      R0,??man_ota_main_509
   \   00002F02   0x6802             LDR      R2,[R0, #+0]
   \   00002F04   0x4868             LDR      R0,??man_ota_main_509+0xC
   \   00002F06   0x6801             LDR      R1,[R0, #+0]
   \   00002F08   0x201B             MOVS     R0,#+27
   \   00002F0A   0x.... 0x....      BL       man_error_set
   3578          		break;
   \   00002F0E   0xE252             B        ??man_ota_main_274
   \                     ??man_ota_main_500:
   \   00002F10   0x00000D42         DC32     0xd42
   \   00002F14   0x00000D56         DC32     0xd56
   \   00002F18   0x00000D5F         DC32     0xd5f
   3579          
   3580          
   3581          
   3582          	// ************************************
   3583          	// USB FIRMWARE FILE GET
   3584          	// ************************************
   3585          	case MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_REQ:	// USB GPS FIRMWARE FILE SET開始
   3586          		// FIRMWAREの準備
   3587          		memcpy(&man_ota_work.usb_file_info.filename[0], &usbgpsota->remote[0], MAN_DATA_FILENAME_MAX+1);
   \                     ??man_ota_main_260: (+1)
   \   00002F1C   0x2241             MOVS     R2,#+65
   \   00002F1E   0x0039             MOVS     R1,R7
   \   00002F20   0x4C33             LDR      R4,??man_ota_main_506
   \   00002F22   0x0020             MOVS     R0,R4
   \   00002F24   0x.... 0x....      BL       __aeabi_memcpy
   3588          		memcpy(&man_ota_work.usb_file_info.fileonly[0], &usbgpsota->remote_only[0], MAN_DATA_FILENAME_MAX+1);
   \   00002F28   0x2241             MOVS     R2,#+65
   \   00002F2A   0x0039             MOVS     R1,R7
   \   00002F2C   0x3141             ADDS     R1,R1,#+65
   \   00002F2E   0x4C31             LDR      R4,??man_ota_main_506+0x4
   \   00002F30   0x0020             MOVS     R0,R4
   \   00002F32   0x.... 0x....      BL       __aeabi_memcpy
   3589          		man_usb_set_file_info(man_ota_work.usb_file_info);
   \   00002F36   0x492E             LDR      R1,??man_ota_main_506
   \   00002F38   0xB084             SUB      SP,SP,#+16
   \   00002F3A   0x4668             MOV      R0,SP
   \   00002F3C   0x2282             MOVS     R2,#+130
   \   00002F3E   0x.... 0x....      BL       __aeabi_memcpy
   \   00002F42   0xBC0F             POP      {R0-R3}
   \   00002F44   0x.... 0x....      BL       man_usb_set_file_info
   3590          
   3591          		man_ota_work.exec_info.file_num = 1;
   \   00002F48   0x2001             MOVS     R0,#+1
   \   00002F4A   0x491B             LDR      R1,??man_ota_main_505
   \   00002F4C   0x6388             STR      R0,[R1, #+56]
   3592          		man_usb_send_file_info(man_ota_work.exec_info.file_num, MAN_OTA_USB_DATA_SIZE, MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET, man_ota_req_callback);
   \   00002F4E   0x4B2A             LDR      R3,??man_ota_main_506+0x8
   \   00002F50   0x2297             MOVS     R2,#+151
   \   00002F52   0x2180             MOVS     R1,#+128
   \   00002F54   0x0089             LSLS     R1,R1,#+2        ;; #+512
   \   00002F56   0x4818             LDR      R0,??man_ota_main_505
   \   00002F58   0x6B80             LDR      R0,[R0, #+56]
   \   00002F5A   0x.... 0x....      BL       man_usb_send_file_info
   3593          		man_ota_set_sequense(MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET);
   \   00002F5E   0x2097             MOVS     R0,#+151
   \   00002F60   0x.... 0x....      BL       man_ota_set_sequense
   3594          		break;
   \   00002F64   0xE227             B        ??man_ota_main_274
   3595          	case MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET:		// USB GPS FIRMWARE FILE SET
   3596          		break;
   \                     ??man_ota_main_261: (+1)
   \   00002F66   0xE226             B        ??man_ota_main_274
   3597          	case MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_OK:	// USB GPS FIRMWARE FILE SET(正常)
   3598          		usb_get_file_info = man_usb_get_file_info();
   \                     ??man_ota_main_262: (+1)
   \   00002F68   0x.... 0x....      BL       man_usb_get_file_info
   3599          		// FILEサイズを保存
   3600          		man_ota_work.exec_info.usb_file_size = usb_get_file_info->file_size;
   \   00002F6C   0x6800             LDR      R0,[R0, #+0]
   \   00002F6E   0x4912             LDR      R1,??man_ota_main_505
   \   00002F70   0x65C8             STR      R0,[R1, #+92]
   3601          
   3602          		// 想定サイズを超える場合は異常とする
   3603          		if (man_ota_work.exec_info.usb_file_size <= MAN_FLASH_SIZE_GPS_FIRM) {
   \   00002F72   0x4811             LDR      R0,??man_ota_main_505
   \   00002F74   0x6DC0             LDR      R0,[R0, #+92]
   \   00002F76   0x49BF             LDR      R1,??man_ota_main_525  ;; 0x100001
   \   00002F78   0x4288             CMP      R0,R1
   \   00002F7A   0xDA0C             BGE      ??man_ota_main_526
   3604          			// 一時情報の初期化
   3605          			man_ota_work.file_info.size_firmware = 0;
   \   00002F7C   0x2000             MOVS     R0,#+0
   \   00002F7E   0x49BE             LDR      R1,??man_ota_main_525+0x4
   \   00002F80   0x6008             STR      R0,[R1, #+0]
   3606          			man_ota_work.data_len = 0;
   \   00002F82   0x2000             MOVS     R0,#+0
   \   00002F84   0x4948             LDR      R1,??man_ota_main_509+0xC
   \   00002F86   0x6008             STR      R0,[R1, #+0]
   3607          			man_ota_work.summ = 0;
   \   00002F88   0x2000             MOVS     R0,#+0
   \   00002F8A   0x4989             LDR      R1,??man_ota_main_520
   \   00002F8C   0x6008             STR      R0,[R1, #+0]
   3608          			// データ取得開始
   3609          			man_ota_set_sequense(MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_REQ);
   \   00002F8E   0x209A             MOVS     R0,#+154
   \   00002F90   0x.... 0x....      BL       man_ota_set_sequense
   \   00002F94   0xE00E             B        ??man_ota_main_527
   3610          		}
   3611          		else {
   3612          			// 中止処理へ
   3613          			man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_526: (+1)
   \   00002F96   0x2000             MOVS     R0,#+0
   \   00002F98   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002F9A   0x4907             LDR      R1,??man_ota_main_505
   \   00002F9C   0x6588             STR      R0,[R1, #+88]
   3614          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002F9E   0x20A2             MOVS     R0,#+162
   \   00002FA0   0x.... 0x....      BL       man_ota_set_sequense
   3615          			// エラー登録
   3616          			man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.usb_file_size, 0);
   \   00002FA4   0x23E2             MOVS     R3,#+226
   \   00002FA6   0x011B             LSLS     R3,R3,#+4        ;; #+3616
   \   00002FA8   0x2200             MOVS     R2,#+0
   \   00002FAA   0x4803             LDR      R0,??man_ota_main_505
   \   00002FAC   0x6DC1             LDR      R1,[R0, #+92]
   \   00002FAE   0x201B             MOVS     R0,#+27
   \   00002FB0   0x.... 0x....      BL       man_error_set
   3617          		}
   3618          		break;
   \                     ??man_ota_main_527: (+1)
   \   00002FB4   0xE1FF             B        ??man_ota_main_274
   \   00002FB6   0xBF00             Nop      
   \                     ??man_ota_main_505:
   \   00002FB8   0x........         DC32     man_ota_work
   \   00002FBC   0x00000D73         DC32     0xd73
   3619          	case MAN_OTA_SEQ_USB_FIRMWARE_FILE_SET_NG:	// USB GPS FIRMWARE FILE SET(異常)
   3620          		// 中止処理へ
   3621          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_263: (+1)
   \   00002FC0   0x2000             MOVS     R0,#+0
   \   00002FC2   0x43C0             MVNS     R0,R0            ;; #-1
   \   00002FC4   0x49C4             LDR      R1,??man_ota_main_528
   \   00002FC6   0x6588             STR      R0,[R1, #+88]
   3622          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00002FC8   0x20A2             MOVS     R0,#+162
   \   00002FCA   0x.... 0x....      BL       man_ota_set_sequense
   3623          		// エラー登録
   3624          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   00002FCE   0x4BC3             LDR      R3,??man_ota_main_528+0x4  ;; 0xe28
   \   00002FD0   0x4832             LDR      R0,??man_ota_main_509
   \   00002FD2   0x6802             LDR      R2,[R0, #+0]
   \   00002FD4   0x4834             LDR      R0,??man_ota_main_509+0xC
   \   00002FD6   0x6801             LDR      R1,[R0, #+0]
   \   00002FD8   0x201B             MOVS     R0,#+27
   \   00002FDA   0x.... 0x....      BL       man_error_set
   3625          		break;
   \   00002FDE   0xE1EA             B        ??man_ota_main_274
   3626          	case MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_REQ:	// USB GPS FIRMWARE DATA GET開始
   3627          		// データ取得開始
   3628          		man_usb_get_data(MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET, man_ota_data_callback);
   \                     ??man_ota_main_264: (+1)
   \   00002FE0   0x492F             LDR      R1,??man_ota_main_509+0x4
   \   00002FE2   0x209B             MOVS     R0,#+155
   \   00002FE4   0x.... 0x....      BL       man_usb_get_data
   3629          		man_ota_set_sequense(MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET);
   \   00002FE8   0x209B             MOVS     R0,#+155
   \   00002FEA   0x.... 0x....      BL       man_ota_set_sequense
   3630          		break;
   \   00002FEE   0xE1E2             B        ??man_ota_main_274
   \                     ??man_ota_main_506:
   \   00002FF0   0x........         DC32     man_ota_work+0x1D3
   \   00002FF4   0x........         DC32     man_ota_work+0x214
   \   00002FF8   0x........         DC32     man_ota_req_callback
   \   00002FFC   0x00040001         DC32     0x40001
   \   00003000   0x........         DC32     man_ota_work+0x98
   \   00003004   0x00000D98         DC32     0xd98
   3631          	case MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET:		// USB GPS FIRMWARE DATA GET
   3632          		break;
   \                     ??man_ota_main_265: (+1)
   \   00003008   0xE1D5             B        ??man_ota_main_274
   3633          	case MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_OK:	// USB GPS FIRMWARE DATA GET(正常)
   3634          		if (man_ota_work.resp_cmd.data_len != 0) {
   \                     ??man_ota_main_266: (+1)
   \   0000300A   0x4824             LDR      R0,??man_ota_main_509
   \   0000300C   0x6800             LDR      R0,[R0, #+0]
   \   0000300E   0x2800             CMP      R0,#+0
   \   00003010   0xD04E             BEQ      ??man_ota_main_529
   3635          			// 外部FLASHにman_ota_work.resp_cmd.dataを書き込む
   3636          			// data部にはCR+LFが含まれているためman_ota_work.resp_cmd.data_len-2バイトをコピーする
   3637          			for (i=0; i<man_ota_work.resp_cmd.data_len-2; i++) {
   \   00003012   0x2400             MOVS     R4,#+0
   \   00003014   0xE038             B        ??man_ota_main_530
   3638          				man_ota_work.data_buff[man_ota_work.data_len] = man_ota_work.resp_cmd.data[i];
   \                     ??man_ota_main_531: (+1)
   \   00003016   0x4823             LDR      R0,??man_ota_main_509+0x8
   \   00003018   0x6800             LDR      R0,[R0, #+0]
   \   0000301A   0x5D00             LDRB     R0,[R0, R4]
   \   0000301C   0x49B0             LDR      R1,??man_ota_main_528+0x8
   \   0000301E   0x6809             LDR      R1,[R1, #+0]
   \   00003020   0x4A21             LDR      R2,??man_ota_main_509+0xC
   \   00003022   0x6812             LDR      R2,[R2, #+0]
   \   00003024   0x5488             STRB     R0,[R1, R2]
   3639          				man_ota_work.summ += man_ota_work.resp_cmd.data[i];
   \   00003026   0x4862             LDR      R0,??man_ota_main_520
   \   00003028   0x6800             LDR      R0,[R0, #+0]
   \   0000302A   0x491E             LDR      R1,??man_ota_main_509+0x8
   \   0000302C   0x6809             LDR      R1,[R1, #+0]
   \   0000302E   0x5D09             LDRB     R1,[R1, R4]
   \   00003030   0x1840             ADDS     R0,R0,R1
   \   00003032   0x495F             LDR      R1,??man_ota_main_520
   \   00003034   0x6008             STR      R0,[R1, #+0]
   3640          				man_ota_work.data_len++;
   \   00003036   0x481C             LDR      R0,??man_ota_main_509+0xC
   \   00003038   0x6800             LDR      R0,[R0, #+0]
   \   0000303A   0x1C40             ADDS     R0,R0,#+1
   \   0000303C   0x491A             LDR      R1,??man_ota_main_509+0xC
   \   0000303E   0x6008             STR      R0,[R1, #+0]
   3641          
   3642          				// PAGEサイズを超えるとFLASHに書き込む
   3643          				if (man_ota_work.data_len >= MAN_FLASH_PAGE_SIZE) {
   \   00003040   0x4819             LDR      R0,??man_ota_main_509+0xC
   \   00003042   0x6800             LDR      R0,[R0, #+0]
   \   00003044   0x28FF             CMP      R0,#+255
   \   00003046   0xDD1E             BLE      ??man_ota_main_532
   3644          					ret = man_flash_write_page(man_ota_work.file_info.addr_firmware + man_ota_work.file_info.size_firmware, &man_ota_work.data_buff[0], MAN_FLASH_PAGE_SIZE);
   \   00003048   0x2280             MOVS     R2,#+128
   \   0000304A   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   0000304C   0x48A4             LDR      R0,??man_ota_main_528+0x8
   \   0000304E   0x6801             LDR      R1,[R0, #+0]
   \   00003050   0x48A4             LDR      R0,??man_ota_main_528+0xC
   \   00003052   0x6800             LDR      R0,[R0, #+0]
   \   00003054   0x4B88             LDR      R3,??man_ota_main_525+0x4
   \   00003056   0x681B             LDR      R3,[R3, #+0]
   \   00003058   0x18C0             ADDS     R0,R0,R3
   \   0000305A   0x.... 0x....      BL       man_flash_write_page
   3645          					if (ret < 0) {
   \   0000305E   0x2800             CMP      R0,#+0
   \   00003060   0xD503             BPL      ??man_ota_main_533
   3646          						// 外部FLASH書き込み異常
   3647          						man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00003062   0x2000             MOVS     R0,#+0
   \   00003064   0x43C0             MVNS     R0,R0            ;; #-1
   \   00003066   0x499C             LDR      R1,??man_ota_main_528
   \   00003068   0x6588             STR      R0,[R1, #+88]
   3648          					}
   3649          					man_ota_work.data_len -= MAN_FLASH_PAGE_SIZE;
   \                     ??man_ota_main_533: (+1)
   \   0000306A   0x480F             LDR      R0,??man_ota_main_509+0xC
   \   0000306C   0x6800             LDR      R0,[R0, #+0]
   \   0000306E   0x21FF             MOVS     R1,#+255
   \   00003070   0x43C9             MVNS     R1,R1            ;; #-256
   \   00003072   0x1840             ADDS     R0,R0,R1
   \   00003074   0x490C             LDR      R1,??man_ota_main_509+0xC
   \   00003076   0x6008             STR      R0,[R1, #+0]
   3650          					man_ota_work.file_info.size_firmware += MAN_FLASH_PAGE_SIZE;
   \   00003078   0x487F             LDR      R0,??man_ota_main_525+0x4
   \   0000307A   0x6800             LDR      R0,[R0, #+0]
   \   0000307C   0x2180             MOVS     R1,#+128
   \   0000307E   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \   00003080   0x1840             ADDS     R0,R0,R1
   \   00003082   0x497D             LDR      R1,??man_ota_main_525+0x4
   \   00003084   0x6008             STR      R0,[R1, #+0]
   3651          				}
   3652          			}
   \                     ??man_ota_main_532: (+1)
   \   00003086   0x1C64             ADDS     R4,R4,#+1
   \                     ??man_ota_main_530: (+1)
   \   00003088   0x4804             LDR      R0,??man_ota_main_509
   \   0000308A   0x6800             LDR      R0,[R0, #+0]
   \   0000308C   0x1E80             SUBS     R0,R0,#+2
   \   0000308E   0x4284             CMP      R4,R0
   \   00003090   0xDBC1             BLT      ??man_ota_main_531
   3653          			// 次のシーケンスへ遷移
   3654          			man_ota_set_sequense(MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_REQ);
   \   00003092   0x209A             MOVS     R0,#+154
   \   00003094   0x.... 0x....      BL       man_ota_set_sequense
   \   00003098   0xE077             B        ??man_ota_main_534
   \   0000309A   0xBF00             Nop      
   \                     ??man_ota_main_509:
   \   0000309C   0x........         DC32     man_ota_work+0x80
   \   000030A0   0x........         DC32     man_ota_data_callback
   \   000030A4   0x........         DC32     man_ota_work+0x84
   \   000030A8   0x........         DC32     man_ota_work+0xC0
   \   000030AC   0x........         DC32     man_ota_work+0xA8
   3655          		}
   3656          		else {
   3657          			// 残りをFLASHに書き込む
   3658          			if (man_ota_work.data_len > 0) {
   \                     ??man_ota_main_529: (+1)
   \   000030B0   0x....             LDR      R0,??DataTable7
   \   000030B2   0x6800             LDR      R0,[R0, #+0]
   \   000030B4   0x2801             CMP      R0,#+1
   \   000030B6   0xDB26             BLT      ??man_ota_main_535
   3659          				ret = man_flash_write_page(man_ota_work.file_info.addr_firmware + man_ota_work.file_info.size_firmware, &man_ota_work.data_buff[0], man_ota_work.data_len);
   \   000030B8   0x....             LDR      R0,??DataTable7
   \   000030BA   0x6802             LDR      R2,[R0, #+0]
   \   000030BC   0x4888             LDR      R0,??man_ota_main_528+0x8
   \   000030BE   0x6801             LDR      R1,[R0, #+0]
   \   000030C0   0x4888             LDR      R0,??man_ota_main_528+0xC
   \   000030C2   0x6800             LDR      R0,[R0, #+0]
   \   000030C4   0x4B6C             LDR      R3,??man_ota_main_525+0x4
   \   000030C6   0x681B             LDR      R3,[R3, #+0]
   \   000030C8   0x18C0             ADDS     R0,R0,R3
   \   000030CA   0x.... 0x....      BL       man_flash_write_page
   3660          				if (ret < 0) {
   \   000030CE   0x2800             CMP      R0,#+0
   \   000030D0   0xD50F             BPL      ??man_ota_main_536
   3661          					// 外部FLASH書き込み異常
   3662          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   000030D2   0x2000             MOVS     R0,#+0
   \   000030D4   0x43C0             MVNS     R0,R0            ;; #-1
   \   000030D6   0x4980             LDR      R1,??man_ota_main_528
   \   000030D8   0x6588             STR      R0,[R1, #+88]
   3663          					// エラー登録
   3664          					man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.addr_firmware + man_ota_work.file_info.size_firmware, man_ota_work.data_len);
   \   000030DA   0x23E5             MOVS     R3,#+229
   \   000030DC   0x011B             LSLS     R3,R3,#+4        ;; #+3664
   \   000030DE   0x....             LDR      R0,??DataTable7
   \   000030E0   0x6802             LDR      R2,[R0, #+0]
   \   000030E2   0x4880             LDR      R0,??man_ota_main_528+0xC
   \   000030E4   0x6800             LDR      R0,[R0, #+0]
   \   000030E6   0x4964             LDR      R1,??man_ota_main_525+0x4
   \   000030E8   0x6809             LDR      R1,[R1, #+0]
   \   000030EA   0x1841             ADDS     R1,R0,R1
   \   000030EC   0x201B             MOVS     R0,#+27
   \   000030EE   0x.... 0x....      BL       man_error_set
   3665          				}
   3666          				man_ota_work.file_info.size_firmware += man_ota_work.data_len;
   \                     ??man_ota_main_536: (+1)
   \   000030F2   0x4861             LDR      R0,??man_ota_main_525+0x4
   \   000030F4   0x6800             LDR      R0,[R0, #+0]
   \   000030F6   0x....             LDR      R1,??DataTable7
   \   000030F8   0x6809             LDR      R1,[R1, #+0]
   \   000030FA   0x1840             ADDS     R0,R0,R1
   \   000030FC   0x495E             LDR      R1,??man_ota_main_525+0x4
   \   000030FE   0x6008             STR      R0,[R1, #+0]
   3667          				man_ota_work.data_len = 0;
   \   00003100   0x2000             MOVS     R0,#+0
   \   00003102   0x....             LDR      R1,??DataTable7
   \   00003104   0x6008             STR      R0,[R1, #+0]
   3668          			}
   3669          
   3670          			// 外部FLASH書き込み異常時はチェックSUM異常扱いとする
   3671          			if (man_ota_work.exec_info.result != MAN_OTA_STATUS_NG) {
   \                     ??man_ota_main_535: (+1)
   \   00003106   0x4874             LDR      R0,??man_ota_main_528
   \   00003108   0x6D80             LDR      R0,[R0, #+88]
   \   0000310A   0x2100             MOVS     R1,#+0
   \   0000310C   0x43C9             MVNS     R1,R1            ;; #-1
   \   0000310E   0x4288             CMP      R0,R1
   \   00003110   0xD00A             BEQ      ??man_ota_main_537
   3672          				// チェックSUM
   3673          				ret = man_ota_check_summ_data(man_ota_work.file_info.addr_firmware + man_ota_work.file_info.size_firmware-4, man_ota_work.summ);
   \   00003112   0x4827             LDR      R0,??man_ota_main_520
   \   00003114   0x6801             LDR      R1,[R0, #+0]
   \   00003116   0x4873             LDR      R0,??man_ota_main_528+0xC
   \   00003118   0x6800             LDR      R0,[R0, #+0]
   \   0000311A   0x4A57             LDR      R2,??man_ota_main_525+0x4
   \   0000311C   0x6812             LDR      R2,[R2, #+0]
   \   0000311E   0x1880             ADDS     R0,R0,R2
   \   00003120   0x1F00             SUBS     R0,R0,#+4
   \   00003122   0x.... 0x....      BL       man_ota_check_summ_data
   \   00003126   0xE001             B        ??man_ota_main_538
   3674          			}
   3675          			else {
   3676          				ret = -1;
   \                     ??man_ota_main_537: (+1)
   \   00003128   0x2000             MOVS     R0,#+0
   \   0000312A   0x43C0             MVNS     R0,R0            ;; #-1
   3677          			}
   3678          
   3679          			// チェックSUM異常
   3680          			if(ret < 0) {
   \                     ??man_ota_main_538: (+1)
   \   0000312C   0x2800             CMP      R0,#+0
   \   0000312E   0xD50E             BPL      ??man_ota_main_539
   3681          				man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   00003130   0x2000             MOVS     R0,#+0
   \   00003132   0x43C0             MVNS     R0,R0            ;; #-1
   \   00003134   0x4968             LDR      R1,??man_ota_main_528
   \   00003136   0x6588             STR      R0,[R1, #+88]
   3682          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00003138   0x20A2             MOVS     R0,#+162
   \   0000313A   0x.... 0x....      BL       man_ota_set_sequense
   3683          				// エラー登録
   3684          				man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.file_info.size_firmware, 0);
   \   0000313E   0x....             LDR      R3,??DataTable12  ;; 0xe64
   \   00003140   0x2200             MOVS     R2,#+0
   \   00003142   0x484D             LDR      R0,??man_ota_main_525+0x4
   \   00003144   0x6801             LDR      R1,[R0, #+0]
   \   00003146   0x201B             MOVS     R0,#+27
   \   00003148   0x.... 0x....      BL       man_error_set
   \   0000314C   0xE01D             B        ??man_ota_main_534
   3685          			}
   3686          			else {
   3687          
   3688          				// 受信したサイズを確認する
   3689          				if (man_ota_work.exec_info.usb_file_size != man_ota_work.file_info.size_firmware) {
   \                     ??man_ota_main_539: (+1)
   \   0000314E   0x4862             LDR      R0,??man_ota_main_528
   \   00003150   0x6DC0             LDR      R0,[R0, #+92]
   \   00003152   0x4949             LDR      R1,??man_ota_main_525+0x4
   \   00003154   0x6809             LDR      R1,[R1, #+0]
   \   00003156   0x4288             CMP      R0,R1
   \   00003158   0xD00F             BEQ      ??man_ota_main_540
   3690          					man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \   0000315A   0x2000             MOVS     R0,#+0
   \   0000315C   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000315E   0x495E             LDR      R1,??man_ota_main_528
   \   00003160   0x6588             STR      R0,[R1, #+88]
   3691          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00003162   0x20A2             MOVS     R0,#+162
   \   00003164   0x.... 0x....      BL       man_ota_set_sequense
   3692          					// エラー登録
   3693          					man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.exec_info.usb_file_size, man_ota_work.file_info.size_firmware);
   \   00003168   0x....             LDR      R3,??DataTable15  ;; 0xe6d
   \   0000316A   0x4843             LDR      R0,??man_ota_main_525+0x4
   \   0000316C   0x6802             LDR      R2,[R0, #+0]
   \   0000316E   0x485A             LDR      R0,??man_ota_main_528
   \   00003170   0x6DC1             LDR      R1,[R0, #+92]
   \   00003172   0x201B             MOVS     R0,#+27
   \   00003174   0x.... 0x....      BL       man_error_set
   \   00003178   0xE007             B        ??man_ota_main_534
   3694          				}
   3695          				else {
   3696          					// GPSへのFW書き込みへ遷移する
   3697          					man_ota_set_sequense(MAN_OTA_SEQ_GPS_OTA_SET_REQ);
   \                     ??man_ota_main_540: (+1)
   \   0000317A   0x2043             MOVS     R0,#+67
   \   0000317C   0x.... 0x....      BL       man_ota_set_sequense
   3698          					//外部フラッシュ情報記憶
   3699          					man_ota_work.file_info.size_firmware -= 4;			// チェックSUM分の4Byteを引く
   \   00003180   0x483D             LDR      R0,??man_ota_main_525+0x4
   \   00003182   0x6800             LDR      R0,[R0, #+0]
   \   00003184   0x1F00             SUBS     R0,R0,#+4
   \   00003186   0x493C             LDR      R1,??man_ota_main_525+0x4
   \   00003188   0x6008             STR      R0,[R1, #+0]
   3700          				}
   3701          			}
   3702          		}
   3703          		break;
   \                     ??man_ota_main_534: (+1)
   \   0000318A   0xE114             B        ??man_ota_main_274
   \                     ??man_ota_main_518:
   \   0000318C   0x00000DC8         DC32     0xdc8
   3704          	case MAN_OTA_SEQ_USB_FIRMWARE_DATA_GET_NG:	// USB GPS FIRMWARE DATA GET(異常)
   3705          		// 中止処理へ
   3706          		man_ota_work.exec_info.result = MAN_OTA_STATUS_NG;
   \                     ??man_ota_main_267: (+1)
   \   00003190   0x2000             MOVS     R0,#+0
   \   00003192   0x43C0             MVNS     R0,R0            ;; #-1
   \   00003194   0x4950             LDR      R1,??man_ota_main_528
   \   00003196   0x6588             STR      R0,[R1, #+88]
   3707          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_REQ);
   \   00003198   0x20A2             MOVS     R0,#+162
   \   0000319A   0x.... 0x....      BL       man_ota_set_sequense
   3708          		// エラー登録
   3709          		man_error_setting(MAN_ERROR_MAN_OTA, man_ota_work.data_len, man_ota_work.resp_cmd.data_len);
   \   0000319E   0x....             LDR      R3,??DataTable16  ;; 0xe7d
   \   000031A0   0x....             LDR      R0,??DataTable16_1
   \   000031A2   0x6802             LDR      R2,[R0, #+0]
   \   000031A4   0x....             LDR      R0,??DataTable7
   \   000031A6   0x6801             LDR      R1,[R0, #+0]
   \   000031A8   0x201B             MOVS     R0,#+27
   \   000031AA   0x.... 0x....      BL       man_error_set
   3710          		break;
   \   000031AE   0xE102             B        ??man_ota_main_274
   \                     ??man_ota_main_520:
   \   000031B0   0x........         DC32     man_ota_work+0xC4
   \   000031B4   0x00000DDC         DC32     0xddc
   3711          
   3712          
   3713          	// ************************************
   3714          	// OTA END
   3715          	// ************************************
   3716          	case MAN_OTA_SEQ_OTA_END_REQ:				// OTA終了開始
   3717          
   3718          		// 電圧・バッテリー残量計測再開
   3719          		man_battery_active();
   \                     ??man_ota_main_268: (+1)
   \   000031B8   0x.... 0x....      BL       man_battery_active
   3720          		// 充電情報取得再開
   3721          		man_charge_active();
   \   000031BC   0x.... 0x....      BL       man_charge_active
   3722          
   3723          		// OTA成功の場合
   3724          		if (man_ota_work.exec_info.result == MAN_OTA_STATUS_OK) {
   \   000031C0   0x4845             LDR      R0,??man_ota_main_528
   \   000031C2   0x6D80             LDR      R0,[R0, #+88]
   \   000031C4   0x2800             CMP      R0,#+0
   \   000031C6   0xD169             BNE      ??man_ota_main_541
   3725          
   3726          			switch (man_ota_work.exec_info.req_cmd) {
   \   000031C8   0x4843             LDR      R0,??man_ota_main_528
   \   000031CA   0x6880             LDR      R0,[R0, #+8]
   \   000031CC   0x2801             CMP      R0,#+1
   \   000031CE   0xD007             BEQ      ??man_ota_main_542
   \   000031D0   0xD200             BCS      .+4
   \   000031D2   0xE080             B        ??man_ota_main_543
   \   000031D4   0x2803             CMP      R0,#+3
   \   000031D6   0xD033             BEQ      ??man_ota_main_544
   \   000031D8   0xD32A             BCC      ??man_ota_main_545
   \   000031DA   0x2804             CMP      R0,#+4
   \   000031DC   0xD056             BEQ      ??man_ota_main_546
   \   000031DE   0xE07A             B        ??man_ota_main_543
   3727          			// 端末のOTAの場合
   3728          			case MAN_OTA_REQ_TERM_START:
   3729          				// プログラムの動作面を変更
   3730          				if (man_data_chk_program() == MAN_DATA_PRG_B_SIDE) {
   \                     ??man_ota_main_542: (+1)
   \   000031E0   0x.... 0x....      BL       man_data_chk_program
   \   000031E4   0x2801             CMP      R0,#+1
   \   000031E6   0xD103             BNE      ??man_ota_main_547
   3731          					ret = man_data_program_mrg_set_flash(MAN_DATA_PRG_A_SIDE);
   \   000031E8   0x2000             MOVS     R0,#+0
   \   000031EA   0x.... 0x....      BL       man_data_program_mrg_set_flash
   \   000031EE   0xE002             B        ??man_ota_main_548
   3732          				}
   3733          				else {
   3734          					ret = man_data_program_mrg_set_flash(MAN_DATA_PRG_B_SIDE);
   \                     ??man_ota_main_547: (+1)
   \   000031F0   0x2001             MOVS     R0,#+1
   \   000031F2   0x.... 0x....      BL       man_data_program_mrg_set_flash
   3735          				}
   3736          
   3737          				if (ret < 0) {
   \                     ??man_ota_main_548: (+1)
   \   000031F6   0x2800             CMP      R0,#+0
   \   000031F8   0xD510             BPL      ??man_ota_main_549
   3738          					man_error_setting(MAN_ERROR_MAN_OTA, man_data_chk_program(), 0);
   \   000031FA   0x.... 0x....      BL       man_data_chk_program
   \   000031FE   0x....             LDR      R3,??DataTable16_2  ;; 0xe9a
   \   00003200   0x2200             MOVS     R2,#+0
   \   00003202   0x0001             MOVS     R1,R0
   \   00003204   0x201B             MOVS     R0,#+27
   \   00003206   0x.... 0x....      BL       man_error_set
   3739          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_NG);
   \   0000320A   0x20A5             MOVS     R0,#+165
   \   0000320C   0x.... 0x....      BL       man_ota_set_sequense
   \   00003210   0xE00B             B        ??man_ota_main_550
   \   00003212   0xBF00             Nop      
   \                     ??man_ota_main_524:
   \   00003214   0x00000DE5         DC32     0xde5
   \   00003218   0x00000DF9         DC32     0xdf9
   3740          				}
   3741          
   3742          				// 端末用 OTA終了開始
   3743          				else {
   3744          					man_ope_req_ota_end(MAN_OTA_SEQ_OTA_END, man_ota_req_callback);
   \                     ??man_ota_main_549: (+1)
   \   0000321C   0x....             LDR      R1,??DataTable16_3
   \   0000321E   0x20A3             MOVS     R0,#+163
   \   00003220   0x.... 0x....      BL       man_ope_req_ota_end
   3745          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END);
   \   00003224   0x20A3             MOVS     R0,#+163
   \   00003226   0x.... 0x....      BL       man_ota_set_sequense
   3746          
   3747          #ifdef GNSS_DEBUG_MAN_OTA_FTP 
   3748          				int32_t		length;
   3749          				sprintf((char *)&man_ota_work.buff[0], "OTA END(%d)\n", man_ota_work.exec_info.req_cmd);
   3750          				length = strlen((char const *)&man_ota_work.buff[0]);
   3751          				man_usb_data_send(&man_ota_work.buff[0], length);
   3752          #endif
   3753          
   3754          				}
   3755          				man_gps_set_finish_ota();			//GPSの状態をOTA終了状態にセット
   \                     ??man_ota_main_550: (+1)
   \   0000322A   0x.... 0x....      BL       man_gps_set_finish_ota
   3756          				break;
   \   0000322E   0xE052             B        ??man_ota_main_543
   3757          			// GPSのOTAの場合
   3758          			case MAN_OTA_REQ_GPS_START:
   3759          				man_ope_req_ota_end(MAN_OTA_SEQ_OTA_END, man_ota_req_callback);
   \                     ??man_ota_main_545: (+1)
   \   00003230   0x....             LDR      R1,??DataTable16_3
   \   00003232   0x20A3             MOVS     R0,#+163
   \   00003234   0x.... 0x....      BL       man_ope_req_ota_end
   3760          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END);
   \   00003238   0x20A3             MOVS     R0,#+163
   \   0000323A   0x.... 0x....      BL       man_ota_set_sequense
   3761          				break;
   \   0000323E   0xE04A             B        ??man_ota_main_543
   3762          			// USB 端末用 OTAの場合
   3763          			case MAN_OTA_REQ_USB_TERM_START:
   3764          				ret = 0;
   \                     ??man_ota_main_544: (+1)
   \   00003240   0x2000             MOVS     R0,#+0
   3765          				// プログラムの動作面を変更
   3766          				if (man_data_chk_program() == MAN_DATA_PRG_B_SIDE) {
   \   00003242   0x.... 0x....      BL       man_data_chk_program
   \   00003246   0x2801             CMP      R0,#+1
   \   00003248   0xD103             BNE      ??man_ota_main_551
   3767          					ret = man_data_program_mrg_set_flash(MAN_DATA_PRG_A_SIDE);
   \   0000324A   0x2000             MOVS     R0,#+0
   \   0000324C   0x.... 0x....      BL       man_data_program_mrg_set_flash
   \   00003250   0xE002             B        ??man_ota_main_552
   3768          				}
   3769          				else {
   3770          					ret = man_data_program_mrg_set_flash(MAN_DATA_PRG_B_SIDE);
   \                     ??man_ota_main_551: (+1)
   \   00003252   0x2001             MOVS     R0,#+1
   \   00003254   0x.... 0x....      BL       man_data_program_mrg_set_flash
   3771          				}
   3772          
   3773          				if (ret < 0) {
   \                     ??man_ota_main_552: (+1)
   \   00003258   0x2800             CMP      R0,#+0
   \   0000325A   0xD50F             BPL      ??man_ota_main_553
   3774          					man_error_setting(MAN_ERROR_MAN_OTA, man_data_chk_program(), 0);
   \   0000325C   0x.... 0x....      BL       man_data_chk_program
   \   00003260   0x....             LDR      R3,??DataTable16_4  ;; 0xebe
   \   00003262   0x2200             MOVS     R2,#+0
   \   00003264   0x0001             MOVS     R1,R0
   \   00003266   0x201B             MOVS     R0,#+27
   \   00003268   0x.... 0x....      BL       man_error_set
   3775          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END_NG);
   \   0000326C   0x20A5             MOVS     R0,#+165
   \   0000326E   0x.... 0x....      BL       man_ota_set_sequense
   \   00003272   0xE00A             B        ??man_ota_main_554
   \                     ??man_ota_main_525:
   \   00003274   0x00100001         DC32     0x100001
   \   00003278   0x........         DC32     man_ota_work+0xA0
   3776          				}
   3777          
   3778          				// 端末用 OTA終了開始
   3779          				else {
   3780          					man_ope_req_ota_end(MAN_OTA_SEQ_OTA_END, man_ota_req_callback);
   \                     ??man_ota_main_553: (+1)
   \   0000327C   0x....             LDR      R1,??DataTable16_3
   \   0000327E   0x20A3             MOVS     R0,#+163
   \   00003280   0x.... 0x....      BL       man_ope_req_ota_end
   3781          					man_ota_set_sequense(MAN_OTA_SEQ_OTA_END);
   \   00003284   0x20A3             MOVS     R0,#+163
   \   00003286   0x.... 0x....      BL       man_ota_set_sequense
   3782          				}
   3783          				break;
   \                     ??man_ota_main_554: (+1)
   \   0000328A   0xE024             B        ??man_ota_main_543
   3784          			// USB GPS OTAの場合
   3785          			case MAN_OTA_REQ_USB_GPS_START:
   3786          				man_ope_req_ota_end(MAN_OTA_SEQ_OTA_END, man_ota_req_callback);
   \                     ??man_ota_main_546: (+1)
   \   0000328C   0x....             LDR      R1,??DataTable16_3
   \   0000328E   0x20A3             MOVS     R0,#+163
   \   00003290   0x.... 0x....      BL       man_ope_req_ota_end
   3787          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_END);
   \   00003294   0x20A3             MOVS     R0,#+163
   \   00003296   0x.... 0x....      BL       man_ota_set_sequense
   3788          				break;
   \   0000329A   0xE01C             B        ??man_ota_main_543
   3789          			}
   3790          		}
   3791          
   3792          
   3793          		// OTA失敗の場合
   3794          		else {
   3795          			switch (man_ota_work.exec_info.req_cmd) {
   \                     ??man_ota_main_541: (+1)
   \   0000329C   0x480E             LDR      R0,??man_ota_main_528
   \   0000329E   0x6880             LDR      R0,[R0, #+8]
   \   000032A0   0x2801             CMP      R0,#+1
   \   000032A2   0xD006             BEQ      ??man_ota_main_555
   \   000032A4   0xD310             BCC      ??man_ota_main_556
   \   000032A6   0x2803             CMP      R0,#+3
   \   000032A8   0xD009             BEQ      ??man_ota_main_557
   \   000032AA   0xD305             BCC      ??man_ota_main_558
   \   000032AC   0x2804             CMP      R0,#+4
   \   000032AE   0xD009             BEQ      ??man_ota_main_559
   \   000032B0   0xE00A             B        ??man_ota_main_556
   3796          			// 端末のOTAの場合
   3797          			case MAN_OTA_REQ_TERM_START:
   3798          				man_gps_set_finish_ota();			//GPSの状態をOTA終了状態にセット
   \                     ??man_ota_main_555: (+1)
   \   000032B2   0x.... 0x....      BL       man_gps_set_finish_ota
   3799          				break;
   \   000032B6   0xE007             B        ??man_ota_main_556
   3800          			// GPSのOTAの場合
   3801          			case MAN_OTA_REQ_GPS_START:
   3802          				man_gps_set_finish_ota();			//GPSの状態をOTA終了状態にセット
   \                     ??man_ota_main_558: (+1)
   \   000032B8   0x.... 0x....      BL       man_gps_set_finish_ota
   3803          				break;
   \   000032BC   0xE004             B        ??man_ota_main_556
   3804          			// USB 端末用 OTAの場合
   3805          			case MAN_OTA_REQ_USB_TERM_START:
   3806          				man_gps_set_finish_ota();			//GPSの状態をOTA終了状態にセット
   \                     ??man_ota_main_557: (+1)
   \   000032BE   0x.... 0x....      BL       man_gps_set_finish_ota
   3807          				break;
   \   000032C2   0xE001             B        ??man_ota_main_556
   3808          			// USB GPS OTAの場合
   3809          			case MAN_OTA_REQ_USB_GPS_START:
   3810          				man_gps_set_finish_ota();			//GPSの状態をOTA終了状態にセット
   \                     ??man_ota_main_559: (+1)
   \   000032C4   0x.... 0x....      BL       man_gps_set_finish_ota
   3811          				break;
   3812          			}
   3813          			man_ope_req_ota_end(MAN_OTA_SEQ_OTA_END, man_ota_req_callback);
   \                     ??man_ota_main_556: (+1)
   \   000032C8   0x....             LDR      R1,??DataTable16_3
   \   000032CA   0x20A3             MOVS     R0,#+163
   \   000032CC   0x.... 0x....      BL       man_ope_req_ota_end
   3814          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_END);
   \   000032D0   0x20A3             MOVS     R0,#+163
   \   000032D2   0x.... 0x....      BL       man_ota_set_sequense
   3815          		}
   3816          		break;
   \                     ??man_ota_main_543: (+1)
   \   000032D6   0xE06E             B        ??man_ota_main_274
   \                     ??man_ota_main_528:
   \   000032D8   0x........         DC32     man_ota_work
   \   000032DC   0x00000E28         DC32     0xe28
   \   000032E0   0x........         DC32     man_ota_work+0xBC
   \   000032E4   0x........         DC32     man_ota_work+0xB0
   3817          	case MAN_OTA_SEQ_OTA_END:					// OTA終了中
   3818          		break;
   \                     ??man_ota_main_269: (+1)
   \   000032E8   0xE065             B        ??man_ota_main_274
   3819          
   3820          	case MAN_OTA_SEQ_OTA_END_OK:				// OTA終了完了(正常)
   3821          		// OTA終了
   3822          		man_ota_work.ota_mode = MAN_OTA_MODE_NON;
   \                     ??man_ota_main_270: (+1)
   \   000032EA   0x2000             MOVS     R0,#+0
   \   000032EC   0x....             LDR      R1,??DataTable16_5
   \   000032EE   0x7048             STRB     R0,[R1, #+1]
   3823          
   3824          		switch (man_ota_work.exec_info.req_cmd) {
   \   000032F0   0x....             LDR      R0,??DataTable16_5
   \   000032F2   0x6880             LDR      R0,[R0, #+8]
   \   000032F4   0x2801             CMP      R0,#+1
   \   000032F6   0xD006             BEQ      ??man_ota_main_560
   \   000032F8   0xD354             BCC      ??man_ota_main_561
   \   000032FA   0x2803             CMP      R0,#+3
   \   000032FC   0xD026             BEQ      ??man_ota_main_562
   \   000032FE   0xD316             BCC      ??man_ota_main_563
   \   00003300   0x2804             CMP      R0,#+4
   \   00003302   0xD03C             BEQ      ??man_ota_main_564
   \   00003304   0xE04E             B        ??man_ota_main_561
   3825          		// 端末のOTAの場合
   3826          		case MAN_OTA_REQ_TERM_START:
   3827          			if (man_ota_work.exec_info.result == MAN_OTA_STATUS_OK) {
   \                     ??man_ota_main_560: (+1)
   \   00003306   0x....             LDR      R0,??DataTable16_5
   \   00003308   0x6D80             LDR      R0,[R0, #+88]
   \   0000330A   0x2800             CMP      R0,#+0
   \   0000330C   0xD108             BNE      ??man_ota_main_565
   3828          				// 端末ファームウェア更新終了
   3829          				man_msg_set_type(MAN_MSG_TYPE_FIRM_FIN);
   \   0000330E   0x2025             MOVS     R0,#+37
   \   00003310   0x.... 0x....      BL       man_msg_set_type
   3830          				// リセット
   3831          				man_ope_req_reset();
   \   00003314   0x.... 0x....      BL       man_ope_req_reset
   3832          				// OTA終了
   3833          				man_ota_set_sequense(MAN_OTA_SEQ_READY);
   \   00003318   0x2000             MOVS     R0,#+0
   \   0000331A   0x.... 0x....      BL       man_ota_set_sequense
   \   0000331E   0xE005             B        ??man_ota_main_566
   3834          			}
   3835          			else {
   3836          				// 端末ファームウェア更新終了
   3837          				man_msg_set_type(MAN_MSG_TYPE_FIRM_ERR);
   \                     ??man_ota_main_565: (+1)
   \   00003320   0x2026             MOVS     R0,#+38
   \   00003322   0x.... 0x....      BL       man_msg_set_type
   3838          				// OTA終了
   3839          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_GPS_START);
   \   00003326   0x20A6             MOVS     R0,#+166
   \   00003328   0x.... 0x....      BL       man_ota_set_sequense
   3840          			}
   3841          			break;
   \                     ??man_ota_main_566: (+1)
   \   0000332C   0xE03A             B        ??man_ota_main_561
   3842          		// GPSのOTAの場合
   3843          		case MAN_OTA_REQ_GPS_START:
   3844          			if (man_ota_work.exec_info.result == MAN_OTA_STATUS_OK) {
   \                     ??man_ota_main_563: (+1)
   \   0000332E   0x....             LDR      R0,??DataTable16_5
   \   00003330   0x6D80             LDR      R0,[R0, #+88]
   \   00003332   0x2800             CMP      R0,#+0
   \   00003334   0xD103             BNE      ??man_ota_main_567
   3845          				// GPSファームウェア更新終了
   3846          				man_msg_set_type(MAN_MSG_TYPE_GPS_FIN);
   \   00003336   0x2028             MOVS     R0,#+40
   \   00003338   0x.... 0x....      BL       man_msg_set_type
   \   0000333C   0xE002             B        ??man_ota_main_568
   3847          			}
   3848          			else {
   3849          				// GPSファームウェア更新終了
   3850          				man_msg_set_type(MAN_MSG_TYPE_GPS_ERR);
   \                     ??man_ota_main_567: (+1)
   \   0000333E   0x2029             MOVS     R0,#+41
   \   00003340   0x.... 0x....      BL       man_msg_set_type
   3851          			}
   3852          			// OTA終了
   3853          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_GPS_START);
   \                     ??man_ota_main_568: (+1)
   \   00003344   0x20A6             MOVS     R0,#+166
   \   00003346   0x.... 0x....      BL       man_ota_set_sequense
   3854          			break;
   \   0000334A   0xE02B             B        ??man_ota_main_561
   3855          		// USB 端末用 OTAの場合
   3856          		case MAN_OTA_REQ_USB_TERM_START:
   3857          			if (man_ota_work.exec_info.result == MAN_OTA_STATUS_OK) {
   \                     ??man_ota_main_562: (+1)
   \   0000334C   0x....             LDR      R0,??DataTable16_5
   \   0000334E   0x6D80             LDR      R0,[R0, #+88]
   \   00003350   0x2800             CMP      R0,#+0
   \   00003352   0xD108             BNE      ??man_ota_main_569
   3858          				man_usb_send_usbota_result(MAN_USB_STATUS_OK);
   \   00003354   0x2000             MOVS     R0,#+0
   \   00003356   0x.... 0x....      BL       man_usb_send_usbota_result
   3859          				// リセット
   3860          				man_ope_req_reset();
   \   0000335A   0x.... 0x....      BL       man_ope_req_reset
   3861          				// OTA終了
   3862          				man_ota_set_sequense(MAN_OTA_SEQ_READY);
   \   0000335E   0x2000             MOVS     R0,#+0
   \   00003360   0x.... 0x....      BL       man_ota_set_sequense
   \   00003364   0xE00A             B        ??man_ota_main_570
   3863          			}
   3864          			else {
   3865          				man_usb_send_usbota_result(MAN_USB_STATUS_NG);
   \                     ??man_ota_main_569: (+1)
   \   00003366   0x2000             MOVS     R0,#+0
   \   00003368   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000336A   0x.... 0x....      BL       man_usb_send_usbota_result
   3866          				// OTA終了
   3867          				man_ota_set_sequense(MAN_OTA_SEQ_OTA_GPS_START);
   \   0000336E   0x20A6             MOVS     R0,#+166
   \   00003370   0x.... 0x....      BL       man_ota_set_sequense
   3868          				man_usb_ota_close();
   \   00003374   0x.... 0x....      BL       man_usb_ota_close
   3869          				// レポート送信再開
   3870          				man_rpt_req_send_start();
   \   00003378   0x.... 0x....      BL       man_rpt_req_send_start
   3871          			}
   3872          			break;
   \                     ??man_ota_main_570: (+1)
   \   0000337C   0xE012             B        ??man_ota_main_561
   3873          		// USB GPS OTAの場合
   3874          		case MAN_OTA_REQ_USB_GPS_START:
   3875          			if (man_ota_work.exec_info.result == MAN_OTA_STATUS_OK) {
   \                     ??man_ota_main_564: (+1)
   \   0000337E   0x....             LDR      R0,??DataTable16_5
   \   00003380   0x6D80             LDR      R0,[R0, #+88]
   \   00003382   0x2800             CMP      R0,#+0
   \   00003384   0xD103             BNE      ??man_ota_main_571
   3876          				man_usb_send_usbgpsota_result(MAN_USB_STATUS_OK);
   \   00003386   0x2000             MOVS     R0,#+0
   \   00003388   0x.... 0x....      BL       man_usb_send_usbgpsota_result
   \   0000338C   0xE003             B        ??man_ota_main_572
   3877          			}
   3878          			else {
   3879          				man_usb_send_usbgpsota_result(MAN_USB_STATUS_NG);
   \                     ??man_ota_main_571: (+1)
   \   0000338E   0x2000             MOVS     R0,#+0
   \   00003390   0x43C0             MVNS     R0,R0            ;; #-1
   \   00003392   0x.... 0x....      BL       man_usb_send_usbgpsota_result
   3880          			}
   3881          			// OTA終了
   3882          			man_ota_set_sequense(MAN_OTA_SEQ_OTA_GPS_START);
   \                     ??man_ota_main_572: (+1)
   \   00003396   0x20A6             MOVS     R0,#+166
   \   00003398   0x.... 0x....      BL       man_ota_set_sequense
   3883          			man_usb_ota_close();
   \   0000339C   0x.... 0x....      BL       man_usb_ota_close
   3884          			// レポート送信再開
   3885          			man_rpt_req_send_start();
   \   000033A0   0x.... 0x....      BL       man_rpt_req_send_start
   3886          			break;
   3887          		}
   3888          		break;
   \                     ??man_ota_main_561: (+1)
   \   000033A4   0xE007             B        ??man_ota_main_274
   3889          	case MAN_OTA_SEQ_OTA_END_NG:				// OTA終了完了(異常)
   3890          		break;
   \                     ??man_ota_main_271: (+1)
   \   000033A6   0xE006             B        ??man_ota_main_274
   3891          
   3892          
   3893          	// OTA終了処理
   3894          	case MAN_OTA_SEQ_OTA_GPS_START:				// OTA  GPS再開
   3895          		//man_gps_req_reset(MAN_OTA_SEQ_OTA_GPS_START,man_ota_req_callback);
   3896          		man_ota_set_sequense(MAN_OTA_SEQ_OTA_GPS_START_OK);
   \                     ??man_ota_main_272: (+1)
   \   000033A8   0x20A7             MOVS     R0,#+167
   \   000033AA   0x.... 0x....      BL       man_ota_set_sequense
   3897          		break;
   \   000033AE   0xE002             B        ??man_ota_main_274
   3898          	case MAN_OTA_SEQ_OTA_GPS_START_OK:			// OTA  GPS再開完了(正常)
   3899          	case MAN_OTA_SEQ_OTA_GPS_START_NG:			// OTA  GPS再開完了(異常)
   3900          		// OTA終了
   3901          		man_ota_set_sequense(MAN_OTA_SEQ_READY);
   \                     ??man_ota_main_273: (+1)
   \   000033B0   0x2000             MOVS     R0,#+0
   \   000033B2   0x.... 0x....      BL       man_ota_set_sequense
   3902          		break;
   3903          	}
   3904          }
   \                     ??man_ota_main_274: (+1)
   \   000033B6   0xB03F             ADD      SP,SP,#+252
   \   000033B8   0xBDF0             POP      {R4-R7,PC}       ;; return
   3905          
   3906          
   3907          
   3908          
   3909          /********************************************************************/
   3910          /*!
   3911           * \name	man_ota_req_term_start
   3912           * \brief	端末ファームウェア更新開始処理
   3913           * \param	なし
   3914           * \return   0: 成功
   3915           * \note	必要時に、呼ばれること
   3916           */
   3917          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3918          int32_t man_ota_req_term_start( void )
   3919          {
   3920          	int32_t	ret=0;
   \                     man_ota_req_term_start: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   3921          
   3922          	// 要求を保存する
   3923          	man_ota_work.request.req_cmd = MAN_OTA_REQ_TERM_START;
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x....             LDR      R2,??DataTable16_5
   \   00000006   0x66D1             STR      R1,[R2, #+108]
   3924          
   3925          	return ret;
   \   00000008   0x4770             BX       LR               ;; return
   3926          }
   3927          
   3928          
   3929          /********************************************************************/
   3930          /*!
   3931           * \name	man_ota_req_gps_start
   3932           * \brief	GPSファームウェア更新開始処理
   3933           * \param	なし
   3934           * \return   0: 成功
   3935           * \note	必要時に、呼ばれること
   3936           */
   3937          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3938          int32_t man_ota_req_gps_start( void )
   3939          {
   3940          	int32_t	ret=0;
   \                     man_ota_req_gps_start: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   3941          
   3942          	// 要求を保存する
   3943          	man_ota_work.request.req_cmd = MAN_OTA_REQ_GPS_START;
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x....             LDR      R2,??DataTable16_5
   \   00000006   0x66D1             STR      R1,[R2, #+108]
   3944          	man_ota_work.request.forced_flag = 0;
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x....             LDR      R2,??DataTable16_5
   \   0000000C   0x6711             STR      R1,[R2, #+112]
   3945          
   3946          	return ret;
   \   0000000E   0x4770             BX       LR               ;; return
   3947          }
   3948          
   3949          
   3950          /********************************************************************/
   3951          /*!
   3952           * \name	man_ota_req_gps_forced_start
   3953           * \brief	強制GPSファームウェア更新開始処理
   3954           * \param	なし
   3955           * \return   0: 成功
   3956           * \note	必要時に、呼ばれること
   3957           */
   3958          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3959          int32_t man_ota_req_gps_forced_start( void )
   3960          {
   3961          	int32_t	ret=0;
   \                     man_ota_req_gps_forced_start: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   3962          
   3963          	// 要求を保存する
   3964          	man_ota_work.request.req_cmd = MAN_OTA_REQ_GPS_START;
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x....             LDR      R2,??DataTable16_5
   \   00000006   0x66D1             STR      R1,[R2, #+108]
   3965          	man_ota_work.request.forced_flag = 1;
   \   00000008   0x2101             MOVS     R1,#+1
   \   0000000A   0x....             LDR      R2,??DataTable16_5
   \   0000000C   0x6711             STR      R1,[R2, #+112]
   3966          
   3967          	return ret;
   \   0000000E   0x4770             BX       LR               ;; return
   3968          }
   3969          
   3970          /********************************************************************/
   3971          /*!
   3972           * \name	man_ota_req_usb_term_start
   3973           * \brief	USB経由での端末ファームウェア更新開始処理
   3974           * \param	なし
   3975           * \return   0: 成功
   3976           * \note	必要時に、呼ばれること
   3977           */
   3978          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3979          int32_t man_ota_req_usb_term_start( void )
   3980          {
   3981          	int32_t	ret=0;
   \                     man_ota_req_usb_term_start: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   3982          
   3983          	// 要求を保存する
   3984          	man_ota_work.request.req_cmd = MAN_OTA_REQ_USB_TERM_START;
   \   00000002   0x2103             MOVS     R1,#+3
   \   00000004   0x....             LDR      R2,??DataTable16_5
   \   00000006   0x66D1             STR      R1,[R2, #+108]
   3985          
   3986          	return ret;
   \   00000008   0x4770             BX       LR               ;; return
   3987          }
   3988          
   3989          /********************************************************************/
   3990          /*!
   3991           * \name	man_ota_req_usb_gps_start
   3992           * \brief	USB経由でのGPSファームウェア更新開始処理
   3993           * \param	なし
   3994           * \return   0: 成功
   3995           * \note	必要時に、呼ばれること
   3996           */
   3997          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   3998          int32_t man_ota_req_usb_gps_start( void )
   3999          {
   4000          	int32_t	ret=0;
   \                     man_ota_req_usb_gps_start: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   4001          
   4002          	// 要求を保存する
   4003          	man_ota_work.request.req_cmd = MAN_OTA_REQ_USB_GPS_START;
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0x....             LDR      R2,??DataTable16_5
   \   00000006   0x66D1             STR      R1,[R2, #+108]
   4004          	man_ota_work.request.forced_flag = 0;
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x....             LDR      R2,??DataTable16_5
   \   0000000C   0x6711             STR      R1,[R2, #+112]
   4005          
   4006          	return ret;
   \   0000000E   0x4770             BX       LR               ;; return
   4007          }
   4008          
   4009          /********************************************************************/
   4010          /*!
   4011           * \name	man_ota_req_usb_gps_forced_start
   4012           * \brief	USB経由での強制GPSファームウェア更新開始処理
   4013           * \param	なし
   4014           * \return   0: 成功
   4015           * \note	必要時に、呼ばれること
   4016           */
   4017          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   4018          int32_t man_ota_req_usb_gps_forced_start( void )
   4019          {
   4020          	int32_t	ret=0;
   \                     man_ota_req_usb_gps_forced_start: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   4021          
   4022          	// 要求を保存する
   4023          	man_ota_work.request.req_cmd = MAN_OTA_REQ_USB_GPS_START;
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0x....             LDR      R2,??DataTable16_5
   \   00000006   0x66D1             STR      R1,[R2, #+108]
   4024          	man_ota_work.request.forced_flag = 1;
   \   00000008   0x2101             MOVS     R1,#+1
   \   0000000A   0x....             LDR      R2,??DataTable16_5
   \   0000000C   0x6711             STR      R1,[R2, #+112]
   4025          
   4026          	return ret;
   \   0000000E   0x4770             BX       LR               ;; return
   4027          }
   4028          
   4029          /********************************************************************/
   4030          /*!
   4031           * \name	man_ota_req_state
   4032           * \brief	NETWORK状態を通知する
   4033           * \param	state         : MAN_OTA_STATE_RESET    : リセット発生
   4034           *                        : MAN_OTA_STATE_NETCLOSE : NET CLOSE発生
   4035           * \return  なし
   4036           * \note	必要時に、呼ばれること
   4037           */
   4038          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   4039          void man_ota_req_state(int32_t state)
   4040          {
   4041          	man_ota_work.req_state = state;
   \                     man_ota_req_state: (+1)
   \   00000000   0x....             LDR      R1,??DataTable16_5
   \   00000002   0x6608             STR      R0,[R1, #+96]
   4042          }
   \   00000004   0x4770             BX       LR               ;; return
   4043          
   4044          /********************************************************************/
   4045          /*!
   4046           * \name	man_ota_noti_error
   4047           * \brief	OTAの異常を通知する
   4048           * \param	id             : ユニーク番号
   4049           *          callback_error : 異常を通知するcallback関数
   4050           * \return   0: 成功
   4051           *          -1:失敗
   4052           * \note	必要時に、呼ばれること
   4053           */
   4054          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   4055          int32_t man_ota_noti_error(int32_t id, func_man_ota callback_error)
   4056          {
   \                     man_ota_noti_error: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   4057          	int32_t		ret = -1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   4058          	
   4059          	if (callback_error != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??man_ota_noti_error_0
   4060          		man_ota_work.noti_error.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable16_5
   \   00000010   0x6642             STR      R2,[R0, #+100]
   4061          		man_ota_work.noti_error.callback_error = callback_error;
   \   00000012   0x....             LDR      R0,??DataTable16_5
   \   00000014   0x6681             STR      R1,[R0, #+104]
   4062          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   4063          	}
   4064          	return ret;
   \                     ??man_ota_noti_error_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   4065          }
   4066          
   4067          /********************************************************************/
   4068          /*!
   4069           * \name	man_ota_get_data
   4070           * \brief	OTA状態を取得する
   4071           * \param	mode         : MAN_OTA_MODE_NON   : 要求待ち
   4072           *                       : MAN_OTA_MODE_TERM  : TERM OTA中
   4073           *                       : MAN_OTA_MODE_GPS   : GPS OTA中
   4074           * \return  なし
   4075           * \note	必要時に、呼ばれること
   4076           */
   4077          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   4078          void man_ota_get_data(man_ote_mode_def *mode) 
   4079          {
   4080          	*mode = man_ota_work.ota_mode;
   \                     man_ota_get_data: (+1)
   \   00000000   0x....             LDR      R1,??DataTable16_5
   \   00000002   0x7849             LDRB     R1,[R1, #+1]
   \   00000004   0x7001             STRB     R1,[R0, #+0]
   4081          }
   \   00000006   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     man_ota_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     man_ota_work+0x88

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     man_ota_work+0x8C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     man_ota_work+0x90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     man_ota_work+0x80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x00001387         DC32     0x1387

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     man_ota_work+0x84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x000002E6         DC32     0x2e6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x000002F5         DC32     0x2f5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     man_ota_work+0x2BC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x00000255         DC32     0x255

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x00000343         DC32     0x343

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     sysmgr_buf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x........         DC32     man_ota_work+0xBC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x........         DC32     sysmgr_buf+0x1388

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x........         DC32     man_ota_noti_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x........         DC32     man_ota_recv_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     man_ota_work+0xC0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x00000E64         DC32     0xe64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x00000E6D         DC32     0xe6d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x00000E7D         DC32     0xe7d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   0x........         DC32     man_ota_work+0x80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_2:
   \   00000000   0x00000E9A         DC32     0xe9a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_3:
   \   00000000   0x........         DC32     man_ota_req_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_4:
   \   00000000   0x00000EBE         DC32     0xebe

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_5:
   \   00000000   0x........         DC32     man_ota_work
   4082                                                 

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   man_ota_check_summ_data
        16   -> man_error_set
        16   -> man_flash_read
      16   man_ota_data_callback
        16   -> __aeabi_memcpy
       0   man_ota_get_data
       8   man_ota_init
         8   -> __aeabi_memset
         8   -> man_gps_ota_resp_end
         8   -> man_http_ftp_state
     288   man_ota_main
       272   -> __aeabi_memcpy
       288   -> __aeabi_memcpy
       288   -> __aeabi_memcpy4
       272   -> __aeabi_memset
       272   -> man_battery_active
       272   -> man_battery_standby
       272   -> man_charge_active
       272   -> man_charge_standby
       272   -> man_data_chk_program
       272   -> man_data_flash_erase_sector
       272   -> man_data_flash_write_sector
       272   -> man_data_get_ftp_info
       272   -> man_data_get_sensor
       272   -> man_data_get_setting_gpsota
       272   -> man_data_get_setting_otastart
       272   -> man_data_get_setting_usbgpsota
       272   -> man_data_get_setting_usbota
       272   -> man_data_program_mrg_set_flash
       272   -> man_data_set_ftp_info
       272   -> man_error_set
       272   -> man_flash_erase_block
       272   -> man_flash_read
       272   -> man_flash_write_page
       272   -> man_gps_get_state
       272   -> man_gps_req_erase
       272   -> man_gps_req_fdl
       272   -> man_gps_req_packet_end
       272   -> man_gps_req_packet_next
       272   -> man_gps_req_reset
       272   -> man_gps_req_retry_ota
       272   -> man_gps_req_udl
       272   -> man_gps_set_finish_ota
       272   -> man_http_file_get
       272   -> man_http_ftp_get
       272   -> man_http_ftp_init
       272   -> man_http_ftp_open
       272   -> man_http_ftp_recovery
       272   -> man_http_get_status
       272   -> man_msg_set_type
       272   -> man_ope_req_ota_end
       272   -> man_ope_req_ota_start
       272   -> man_ope_req_reset
       272   -> man_ota_check_summ_data
       272   -> man_ota_set_sequense
       272   -> man_rpt_req_send_start
       272   -> man_rpt_req_send_stop
       272   -> man_timer_cancel_wait
       272   -> man_timer_get_1ms_count
       272   -> man_timer_get_elapsed_time
       272   -> man_timer_start_wait
       272   -> man_usb_get_data
       272   -> man_usb_get_file_info
       272   -> man_usb_ota_close
       272   -> man_usb_ota_open
       272   -> man_usb_send_file_info
       272   -> man_usb_send_usbgpsota_result
       272   -> man_usb_send_usbota_result
       272   -> man_usb_set_file_info
       272   -> sysmgr_buf_lock
       272 __aeabi_idivmod
       0   man_ota_noti_callback
       4   man_ota_noti_error
       8   man_ota_recv_callback
         8   -> man_error_set
         8   -> man_ota_set_sequense
       0   man_ota_req_callback
       0   man_ota_req_gps_forced_start
       0   man_ota_req_gps_start
       0   man_ota_req_state
       0   man_ota_req_term_start
       0   man_ota_req_usb_gps_forced_start
       0   man_ota_req_usb_gps_start
       0   man_ota_req_usb_term_start
       8   man_ota_set_sequense
         8   -> man_dbglog_setting


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable15
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable16_2
       4  ??DataTable16_3
       4  ??DataTable16_4
       4  ??DataTable16_5
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       4  ??DataTable7
      96  man_ota_check_summ_data
      52  man_ota_data_callback
       8  man_ota_get_data
      48  man_ota_init
   13242  man_ota_main
      16  man_ota_noti_callback
      26  man_ota_noti_error
     100  man_ota_recv_callback
      18  man_ota_req_callback
      16  man_ota_req_gps_forced_start
      16  man_ota_req_gps_start
       6  man_ota_req_state
      10  man_ota_req_term_start
      16  man_ota_req_usb_gps_forced_start
      16  man_ota_req_usb_gps_start
      10  man_ota_req_usb_term_start
      68  man_ota_set_sequense
     808  man_ota_work

 
    808 bytes in section .bss
 13 868 bytes in section .text
 
 13 868 bytes of CODE memory
    808 bytes of DATA memory

Errors: none
Warnings: none
