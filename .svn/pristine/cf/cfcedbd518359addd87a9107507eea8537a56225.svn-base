###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       17/May/2019  13:32:10
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\apl\man_rtc.c
#    Command line =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\apl\man_rtc.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_B -lCN
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        -lA
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\List\man_rtc.lst
#    Object file  =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlashBside\Obj\man_rtc.o
#
###############################################################################

C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\apl\man_rtc.c
      1          
      2          /**
      3            ******************************************************************************
      4            * @file    man_rtc.c
      5            * @author  コア
      6            * @version V1.0
      7            * @date    2017.10.2
      8            * @brief   時間を管理する
      9            ******************************************************************************
     10            $Id: man_rtc.c 162 2018-05-16 08:12:08Z shitaoka $
     11            * @attention
     12            *
     13            *****************************************************************************
     14          */
     15          
     16          #include <string.h>
     17          #include <stdio.h>
     18          #include <stdlib.h>
     19          
     20          #include "board.h"
     21          
     22          #include "gnss_gw_common.h"
     23          #include "drv_rtc.h"
     24          #include "man_rtc.h"
     25          #include "man_usb.h"
     26          
     27          
     28          #pragma section = "APL_PRG_BLOCK"
     29          
     30          /************************************************************************/
     31          /* declaration of structure                                             */
     32          /************************************************************************/
     33          
     34          
     35          
     36          // 時間管理ワーク
     37          typedef struct _man_rtc_work_t {
     38          	man_rtc_stsh_def		status;		// ステータス
     39          	clock_info_t			clock;		// 設定時刻
     40          
     41          	uint8_t					buff[100];
     42          } man_rtc_work_t;
     43          
     44          
     45          /************************************************************************/
     46          /* definition of variables                                              */
     47          /************************************************************************/
     48          

   \                                 In section .bss, align 4
     49          man_rtc_work_t	man_rtc_work;
   \                     man_rtc_work:
   \   00000000                      DS8 108
     50          
     51          // 時刻初期化  2000年1月1日0時0分0秒

   \                                 In section .data, align 4
     52          static clock_info_t clock_ini_tbl = { 0, 1, 1, 0, 0, 0 };
   \                     clock_ini_tbl:
   \   00000000   0x00 0x01          DC8 0, 1, 1, 0, 0, 0, 0, 0
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     53          
     54          
     55          /********************************************************************/
     56          /*	callback関数                                                    */
     57          /********************************************************************/
     58          
     59          /********************************************************************/
     60          /*	static関数                                                      */
     61          /********************************************************************/
     62          
     63          
     64          /********************************************************************/
     65          /*	extern関数                                                      */
     66          /********************************************************************/
     67          
     68          /********************************************************************/
     69          /*!
     70           * \name	man_rrtc_init
     71           * \brief	時間管理の初期化処理
     72           * \param	なし
     73           * \return  なし
     74           * \note	起動時に、呼ばれること
     75           */
     76          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     77          void man_rtc_init(void)
     78          {
   \                     man_rtc_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     79          	// RTC初期化
     80          	rtc_init();
   \   00000002   0x.... 0x....      BL       rtc_init
     81          
     82          	// RTC初期設定
     83          	rtc_set_clock(&clock_ini_tbl);
   \   00000006   0x....             LDR      R0,??DataTable4
   \   00000008   0x.... 0x....      BL       rtc_set_clock
     84          
     85          	// 内部変数を初期化する
     86          	memset(&man_rtc_work, 0, sizeof(man_rtc_work_t));
   \   0000000C   0x216B             MOVS     R1,#+107
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0x....             LDR      R4,??DataTable4_1
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       __aeabi_memset
     87          
     88          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
     89          
     90          
     91          
     92          /********************************************************************/
     93          /*!
     94           * \name	man_rtc_set_clock
     95           * \brief	時間を設定する処理
     96           * \param	sel          : 選択
     97           *          sts          : 取得状態
     98           *          clock_info_t : 設定時刻
     99           * \return  なし
    100           * \note	必要時に、呼ばれること
    101           */
    102          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    103          void man_rtc_set_clock(int32_t sel, int32_t sts, clock_info_t *clock)
    104          {
   \                     man_rtc_set_clock: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0015             MOVS     R5,R2
    105          	man_rtc_stsh_def	status;
    106          	
    107          	
    108          	status = man_rtc_work.status;
   \   00000004   0x....             LDR      R2,??DataTable4_1
   \   00000006   0x7814             LDRB     R4,[R2, #+0]
    109          	switch (man_rtc_work.status) {
   \   00000008   0x....             LDR      R2,??DataTable4_1
   \   0000000A   0x7812             LDRB     R2,[R2, #+0]
   \   0000000C   0x2A00             CMP      R2,#+0
   \   0000000E   0xD006             BEQ      ??man_rtc_set_clock_0
   \   00000010   0x2A02             CMP      R2,#+2
   \   00000012   0xD02E             BEQ      ??man_rtc_set_clock_1
   \   00000014   0xD321             BCC      ??man_rtc_set_clock_2
   \   00000016   0x2A04             CMP      R2,#+4
   \   00000018   0xD053             BEQ      ??man_rtc_set_clock_3
   \   0000001A   0xD346             BCC      ??man_rtc_set_clock_4
   \   0000001C   0xE05A             B        ??man_rtc_set_clock_5
    110          	
    111          	// 初期化時はLTE優先とする
    112          	case MAN_RTC_STS_INIT:
    113          		if (sel == MAN_RTC_SEL_LTE) {
   \                     ??man_rtc_set_clock_0: (+1)
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD10D             BNE      ??man_rtc_set_clock_6
    114          			if (sts == MAN_RTC_STS_OK) {
   \   00000022   0x2901             CMP      R1,#+1
   \   00000024   0xD109             BNE      ??man_rtc_set_clock_7
    115          				status = MAN_RTC_STS_LTE;
   \   00000026   0x2401             MOVS     R4,#+1
    116          				man_rtc_work.clock = *clock;
   \   00000028   0x....             LDR      R0,??DataTable4_2
   \   0000002A   0x0029             MOVS     R1,R5
   \   0000002C   0x2206             MOVS     R2,#+6
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy
    117          				rtc_set_clock(clock);
   \   00000032   0x0028             MOVS     R0,R5
   \   00000034   0x.... 0x....      BL       rtc_set_clock
   \   00000038   0xE00E             B        ??man_rtc_set_clock_8
    118          			}
    119          			else {
    120          				status = MAN_RTC_STS_LTE_NG;
   \                     ??man_rtc_set_clock_7: (+1)
   \   0000003A   0x2402             MOVS     R4,#+2
   \   0000003C   0xE00C             B        ??man_rtc_set_clock_8
    121          			}
    122          		}
    123          		else {
    124          			// GPSが先に取得できた場合はGPS時刻を有効とする
    125          			if ( (sel == MAN_RTC_SEL_GPS) && (sts == MAN_RTC_STS_OK) ) {
   \                     ??man_rtc_set_clock_6: (+1)
   \   0000003E   0x2801             CMP      R0,#+1
   \   00000040   0xD10A             BNE      ??man_rtc_set_clock_8
   \   00000042   0x2901             CMP      R1,#+1
   \   00000044   0xD108             BNE      ??man_rtc_set_clock_8
    126          				status = MAN_RTC_STS_GPS;
   \   00000046   0x2403             MOVS     R4,#+3
    127          				man_rtc_work.clock = *clock;
   \   00000048   0x....             LDR      R0,??DataTable4_2
   \   0000004A   0x0029             MOVS     R1,R5
   \   0000004C   0x2206             MOVS     R2,#+6
   \   0000004E   0x.... 0x....      BL       __aeabi_memcpy
    128          				rtc_set_clock(clock);
   \   00000052   0x0028             MOVS     R0,R5
   \   00000054   0x.... 0x....      BL       rtc_set_clock
    129          			}
    130          		}
    131          		break;
   \                     ??man_rtc_set_clock_8: (+1)
   \   00000058   0xE03C             B        ??man_rtc_set_clock_9
    132          
    133          	// LTEの時刻が取得できた場合は、定刻測位のみ有効
    134          	case MAN_RTC_STS_LTE:
    135          		if (sel == MAN_RTC_SEL_ALARM) {
   \                     ??man_rtc_set_clock_2: (+1)
   \   0000005A   0x2802             CMP      R0,#+2
   \   0000005C   0xD108             BNE      ??man_rtc_set_clock_10
    136          			status = MAN_RTC_STS_ALARM;
   \   0000005E   0x2404             MOVS     R4,#+4
    137          			man_rtc_work.clock = *clock;
   \   00000060   0x....             LDR      R0,??DataTable4_2
   \   00000062   0x0029             MOVS     R1,R5
   \   00000064   0x2206             MOVS     R2,#+6
   \   00000066   0x.... 0x....      BL       __aeabi_memcpy
    138          			rtc_set_clock(clock);
   \   0000006A   0x0028             MOVS     R0,R5
   \   0000006C   0x.... 0x....      BL       rtc_set_clock
    139          		}
    140          		break;
   \                     ??man_rtc_set_clock_10: (+1)
   \   00000070   0xE030             B        ??man_rtc_set_clock_9
    141          
    142          	// LTE時刻が未取得の場合は速やかにGPSから取得する
    143          	// 再度取得した場合は有効とする
    144          	case MAN_RTC_STS_LTE_NG:
    145          		if ( (sel == MAN_RTC_SEL_GPS) && (sts == MAN_RTC_STS_OK) ) {
   \                     ??man_rtc_set_clock_1: (+1)
   \   00000072   0x2801             CMP      R0,#+1
   \   00000074   0xD10B             BNE      ??man_rtc_set_clock_11
   \   00000076   0x2901             CMP      R1,#+1
   \   00000078   0xD109             BNE      ??man_rtc_set_clock_11
    146          			status = MAN_RTC_STS_GPS;
   \   0000007A   0x2403             MOVS     R4,#+3
    147          			man_rtc_work.clock = *clock;
   \   0000007C   0x....             LDR      R0,??DataTable4_2
   \   0000007E   0x0029             MOVS     R1,R5
   \   00000080   0x2206             MOVS     R2,#+6
   \   00000082   0x.... 0x....      BL       __aeabi_memcpy
    148          			rtc_set_clock(clock);
   \   00000086   0x0028             MOVS     R0,R5
   \   00000088   0x.... 0x....      BL       rtc_set_clock
   \   0000008C   0xE00C             B        ??man_rtc_set_clock_12
    149          		}
    150          		else if ( (sel == MAN_RTC_SEL_LTE) && (sts == MAN_RTC_STS_OK) ) {
   \                     ??man_rtc_set_clock_11: (+1)
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xD10A             BNE      ??man_rtc_set_clock_12
   \   00000092   0x2901             CMP      R1,#+1
   \   00000094   0xD108             BNE      ??man_rtc_set_clock_12
    151          			status = MAN_RTC_STS_LTE;
   \   00000096   0x2401             MOVS     R4,#+1
    152          			man_rtc_work.clock = *clock;
   \   00000098   0x....             LDR      R0,??DataTable4_2
   \   0000009A   0x0029             MOVS     R1,R5
   \   0000009C   0x2206             MOVS     R2,#+6
   \   0000009E   0x.... 0x....      BL       __aeabi_memcpy
    153          			rtc_set_clock(clock);
   \   000000A2   0x0028             MOVS     R0,R5
   \   000000A4   0x.... 0x....      BL       rtc_set_clock
    154          		}
    155          		break;
   \                     ??man_rtc_set_clock_12: (+1)
   \   000000A8   0xE014             B        ??man_rtc_set_clock_9
    156          
    157          	// GPSの時刻が取得できた場合は、定刻測位のみ有効
    158          	case MAN_RTC_STS_GPS:
    159          		if (sel == MAN_RTC_SEL_ALARM) {
   \                     ??man_rtc_set_clock_4: (+1)
   \   000000AA   0x2802             CMP      R0,#+2
   \   000000AC   0xD108             BNE      ??man_rtc_set_clock_13
    160          			status = MAN_RTC_STS_ALARM;
   \   000000AE   0x2404             MOVS     R4,#+4
    161          			man_rtc_work.clock = *clock;
   \   000000B0   0x....             LDR      R0,??DataTable4_2
   \   000000B2   0x0029             MOVS     R1,R5
   \   000000B4   0x2206             MOVS     R2,#+6
   \   000000B6   0x.... 0x....      BL       __aeabi_memcpy
    162          			rtc_set_clock(clock);
   \   000000BA   0x0028             MOVS     R0,R5
   \   000000BC   0x.... 0x....      BL       rtc_set_clock
    163          		}
    164          		break;
   \                     ??man_rtc_set_clock_13: (+1)
   \   000000C0   0xE008             B        ??man_rtc_set_clock_9
    165          
    166          	// 定刻測位のみ有効
    167          	case MAN_RTC_STS_ALARM:
    168          		man_rtc_work.clock = *clock;
   \                     ??man_rtc_set_clock_3: (+1)
   \   000000C2   0x....             LDR      R0,??DataTable4_2
   \   000000C4   0x0029             MOVS     R1,R5
   \   000000C6   0x2206             MOVS     R2,#+6
   \   000000C8   0x.... 0x....      BL       __aeabi_memcpy
    169          		rtc_set_clock(clock);
   \   000000CC   0x0028             MOVS     R0,R5
   \   000000CE   0x.... 0x....      BL       rtc_set_clock
    170          		break;
   \   000000D2   0xE7FF             B        ??man_rtc_set_clock_9
    171          
    172          
    173          	default:
    174          		break;
    175          	}
    176          	
    177          	
    178          	if (status != man_rtc_work.status) {
   \                     ??man_rtc_set_clock_5: (+1)
   \                     ??man_rtc_set_clock_9: (+1)
   \   000000D4   0x0020             MOVS     R0,R4
   \   000000D6   0x....             LDR      R1,??DataTable4_1
   \   000000D8   0x7809             LDRB     R1,[R1, #+0]
   \   000000DA   0xB2C0             UXTB     R0,R0
   \   000000DC   0x4288             CMP      R0,R1
   \   000000DE   0xD001             BEQ      ??man_rtc_set_clock_14
    179          		man_rtc_work.status = status;
   \   000000E0   0x....             LDR      R0,??DataTable4_1
   \   000000E2   0x7004             STRB     R4,[R0, #+0]
    180          		
    181          #ifdef GNSS_DEBUG_MAN_RTC 
    182          			int32_t		length;
    183          			sprintf((char *)&man_rtc_work.buff[0], "RTC STS(%d)%02d:%02d:%02d\n", status, clock->year, clock->month, clock->day);
    184          			length = strlen((char const *)&man_rtc_work.buff[0]);
    185          			man_usb_data_send(&man_rtc_work.buff[0], length);
    186          #endif
    187          		
    188          	}
    189          	
    190          }
   \                     ??man_rtc_set_clock_14: (+1)
   \   000000E4   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    191          

   \                                 In section .text, align 2, keep-with-next
    192          void man_rtc_set_clock_direct(clock_info_t *clock)
    193          {
   \                     man_rtc_set_clock_direct: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    194             man_rtc_work.clock = *clock;
   \   00000004   0x....             LDR      R0,??DataTable4_2
   \   00000006   0x0021             MOVS     R1,R4
   \   00000008   0x2206             MOVS     R2,#+6
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
    195             rtc_set_clock(clock);
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       rtc_set_clock
    196           
    197          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    198          
    199          /********************************************************************/
    200          /*!
    201           * \name	man_rtc_get_clock
    202           * \brief	時間を取得する処理
    203           * \param	clock_info_t : 現在時刻
    204           * \return  なし
    205           * \note	必要時に、呼ばれること
    206           */
    207          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    208          void man_rtc_get_clock(clock_info_t *clock)
    209          {
   \                     man_rtc_get_clock: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    210          	rtc_get_clock(clock);
   \   00000002   0x.... 0x....      BL       rtc_get_clock
    211          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    212          
    213          
    214          /********************************************************************/
    215          /*!
    216           * \name	man_rtc_get_status
    217           * \brief	時間設定状態を取得する処理
    218           * \param	なし
    219           * \return  ステータス
    220           * \note	必要時に、呼ばれること
    221           */
    222          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    223          man_rtc_stsh_def man_rtc_get_status( void )
    224          {
    225          	return man_rtc_work.status;
   \                     man_rtc_get_status: (+1)
   \   00000000   0x....             LDR      R0,??DataTable4_1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    226          }
    227          
    228          
    229          /********************************************************************/
    230          /*!
    231           * \name	man_rtc_disp_sts
    232           * \brief	管理情報を表示する処理
    233           * \param	なし
    234           * \return  なし
    235           * \note	必要時に、呼ばれること
    236           */
    237          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    238          void man_rtc_disp_sts( void )
    239          {
   \                     man_rtc_disp_sts: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    240          	int32_t			length;
    241          
    242          	sprintf((char *)&man_rtc_work.buff[0], "RTC STS :: (sts=%d)yy=%02d:mm=%02d:dd=%02d\n", man_rtc_work.status, man_rtc_work.clock.year, man_rtc_work.clock.month, man_rtc_work.clock.day);
   \   00000004   0x....             LDR      R0,??DataTable4_1
   \   00000006   0x2103             MOVS     R1,#+3
   \   00000008   0x5640             LDRSB    R0,[R0, R1]
   \   0000000A   0x9001             STR      R0,[SP, #+4]
   \   0000000C   0x....             LDR      R0,??DataTable4_1
   \   0000000E   0x2102             MOVS     R1,#+2
   \   00000010   0x5640             LDRSB    R0,[R0, R1]
   \   00000012   0x9000             STR      R0,[SP, #+0]
   \   00000014   0x....             LDR      R0,??DataTable4_1
   \   00000016   0x2101             MOVS     R1,#+1
   \   00000018   0x5643             LDRSB    R3,[R0, R1]
   \   0000001A   0x....             LDR      R0,??DataTable4_1
   \   0000001C   0x7802             LDRB     R2,[R0, #+0]
   \   0000001E   0x....             LDR      R1,??DataTable4_3
   \   00000020   0x....             LDR      R0,??DataTable4_4
   \   00000022   0x.... 0x....      BL       sprintf
    243          	length = strlen((char const *)&man_rtc_work.buff[0]);
   \   00000026   0x....             LDR      R0,??DataTable4_4
   \   00000028   0x.... 0x....      BL       strlen
   \   0000002C   0x0001             MOVS     R1,R0
    244          	man_usb_data_send(&man_rtc_work.buff[0], length);
   \   0000002E   0x....             LDR      R0,??DataTable4_4
   \   00000030   0x.... 0x....      BL       man_usb_data_send
    245          }
   \   00000034   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     clock_ini_tbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     man_rtc_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     man_rtc_work+0x1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     man_rtc_work+0x7

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x52 0x54          DC8 "RTC STS :: (sts=%d)yy=%02d:mm=%02d:dd=%02d\012"
   \              0x43 0x20    
   \              0x53 0x54    
   \              0x53 0x20    
   \              0x3A 0x3A    
   \              0x20 0x28    
   \              0x73 0x74    
   \              0x73 0x3D    
   \              0x25 0x64    
   \              0x29 0x79    
   \              0x79 0x3D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x3A 0x6D    
   \              0x6D 0x3D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x3A 0x64    
   \              0x64 0x3D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x0A 0x00    
    246          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   man_rtc_disp_sts
        16   -> man_usb_data_send
        16   -> sprintf
        16   -> strlen
       8   man_rtc_get_clock
         8   -> rtc_get_clock
       0   man_rtc_get_status
       8   man_rtc_init
         8   -> __aeabi_memset
         8   -> rtc_init
         8   -> rtc_set_clock
      16   man_rtc_set_clock
        16   -> __aeabi_memcpy
        16   -> rtc_set_clock
       8   man_rtc_set_clock_direct
         8   -> __aeabi_memcpy
         8   -> rtc_set_clock


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
      44  ?_0
       8  clock_ini_tbl
      54  man_rtc_disp_sts
       8  man_rtc_get_clock
       6  man_rtc_get_status
      26  man_rtc_init
     230  man_rtc_set_clock
      22  man_rtc_set_clock_direct
     108  man_rtc_work

 
 108 bytes in section .bss
   8 bytes in section .data
  44 bytes in section .rodata
 366 bytes in section .text
 
 366 bytes of CODE  memory
  44 bytes of CONST memory
 116 bytes of DATA  memory

Errors: none
Warnings: none
