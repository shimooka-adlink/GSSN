###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       17/May/2019  13:31:38
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\hal\ctrl_CXD5600GF.c
#    Command line =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\hal\ctrl_CXD5600GF.c -D
#        __TARGET_ARCH_7_M -D S1C31W74 -D GNSS_GW_SIDE_A -lCN
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List
#        -lA
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List
#        --diag_suppress Pe177,Pe111,Pa082 -o
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\ -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.5\arm\inc\Epson\" -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Device\S1C31W74\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\CMSIS\Driver\Include\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\sePeriphLibrary\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\board\S5U1C31W74T1\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\..\..\USBStack\INC\
#        -I
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\..\..\..\include\
#        -Ol
#    Locale       =  Japanese_Japan.932
#    List file    =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\List\ctrl_CXD5600GF.lst
#    Object file  =  
#        C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\board\S5U1C31W74T1\IAR\DebugFlash\Obj\ctrl_CXD5600GF.o
#
###############################################################################

C:\GNSS\Software\rJ104_rc2\source\GNSS_GW\hal\ctrl_CXD5600GF.c
      1          
      2          /**
      3            ******************************************************************************
      4            * @file    ctrl_CXD5600.c
      5            * @author  コア
      6            * @version V1.0
      7            * @date    2017.10.2
      8            * @brief   このファイルはUART CH1を使用してデバイス(CXD5600GF)を制御するソフトウェアです。
      9            ******************************************************************************
     10            $Id: ctrl_CXD5600GF.c 255 2018-08-01 07:28:31Z shitaoka $
     11            * @attention
     12            *
     13            *****************************************************************************
     14          */ 
     15          
     16          
     17          #include <string.h>
     18          #include <stdio.h>
     19          #include <stdlib.h>
     20          #include "board.h"
     21          #include "drv_uart2_1.h"
     22          #include "ctrl_CXD5600GF.h"
     23          #include "man_timer.h"
     24          #include "man_error.h"
     25          #include "gnss_gw_common.h"
     26          #include "man_gpio.h"
     27          #include "man_memory.h"
     28          #include "man_usb.h"
     29          
     30          
     31          #pragma section = "CTRL_PRG_BLOCK"
     32          
     33          
     34          /************************************************************************/
     35          /* declaration of structure                                             */
     36          /************************************************************************/
     37          
     38          
     39          #define	CTRL_CXD5600_TIMER_NMEA			100		// 100ms受信なしでNMEA確定とする(受信終了判定)
     40          
     41          #define	CTRL_CXD5600_CMD_BUFF_MAX		128
     42          #define	CTRL_CXD5600_RECV_BUFF_MAX		128
     43          #define	CTRL_CXD5600_NMEA_BUFF_MAX		2048
     44          #define	CTRL_CXD5600_RECV_DATA_MAX		1024
     45          
     46          
     47          #define	CTRL_CXD5600_SND_DATA_MAX		256		// 一度に送信できるサイズ
     48          
     49          
     50          #define	CTRL_CXD5600_STS_READY		0	// 要求待ち
     51          #define	CTRL_CXD5600_STS_RESP		1	// 通常応答待ち
     52          #define	CTRL_CXD5600_STS_WRESP		2	// ２行応答待ち
     53          #define	CTRL_CXD5600_STS_DRESP		3	// データ応答待ち
     54          
     55          #define	TIMER_MAN_USED		1		// 使用中
     56          
     57          
     58          #define		ASCII_CR		0x0d
     59          #define		ASCII_LF		0x0a
     60          #define		ASCII_CTR_Z		0x1a
     61          
     62          
     63          // 受信フラグ
     64          #define	CTRL_CXD5600_RECV_NMEA		0x01		// NMEA受信中
     65          #define	CTRL_CXD5600_RECV_CMD		0x02		// CMD受信中
     66          #define	CTRL_CXD5600_RECV_CMD2		0x04		// 2応答CMD受信中
     67          #define	CTRL_CXD5600_RECV_CRLF		0x08		// 1行受信
     68          #define	CTRL_CXD5600_NOTI_CMD		0x10		// 通知用CMD受信中
     69          
     70          // 応答受信バッファ
     71          typedef struct _ctrl_cxd5600_recv_info_t {
     72          	uint8_t		rcv_buff[CTRL_CXD5600_RECV_BUFF_MAX];
     73          	uint32_t	write_p;
     74          } ctrl_cxd5600_recv_info_t;
     75          
     76          // NMEA受信バッファ
     77          typedef struct _ctrl_cxd5600_nmea_info_t {
     78          	uint8_t		rcv_buff[CTRL_CXD5600_NMEA_BUFF_MAX];
     79          	uint32_t	write_p;
     80          	uint32_t	top_p;
     81          } ctrl_cxd5600_nmea_info_t;
     82          
     83          // コマンド１要求
     84          typedef struct _ctrl_cxd5600_req1_info_t {
     85          	int32_t		req_flag;
     86          	uint8_t		cmd[CTRL_CXD5600_CMD_BUFF_MAX];
     87          	uint8_t		length;
     88          	
     89          	int32_t		id;
     90          	int32_t		timeout;
     91          	func_cxd1	callback1;
     92          
     93          	uint32_t	rcv_time;
     94          	int32_t		rcv_flg;
     95          } ctrl_cxd5600_req1_info_t;
     96          
     97          // コマンド２要求
     98          typedef struct _ctrl_cxd5600_req2_info_t {
     99          	int32_t		req_flag;
    100          	uint8_t		cmd[CTRL_CXD5600_CMD_BUFF_MAX];
    101          	uint8_t		length;
    102          
    103          	int32_t		id;
    104          	int32_t		timeout;
    105          	func_cxd2	callback2;
    106          
    107          	uint32_t	rcv_time;
    108          	int32_t		rcv_flg;
    109          } ctrl_cxd5600_req2_info_t;
    110          
    111          // データ１要求
    112          typedef struct _ctrl_cxd5600_req3_info_t {
    113          	int32_t		req_flag;
    114          	int32_t		snd_flag;
    115          	int32_t		snd_cnt;
    116          
    117          	uint8_t		*data;
    118          	uint32_t	length;
    119          	
    120          	int32_t		id;
    121          	int32_t		timeout;
    122          	func_cxd1	callback1;
    123          
    124          	uint32_t	rcv_time;
    125          	int32_t		rcv_flg;
    126          } ctrl_cxd5600_req3_info_t;
    127          
    128          
    129          // データ２要求
    130          typedef struct _ctrl_cxd5600_req4_info_t {
    131          	int32_t		req_flag;
    132          	int32_t		snd_flag;
    133          	int32_t		snd_cnt;
    134          
    135          	uint8_t		*data;
    136          	uint32_t	length;
    137          	
    138          	int32_t		id;
    139          	func_cxd4	callback4;
    140          } ctrl_cxd5600_req4_info_t;
    141          
    142          // 要求に対する応答
    143          typedef struct _ctrl_cxd5600_resp_cmd_t {
    144          	int32_t					flag;
    145          	int32_t					id;
    146          	int32_t					status;
    147          } ctrl_cxd5600_resp_cmd_t;
    148          
    149          
    150          // 受信通知先
    151          typedef struct _ctrl_cxd5600_noti_info_t {
    152          	int32_t		id;
    153          	func_cxd3	callback3;
    154          } ctrl_cxd5600_noti_info_t;
    155          
    156          // NMEAセンテンス情報
    157          typedef struct _ctrl_cxd5600_sentence_info_t {
    158          	int8_t		gsa_flag;			// 1:GSA受信
    159          	int8_t		clock_flag;			// 時刻取得フラグ  1: 取得済み  0:未取得
    160          	int8_t		imes_flag;			// 1:IMES受信
    161          } ctrl_cxd5600_sentence_info_t;
    162          
    163          
    164          
    165          // cxd5600ワーク
    166          typedef struct _ctrl_cxd5600_work_t {
    167          	int32_t						status;
    168          	uint32_t					recv_flag;			// 受信フラグ
    169          	uint8_t						data_buff[3];		// 受信データ保存
    170          	ctrl_cxd5600_recv_info_t	save_info1;			// 保存バッファ1
    171          	ctrl_cxd5600_recv_info_t	save_info2;			// 保存バッファ2
    172          	ctrl_cxd5600_recv_info_t	save_info3;			// 保存バッファ3
    173          	ctrl_cxd5600_nmea_info_t	nmea_info;			// NMEAバッファ
    174          
    175          	ctrl_cxd5600_req1_info_t	request1;			// コマンド１
    176          	ctrl_cxd5600_req2_info_t	request2;			// コマンド２
    177          	ctrl_cxd5600_req3_info_t	request3;			// データ１
    178          	ctrl_cxd5600_req4_info_t	request4;			// データ１(応答待ちなし)
    179          	ctrl_cxd5600_req1_info_t	req_nmea;			// NMEA
    180          
    181          	ctrl_cxd5600_noti_info_t	recv_noti;			// 受信通知先
    182          
    183          	nmea_result_info_t			nmea_result;		// NMEA判定結果
    184          	ctrl_cxd5600_sentence_info_t	sentence;		// NMEAセンテンス情報
    185          
    186          	ctrl_cxd5600_resp_cmd_t		resp_cmd;			// 要求に対する応答
    187          	uint8_t						recv_data[CTRL_CXD5600_RECV_DATA_MAX];
    188          	int32_t						recv_write_p;
    189          	int32_t						ms[100];
    190          	int32_t						ms_wp;
    191          } ctrl_cxd5600_work_t;
    192          
    193          
    194          /************************************************************************/
    195          /* definition of variables                                              */
    196          /************************************************************************/
    197          

   \                                 In section .bss, align 4
    198          static ctrl_cxd5600_work_t		ctrl_cxd5600_work;			// cxd5600用変数
   \                     ctrl_cxd5600_work:
   \   00000000                      DS8 4472
    199          
    200          
    201          #define	NMEA_SENTENCE_ZDA				"ZDA"
    202          #define	NMEA_SENTENCE_IMP				"IMP"
    203          #define	NMEA_SENTENCE_GSA				"GSA"
    204          
    205          static int32_t ctrl_NMEA_end_check(uint8_t *data, int32_t length);
    206          
    207          
    208          
    209          /********************************************************************/
    210          /*	callback関数                                                    */
    211          /********************************************************************/
    212          
    213          
    214          /********************************************************************/
    215          /*	static関数                                                      */
    216          /********************************************************************/
    217          
    218          /********************************************************************/
    219          /*!
    220           * \name	ctrl_NMEA_get_ZDA_sentence
    221           * \brief	ZDAセンテンスを解析する処理
    222           * \param	data     : NMEAデータ
    223           *			length   : データ長
    224           *          clock    : 時刻
    225           * \return   0: 正常
    226           *          -1: 異常
    227           * \note	      例
    228           *          j= 1: $GPZDA
    229           *             2: 080335.00   : 時刻
    230           *             3: 07          : 日
    231           *             4: 07          : 月
    232           *             5: 2017        : 年
    233           *             6:             : 現地時間 (時)
    234           *             7:             : 現地時間 (分)
    235           *             8: *6F         : チェックサム
    236           *             9:             : <CR><LF>
    237           */
    238          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    239          static int32_t ctrl_NMEA_get_ZDA_sentence(uint8_t *data, int32_t length, clock_info_t *clock)
    240          {
   \                     ctrl_NMEA_get_ZDA_sentence: (+1)
   \   00000000   0xB5F7             PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
    241          	int32_t		ret=-1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000008   0x9000             STR      R0,[SP, #+0]
    242          	int32_t		i;
    243          	int32_t		j;
    244          	int32_t		cnt=0;
   \   0000000A   0x2600             MOVS     R6,#+0
    245          
    246          	if ( (data != NULL) && (length > 0) && (clock != NULL) ) {
   \   0000000C   0x2C00             CMP      R4,#+0
   \   0000000E   0xD100             BNE      .+4
   \   00000010   0xE0E1             B        ??ctrl_NMEA_get_ZDA_sentence_0
   \   00000012   0x9801             LDR      R0,[SP, #+4]
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xDA00             BGE      .+4
   \   00000018   0xE0DD             B        ??ctrl_NMEA_get_ZDA_sentence_0
   \   0000001A   0x9802             LDR      R0,[SP, #+8]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD100             BNE      .+4
   \   00000020   0xE0D9             B        ??ctrl_NMEA_get_ZDA_sentence_0
    247          
    248          		for (i=0,j=0; i<length; i++) {
   \   00000022   0x2500             MOVS     R5,#+0
   \   00000024   0x2700             MOVS     R7,#+0
   \   00000026   0xE000             B        ??ctrl_NMEA_get_ZDA_sentence_1
    249          			if (data[i] == ',') {
    250          				j++;
    251          
    252          				switch (j) {
    253          				case 2:
    254          					if ( (data[i-10] == ',') && (data[i-3] == '.') ) {
    255          						if ( ('0' <= data[i-9]) && (data[i-9] <= '9')
    256          							&& ('0' <= data[i-8]) && (data[i-8] <= '9')
    257          							&& ('0' <= data[i-7]) && (data[i-7] <= '9')
    258          							&& ('0' <= data[i-6]) && (data[i-6] <= '9')
    259          							&& ('0' <= data[i-5]) && (data[i-5] <= '9')
    260          							&& ('0' <= data[i-4]) && (data[i-4] <= '9')
    261          							&& ('0' <= data[i-2]) && (data[i-2] <= '9')
    262          							&& ('0' <= data[i-1]) && (data[i-1] <= '9') ) {
    263          							
    264          							bcd_to_num(&data[i-9], &clock->hour);
    265          							bcd_to_num(&data[i-7], &clock->minute);
    266          							bcd_to_num(&data[i-5], &clock->seconds);
    267          							cnt++;
    268          						}
    269          					}
    270          					break;
    271          
    272          				case 3:
    273          					if (data[i-3] == ',') {
    274          						if ( ( '1' <= data[i-2] ) || (data[i-2] <= '9') 
    275          							&& ( '1' <= data[i-1] ) || (data[i-1] <= '9') ) {
    276          
    277          							bcd_to_num(&data[i-2], &clock->day);
    278          							cnt++;
    279          						}
    280          					}
    281          					break;
    282          
    283          				case 4:
    284          					if (data[i-3] == ',') {
    285          						if ( ( '1' <= data[i-2] ) || (data[i-2] <= '9') 
    286          							&& ( '1' <= data[i-1] ) || (data[i-1] <= '9') ) {
    287          
    288          							bcd_to_num(&data[i-2], &clock->month);
    289          							cnt++;
    290          						}
    291          					}
    292          					break;
    293          
    294          				case 5:
    295          					if (data[i-5] == ',') {
    296          						if ( ( '1' <= data[i-4] ) || (data[i-4] <= '9') 
    297          							&& ( '1' <= data[i-3] ) || (data[i-3] <= '9')
    298          							&& ( '1' <= data[i-2] ) || (data[i-2] <= '9')
    299          							&& ( '1' <= data[i-1] ) || (data[i-1] <= '9') ) {
    300          
    301          							bcd_to_num(&data[i-2], &clock->year);
    302          							cnt++;
    303          						}
    304          					}
    305          					break;
    306          
    307          				default:
    308          					break;
   \                     ??ctrl_NMEA_get_ZDA_sentence_2: (+1)
   \                     ??ctrl_NMEA_get_ZDA_sentence_3: (+1)
   \   00000028   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ctrl_NMEA_get_ZDA_sentence_1: (+1)
   \   0000002A   0x9801             LDR      R0,[SP, #+4]
   \   0000002C   0x4285             CMP      R5,R0
   \   0000002E   0xDB00             BLT      .+4
   \   00000030   0xE0D1             B        ??ctrl_NMEA_get_ZDA_sentence_0
   \   00000032   0x5D60             LDRB     R0,[R4, R5]
   \   00000034   0x282C             CMP      R0,#+44
   \   00000036   0xD1F7             BNE      ??ctrl_NMEA_get_ZDA_sentence_3
   \   00000038   0x1C7F             ADDS     R7,R7,#+1
   \   0000003A   0x2F02             CMP      R7,#+2
   \   0000003C   0xD007             BEQ      ??ctrl_NMEA_get_ZDA_sentence_4
   \   0000003E   0xD3F3             BCC      ??ctrl_NMEA_get_ZDA_sentence_2
   \   00000040   0x2F04             CMP      R7,#+4
   \   00000042   0xD073             BEQ      ??ctrl_NMEA_get_ZDA_sentence_5
   \   00000044   0xD351             BCC      ??ctrl_NMEA_get_ZDA_sentence_6
   \   00000046   0x2F05             CMP      R7,#+5
   \   00000048   0xD100             BNE      .+4
   \   0000004A   0xE090             B        ??ctrl_NMEA_get_ZDA_sentence_7
   \   0000004C   0xE7EC             B        ??ctrl_NMEA_get_ZDA_sentence_2
   \                     ??ctrl_NMEA_get_ZDA_sentence_4: (+1)
   \   0000004E   0x1960             ADDS     R0,R4,R5
   \   00000050   0x380A             SUBS     R0,R0,#+10
   \   00000052   0x7800             LDRB     R0,[R0, #+0]
   \   00000054   0x282C             CMP      R0,#+44
   \   00000056   0xD147             BNE      ??ctrl_NMEA_get_ZDA_sentence_8
   \   00000058   0x1960             ADDS     R0,R4,R5
   \   0000005A   0x1EC0             SUBS     R0,R0,#+3
   \   0000005C   0x7800             LDRB     R0,[R0, #+0]
   \   0000005E   0x282E             CMP      R0,#+46
   \   00000060   0xD142             BNE      ??ctrl_NMEA_get_ZDA_sentence_8
   \   00000062   0x1960             ADDS     R0,R4,R5
   \   00000064   0x3809             SUBS     R0,R0,#+9
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0x3830             SUBS     R0,R0,#+48
   \   0000006A   0x280A             CMP      R0,#+10
   \   0000006C   0xD23C             BCS      ??ctrl_NMEA_get_ZDA_sentence_8
   \   0000006E   0x1960             ADDS     R0,R4,R5
   \   00000070   0x3808             SUBS     R0,R0,#+8
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0x3830             SUBS     R0,R0,#+48
   \   00000076   0x280A             CMP      R0,#+10
   \   00000078   0xD236             BCS      ??ctrl_NMEA_get_ZDA_sentence_8
   \   0000007A   0x1960             ADDS     R0,R4,R5
   \   0000007C   0x1FC0             SUBS     R0,R0,#+7
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x3830             SUBS     R0,R0,#+48
   \   00000082   0x280A             CMP      R0,#+10
   \   00000084   0xD230             BCS      ??ctrl_NMEA_get_ZDA_sentence_8
   \   00000086   0x1960             ADDS     R0,R4,R5
   \   00000088   0x1F80             SUBS     R0,R0,#+6
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x3830             SUBS     R0,R0,#+48
   \   0000008E   0x280A             CMP      R0,#+10
   \   00000090   0xD22A             BCS      ??ctrl_NMEA_get_ZDA_sentence_8
   \   00000092   0x1960             ADDS     R0,R4,R5
   \   00000094   0x1F40             SUBS     R0,R0,#+5
   \   00000096   0x7800             LDRB     R0,[R0, #+0]
   \   00000098   0x3830             SUBS     R0,R0,#+48
   \   0000009A   0x280A             CMP      R0,#+10
   \   0000009C   0xD224             BCS      ??ctrl_NMEA_get_ZDA_sentence_8
   \   0000009E   0x1960             ADDS     R0,R4,R5
   \   000000A0   0x1F00             SUBS     R0,R0,#+4
   \   000000A2   0x7800             LDRB     R0,[R0, #+0]
   \   000000A4   0x3830             SUBS     R0,R0,#+48
   \   000000A6   0x280A             CMP      R0,#+10
   \   000000A8   0xD21E             BCS      ??ctrl_NMEA_get_ZDA_sentence_8
   \   000000AA   0x1960             ADDS     R0,R4,R5
   \   000000AC   0x1E80             SUBS     R0,R0,#+2
   \   000000AE   0x7800             LDRB     R0,[R0, #+0]
   \   000000B0   0x3830             SUBS     R0,R0,#+48
   \   000000B2   0x280A             CMP      R0,#+10
   \   000000B4   0xD218             BCS      ??ctrl_NMEA_get_ZDA_sentence_8
   \   000000B6   0x1960             ADDS     R0,R4,R5
   \   000000B8   0x1E40             SUBS     R0,R0,#+1
   \   000000BA   0x7800             LDRB     R0,[R0, #+0]
   \   000000BC   0x3830             SUBS     R0,R0,#+48
   \   000000BE   0x280A             CMP      R0,#+10
   \   000000C0   0xD212             BCS      ??ctrl_NMEA_get_ZDA_sentence_8
   \   000000C2   0x9802             LDR      R0,[SP, #+8]
   \   000000C4   0x1CC1             ADDS     R1,R0,#+3
   \   000000C6   0x1960             ADDS     R0,R4,R5
   \   000000C8   0x3809             SUBS     R0,R0,#+9
   \   000000CA   0x.... 0x....      BL       bcd_to_num
   \   000000CE   0x9802             LDR      R0,[SP, #+8]
   \   000000D0   0x1D01             ADDS     R1,R0,#+4
   \   000000D2   0x1960             ADDS     R0,R4,R5
   \   000000D4   0x1FC0             SUBS     R0,R0,#+7
   \   000000D6   0x.... 0x....      BL       bcd_to_num
   \   000000DA   0x9802             LDR      R0,[SP, #+8]
   \   000000DC   0x1D41             ADDS     R1,R0,#+5
   \   000000DE   0x1960             ADDS     R0,R4,R5
   \   000000E0   0x1F40             SUBS     R0,R0,#+5
   \   000000E2   0x.... 0x....      BL       bcd_to_num
   \   000000E6   0x1C76             ADDS     R6,R6,#+1
   \                     ??ctrl_NMEA_get_ZDA_sentence_8: (+1)
   \   000000E8   0xE79E             B        ??ctrl_NMEA_get_ZDA_sentence_3
   \                     ??ctrl_NMEA_get_ZDA_sentence_6: (+1)
   \   000000EA   0x1960             ADDS     R0,R4,R5
   \   000000EC   0x1EC0             SUBS     R0,R0,#+3
   \   000000EE   0x7800             LDRB     R0,[R0, #+0]
   \   000000F0   0x282C             CMP      R0,#+44
   \   000000F2   0xD11A             BNE      ??ctrl_NMEA_get_ZDA_sentence_9
   \   000000F4   0x1960             ADDS     R0,R4,R5
   \   000000F6   0x1E80             SUBS     R0,R0,#+2
   \   000000F8   0x7800             LDRB     R0,[R0, #+0]
   \   000000FA   0x2831             CMP      R0,#+49
   \   000000FC   0xDA0E             BGE      ??ctrl_NMEA_get_ZDA_sentence_10
   \   000000FE   0x1960             ADDS     R0,R4,R5
   \   00000100   0x1E80             SUBS     R0,R0,#+2
   \   00000102   0x7800             LDRB     R0,[R0, #+0]
   \   00000104   0x283A             CMP      R0,#+58
   \   00000106   0xDA04             BGE      ??ctrl_NMEA_get_ZDA_sentence_11
   \   00000108   0x1960             ADDS     R0,R4,R5
   \   0000010A   0x1E40             SUBS     R0,R0,#+1
   \   0000010C   0x7800             LDRB     R0,[R0, #+0]
   \   0000010E   0x2831             CMP      R0,#+49
   \   00000110   0xDA04             BGE      ??ctrl_NMEA_get_ZDA_sentence_10
   \                     ??ctrl_NMEA_get_ZDA_sentence_11: (+1)
   \   00000112   0x1960             ADDS     R0,R4,R5
   \   00000114   0x1E40             SUBS     R0,R0,#+1
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x283A             CMP      R0,#+58
   \   0000011A   0xDA06             BGE      ??ctrl_NMEA_get_ZDA_sentence_9
   \                     ??ctrl_NMEA_get_ZDA_sentence_10: (+1)
   \   0000011C   0x9802             LDR      R0,[SP, #+8]
   \   0000011E   0x1C81             ADDS     R1,R0,#+2
   \   00000120   0x1960             ADDS     R0,R4,R5
   \   00000122   0x1E80             SUBS     R0,R0,#+2
   \   00000124   0x.... 0x....      BL       bcd_to_num
   \   00000128   0x1C76             ADDS     R6,R6,#+1
   \                     ??ctrl_NMEA_get_ZDA_sentence_9: (+1)
   \   0000012A   0xE77D             B        ??ctrl_NMEA_get_ZDA_sentence_3
   \                     ??ctrl_NMEA_get_ZDA_sentence_5: (+1)
   \   0000012C   0x1960             ADDS     R0,R4,R5
   \   0000012E   0x1EC0             SUBS     R0,R0,#+3
   \   00000130   0x7800             LDRB     R0,[R0, #+0]
   \   00000132   0x282C             CMP      R0,#+44
   \   00000134   0xD11A             BNE      ??ctrl_NMEA_get_ZDA_sentence_12
   \   00000136   0x1960             ADDS     R0,R4,R5
   \   00000138   0x1E80             SUBS     R0,R0,#+2
   \   0000013A   0x7800             LDRB     R0,[R0, #+0]
   \   0000013C   0x2831             CMP      R0,#+49
   \   0000013E   0xDA0E             BGE      ??ctrl_NMEA_get_ZDA_sentence_13
   \   00000140   0x1960             ADDS     R0,R4,R5
   \   00000142   0x1E80             SUBS     R0,R0,#+2
   \   00000144   0x7800             LDRB     R0,[R0, #+0]
   \   00000146   0x283A             CMP      R0,#+58
   \   00000148   0xDA04             BGE      ??ctrl_NMEA_get_ZDA_sentence_14
   \   0000014A   0x1960             ADDS     R0,R4,R5
   \   0000014C   0x1E40             SUBS     R0,R0,#+1
   \   0000014E   0x7800             LDRB     R0,[R0, #+0]
   \   00000150   0x2831             CMP      R0,#+49
   \   00000152   0xDA04             BGE      ??ctrl_NMEA_get_ZDA_sentence_13
   \                     ??ctrl_NMEA_get_ZDA_sentence_14: (+1)
   \   00000154   0x1960             ADDS     R0,R4,R5
   \   00000156   0x1E40             SUBS     R0,R0,#+1
   \   00000158   0x7800             LDRB     R0,[R0, #+0]
   \   0000015A   0x283A             CMP      R0,#+58
   \   0000015C   0xDA06             BGE      ??ctrl_NMEA_get_ZDA_sentence_12
   \                     ??ctrl_NMEA_get_ZDA_sentence_13: (+1)
   \   0000015E   0x9802             LDR      R0,[SP, #+8]
   \   00000160   0x1C41             ADDS     R1,R0,#+1
   \   00000162   0x1960             ADDS     R0,R4,R5
   \   00000164   0x1E80             SUBS     R0,R0,#+2
   \   00000166   0x.... 0x....      BL       bcd_to_num
   \   0000016A   0x1C76             ADDS     R6,R6,#+1
   \                     ??ctrl_NMEA_get_ZDA_sentence_12: (+1)
   \   0000016C   0xE75C             B        ??ctrl_NMEA_get_ZDA_sentence_3
   \                     ??ctrl_NMEA_get_ZDA_sentence_7: (+1)
   \   0000016E   0x1960             ADDS     R0,R4,R5
   \   00000170   0x1F40             SUBS     R0,R0,#+5
   \   00000172   0x7800             LDRB     R0,[R0, #+0]
   \   00000174   0x282C             CMP      R0,#+44
   \   00000176   0xD12D             BNE      ??ctrl_NMEA_get_ZDA_sentence_15
   \   00000178   0x1960             ADDS     R0,R4,R5
   \   0000017A   0x1F00             SUBS     R0,R0,#+4
   \   0000017C   0x7800             LDRB     R0,[R0, #+0]
   \   0000017E   0x2831             CMP      R0,#+49
   \   00000180   0xDA22             BGE      ??ctrl_NMEA_get_ZDA_sentence_16
   \   00000182   0x1960             ADDS     R0,R4,R5
   \   00000184   0x1F00             SUBS     R0,R0,#+4
   \   00000186   0x7800             LDRB     R0,[R0, #+0]
   \   00000188   0x283A             CMP      R0,#+58
   \   0000018A   0xDA04             BGE      ??ctrl_NMEA_get_ZDA_sentence_17
   \   0000018C   0x1960             ADDS     R0,R4,R5
   \   0000018E   0x1EC0             SUBS     R0,R0,#+3
   \   00000190   0x7800             LDRB     R0,[R0, #+0]
   \   00000192   0x2831             CMP      R0,#+49
   \   00000194   0xDA18             BGE      ??ctrl_NMEA_get_ZDA_sentence_16
   \                     ??ctrl_NMEA_get_ZDA_sentence_17: (+1)
   \   00000196   0x1960             ADDS     R0,R4,R5
   \   00000198   0x1EC0             SUBS     R0,R0,#+3
   \   0000019A   0x7800             LDRB     R0,[R0, #+0]
   \   0000019C   0x283A             CMP      R0,#+58
   \   0000019E   0xDA04             BGE      ??ctrl_NMEA_get_ZDA_sentence_18
   \   000001A0   0x1960             ADDS     R0,R4,R5
   \   000001A2   0x1E80             SUBS     R0,R0,#+2
   \   000001A4   0x7800             LDRB     R0,[R0, #+0]
   \   000001A6   0x2831             CMP      R0,#+49
   \   000001A8   0xDA0E             BGE      ??ctrl_NMEA_get_ZDA_sentence_16
   \                     ??ctrl_NMEA_get_ZDA_sentence_18: (+1)
   \   000001AA   0x1960             ADDS     R0,R4,R5
   \   000001AC   0x1E80             SUBS     R0,R0,#+2
   \   000001AE   0x7800             LDRB     R0,[R0, #+0]
   \   000001B0   0x283A             CMP      R0,#+58
   \   000001B2   0xDA04             BGE      ??ctrl_NMEA_get_ZDA_sentence_19
   \   000001B4   0x1960             ADDS     R0,R4,R5
   \   000001B6   0x1E40             SUBS     R0,R0,#+1
   \   000001B8   0x7800             LDRB     R0,[R0, #+0]
   \   000001BA   0x2831             CMP      R0,#+49
   \   000001BC   0xDA04             BGE      ??ctrl_NMEA_get_ZDA_sentence_16
   \                     ??ctrl_NMEA_get_ZDA_sentence_19: (+1)
   \   000001BE   0x1960             ADDS     R0,R4,R5
   \   000001C0   0x1E40             SUBS     R0,R0,#+1
   \   000001C2   0x7800             LDRB     R0,[R0, #+0]
   \   000001C4   0x283A             CMP      R0,#+58
   \   000001C6   0xDA05             BGE      ??ctrl_NMEA_get_ZDA_sentence_15
   \                     ??ctrl_NMEA_get_ZDA_sentence_16: (+1)
   \   000001C8   0x9902             LDR      R1,[SP, #+8]
   \   000001CA   0x1960             ADDS     R0,R4,R5
   \   000001CC   0x1E80             SUBS     R0,R0,#+2
   \   000001CE   0x.... 0x....      BL       bcd_to_num
   \   000001D2   0x1C76             ADDS     R6,R6,#+1
   \                     ??ctrl_NMEA_get_ZDA_sentence_15: (+1)
   \   000001D4   0xE728             B        ??ctrl_NMEA_get_ZDA_sentence_3
    309          				}
    310          			}
    311          		}
    312          	}
    313          
    314          	if (cnt >= 4) {
   \                     ??ctrl_NMEA_get_ZDA_sentence_0: (+1)
   \   000001D6   0x2E04             CMP      R6,#+4
   \   000001D8   0xDB01             BLT      ??ctrl_NMEA_get_ZDA_sentence_20
    315          		ret = 0;
   \   000001DA   0x2000             MOVS     R0,#+0
   \   000001DC   0x9000             STR      R0,[SP, #+0]
    316          	}
    317          
    318          	return ret;
   \                     ??ctrl_NMEA_get_ZDA_sentence_20: (+1)
   \   000001DE   0x9800             LDR      R0,[SP, #+0]
   \   000001E0   0xBDFE             POP      {R1-R7,PC}       ;; return
    319          }
    320          
    321          
    322          
    323          
    324          /********************************************************************/
    325          /*!
    326           * \name	ctrl_NMEA_get_IMP_sentence
    327           * \brief	IMPセンテンスを解析する処理
    328           * \param	data     : NMEAデータ
    329           *			length   : データ長
    330           *          status   : ステイタス(1：データ有効，0：データ無効)
    331           *          imes_cnt : 受信IMES信号数
    332           * \return   0: 正常
    333           *          -1: 異常
    334           * \note	      例
    335           *          j= 1: $IMIMP
    336           *             2: 000006.00   : 時刻
    337           *             3: 175         : PRN
    338           *             4: 0           : メッセージタイプ
    339           *             5: 3536.7387   : 緯度
    340           *             6: N           : 北緯 / 南緯
    341           *             7: 13937.6885  : 経度
    342           *             8: E           : 東経 / 西経
    343           *             9: 8.0         : 階数
    344           *            10:             : 高度 (標高)
    345           *            11:             : 精度指標
    346           *            12: A           : ステイタス                      ※
    347           *            13: 45          : 信号強度
    348           *            14: 0           : オフセット周波数
    349           *            15: 1           : 受信IMES信号数受信IMES信号数    ※
    350           *            16: *23         : チェックサム
    351           *            17:             : <CR><LF>
    352           */
    353          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    354          static int32_t ctrl_NMEA_get_IMP_sentence(uint8_t *data, int32_t length, int8_t *status, int8_t *imes_cnt)
    355          {
   \                     ctrl_NMEA_get_IMP_sentence: (+1)
   \   00000000   0xB5F2             PUSH     {R1,R4-R7,LR}
    356          	int32_t		ret=-1;
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x43C9             MVNS     R1,R1            ;; #-1
    357          	int32_t		i;
    358          	int32_t		j;
    359          	int32_t		cnt=0;
   \   00000006   0x2400             MOVS     R4,#+0
    360          
    361          	*status = 0;
   \   00000008   0x2500             MOVS     R5,#+0
   \   0000000A   0x7015             STRB     R5,[R2, #+0]
    362          	*imes_cnt = 0;
   \   0000000C   0x2500             MOVS     R5,#+0
   \   0000000E   0x701D             STRB     R5,[R3, #+0]
    363          
    364          	if ( (data != NULL) && (length > 0) && (status != NULL) && (imes_cnt != NULL) ) {
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD043             BEQ      ??ctrl_NMEA_get_IMP_sentence_0
   \   00000014   0x9D00             LDR      R5,[SP, #+0]
   \   00000016   0x2D01             CMP      R5,#+1
   \   00000018   0xDB40             BLT      ??ctrl_NMEA_get_IMP_sentence_0
   \   0000001A   0x2A00             CMP      R2,#+0
   \   0000001C   0xD03E             BEQ      ??ctrl_NMEA_get_IMP_sentence_0
   \   0000001E   0x2B00             CMP      R3,#+0
   \   00000020   0xD03C             BEQ      ??ctrl_NMEA_get_IMP_sentence_0
    365          
    366          		for (i=0,j=0; i<length; i++) {
   \   00000022   0x2500             MOVS     R5,#+0
   \   00000024   0x2600             MOVS     R6,#+0
   \   00000026   0xE018             B        ??ctrl_NMEA_get_IMP_sentence_1
    367          			if (data[i] == ',') {
    368          				j++;
    369          
    370          				switch (j) {
    371          				case 12:
    372          					if (data[i-2] == ',') {
    373          						if (data[i-1] == 'A') {
    374          							*status = 1;
    375          							cnt++;
    376          						}
    377          						else if (data[i-1] == 'D') {
    378          							*status = 0;
    379          							cnt++;
    380          						}
    381          					}
    382          					break;
    383          				default:
    384          					break;
    385          				}
    386          			}
    387          			else if (data[i] == '*') {
   \                     ??ctrl_NMEA_get_IMP_sentence_2: (+1)
   \   00000028   0x5D47             LDRB     R7,[R0, R5]
   \   0000002A   0x2F2A             CMP      R7,#+42
   \   0000002C   0xD114             BNE      ??ctrl_NMEA_get_IMP_sentence_3
    388          				if (data[i-2] == ',') {
   \   0000002E   0x1947             ADDS     R7,R0,R5
   \   00000030   0x1EBF             SUBS     R7,R7,#+2
   \   00000032   0x783F             LDRB     R7,[R7, #+0]
   \   00000034   0x2F2C             CMP      R7,#+44
   \   00000036   0xD10F             BNE      ??ctrl_NMEA_get_IMP_sentence_3
    389          					if ( ( '1' <= data[i-1] ) || (data[i-1] <= '9') ) {
   \   00000038   0x1947             ADDS     R7,R0,R5
   \   0000003A   0x1E7F             SUBS     R7,R7,#+1
   \   0000003C   0x783F             LDRB     R7,[R7, #+0]
   \   0000003E   0x2F31             CMP      R7,#+49
   \   00000040   0xDA04             BGE      ??ctrl_NMEA_get_IMP_sentence_4
   \   00000042   0x1947             ADDS     R7,R0,R5
   \   00000044   0x1E7F             SUBS     R7,R7,#+1
   \   00000046   0x783F             LDRB     R7,[R7, #+0]
   \   00000048   0x2F3A             CMP      R7,#+58
   \   0000004A   0xDA05             BGE      ??ctrl_NMEA_get_IMP_sentence_3
    390          						*imes_cnt = data[i-1] - '0';
   \                     ??ctrl_NMEA_get_IMP_sentence_4: (+1)
   \   0000004C   0x1947             ADDS     R7,R0,R5
   \   0000004E   0x1E7F             SUBS     R7,R7,#+1
   \   00000050   0x783F             LDRB     R7,[R7, #+0]
   \   00000052   0x3F30             SUBS     R7,R7,#+48
   \   00000054   0x701F             STRB     R7,[R3, #+0]
    391          						cnt++;
   \   00000056   0x1C64             ADDS     R4,R4,#+1
    392          					}
    393          				}
    394          			}
   \                     ??ctrl_NMEA_get_IMP_sentence_3: (+1)
   \   00000058   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ctrl_NMEA_get_IMP_sentence_1: (+1)
   \   0000005A   0x9F00             LDR      R7,[SP, #+0]
   \   0000005C   0x42BD             CMP      R5,R7
   \   0000005E   0xDA1D             BGE      ??ctrl_NMEA_get_IMP_sentence_0
   \   00000060   0x5D47             LDRB     R7,[R0, R5]
   \   00000062   0x2F2C             CMP      R7,#+44
   \   00000064   0xD1E0             BNE      ??ctrl_NMEA_get_IMP_sentence_2
   \   00000066   0x1C76             ADDS     R6,R6,#+1
   \   00000068   0x2E0C             CMP      R6,#+12
   \   0000006A   0xD116             BNE      ??ctrl_NMEA_get_IMP_sentence_5
   \   0000006C   0x1947             ADDS     R7,R0,R5
   \   0000006E   0x1EBF             SUBS     R7,R7,#+2
   \   00000070   0x783F             LDRB     R7,[R7, #+0]
   \   00000072   0x2F2C             CMP      R7,#+44
   \   00000074   0xD110             BNE      ??ctrl_NMEA_get_IMP_sentence_6
   \   00000076   0x1947             ADDS     R7,R0,R5
   \   00000078   0x1E7F             SUBS     R7,R7,#+1
   \   0000007A   0x783F             LDRB     R7,[R7, #+0]
   \   0000007C   0x2F41             CMP      R7,#+65
   \   0000007E   0xD103             BNE      ??ctrl_NMEA_get_IMP_sentence_7
   \   00000080   0x2701             MOVS     R7,#+1
   \   00000082   0x7017             STRB     R7,[R2, #+0]
   \   00000084   0x1C64             ADDS     R4,R4,#+1
   \   00000086   0xE007             B        ??ctrl_NMEA_get_IMP_sentence_6
   \                     ??ctrl_NMEA_get_IMP_sentence_7: (+1)
   \   00000088   0x1947             ADDS     R7,R0,R5
   \   0000008A   0x1E7F             SUBS     R7,R7,#+1
   \   0000008C   0x783F             LDRB     R7,[R7, #+0]
   \   0000008E   0x2F44             CMP      R7,#+68
   \   00000090   0xD102             BNE      ??ctrl_NMEA_get_IMP_sentence_6
   \   00000092   0x2700             MOVS     R7,#+0
   \   00000094   0x7017             STRB     R7,[R2, #+0]
   \   00000096   0x1C64             ADDS     R4,R4,#+1
   \                     ??ctrl_NMEA_get_IMP_sentence_6: (+1)
   \   00000098   0xE7DE             B        ??ctrl_NMEA_get_IMP_sentence_3
   \                     ??ctrl_NMEA_get_IMP_sentence_5: (+1)
   \   0000009A   0xE7DD             B        ??ctrl_NMEA_get_IMP_sentence_3
    395          		}
    396          	}
    397          
    398          	if (cnt >= 2) {
   \                     ??ctrl_NMEA_get_IMP_sentence_0: (+1)
   \   0000009C   0x2C02             CMP      R4,#+2
   \   0000009E   0xDB00             BLT      ??ctrl_NMEA_get_IMP_sentence_8
    399          		ret = 0;
   \   000000A0   0x2100             MOVS     R1,#+0
    400          	}
    401          
    402          	return ret;
   \                     ??ctrl_NMEA_get_IMP_sentence_8: (+1)
   \   000000A2   0x0008             MOVS     R0,R1
   \   000000A4   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    403          }
    404          
    405          
    406          /********************************************************************/
    407          /*!
    408           * \name	ctrl_NMEA_get_GSA_sentence
    409           * \brief	GSAセンテンスを解析する処理
    410           * \param	data     : NMEAデータ
    411           *			length   : データ長
    412           *          mode     : 測位モード(1：非測位，2：2D測位中，3：3D測位中)
    413           *          hdop     : HDOP(水平精度低下率)を10倍した値(**)
    414           * \return   0: 正常
    415           *          -1: 異常
    416           * \note	      例
    417           *          j= 1: $GPGSA
    418           *             2: A           : 2D / 3D切り換え
    419           *             3: 3           : 測位モード            ※
    420           *             4: 03          : 使用衛星番号1
    421           *             5: 23          : 使用衛星番号2
    422           *             6: 09          : 使用衛星番号3
    423           *             7: 01          : 使用衛星番号4
    424           *             8: 11          : 使用衛星番号5
    425           *             9: 28          : 使用衛星番号6
    426           *            10: 22          : 使用衛星番号7
    427           *            11: 06          : 使用衛星番号8
    428           *            12: 17          : 使用衛星番号9
    429           *            13:             : 使用衛星番号10
    430           *            14:             : 使用衛星番号11
    431           *            15:             : 使用衛星番号12
    432           *            16: 2.3         : PDOP(位置精度低下率)
    433           *            17: 1.0         : HDOP(水平精度低下率)  ※
    434           *            18: 2.0         : VDOP(垂直精度低下率)
    435           *            19: *30         : チェックサム
    436           *            20:             : <CR><LF>
    437           */
    438          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    439          static int32_t ctrl_NMEA_get_GSA_sentence(uint8_t *data, int32_t length, int8_t *mode, int8_t *hdop)
    440          {
   \                     ctrl_NMEA_get_GSA_sentence: (+1)
   \   00000000   0xB5F6             PUSH     {R1,R2,R4-R7,LR}
    441          	int32_t		ret=-1;
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x43C9             MVNS     R1,R1            ;; #-1
    442          	int32_t		i;
    443          	int32_t		j;
    444          	int32_t		cnt=0;
   \   00000006   0x2200             MOVS     R2,#+0
    445          
    446          	*mode = 0;
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x9D01             LDR      R5,[SP, #+4]
   \   0000000C   0x702C             STRB     R4,[R5, #+0]
    447          	*hdop = 0;
   \   0000000E   0x2400             MOVS     R4,#+0
   \   00000010   0x701C             STRB     R4,[R3, #+0]
    448          
    449          	if ( (data != NULL) && (length > 0) && (mode != NULL) && (hdop != NULL) ) {
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD05C             BEQ      ??ctrl_NMEA_get_GSA_sentence_0
   \   00000016   0x9C00             LDR      R4,[SP, #+0]
   \   00000018   0x2C01             CMP      R4,#+1
   \   0000001A   0xDB59             BLT      ??ctrl_NMEA_get_GSA_sentence_0
   \   0000001C   0x9C01             LDR      R4,[SP, #+4]
   \   0000001E   0x2C00             CMP      R4,#+0
   \   00000020   0xD056             BEQ      ??ctrl_NMEA_get_GSA_sentence_0
   \   00000022   0x2B00             CMP      R3,#+0
   \   00000024   0xD054             BEQ      ??ctrl_NMEA_get_GSA_sentence_0
    450          
    451          		for (i=0,j=0; i<length; i++) {
   \   00000026   0x2500             MOVS     R5,#+0
   \   00000028   0x2400             MOVS     R4,#+0
   \   0000002A   0xE000             B        ??ctrl_NMEA_get_GSA_sentence_1
    452          			if (data[i] == ',') {
    453          				j++;
    454          
    455          				switch (j) {
    456          				case 3:
    457          					if (data[i-2] == ',') {
    458          						if ( (data[i-1] == '1') || (data[i-1] == '2') || (data[i-1] == '3') ) {
    459          							*mode = data[i-1] - '0';
    460          							cnt++;
    461          						}
    462          					}
    463          					break;
    464          	
    465          				case 17:
    466          					if ( (data[i-4] == ',') && (data[i-2] == '.') ) {
    467          						if ( ('0' <= data[i-3]) && (data[i-3] <= '9') && ('0' <= data[i-1]) && (data[i-1] <= '9') ) {
    468          							*hdop = data[i-3] - '0';
    469          							*hdop *= 10;
    470          							*hdop += data[i-1] - '0';
    471          							cnt++;
    472          						}
    473          					}
    474          					break;
    475          				
    476          				default:
    477          					break;
   \                     ??ctrl_NMEA_get_GSA_sentence_2: (+1)
   \                     ??ctrl_NMEA_get_GSA_sentence_3: (+1)
   \   0000002C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ctrl_NMEA_get_GSA_sentence_1: (+1)
   \   0000002E   0x9E00             LDR      R6,[SP, #+0]
   \   00000030   0x42B5             CMP      R5,R6
   \   00000032   0xDA4D             BGE      ??ctrl_NMEA_get_GSA_sentence_0
   \   00000034   0x5D46             LDRB     R6,[R0, R5]
   \   00000036   0x2E2C             CMP      R6,#+44
   \   00000038   0xD1F8             BNE      ??ctrl_NMEA_get_GSA_sentence_3
   \   0000003A   0x1C64             ADDS     R4,R4,#+1
   \   0000003C   0x0026             MOVS     R6,R4
   \   0000003E   0x2E03             CMP      R6,#+3
   \   00000040   0xD002             BEQ      ??ctrl_NMEA_get_GSA_sentence_4
   \   00000042   0x2E11             CMP      R6,#+17
   \   00000044   0xD01C             BEQ      ??ctrl_NMEA_get_GSA_sentence_5
   \   00000046   0xE7F1             B        ??ctrl_NMEA_get_GSA_sentence_2
   \                     ??ctrl_NMEA_get_GSA_sentence_4: (+1)
   \   00000048   0x1946             ADDS     R6,R0,R5
   \   0000004A   0x1EB6             SUBS     R6,R6,#+2
   \   0000004C   0x7836             LDRB     R6,[R6, #+0]
   \   0000004E   0x2E2C             CMP      R6,#+44
   \   00000050   0xD115             BNE      ??ctrl_NMEA_get_GSA_sentence_6
   \   00000052   0x1946             ADDS     R6,R0,R5
   \   00000054   0x1E76             SUBS     R6,R6,#+1
   \   00000056   0x7836             LDRB     R6,[R6, #+0]
   \   00000058   0x2E31             CMP      R6,#+49
   \   0000005A   0xD009             BEQ      ??ctrl_NMEA_get_GSA_sentence_7
   \   0000005C   0x1946             ADDS     R6,R0,R5
   \   0000005E   0x1E76             SUBS     R6,R6,#+1
   \   00000060   0x7836             LDRB     R6,[R6, #+0]
   \   00000062   0x2E32             CMP      R6,#+50
   \   00000064   0xD004             BEQ      ??ctrl_NMEA_get_GSA_sentence_7
   \   00000066   0x1946             ADDS     R6,R0,R5
   \   00000068   0x1E76             SUBS     R6,R6,#+1
   \   0000006A   0x7836             LDRB     R6,[R6, #+0]
   \   0000006C   0x2E33             CMP      R6,#+51
   \   0000006E   0xD106             BNE      ??ctrl_NMEA_get_GSA_sentence_6
   \                     ??ctrl_NMEA_get_GSA_sentence_7: (+1)
   \   00000070   0x1946             ADDS     R6,R0,R5
   \   00000072   0x1E76             SUBS     R6,R6,#+1
   \   00000074   0x7836             LDRB     R6,[R6, #+0]
   \   00000076   0x3E30             SUBS     R6,R6,#+48
   \   00000078   0x9F01             LDR      R7,[SP, #+4]
   \   0000007A   0x703E             STRB     R6,[R7, #+0]
   \   0000007C   0x1C52             ADDS     R2,R2,#+1
   \                     ??ctrl_NMEA_get_GSA_sentence_6: (+1)
   \   0000007E   0xE7D5             B        ??ctrl_NMEA_get_GSA_sentence_3
   \                     ??ctrl_NMEA_get_GSA_sentence_5: (+1)
   \   00000080   0x1946             ADDS     R6,R0,R5
   \   00000082   0x1F36             SUBS     R6,R6,#+4
   \   00000084   0x7836             LDRB     R6,[R6, #+0]
   \   00000086   0x2E2C             CMP      R6,#+44
   \   00000088   0xD121             BNE      ??ctrl_NMEA_get_GSA_sentence_8
   \   0000008A   0x1946             ADDS     R6,R0,R5
   \   0000008C   0x1EB6             SUBS     R6,R6,#+2
   \   0000008E   0x7836             LDRB     R6,[R6, #+0]
   \   00000090   0x2E2E             CMP      R6,#+46
   \   00000092   0xD11C             BNE      ??ctrl_NMEA_get_GSA_sentence_8
   \   00000094   0x1946             ADDS     R6,R0,R5
   \   00000096   0x1EF6             SUBS     R6,R6,#+3
   \   00000098   0x7836             LDRB     R6,[R6, #+0]
   \   0000009A   0x3E30             SUBS     R6,R6,#+48
   \   0000009C   0x2E0A             CMP      R6,#+10
   \   0000009E   0xD216             BCS      ??ctrl_NMEA_get_GSA_sentence_8
   \   000000A0   0x1946             ADDS     R6,R0,R5
   \   000000A2   0x1E76             SUBS     R6,R6,#+1
   \   000000A4   0x7836             LDRB     R6,[R6, #+0]
   \   000000A6   0x3E30             SUBS     R6,R6,#+48
   \   000000A8   0x2E0A             CMP      R6,#+10
   \   000000AA   0xD210             BCS      ??ctrl_NMEA_get_GSA_sentence_8
   \   000000AC   0x1946             ADDS     R6,R0,R5
   \   000000AE   0x1EF6             SUBS     R6,R6,#+3
   \   000000B0   0x7836             LDRB     R6,[R6, #+0]
   \   000000B2   0x3E30             SUBS     R6,R6,#+48
   \   000000B4   0x701E             STRB     R6,[R3, #+0]
   \   000000B6   0x781E             LDRB     R6,[R3, #+0]
   \   000000B8   0x270A             MOVS     R7,#+10
   \   000000BA   0x437E             MULS     R6,R7,R6
   \   000000BC   0x701E             STRB     R6,[R3, #+0]
   \   000000BE   0x781E             LDRB     R6,[R3, #+0]
   \   000000C0   0x1947             ADDS     R7,R0,R5
   \   000000C2   0x1E7F             SUBS     R7,R7,#+1
   \   000000C4   0x783F             LDRB     R7,[R7, #+0]
   \   000000C6   0x3F30             SUBS     R7,R7,#+48
   \   000000C8   0x19F6             ADDS     R6,R6,R7
   \   000000CA   0x701E             STRB     R6,[R3, #+0]
   \   000000CC   0x1C52             ADDS     R2,R2,#+1
   \                     ??ctrl_NMEA_get_GSA_sentence_8: (+1)
   \   000000CE   0xE7AD             B        ??ctrl_NMEA_get_GSA_sentence_3
    478          				}
    479          			}
    480          		}
    481          	}
    482          
    483          	if (cnt >= 2) {
   \                     ??ctrl_NMEA_get_GSA_sentence_0: (+1)
   \   000000D0   0x2A02             CMP      R2,#+2
   \   000000D2   0xDB00             BLT      ??ctrl_NMEA_get_GSA_sentence_9
    484          		ret = 0;
   \   000000D4   0x2100             MOVS     R1,#+0
    485          	}
    486          
    487          	return ret;
   \                     ??ctrl_NMEA_get_GSA_sentence_9: (+1)
   \   000000D6   0x0008             MOVS     R0,R1
   \   000000D8   0xBDF6             POP      {R1,R2,R4-R7,PC}  ;; return
    488          }
    489          
    490          
    491          
    492          /********************************************************************/
    493          /*!
    494           * \name	ctrl_NMEA_data_check
    495           * \brief	NMEAデータチェック処理
    496           * \param	data   : NMEAデータ
    497           *			length : データ長
    498           * \return  なし
    499           * \note	センテンスID==ZDA
    500           *          センテンスID==IMP && 受信IMES信号数個受信
    501           */
    502          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    503          static void ctrl_NMEA_data_check(uint8_t *data, int32_t length)
    504          {
   \                     ctrl_NMEA_data_check: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    505          	int8_t	status;
    506          	int8_t	imes_cnt;
    507          	int8_t	gsa_mode;			// 測位モード
    508          	int8_t	gsa_hdop;			// HDOP(水平精度低下率)
    509          	clock_info_t clock;			// 時刻
    510          
    511          
    512          	// sentence == "ZDA"
    513          	if (memcmp(&data[3], NMEA_SENTENCE_ZDA, 3) == 0) {
   \   00000006   0x2203             MOVS     R2,#+3
   \   00000008   0x....             ADR      R1,??DataTable0  ;; "ZDA"
   \   0000000A   0x1CE0             ADDS     R0,R4,#+3
   \   0000000C   0x.... 0x....      BL       memcmp
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD10F             BNE      ??ctrl_NMEA_data_check_0
    514          		if (ctrl_NMEA_get_ZDA_sentence(data, length, &clock) >= 0) {
   \   00000014   0xAA01             ADD      R2,SP,#+4
   \   00000016   0x0029             MOVS     R1,R5
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x.... 0x....      BL       ctrl_NMEA_get_ZDA_sentence
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD47B             BMI      ??ctrl_NMEA_data_check_1
    515          			ctrl_cxd5600_work.nmea_result.utc_clock = clock;
   \   00000022   0x....             LDR      R0,??DataTable0_1
   \   00000024   0xA901             ADD      R1,SP,#+4
   \   00000026   0x2206             MOVS     R2,#+6
   \   00000028   0x.... 0x....      BL       __aeabi_memcpy
    516          			ctrl_cxd5600_work.sentence.clock_flag = 1;		// ZDA受信
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x....             LDR      R1,??DataTable0_2
   \   00000030   0x7008             STRB     R0,[R1, #+0]
   \   00000032   0xE072             B        ??ctrl_NMEA_data_check_1
    517          		}
    518          	}
    519          
    520          	// sentence == "IMP"
    521          	else if (memcmp(&data[3], NMEA_SENTENCE_IMP, 3) == 0) {
   \                     ??ctrl_NMEA_data_check_0: (+1)
   \   00000034   0x2203             MOVS     R2,#+3
   \   00000036   0x....             ADR      R1,??DataTable0_3  ;; "IMP"
   \   00000038   0x1CE0             ADDS     R0,R4,#+3
   \   0000003A   0x.... 0x....      BL       memcmp
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD125             BNE      ??ctrl_NMEA_data_check_2
    522          		if (ctrl_NMEA_get_IMP_sentence(data, length, &status, &imes_cnt) >= 0) {
   \   00000042   0xAB00             ADD      R3,SP,#+0
   \   00000044   0x1C9B             ADDS     R3,R3,#+2
   \   00000046   0xAA00             ADD      R2,SP,#+0
   \   00000048   0x1CD2             ADDS     R2,R2,#+3
   \   0000004A   0x0029             MOVS     R1,R5
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0x.... 0x....      BL       ctrl_NMEA_get_IMP_sentence
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD461             BMI      ??ctrl_NMEA_data_check_1
    523          			ctrl_cxd5600_work.nmea_result.imp_status = status;
   \   00000056   0x4668             MOV      R0,SP
   \   00000058   0x78C0             LDRB     R0,[R0, #+3]
   \   0000005A   0x....             LDR      R1,??DataTable0_4
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
    524          			ctrl_cxd5600_work.nmea_result.imp_cnt = imes_cnt;
   \   0000005E   0x4668             MOV      R0,SP
   \   00000060   0x7880             LDRB     R0,[R0, #+2]
   \   00000062   0x....             LDR      R1,??DataTable0_5
   \   00000064   0x7008             STRB     R0,[R1, #+0]
    525          			ctrl_cxd5600_work.nmea_result.imp_rcv++;
   \   00000066   0x....             LDR      R0,??DataTable0_6
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x1C40             ADDS     R0,R0,#+1
   \   0000006C   0x....             LDR      R1,??DataTable0_6
   \   0000006E   0x7008             STRB     R0,[R1, #+0]
    526          			if (ctrl_cxd5600_work.nmea_result.imp_rcv >= ctrl_cxd5600_work.nmea_result.imp_cnt) {
   \   00000070   0x....             LDR      R0,??DataTable0_6
   \   00000072   0x2100             MOVS     R1,#+0
   \   00000074   0x5640             LDRSB    R0,[R0, R1]
   \   00000076   0x....             LDR      R1,??DataTable0_5
   \   00000078   0x2200             MOVS     R2,#+0
   \   0000007A   0x5689             LDRSB    R1,[R1, R2]
   \   0000007C   0x4288             CMP      R0,R1
   \   0000007E   0xDB4C             BLT      ??ctrl_NMEA_data_check_1
    527          				ctrl_cxd5600_work.nmea_result.imp_rcv = 0;
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x....             LDR      R1,??DataTable0_6
   \   00000084   0x7008             STRB     R0,[R1, #+0]
    528          				ctrl_cxd5600_work.sentence.imes_flag = 1;	// IMES受信
   \   00000086   0x2001             MOVS     R0,#+1
   \   00000088   0x....             LDR      R1,??DataTable0_7
   \   0000008A   0x7008             STRB     R0,[R1, #+0]
   \   0000008C   0xE045             B        ??ctrl_NMEA_data_check_1
    529          			}
    530          		}
    531          	}
    532          
    533          	else if (memcmp(&data[3], NMEA_SENTENCE_GSA, 3) == 0) {
   \                     ??ctrl_NMEA_data_check_2: (+1)
   \   0000008E   0x2203             MOVS     R2,#+3
   \   00000090   0x....             ADR      R1,??DataTable0_8  ;; "GSA"
   \   00000092   0x1CE0             ADDS     R0,R4,#+3
   \   00000094   0x.... 0x....      BL       memcmp
   \   00000098   0x2800             CMP      R0,#+0
   \   0000009A   0xD13E             BNE      ??ctrl_NMEA_data_check_1
    534          		if (ctrl_NMEA_get_GSA_sentence(data, length, &gsa_mode, &gsa_hdop) >= 0) {
   \   0000009C   0x466B             MOV      R3,SP
   \   0000009E   0xAA00             ADD      R2,SP,#+0
   \   000000A0   0x1C52             ADDS     R2,R2,#+1
   \   000000A2   0x0029             MOVS     R1,R5
   \   000000A4   0x0020             MOVS     R0,R4
   \   000000A6   0x.... 0x....      BL       ctrl_NMEA_get_GSA_sentence
   \   000000AA   0x2800             CMP      R0,#+0
   \   000000AC   0xD435             BMI      ??ctrl_NMEA_data_check_1
    535          			if (ctrl_cxd5600_work.sentence.gsa_flag == 0) {
   \   000000AE   0x....             LDR      R0,??DataTable0_9
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x5640             LDRSB    R0,[R0, R1]
   \   000000B4   0x2800             CMP      R0,#+0
   \   000000B6   0xD10B             BNE      ??ctrl_NMEA_data_check_3
    536          				ctrl_cxd5600_work.sentence.gsa_flag = 1;		// SGA受信
   \   000000B8   0x2001             MOVS     R0,#+1
   \   000000BA   0x....             LDR      R1,??DataTable0_9
   \   000000BC   0x7008             STRB     R0,[R1, #+0]
    537          				ctrl_cxd5600_work.nmea_result.gsa_mode = gsa_mode;
   \   000000BE   0x4668             MOV      R0,SP
   \   000000C0   0x7840             LDRB     R0,[R0, #+1]
   \   000000C2   0x....             LDR      R1,??DataTable0_10
   \   000000C4   0x7008             STRB     R0,[R1, #+0]
    538          				ctrl_cxd5600_work.nmea_result.gsa_hdop = gsa_hdop;
   \   000000C6   0x4668             MOV      R0,SP
   \   000000C8   0x7800             LDRB     R0,[R0, #+0]
   \   000000CA   0x....             LDR      R1,??DataTable0_11
   \   000000CC   0x7008             STRB     R0,[R1, #+0]
   \   000000CE   0xE024             B        ??ctrl_NMEA_data_check_1
    539          			}
    540          			else {
    541          				if (ctrl_cxd5600_work.nmea_result.gsa_mode < gsa_mode) {
   \                     ??ctrl_NMEA_data_check_3: (+1)
   \   000000D0   0x....             LDR      R0,??DataTable0_10
   \   000000D2   0x2100             MOVS     R1,#+0
   \   000000D4   0x5640             LDRSB    R0,[R0, R1]
   \   000000D6   0x466A             MOV      R2,SP
   \   000000D8   0x2101             MOVS     R1,#+1
   \   000000DA   0x5651             LDRSB    R1,[R2, R1]
   \   000000DC   0x4288             CMP      R0,R1
   \   000000DE   0xDA08             BGE      ??ctrl_NMEA_data_check_4
    542          					ctrl_cxd5600_work.nmea_result.gsa_mode = gsa_mode;
   \   000000E0   0x4668             MOV      R0,SP
   \   000000E2   0x7840             LDRB     R0,[R0, #+1]
   \   000000E4   0x....             LDR      R1,??DataTable0_10
   \   000000E6   0x7008             STRB     R0,[R1, #+0]
    543          					ctrl_cxd5600_work.nmea_result.gsa_hdop = gsa_hdop;
   \   000000E8   0x4668             MOV      R0,SP
   \   000000EA   0x7800             LDRB     R0,[R0, #+0]
   \   000000EC   0x....             LDR      R1,??DataTable0_11
   \   000000EE   0x7008             STRB     R0,[R1, #+0]
   \   000000F0   0xE013             B        ??ctrl_NMEA_data_check_1
    544          				}
    545          				else if (ctrl_cxd5600_work.nmea_result.gsa_mode == gsa_mode) {
   \                     ??ctrl_NMEA_data_check_4: (+1)
   \   000000F2   0x....             LDR      R0,??DataTable0_10
   \   000000F4   0x2100             MOVS     R1,#+0
   \   000000F6   0x5640             LDRSB    R0,[R0, R1]
   \   000000F8   0x466A             MOV      R2,SP
   \   000000FA   0x2101             MOVS     R1,#+1
   \   000000FC   0x5651             LDRSB    R1,[R2, R1]
   \   000000FE   0x4288             CMP      R0,R1
   \   00000100   0xD10B             BNE      ??ctrl_NMEA_data_check_1
    546          					if (ctrl_cxd5600_work.nmea_result.gsa_hdop > gsa_hdop) {
   \   00000102   0x4669             MOV      R1,SP
   \   00000104   0x2000             MOVS     R0,#+0
   \   00000106   0x5608             LDRSB    R0,[R1, R0]
   \   00000108   0x....             LDR      R1,??DataTable0_11
   \   0000010A   0x2200             MOVS     R2,#+0
   \   0000010C   0x5689             LDRSB    R1,[R1, R2]
   \   0000010E   0x4288             CMP      R0,R1
   \   00000110   0xDA03             BGE      ??ctrl_NMEA_data_check_1
    547          						ctrl_cxd5600_work.nmea_result.gsa_hdop = gsa_hdop;
   \   00000112   0x4668             MOV      R0,SP
   \   00000114   0x7800             LDRB     R0,[R0, #+0]
   \   00000116   0x....             LDR      R1,??DataTable0_11
   \   00000118   0x7008             STRB     R0,[R1, #+0]
    548          					}
    549          				}
    550          			}
    551          		}
    552          	}
    553          }
   \                     ??ctrl_NMEA_data_check_1: (+1)
   \   0000011A   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
    554          
    555          
    556          /********************************************************************/
    557          /*!
    558           * \name	ctrl_CXD5600GF_get_char
    559           * \brief	応答取得処理
    560           * \param	
    561           * \return  
    562           * \note	
    563           */
    564          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
    565          static void ctrl_CXD5600GF_get_char( void )
    566          {
   \                     ctrl_CXD5600GF_get_char: (+1)
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
    567          	int32_t		read_data;
    568          	int32_t		i;
    569          	int32_t		ret;
    570          	uint32_t	end_time, time;
    571          	int32_t		loop;
    572          
    573          
    574          	// 12回ずつ受信バッファをチェックする
    575          	for (loop=0; loop<12; loop++) {
   \   00000002   0x2500             MOVS     R5,#+0
   \   00000004   0xE000             B        ??ctrl_CXD5600GF_get_char_0
   \                     ??ctrl_CXD5600GF_get_char_1: (+1)
   \   00000006   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ctrl_CXD5600GF_get_char_0: (+1)
   \   00000008   0x2D0C             CMP      R5,#+12
   \   0000000A   0xDB00             BLT      .+4
   \   0000000C   0xE1CE             B        ??ctrl_CXD5600GF_get_char_2
    576          		read_data = UART2_1_GetChar();
   \   0000000E   0x.... 0x....      BL       UART2_1_GetChar
   \   00000012   0x0004             MOVS     R4,R0
    577          		if (read_data != -1) {
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000018   0x4284             CMP      R4,R0
   \   0000001A   0xD100             BNE      .+4
   \   0000001C   0xE1C6             B        ??ctrl_CXD5600GF_get_char_3
    578          			
    579          			ctrl_cxd5600_work.recv_data[ctrl_cxd5600_work.recv_write_p] = read_data;
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x4990             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   00000022   0x4A91             LDR      R2,??ctrl_CXD5600GF_get_char_4+0x4
   \   00000024   0x6812             LDR      R2,[R2, #+0]
   \   00000026   0x1889             ADDS     R1,R1,R2
   \   00000028   0x22BE             MOVS     R2,#+190
   \   0000002A   0x0112             LSLS     R2,R2,#+4        ;; #+3040
   \   0000002C   0x5488             STRB     R0,[R1, R2]
    580          			ctrl_cxd5600_work.recv_write_p++;
   \   0000002E   0x488E             LDR      R0,??ctrl_CXD5600GF_get_char_4+0x4
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x1C40             ADDS     R0,R0,#+1
   \   00000034   0x498C             LDR      R1,??ctrl_CXD5600GF_get_char_4+0x4
   \   00000036   0x6008             STR      R0,[R1, #+0]
    581          			if (ctrl_cxd5600_work.recv_write_p >= CTRL_CXD5600_RECV_DATA_MAX) {
   \   00000038   0x488B             LDR      R0,??ctrl_CXD5600GF_get_char_4+0x4
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x2180             MOVS     R1,#+128
   \   0000003E   0x00C9             LSLS     R1,R1,#+3        ;; #+1024
   \   00000040   0x4288             CMP      R0,R1
   \   00000042   0xDB02             BLT      ??ctrl_CXD5600GF_get_char_5
    582          				ctrl_cxd5600_work.recv_write_p = 0;
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x4988             LDR      R1,??ctrl_CXD5600GF_get_char_4+0x4
   \   00000048   0x6008             STR      R0,[R1, #+0]
    583          			}
    584          
    585          			// 受信データを保存する
    586          			ctrl_cxd5600_work.data_buff[2] = ctrl_cxd5600_work.data_buff[1];
   \                     ??ctrl_CXD5600GF_get_char_5: (+1)
   \   0000004A   0x4886             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   0000004C   0x7A40             LDRB     R0,[R0, #+9]
   \   0000004E   0x4985             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   00000050   0x7288             STRB     R0,[R1, #+10]
    587          			ctrl_cxd5600_work.data_buff[1] = ctrl_cxd5600_work.data_buff[0];
   \   00000052   0x4884             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000054   0x7A00             LDRB     R0,[R0, #+8]
   \   00000056   0x4983             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   00000058   0x7248             STRB     R0,[R1, #+9]
    588          			ctrl_cxd5600_work.data_buff[0] = read_data;
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0x4981             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   0000005E   0x7208             STRB     R0,[R1, #+8]
    589          
    590          
    591          			// 先頭が'$'時はNMEAセンテンス
    592          			if (read_data == '$') {
   \   00000060   0x2C24             CMP      R4,#+36
   \   00000062   0xD10D             BNE      ??ctrl_CXD5600GF_get_char_6
    593          				if ( (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_NMEA) == 0 ) {
   \   00000064   0x487F             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000066   0x7900             LDRB     R0,[R0, #+4]
   \   00000068   0x07C0             LSLS     R0,R0,#+31
   \   0000006A   0xD409             BMI      ??ctrl_CXD5600GF_get_char_6
    594          					// NMEA受信中
    595          					ctrl_cxd5600_work.recv_flag |= CTRL_CXD5600_RECV_NMEA;
   \   0000006C   0x487D             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   0000006E   0x6840             LDR      R0,[R0, #+4]
   \   00000070   0x2101             MOVS     R1,#+1
   \   00000072   0x4301             ORRS     R1,R1,R0
   \   00000074   0x487B             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000076   0x6041             STR      R1,[R0, #+4]
    596          					ctrl_cxd5600_work.nmea_info.top_p = ctrl_cxd5600_work.nmea_info.write_p;
   \   00000078   0x48C1             LDR      R0,??ctrl_CXD5600GF_get_char_7
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0x49C1             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x4
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    597          				}
    598          			}
    599          
    600          			// 先頭が'['時は１コマンド応答
    601          			if ( read_data == '[' ) {
   \                     ??ctrl_CXD5600GF_get_char_6: (+1)
   \   00000080   0x2C5B             CMP      R4,#+91
   \   00000082   0xD119             BNE      ??ctrl_CXD5600GF_get_char_8
    602          				// 1応答CMD発行後
    603          				if ( (ctrl_cxd5600_work.status == CTRL_CXD5600_STS_RESP) || (ctrl_cxd5600_work.status == CTRL_CXD5600_STS_DRESP) ) {
   \   00000084   0x4877             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x2801             CMP      R0,#+1
   \   0000008A   0xD003             BEQ      ??ctrl_CXD5600GF_get_char_9
   \   0000008C   0x4875             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x2803             CMP      R0,#+3
   \   00000092   0xD10B             BNE      ??ctrl_CXD5600GF_get_char_10
    604          					// CMD応答未受信の場合
    605          					if ( (ctrl_cxd5600_work.recv_flag & (CTRL_CXD5600_RECV_CMD|CTRL_CXD5600_RECV_CMD2)) == 0 ) {
   \                     ??ctrl_CXD5600GF_get_char_9: (+1)
   \   00000094   0x4873             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000096   0x7900             LDRB     R0,[R0, #+4]
   \   00000098   0x2106             MOVS     R1,#+6
   \   0000009A   0x4001             ANDS     R1,R1,R0
   \   0000009C   0x2900             CMP      R1,#+0
   \   0000009E   0xD105             BNE      ??ctrl_CXD5600GF_get_char_10
    606          						// CMD応答受信中
    607          						ctrl_cxd5600_work.recv_flag |= CTRL_CXD5600_RECV_CMD;
   \   000000A0   0x4870             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000A2   0x6840             LDR      R0,[R0, #+4]
   \   000000A4   0x2102             MOVS     R1,#+2
   \   000000A6   0x4301             ORRS     R1,R1,R0
   \   000000A8   0x486E             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000AA   0x6041             STR      R1,[R0, #+4]
    608          					}
    609          				}
    610          				// 通知用コマンド受信中
    611          				ctrl_cxd5600_work.recv_flag |= CTRL_CXD5600_NOTI_CMD;
   \                     ??ctrl_CXD5600GF_get_char_10: (+1)
   \   000000AC   0x486D             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000AE   0x6840             LDR      R0,[R0, #+4]
   \   000000B0   0x2110             MOVS     R1,#+16
   \   000000B2   0x4301             ORRS     R1,R1,R0
   \   000000B4   0x486B             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000B6   0x6041             STR      R1,[R0, #+4]
    612          			}
    613          
    614          			// 先頭が'0'〜'9'時は２コマンド応答
    615          			if ( (read_data >= '0') && (read_data <= '9') ) {
   \                     ??ctrl_CXD5600GF_get_char_8: (+1)
   \   000000B8   0x0020             MOVS     R0,R4
   \   000000BA   0x3830             SUBS     R0,R0,#+48
   \   000000BC   0x280A             CMP      R0,#+10
   \   000000BE   0xD20F             BCS      ??ctrl_CXD5600GF_get_char_11
    616          				// 2応答CMD発行後
    617          				if (ctrl_cxd5600_work.status == CTRL_CXD5600_STS_WRESP) {
   \   000000C0   0x4868             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0x2802             CMP      R0,#+2
   \   000000C6   0xD10B             BNE      ??ctrl_CXD5600GF_get_char_11
    618          					// CMD応答未受信の場合
    619          					if ( (ctrl_cxd5600_work.recv_flag & (CTRL_CXD5600_RECV_CMD|CTRL_CXD5600_RECV_CMD2)) == 0 ) {
   \   000000C8   0x4866             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000CA   0x7900             LDRB     R0,[R0, #+4]
   \   000000CC   0x2106             MOVS     R1,#+6
   \   000000CE   0x4001             ANDS     R1,R1,R0
   \   000000D0   0x2900             CMP      R1,#+0
   \   000000D2   0xD105             BNE      ??ctrl_CXD5600GF_get_char_11
    620          						// CMD応答受信中
    621          						ctrl_cxd5600_work.recv_flag |= CTRL_CXD5600_RECV_CMD;
   \   000000D4   0x4863             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000D6   0x6840             LDR      R0,[R0, #+4]
   \   000000D8   0x2102             MOVS     R1,#+2
   \   000000DA   0x4301             ORRS     R1,R1,R0
   \   000000DC   0x4861             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000DE   0x6041             STR      R1,[R0, #+4]
    622          					}
    623          				}
    624          			}
    625          
    626          			// CR+LFで１行終了
    627          			ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_CRLF;
   \                     ??ctrl_CXD5600GF_get_char_11: (+1)
   \   000000E0   0x4860             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000E2   0x6840             LDR      R0,[R0, #+4]
   \   000000E4   0x2108             MOVS     R1,#+8
   \   000000E6   0x4388             BICS     R0,R0,R1
   \   000000E8   0x495E             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   000000EA   0x6048             STR      R0,[R1, #+4]
    628          			if ( (ctrl_cxd5600_work.data_buff[1] == ASCII_CR) && (ctrl_cxd5600_work.data_buff[0] == ASCII_LF) ) {
   \   000000EC   0x485D             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000EE   0x7A40             LDRB     R0,[R0, #+9]
   \   000000F0   0x280D             CMP      R0,#+13
   \   000000F2   0xD109             BNE      ??ctrl_CXD5600GF_get_char_12
   \   000000F4   0x485B             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000F6   0x7A00             LDRB     R0,[R0, #+8]
   \   000000F8   0x280A             CMP      R0,#+10
   \   000000FA   0xD105             BNE      ??ctrl_CXD5600GF_get_char_12
    629          				// 改行受信
    630          				ctrl_cxd5600_work.recv_flag |= CTRL_CXD5600_RECV_CRLF;
   \   000000FC   0x4859             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000000FE   0x6840             LDR      R0,[R0, #+4]
   \   00000100   0x2108             MOVS     R1,#+8
   \   00000102   0x4301             ORRS     R1,R1,R0
   \   00000104   0x4857             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000106   0x6041             STR      R1,[R0, #+4]
    631          			}
    632          
    633          
    634          
    635          			// 応答コマンド優先とする
    636          			if ( (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_CMD) != 0 ) {
   \                     ??ctrl_CXD5600GF_get_char_12: (+1)
   \   00000108   0x4856             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   0000010A   0x7900             LDRB     R0,[R0, #+4]
   \   0000010C   0x0780             LSLS     R0,R0,#+30
   \   0000010E   0xD565             BPL      ??ctrl_CXD5600GF_get_char_13
    637          				ctrl_cxd5600_work.save_info1.rcv_buff[ctrl_cxd5600_work.save_info1.write_p] = read_data;
   \   00000110   0x0020             MOVS     R0,R4
   \   00000112   0x4954             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   00000114   0x4A9C             LDR      R2,??ctrl_CXD5600GF_get_char_7+0x8
   \   00000116   0x6812             LDR      R2,[R2, #+0]
   \   00000118   0x1889             ADDS     R1,R1,R2
   \   0000011A   0x7308             STRB     R0,[R1, #+12]
    638          				if (ctrl_cxd5600_work.save_info1.write_p < (CTRL_CXD5600_RECV_BUFF_MAX-1)) {
   \   0000011C   0x489A             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x8
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0x287F             CMP      R0,#+127
   \   00000122   0xD204             BCS      ??ctrl_CXD5600GF_get_char_14
    639          					ctrl_cxd5600_work.save_info1.write_p++;
   \   00000124   0x4898             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x8
   \   00000126   0x6800             LDR      R0,[R0, #+0]
   \   00000128   0x1C40             ADDS     R0,R0,#+1
   \   0000012A   0x4997             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x8
   \   0000012C   0x6008             STR      R0,[R1, #+0]
    640          				}
    641          
    642          				if ( (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_NMEA) != 0) {
   \                     ??ctrl_CXD5600GF_get_char_14: (+1)
   \   0000012E   0x484D             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000130   0x7900             LDRB     R0,[R0, #+4]
   \   00000132   0x07C0             LSLS     R0,R0,#+31
   \   00000134   0xD506             BPL      ??ctrl_CXD5600GF_get_char_15
    643          					man_error_setting(MAN_ERROR_CTRL_CXD, read_data, ctrl_cxd5600_work.recv_write_p);
   \   00000136   0x4B95             LDR      R3,??ctrl_CXD5600GF_get_char_7+0xC  ;; 0x283
   \   00000138   0x484B             LDR      R0,??ctrl_CXD5600GF_get_char_4+0x4
   \   0000013A   0x6802             LDR      R2,[R0, #+0]
   \   0000013C   0x0021             MOVS     R1,R4
   \   0000013E   0x200C             MOVS     R0,#+12
   \   00000140   0x.... 0x....      BL       man_error_set
    644          				}
    645          
    646          				// 改行コード
    647          				if (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_CRLF) {
   \                     ??ctrl_CXD5600GF_get_char_15: (+1)
   \   00000144   0x4847             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000146   0x7900             LDRB     R0,[R0, #+4]
   \   00000148   0x0700             LSLS     R0,R0,#+28
   \   0000014A   0xD400             BMI      .+4
   \   0000014C   0xE0DA             B        ??ctrl_CXD5600GF_get_char_16
    648          					// ２応答コマンドの場合
    649          					if (ctrl_cxd5600_work.status == CTRL_CXD5600_STS_WRESP) {
   \   0000014E   0x4845             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000150   0x6800             LDR      R0,[R0, #+0]
   \   00000152   0x2802             CMP      R0,#+2
   \   00000154   0xD10C             BNE      ??ctrl_CXD5600GF_get_char_17
    650          						ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_CMD;
   \   00000156   0x4843             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000158   0x6840             LDR      R0,[R0, #+4]
   \   0000015A   0x2102             MOVS     R1,#+2
   \   0000015C   0x4388             BICS     R0,R0,R1
   \   0000015E   0x4941             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   00000160   0x6048             STR      R0,[R1, #+4]
    651          						ctrl_cxd5600_work.recv_flag |= CTRL_CXD5600_RECV_CMD2;
   \   00000162   0x4840             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000164   0x6840             LDR      R0,[R0, #+4]
   \   00000166   0x2104             MOVS     R1,#+4
   \   00000168   0x4301             ORRS     R1,R1,R0
   \   0000016A   0x483E             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   0000016C   0x6041             STR      R1,[R0, #+4]
   \   0000016E   0xE0C9             B        ??ctrl_CXD5600GF_get_char_16
    652          					}
    653          					// １応答コマンドの場合、終了通知
    654          					else {
    655          						if (ctrl_cxd5600_work.status == CTRL_CXD5600_STS_RESP) {
   \                     ??ctrl_CXD5600GF_get_char_17: (+1)
   \   00000170   0x483C             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000172   0x6800             LDR      R0,[R0, #+0]
   \   00000174   0x2801             CMP      R0,#+1
   \   00000176   0xD110             BNE      ??ctrl_CXD5600GF_get_char_18
    656          							// 登録先にcallback1通知
    657          							if (ctrl_cxd5600_work.request1.callback1 != NULL) {
   \   00000178   0x4885             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x10
   \   0000017A   0x6800             LDR      R0,[R0, #+0]
   \   0000017C   0x2800             CMP      R0,#+0
   \   0000017E   0xD020             BEQ      ??ctrl_CXD5600GF_get_char_19
    658          								ctrl_cxd5600_work.request1.callback1(&ctrl_cxd5600_work.save_info1.rcv_buff[0], 
    659          																		ctrl_cxd5600_work.save_info1.write_p,
    660          																		ctrl_cxd5600_work.request1.id,
    661          																		CTRL_CXD5600_STATUS_OK);
   \   00000180   0x2300             MOVS     R3,#+0
   \   00000182   0x4884             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x14
   \   00000184   0x6802             LDR      R2,[R0, #+0]
   \   00000186   0x4880             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x8
   \   00000188   0x6801             LDR      R1,[R0, #+0]
   \   0000018A   0x4883             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x18
   \   0000018C   0x4E80             LDR      R6,??ctrl_CXD5600GF_get_char_7+0x10
   \   0000018E   0x6836             LDR      R6,[R6, #+0]
   \   00000190   0x47B0             BLX      R6
    662          								ctrl_cxd5600_work.request1.callback1 = NULL;
   \   00000192   0x2000             MOVS     R0,#+0
   \   00000194   0x497E             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x10
   \   00000196   0x6008             STR      R0,[R1, #+0]
   \   00000198   0xE013             B        ??ctrl_CXD5600GF_get_char_19
    663          							}
    664          						}
    665          						else if (ctrl_cxd5600_work.status == CTRL_CXD5600_STS_DRESP) {
   \                     ??ctrl_CXD5600GF_get_char_18: (+1)
   \   0000019A   0x4832             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   0000019C   0x6800             LDR      R0,[R0, #+0]
   \   0000019E   0x2803             CMP      R0,#+3
   \   000001A0   0xD10F             BNE      ??ctrl_CXD5600GF_get_char_19
    666          							// 登録先にcallback1通知
    667          							if (ctrl_cxd5600_work.request3.callback1 != NULL) {
   \   000001A2   0x487E             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x1C
   \   000001A4   0x6800             LDR      R0,[R0, #+0]
   \   000001A6   0x2800             CMP      R0,#+0
   \   000001A8   0xD00B             BEQ      ??ctrl_CXD5600GF_get_char_19
    668          								ctrl_cxd5600_work.request3.callback1(&ctrl_cxd5600_work.save_info1.rcv_buff[0], 
    669          																		ctrl_cxd5600_work.save_info1.write_p,
    670          																		ctrl_cxd5600_work.request3.id,
    671          																		CTRL_CXD5600_STATUS_OK);
   \   000001AA   0x2300             MOVS     R3,#+0
   \   000001AC   0x487C             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x20
   \   000001AE   0x6802             LDR      R2,[R0, #+0]
   \   000001B0   0x4875             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x8
   \   000001B2   0x6801             LDR      R1,[R0, #+0]
   \   000001B4   0x4878             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x18
   \   000001B6   0x4E79             LDR      R6,??ctrl_CXD5600GF_get_char_7+0x1C
   \   000001B8   0x6836             LDR      R6,[R6, #+0]
   \   000001BA   0x47B0             BLX      R6
    672          								ctrl_cxd5600_work.request3.callback1 = NULL;
   \   000001BC   0x2000             MOVS     R0,#+0
   \   000001BE   0x4977             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x1C
   \   000001C0   0x6008             STR      R0,[R1, #+0]
    673          							}
    674          						}
    675          
    676          						// 保存領域1ポインタクリア
    677          						ctrl_cxd5600_work.save_info1.write_p = 0;
   \                     ??ctrl_CXD5600GF_get_char_19: (+1)
   \   000001C2   0x2000             MOVS     R0,#+0
   \   000001C4   0x4970             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x8
   \   000001C6   0x6008             STR      R0,[R1, #+0]
    678          						// コマンド待ち状態に戻す
    679          						ctrl_cxd5600_work.status = CTRL_CXD5600_STS_READY;
   \   000001C8   0x2000             MOVS     R0,#+0
   \   000001CA   0x4926             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   000001CC   0x6008             STR      R0,[R1, #+0]
    680          						// CMD受信終了
    681          						ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_CMD;
   \   000001CE   0x4825             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000001D0   0x6840             LDR      R0,[R0, #+4]
   \   000001D2   0x2102             MOVS     R1,#+2
   \   000001D4   0x4388             BICS     R0,R0,R1
   \   000001D6   0x4923             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   000001D8   0x6048             STR      R0,[R1, #+4]
   \   000001DA   0xE093             B        ??ctrl_CXD5600GF_get_char_16
    682          					}
    683          				}
    684          			}
    685          
    686          			// ２応答コマンド優先とする
    687          			else if ( (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_CMD2) != 0 ) {
   \                     ??ctrl_CXD5600GF_get_char_13: (+1)
   \   000001DC   0x4821             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   000001DE   0x7900             LDRB     R0,[R0, #+4]
   \   000001E0   0x0740             LSLS     R0,R0,#+29
   \   000001E2   0xD543             BPL      ??ctrl_CXD5600GF_get_char_20
    688          				ctrl_cxd5600_work.save_info2.rcv_buff[ctrl_cxd5600_work.save_info2.write_p] = read_data;
   \   000001E4   0x0020             MOVS     R0,R4
   \   000001E6   0x491F             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   000001E8   0x4A6E             LDR      R2,??ctrl_CXD5600GF_get_char_7+0x24
   \   000001EA   0x6812             LDR      R2,[R2, #+0]
   \   000001EC   0x1889             ADDS     R1,R1,R2
   \   000001EE   0x2290             MOVS     R2,#+144
   \   000001F0   0x5488             STRB     R0,[R1, R2]
    689          				if (ctrl_cxd5600_work.save_info2.write_p < (CTRL_CXD5600_RECV_BUFF_MAX-1)) {
   \   000001F2   0x486C             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x24
   \   000001F4   0x6800             LDR      R0,[R0, #+0]
   \   000001F6   0x287F             CMP      R0,#+127
   \   000001F8   0xD204             BCS      ??ctrl_CXD5600GF_get_char_21
    690          					ctrl_cxd5600_work.save_info2.write_p++;
   \   000001FA   0x486A             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x24
   \   000001FC   0x6800             LDR      R0,[R0, #+0]
   \   000001FE   0x1C40             ADDS     R0,R0,#+1
   \   00000200   0x4968             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x24
   \   00000202   0x6008             STR      R0,[R1, #+0]
    691          				}
    692          				// 改行コード
    693          				if (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_CRLF) {
   \                     ??ctrl_CXD5600GF_get_char_21: (+1)
   \   00000204   0x4817             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000206   0x7900             LDRB     R0,[R0, #+4]
   \   00000208   0x0700             LSLS     R0,R0,#+28
   \   0000020A   0xD57B             BPL      ??ctrl_CXD5600GF_get_char_16
    694          					// 登録先にcallback2通知
    695          					if (ctrl_cxd5600_work.request2.callback2 != NULL) {
   \   0000020C   0x4866             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x28
   \   0000020E   0x6800             LDR      R0,[R0, #+0]
   \   00000210   0x2800             CMP      R0,#+0
   \   00000212   0xD010             BEQ      ??ctrl_CXD5600GF_get_char_22
    696          						ctrl_cxd5600_work.request2.callback2(  &ctrl_cxd5600_work.save_info1.rcv_buff[0],
    697          																ctrl_cxd5600_work.save_info1.write_p,
    698          																&ctrl_cxd5600_work.save_info2.rcv_buff[0],
    699          																ctrl_cxd5600_work.save_info2.write_p,
    700          																ctrl_cxd5600_work.request2.id,
    701          																CTRL_CXD5600_STATUS_OK);
   \   00000214   0x2000             MOVS     R0,#+0
   \   00000216   0x9001             STR      R0,[SP, #+4]
   \   00000218   0x....             LDR      R0,??DataTable1
   \   0000021A   0x6800             LDR      R0,[R0, #+0]
   \   0000021C   0x9000             STR      R0,[SP, #+0]
   \   0000021E   0x4861             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x24
   \   00000220   0x6803             LDR      R3,[R0, #+0]
   \   00000222   0x....             LDR      R2,??DataTable1_1
   \   00000224   0x4858             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x8
   \   00000226   0x6801             LDR      R1,[R0, #+0]
   \   00000228   0x485B             LDR      R0,??ctrl_CXD5600GF_get_char_7+0x18
   \   0000022A   0x4E5F             LDR      R6,??ctrl_CXD5600GF_get_char_7+0x28
   \   0000022C   0x6836             LDR      R6,[R6, #+0]
   \   0000022E   0x47B0             BLX      R6
    702          						ctrl_cxd5600_work.request2.callback2 = NULL;
   \   00000230   0x2000             MOVS     R0,#+0
   \   00000232   0x495D             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x28
   \   00000234   0x6008             STR      R0,[R1, #+0]
    703          					}
    704          
    705          					// 保存領域1, 2ポインタクリア
    706          					ctrl_cxd5600_work.save_info1.write_p = 0;
   \                     ??ctrl_CXD5600GF_get_char_22: (+1)
   \   00000236   0x2000             MOVS     R0,#+0
   \   00000238   0x4953             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x8
   \   0000023A   0x6008             STR      R0,[R1, #+0]
    707          					ctrl_cxd5600_work.save_info2.write_p = 0;
   \   0000023C   0x2000             MOVS     R0,#+0
   \   0000023E   0x4959             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x24
   \   00000240   0x6008             STR      R0,[R1, #+0]
    708          
    709          					// コマンド待ち状態に戻す
    710          					ctrl_cxd5600_work.status = CTRL_CXD5600_STS_READY;
   \   00000242   0x2000             MOVS     R0,#+0
   \   00000244   0x4907             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   00000246   0x6008             STR      R0,[R1, #+0]
    711          					// ２応答CMD受信終了
    712          					ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_CMD;
   \   00000248   0x4806             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   0000024A   0x6840             LDR      R0,[R0, #+4]
   \   0000024C   0x2102             MOVS     R1,#+2
   \   0000024E   0x4388             BICS     R0,R0,R1
   \   00000250   0x4904             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   00000252   0x6048             STR      R0,[R1, #+4]
    713          					ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_CMD2;
   \   00000254   0x4803             LDR      R0,??ctrl_CXD5600GF_get_char_4
   \   00000256   0x6840             LDR      R0,[R0, #+4]
   \   00000258   0x2104             MOVS     R1,#+4
   \   0000025A   0x4388             BICS     R0,R0,R1
   \   0000025C   0x4901             LDR      R1,??ctrl_CXD5600GF_get_char_4
   \   0000025E   0x6048             STR      R0,[R1, #+4]
   \   00000260   0xE050             B        ??ctrl_CXD5600GF_get_char_16
   \   00000262   0xBF00             Nop      
   \                     ??ctrl_CXD5600GF_get_char_4:
   \   00000264   0x........         DC32     ctrl_cxd5600_work
   \   00000268   0x........         DC32     ctrl_cxd5600_work+0xFE0
    714          				}
    715          			}
    716          
    717          			// NMEA受信中
    718          			else if ( (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_NMEA) != 0 ) {
   \                     ??ctrl_CXD5600GF_get_char_20: (+1)
   \   0000026C   0x....             LDR      R0,??DataTable1_2
   \   0000026E   0x7900             LDRB     R0,[R0, #+4]
   \   00000270   0x07C0             LSLS     R0,R0,#+31
   \   00000272   0xD547             BPL      ??ctrl_CXD5600GF_get_char_16
    719          				ctrl_cxd5600_work.nmea_info.rcv_buff[ctrl_cxd5600_work.nmea_info.write_p] = read_data;
   \   00000274   0x0020             MOVS     R0,R4
   \   00000276   0x....             LDR      R1,??DataTable1_2
   \   00000278   0x4A41             LDR      R2,??ctrl_CXD5600GF_get_char_7
   \   0000027A   0x6812             LDR      R2,[R2, #+0]
   \   0000027C   0x1889             ADDS     R1,R1,R2
   \   0000027E   0x22CC             MOVS     R2,#+204
   \   00000280   0x0052             LSLS     R2,R2,#+1        ;; #+408
   \   00000282   0x5488             STRB     R0,[R1, R2]
    720          				ctrl_cxd5600_work.nmea_info.write_p++;
   \   00000284   0x483E             LDR      R0,??ctrl_CXD5600GF_get_char_7
   \   00000286   0x6800             LDR      R0,[R0, #+0]
   \   00000288   0x1C40             ADDS     R0,R0,#+1
   \   0000028A   0x493D             LDR      R1,??ctrl_CXD5600GF_get_char_7
   \   0000028C   0x6008             STR      R0,[R1, #+0]
    721          
    722          				// バッファFULLでない場合
    723          				if (ctrl_cxd5600_work.nmea_info.write_p < CTRL_CXD5600_NMEA_BUFF_MAX) {
   \   0000028E   0x483C             LDR      R0,??ctrl_CXD5600GF_get_char_7
   \   00000290   0x6800             LDR      R0,[R0, #+0]
   \   00000292   0x2180             MOVS     R1,#+128
   \   00000294   0x0109             LSLS     R1,R1,#+4        ;; #+2048
   \   00000296   0x4288             CMP      R0,R1
   \   00000298   0xD234             BCS      ??ctrl_CXD5600GF_get_char_16
    724          					// 改行コード
    725          					if (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_CRLF) {
   \   0000029A   0x....             LDR      R0,??DataTable1_2
   \   0000029C   0x7900             LDRB     R0,[R0, #+4]
   \   0000029E   0x0700             LSLS     R0,R0,#+28
   \   000002A0   0xD530             BPL      ??ctrl_CXD5600GF_get_char_16
    726          						ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_NMEA;
   \   000002A2   0x....             LDR      R0,??DataTable1_2
   \   000002A4   0x6840             LDR      R0,[R0, #+4]
   \   000002A6   0x2101             MOVS     R1,#+1
   \   000002A8   0x4388             BICS     R0,R0,R1
   \   000002AA   0x....             LDR      R1,??DataTable1_2
   \   000002AC   0x6048             STR      R0,[R1, #+4]
    727          						ctrl_cxd5600_work.ms[ctrl_cxd5600_work.ms_wp] = man_timer_get_1ms_count();
   \   000002AE   0x.... 0x....      BL       man_timer_get_1ms_count
   \   000002B2   0x....             LDR      R1,??DataTable1_2
   \   000002B4   0x....             LDR      R2,??DataTable2
   \   000002B6   0x6812             LDR      R2,[R2, #+0]
   \   000002B8   0x2304             MOVS     R3,#+4
   \   000002BA   0x435A             MULS     R2,R3,R2
   \   000002BC   0x1889             ADDS     R1,R1,R2
   \   000002BE   0x....             LDR      R2,??DataTable2_1  ;; 0xfe4
   \   000002C0   0x5088             STR      R0,[R1, R2]
    728          						ctrl_cxd5600_work.ms_wp ++;
   \   000002C2   0x....             LDR      R0,??DataTable2
   \   000002C4   0x6800             LDR      R0,[R0, #+0]
   \   000002C6   0x1C40             ADDS     R0,R0,#+1
   \   000002C8   0x....             LDR      R1,??DataTable2
   \   000002CA   0x6008             STR      R0,[R1, #+0]
    729          						if (ctrl_cxd5600_work.ms_wp >= 100) {
   \   000002CC   0x....             LDR      R0,??DataTable2
   \   000002CE   0x6800             LDR      R0,[R0, #+0]
   \   000002D0   0x2864             CMP      R0,#+100
   \   000002D2   0xDB02             BLT      ??ctrl_CXD5600GF_get_char_23
    730          							ctrl_cxd5600_work.ms_wp = 0;
   \   000002D4   0x2000             MOVS     R0,#+0
   \   000002D6   0x....             LDR      R1,??DataTable2
   \   000002D8   0x6008             STR      R0,[R1, #+0]
    731          						}
    732          
    733          						// NMEAデータチェック処理
    734          						ctrl_NMEA_data_check(&ctrl_cxd5600_work.nmea_info.rcv_buff[ctrl_cxd5600_work.nmea_info.top_p], ctrl_cxd5600_work.nmea_info.write_p-ctrl_cxd5600_work.nmea_info.top_p);
   \                     ??ctrl_CXD5600GF_get_char_23: (+1)
   \   000002DA   0x4829             LDR      R0,??ctrl_CXD5600GF_get_char_7
   \   000002DC   0x6800             LDR      R0,[R0, #+0]
   \   000002DE   0x4929             LDR      R1,??ctrl_CXD5600GF_get_char_7+0x4
   \   000002E0   0x6809             LDR      R1,[R1, #+0]
   \   000002E2   0x1A41             SUBS     R1,R0,R1
   \   000002E4   0x....             LDR      R0,??DataTable1_2
   \   000002E6   0x4A27             LDR      R2,??ctrl_CXD5600GF_get_char_7+0x4
   \   000002E8   0x6812             LDR      R2,[R2, #+0]
   \   000002EA   0x1880             ADDS     R0,R0,R2
   \   000002EC   0x22CC             MOVS     R2,#+204
   \   000002EE   0x0052             LSLS     R2,R2,#+1        ;; #+408
   \   000002F0   0x1880             ADDS     R0,R0,R2
   \   000002F2   0x.... 0x....      BL       ctrl_NMEA_data_check
    735          						// NMEA受信時間を格納
    736          						// 100ms受信なし時はNMEA確定とする
    737          						ctrl_cxd5600_work.req_nmea.rcv_time = man_timer_get_1ms_count();
   \   000002F6   0x.... 0x....      BL       man_timer_get_1ms_count
   \   000002FA   0x....             LDR      R1,??DataTable1_3
   \   000002FC   0x6008             STR      R0,[R1, #+0]
    738          						ctrl_cxd5600_work.req_nmea.rcv_flg = 1;
   \   000002FE   0x2001             MOVS     R0,#+1
   \   00000300   0x....             LDR      R1,??DataTable2_2
   \   00000302   0x6008             STR      R0,[R1, #+0]
    739          
    740          					}
    741          				}
    742          			}
    743          			
    744          			// コマンド以外の受信データ
    745          			if ( (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_NOTI_CMD) != 0) {
   \                     ??ctrl_CXD5600GF_get_char_16: (+1)
   \   00000304   0x....             LDR      R0,??DataTable1_2
   \   00000306   0x7900             LDRB     R0,[R0, #+4]
   \   00000308   0x06C0             LSLS     R0,R0,#+27
   \   0000030A   0xD533             BPL      ??ctrl_CXD5600GF_get_char_24
    746          
    747          				// コマンド応答中でない場合
    748          				if ( (ctrl_cxd5600_work.recv_flag & (CTRL_CXD5600_RECV_CMD | CTRL_CXD5600_RECV_CMD2)) == 0 ) {
   \   0000030C   0x....             LDR      R0,??DataTable1_2
   \   0000030E   0x7900             LDRB     R0,[R0, #+4]
   \   00000310   0x2106             MOVS     R1,#+6
   \   00000312   0x4001             ANDS     R1,R1,R0
   \   00000314   0x2900             CMP      R1,#+0
   \   00000316   0xD12D             BNE      ??ctrl_CXD5600GF_get_char_24
    749          
    750          					ctrl_cxd5600_work.save_info3.rcv_buff[ctrl_cxd5600_work.save_info3.write_p] = read_data;
   \   00000318   0x....             LDR      R0,??DataTable1_2
   \   0000031A   0x....             LDR      R1,??DataTable2_3
   \   0000031C   0x6809             LDR      R1,[R1, #+0]
   \   0000031E   0x1840             ADDS     R0,R0,R1
   \   00000320   0x218A             MOVS     R1,#+138
   \   00000322   0x0049             LSLS     R1,R1,#+1        ;; #+276
   \   00000324   0x5444             STRB     R4,[R0, R1]
    751          					if (ctrl_cxd5600_work.save_info3.write_p < (CTRL_CXD5600_RECV_BUFF_MAX-1)) {
   \   00000326   0x....             LDR      R0,??DataTable2_3
   \   00000328   0x6800             LDR      R0,[R0, #+0]
   \   0000032A   0x287F             CMP      R0,#+127
   \   0000032C   0xD204             BCS      ??ctrl_CXD5600GF_get_char_25
    752          						ctrl_cxd5600_work.save_info3.write_p++;
   \   0000032E   0x....             LDR      R0,??DataTable2_3
   \   00000330   0x6800             LDR      R0,[R0, #+0]
   \   00000332   0x1C40             ADDS     R0,R0,#+1
   \   00000334   0x....             LDR      R1,??DataTable2_3
   \   00000336   0x6008             STR      R0,[R1, #+0]
    753          					}
    754          					// 改行コード
    755          					if (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_CRLF) {
   \                     ??ctrl_CXD5600GF_get_char_25: (+1)
   \   00000338   0x....             LDR      R0,??DataTable1_2
   \   0000033A   0x7900             LDRB     R0,[R0, #+4]
   \   0000033C   0x0700             LSLS     R0,R0,#+28
   \   0000033E   0xD519             BPL      ??ctrl_CXD5600GF_get_char_24
    756          						// [?]\r\n 5文字以上
    757          						if (ctrl_cxd5600_work.save_info3.write_p >= 5) {
   \   00000340   0x....             LDR      R0,??DataTable2_3
   \   00000342   0x6800             LDR      R0,[R0, #+0]
   \   00000344   0x2805             CMP      R0,#+5
   \   00000346   0xD30C             BCC      ??ctrl_CXD5600GF_get_char_26
    758          							if (ctrl_cxd5600_work.recv_noti.callback3 != NULL) {
   \   00000348   0x....             LDR      R0,??DataTable2_4
   \   0000034A   0x6800             LDR      R0,[R0, #+0]
   \   0000034C   0x2800             CMP      R0,#+0
   \   0000034E   0xD008             BEQ      ??ctrl_CXD5600GF_get_char_26
    759          								ctrl_cxd5600_work.recv_noti.callback3(	&ctrl_cxd5600_work.save_info3.rcv_buff[0],
    760          																		ctrl_cxd5600_work.save_info3.write_p,
    761          																		ctrl_cxd5600_work.recv_noti.id,
    762          																		CTRL_CXD5600_STATUS_OK);
   \   00000350   0x2300             MOVS     R3,#+0
   \   00000352   0x....             LDR      R0,??DataTable2_5
   \   00000354   0x6802             LDR      R2,[R0, #+0]
   \   00000356   0x....             LDR      R0,??DataTable2_3
   \   00000358   0x6801             LDR      R1,[R0, #+0]
   \   0000035A   0x....             LDR      R0,??DataTable2_6
   \   0000035C   0x....             LDR      R4,??DataTable2_4
   \   0000035E   0x6824             LDR      R4,[R4, #+0]
   \   00000360   0x47A0             BLX      R4
    763          							}
    764          						}
    765          						// 保存領域3ポインタクリア
    766          						ctrl_cxd5600_work.save_info3.write_p = 0;
   \                     ??ctrl_CXD5600GF_get_char_26: (+1)
   \   00000362   0x2000             MOVS     R0,#+0
   \   00000364   0x....             LDR      R1,??DataTable2_3
   \   00000366   0x6008             STR      R0,[R1, #+0]
    767          						// 通知CMD受信終了
    768          						ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_NOTI_CMD;
   \   00000368   0x....             LDR      R0,??DataTable1_2
   \   0000036A   0x6840             LDR      R0,[R0, #+4]
   \   0000036C   0x2110             MOVS     R1,#+16
   \   0000036E   0x4388             BICS     R0,R0,R1
   \   00000370   0x....             LDR      R1,??DataTable1_2
   \   00000372   0x6048             STR      R0,[R1, #+4]
    769          					}
    770          				}
    771          			}
    772          
    773          			// CRLFを受信すると一旦終了する。
    774          			if (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_CRLF) {
   \                     ??ctrl_CXD5600GF_get_char_24: (+1)
   \   00000374   0x....             LDR      R0,??DataTable1_2
   \   00000376   0x7900             LDRB     R0,[R0, #+4]
   \   00000378   0x0700             LSLS     R0,R0,#+28
   \   0000037A   0xD400             BMI      .+4
   \   0000037C   0xE643             B        ??ctrl_CXD5600GF_get_char_1
    775          				break;
   \   0000037E   0xE015             B        ??ctrl_CXD5600GF_get_char_2
   \                     ??ctrl_CXD5600GF_get_char_7:
   \   00000380   0x........         DC32     ctrl_cxd5600_work+0x998
   \   00000384   0x........         DC32     ctrl_cxd5600_work+0x99C
   \   00000388   0x........         DC32     ctrl_cxd5600_work+0x8C
   \   0000038C   0x00000283         DC32     0x283
   \   00000390   0x........         DC32     ctrl_cxd5600_work+0xA30
   \   00000394   0x........         DC32     ctrl_cxd5600_work+0xA28
   \   00000398   0x........         DC32     ctrl_cxd5600_work+0xC
   \   0000039C   0x........         DC32     ctrl_cxd5600_work+0xAF4
   \   000003A0   0x........         DC32     ctrl_cxd5600_work+0xAEC
   \   000003A4   0x........         DC32     ctrl_cxd5600_work+0x110
   \   000003A8   0x........         DC32     ctrl_cxd5600_work+0xACC
    776          			}
    777          		}
    778          	
    779          		// 受信データなし
    780          		else {
    781          			break;
    782          		}
    783          	}
    784          
    785          	end_time = man_timer_get_1ms_count();
   \                     ??ctrl_CXD5600GF_get_char_3: (+1)
   \                     ??ctrl_CXD5600GF_get_char_2: (+1)
   \   000003AC   0x.... 0x....      BL       man_timer_get_1ms_count
   \   000003B0   0x0004             MOVS     R4,R0
    786          	// NMEA終了を確認する
    787          	if (ctrl_cxd5600_work.req_nmea.rcv_flg == 1) {
   \   000003B2   0x....             LDR      R0,??DataTable2_2
   \   000003B4   0x6800             LDR      R0,[R0, #+0]
   \   000003B6   0x2801             CMP      R0,#+1
   \   000003B8   0xD137             BNE      ??ctrl_CXD5600GF_get_char_27
    788          		time = man_timer_get_elapsed_time(ctrl_cxd5600_work.req_nmea.rcv_time, end_time);
   \   000003BA   0x0021             MOVS     R1,R4
   \   000003BC   0x....             LDR      R0,??DataTable1_3
   \   000003BE   0x6800             LDR      R0,[R0, #+0]
   \   000003C0   0x.... 0x....      BL       man_timer_get_elapsed_time
    789          		if (time > CTRL_CXD5600_TIMER_NMEA) {
   \   000003C4   0x2865             CMP      R0,#+101
   \   000003C6   0xD330             BCC      ??ctrl_CXD5600GF_get_char_27
    790          			
    791          			// 受信情報を保存
    792          			ctrl_cxd5600_work.nmea_result.imes_flag = ctrl_cxd5600_work.sentence.imes_flag;
   \   000003C8   0x....             LDR      R0,??DataTable2_7
   \   000003CA   0x7800             LDRB     R0,[R0, #+0]
   \   000003CC   0x....             LDR      R1,??DataTable2_8
   \   000003CE   0x7008             STRB     R0,[R1, #+0]
    793          			ctrl_cxd5600_work.nmea_result.gsa_flag = ctrl_cxd5600_work.sentence.gsa_flag;
   \   000003D0   0x....             LDR      R0,??DataTable2_9
   \   000003D2   0x7800             LDRB     R0,[R0, #+0]
   \   000003D4   0x....             LDR      R1,??DataTable2_10
   \   000003D6   0x7008             STRB     R0,[R1, #+0]
    794          			ctrl_cxd5600_work.nmea_result.clock_flag = ctrl_cxd5600_work.sentence.clock_flag;
   \   000003D8   0x....             LDR      R0,??DataTable2_11
   \   000003DA   0x7800             LDRB     R0,[R0, #+0]
   \   000003DC   0x....             LDR      R1,??DataTable2_12
   \   000003DE   0x7008             STRB     R0,[R1, #+0]
    795          			// 内部バッファを初期化
    796          			ctrl_cxd5600_work.sentence.imes_flag = 0;
   \   000003E0   0x2000             MOVS     R0,#+0
   \   000003E2   0x....             LDR      R1,??DataTable2_7
   \   000003E4   0x7008             STRB     R0,[R1, #+0]
    797          			ctrl_cxd5600_work.sentence.gsa_flag = 0;
   \   000003E6   0x2000             MOVS     R0,#+0
   \   000003E8   0x....             LDR      R1,??DataTable2_9
   \   000003EA   0x7008             STRB     R0,[R1, #+0]
    798          			ctrl_cxd5600_work.sentence.clock_flag = 0;;
   \   000003EC   0x2000             MOVS     R0,#+0
   \   000003EE   0x....             LDR      R1,??DataTable2_11
   \   000003F0   0x7008             STRB     R0,[R1, #+0]
    799          			
    800          			// NMEA通知
    801          			if (ctrl_cxd5600_work.req_nmea.callback1 != NULL) {
   \   000003F2   0x....             LDR      R0,??DataTable2_13
   \   000003F4   0x6800             LDR      R0,[R0, #+0]
   \   000003F6   0x2800             CMP      R0,#+0
   \   000003F8   0xD008             BEQ      ??ctrl_CXD5600GF_get_char_28
    802          				ctrl_cxd5600_work.req_nmea.callback1(&ctrl_cxd5600_work.nmea_info.rcv_buff[0], 
    803          													ctrl_cxd5600_work.nmea_info.write_p, 
    804          													ctrl_cxd5600_work.req_nmea.id, 
    805          													CTRL_CXD5600_STATUS_OK);
   \   000003FA   0x2300             MOVS     R3,#+0
   \   000003FC   0x....             LDR      R0,??DataTable2_14
   \   000003FE   0x6802             LDR      R2,[R0, #+0]
   \   00000400   0x....             LDR      R0,??DataTable1_4
   \   00000402   0x6801             LDR      R1,[R0, #+0]
   \   00000404   0x....             LDR      R0,??DataTable2_15
   \   00000406   0x....             LDR      R5,??DataTable2_13
   \   00000408   0x682D             LDR      R5,[R5, #+0]
   \   0000040A   0x47A8             BLX      R5
    806          			}
    807          			// NMEA領域を初期化する
    808          			memset(&ctrl_cxd5600_work.nmea_info, 0, sizeof(ctrl_cxd5600_nmea_info_t));
   \                     ??ctrl_CXD5600GF_get_char_28: (+1)
   \   0000040C   0x....             LDR      R1,??DataTable2_16  ;; 0x808
   \   0000040E   0x2200             MOVS     R2,#+0
   \   00000410   0x....             LDR      R5,??DataTable2_15
   \   00000412   0x0028             MOVS     R0,R5
   \   00000414   0x.... 0x....      BL       __aeabi_memset
    809          			ctrl_cxd5600_work.req_nmea.rcv_flg = 0;
   \   00000418   0x2000             MOVS     R0,#+0
   \   0000041A   0x....             LDR      R1,??DataTable2_2
   \   0000041C   0x6008             STR      R0,[R1, #+0]
    810          			ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_NMEA;
   \   0000041E   0x....             LDR      R0,??DataTable1_2
   \   00000420   0x6840             LDR      R0,[R0, #+4]
   \   00000422   0x2101             MOVS     R1,#+1
   \   00000424   0x4388             BICS     R0,R0,R1
   \   00000426   0x....             LDR      R1,??DataTable1_2
   \   00000428   0x6048             STR      R0,[R1, #+4]
    811          		}
    812          	}
    813          	
    814          	// タイムアウトを確認する
    815          	switch (ctrl_cxd5600_work.status) {
   \                     ??ctrl_CXD5600GF_get_char_27: (+1)
   \   0000042A   0x....             LDR      R0,??DataTable1_2
   \   0000042C   0x6800             LDR      R0,[R0, #+0]
   \   0000042E   0x2800             CMP      R0,#+0
   \   00000430   0xD005             BEQ      ??ctrl_CXD5600GF_get_char_29
   \   00000432   0x2802             CMP      R0,#+2
   \   00000434   0xD033             BEQ      ??ctrl_CXD5600GF_get_char_30
   \   00000436   0xD303             BCC      ??ctrl_CXD5600GF_get_char_31
   \   00000438   0x2803             CMP      R0,#+3
   \   0000043A   0xD067             BEQ      ??ctrl_CXD5600GF_get_char_32
   \   0000043C   0xE095             B        ??ctrl_CXD5600GF_get_char_33
    816          	case CTRL_CXD5600_STS_READY:
    817          		break;
   \                     ??ctrl_CXD5600GF_get_char_29: (+1)
   \   0000043E   0xE094             B        ??ctrl_CXD5600GF_get_char_34
    818          	case CTRL_CXD5600_STS_RESP:
    819          		time = man_timer_get_elapsed_time(ctrl_cxd5600_work.request1.rcv_time, end_time);
   \                     ??ctrl_CXD5600GF_get_char_31: (+1)
   \   00000440   0x0021             MOVS     R1,R4
   \   00000442   0x....             LDR      R0,??ctrl_CXD5600GF_main_0
   \   00000444   0x6800             LDR      R0,[R0, #+0]
   \   00000446   0x.... 0x....      BL       man_timer_get_elapsed_time
    820          		if (time > ctrl_cxd5600_work.request1.timeout) {
   \   0000044A   0x....             LDR      R1,??DataTable2_17
   \   0000044C   0x6809             LDR      R1,[R1, #+0]
   \   0000044E   0x4281             CMP      R1,R0
   \   00000450   0xD224             BCS      ??ctrl_CXD5600GF_get_char_35
    821          			man_error_setting(MAN_ERROR_CTRL_CXD, ctrl_cxd5600_work.recv_write_p, ctrl_cxd5600_work.request1.id);
   \   00000452   0x....             LDR      R3,??DataTable2_18  ;; 0x335
   \   00000454   0x....             LDR      R0,??ctrl_CXD5600GF_main_0+0x4
   \   00000456   0x6802             LDR      R2,[R0, #+0]
   \   00000458   0x....             LDR      R0,??DataTable2_19
   \   0000045A   0x6801             LDR      R1,[R0, #+0]
   \   0000045C   0x200C             MOVS     R0,#+12
   \   0000045E   0x.... 0x....      BL       man_error_set
    822          			// 登録先にcallback1通知
    823          			if (ctrl_cxd5600_work.request1.callback1 != NULL) {
   \   00000462   0x....             LDR      R0,??ctrl_CXD5600GF_main_0+0x8
   \   00000464   0x6800             LDR      R0,[R0, #+0]
   \   00000466   0x2800             CMP      R0,#+0
   \   00000468   0xD018             BEQ      ??ctrl_CXD5600GF_get_char_35
    824          				ctrl_cxd5600_work.request1.callback1(&ctrl_cxd5600_work.save_info1.rcv_buff[0], 
    825          													ctrl_cxd5600_work.save_info1.write_p,
    826          													ctrl_cxd5600_work.request1.id,
    827          													CTRL_CXD5600_STATUS_TIMEOUT);
   \   0000046A   0x2300             MOVS     R3,#+0
   \   0000046C   0x43DB             MVNS     R3,R3            ;; #-1
   \   0000046E   0x....             LDR      R0,??ctrl_CXD5600GF_main_0+0x4
   \   00000470   0x6802             LDR      R2,[R0, #+0]
   \   00000472   0x....             LDR      R0,??ctrl_CXD5600GF_main_0+0xC
   \   00000474   0x6801             LDR      R1,[R0, #+0]
   \   00000476   0x....             LDR      R0,??ctrl_CXD5600GF_main_0+0x10
   \   00000478   0x....             LDR      R4,??ctrl_CXD5600GF_main_0+0x8
   \   0000047A   0x6824             LDR      R4,[R4, #+0]
   \   0000047C   0x47A0             BLX      R4
    828          				ctrl_cxd5600_work.request1.callback1 = NULL;
   \   0000047E   0x2000             MOVS     R0,#+0
   \   00000480   0x....             LDR      R1,??ctrl_CXD5600GF_main_0+0x8
   \   00000482   0x6008             STR      R0,[R1, #+0]
    829          
    830          				// 保存領域1ポインタクリア
    831          				ctrl_cxd5600_work.save_info1.write_p = 0;
   \   00000484   0x2000             MOVS     R0,#+0
   \   00000486   0x....             LDR      R1,??ctrl_CXD5600GF_main_0+0xC
   \   00000488   0x6008             STR      R0,[R1, #+0]
    832          
    833          				// コマンド待ち状態に戻す
    834          				ctrl_cxd5600_work.status = CTRL_CXD5600_STS_READY;
   \   0000048A   0x2000             MOVS     R0,#+0
   \   0000048C   0x....             LDR      R1,??DataTable1_2
   \   0000048E   0x6008             STR      R0,[R1, #+0]
    835          				// CMD受信終了
    836          				ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_CMD;
   \   00000490   0x....             LDR      R0,??DataTable1_2
   \   00000492   0x6840             LDR      R0,[R0, #+4]
   \   00000494   0x2102             MOVS     R1,#+2
   \   00000496   0x4388             BICS     R0,R0,R1
   \   00000498   0x....             LDR      R1,??DataTable1_2
   \   0000049A   0x6048             STR      R0,[R1, #+4]
    837          			}
    838          		}
    839          		break;
   \                     ??ctrl_CXD5600GF_get_char_35: (+1)
   \   0000049C   0xE065             B        ??ctrl_CXD5600GF_get_char_34
    840          	case CTRL_CXD5600_STS_WRESP:
    841          		time = man_timer_get_elapsed_time(ctrl_cxd5600_work.request2.rcv_time, end_time);
   \                     ??ctrl_CXD5600GF_get_char_30: (+1)
   \   0000049E   0x0021             MOVS     R1,R4
   \   000004A0   0x....             LDR      R0,??ctrl_CXD5600GF_main_1
   \   000004A2   0x6800             LDR      R0,[R0, #+0]
   \   000004A4   0x.... 0x....      BL       man_timer_get_elapsed_time
    842          		if (time > ctrl_cxd5600_work.request2.timeout) {
   \   000004A8   0x....             LDR      R1,??DataTable2_20
   \   000004AA   0x6809             LDR      R1,[R1, #+0]
   \   000004AC   0x4281             CMP      R1,R0
   \   000004AE   0xD22C             BCS      ??ctrl_CXD5600GF_get_char_36
    843          
    844          			man_error_setting(MAN_ERROR_CTRL_CXD, ctrl_cxd5600_work.recv_write_p, 0);
   \   000004B0   0x23D3             MOVS     R3,#+211
   \   000004B2   0x009B             LSLS     R3,R3,#+2        ;; #+844
   \   000004B4   0x2200             MOVS     R2,#+0
   \   000004B6   0x....             LDR      R0,??DataTable2_19
   \   000004B8   0x6801             LDR      R1,[R0, #+0]
   \   000004BA   0x200C             MOVS     R0,#+12
   \   000004BC   0x.... 0x....      BL       man_error_set
    845          			// 登録先にcallback2通知
    846          			if (ctrl_cxd5600_work.request2.callback2 != NULL) {
   \   000004C0   0x....             LDR      R0,??ctrl_CXD5600GF_main_1+0x4
   \   000004C2   0x6800             LDR      R0,[R0, #+0]
   \   000004C4   0x2800             CMP      R0,#+0
   \   000004C6   0xD020             BEQ      ??ctrl_CXD5600GF_get_char_36
    847          				ctrl_cxd5600_work.request2.callback2(  &ctrl_cxd5600_work.save_info1.rcv_buff[0],
    848          														ctrl_cxd5600_work.save_info1.write_p,
    849          														&ctrl_cxd5600_work.save_info2.rcv_buff[0],
    850          														ctrl_cxd5600_work.save_info2.write_p,
    851          														ctrl_cxd5600_work.request2.id,
    852          														CTRL_CXD5600_STATUS_TIMEOUT);
   \   000004C8   0x2000             MOVS     R0,#+0
   \   000004CA   0x43C0             MVNS     R0,R0            ;; #-1
   \   000004CC   0x9001             STR      R0,[SP, #+4]
   \   000004CE   0x....             LDR      R0,??DataTable1
   \   000004D0   0x6800             LDR      R0,[R0, #+0]
   \   000004D2   0x9000             STR      R0,[SP, #+0]
   \   000004D4   0x....             LDR      R0,??ctrl_CXD5600GF_main_1+0x8
   \   000004D6   0x6803             LDR      R3,[R0, #+0]
   \   000004D8   0x....             LDR      R2,??DataTable1_1
   \   000004DA   0x....             LDR      R0,??ctrl_CXD5600GF_main_0+0xC
   \   000004DC   0x6801             LDR      R1,[R0, #+0]
   \   000004DE   0x....             LDR      R0,??ctrl_CXD5600GF_main_0+0x10
   \   000004E0   0x....             LDR      R4,??ctrl_CXD5600GF_main_1+0x4
   \   000004E2   0x6824             LDR      R4,[R4, #+0]
   \   000004E4   0x47A0             BLX      R4
    853          				ctrl_cxd5600_work.request2.callback2 = NULL;
   \   000004E6   0x2000             MOVS     R0,#+0
   \   000004E8   0x....             LDR      R1,??ctrl_CXD5600GF_main_1+0x4
   \   000004EA   0x6008             STR      R0,[R1, #+0]
    854          
    855          				// 保存領域1, 2ポインタクリア
    856          				ctrl_cxd5600_work.save_info1.write_p = 0;
   \   000004EC   0x2000             MOVS     R0,#+0
   \   000004EE   0x....             LDR      R1,??ctrl_CXD5600GF_main_0+0xC
   \   000004F0   0x6008             STR      R0,[R1, #+0]
    857          				ctrl_cxd5600_work.save_info2.write_p = 0;
   \   000004F2   0x2000             MOVS     R0,#+0
   \   000004F4   0x....             LDR      R1,??ctrl_CXD5600GF_main_1+0x8
   \   000004F6   0x6008             STR      R0,[R1, #+0]
    858          
    859          				// コマンド待ち状態に戻す
    860          				ctrl_cxd5600_work.status = CTRL_CXD5600_STS_READY;
   \   000004F8   0x2000             MOVS     R0,#+0
   \   000004FA   0x....             LDR      R1,??DataTable1_2
   \   000004FC   0x6008             STR      R0,[R1, #+0]
    861          				// ２応答CMD受信終了
    862          				ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_CMD2;
   \   000004FE   0x....             LDR      R0,??DataTable1_2
   \   00000500   0x6840             LDR      R0,[R0, #+4]
   \   00000502   0x2104             MOVS     R1,#+4
   \   00000504   0x4388             BICS     R0,R0,R1
   \   00000506   0x....             LDR      R1,??DataTable1_2
   \   00000508   0x6048             STR      R0,[R1, #+4]
    863          			}
    864          		}
    865          		break;
   \                     ??ctrl_CXD5600GF_get_char_36: (+1)
   \   0000050A   0xE02E             B        ??ctrl_CXD5600GF_get_char_34
    866          	case CTRL_CXD5600_STS_DRESP:
    867          		time = man_timer_get_elapsed_time(ctrl_cxd5600_work.request3.rcv_time, end_time);
   \                     ??ctrl_CXD5600GF_get_char_32: (+1)
   \   0000050C   0x0021             MOVS     R1,R4
   \   0000050E   0x....             LDR      R0,??DataTable2_21
   \   00000510   0x6800             LDR      R0,[R0, #+0]
   \   00000512   0x.... 0x....      BL       man_timer_get_elapsed_time
    868          		if (time > ctrl_cxd5600_work.request3.timeout) {
   \   00000516   0x....             LDR      R1,??DataTable2_22
   \   00000518   0x6809             LDR      R1,[R1, #+0]
   \   0000051A   0x4281             CMP      R1,R0
   \   0000051C   0xD224             BCS      ??ctrl_CXD5600GF_get_char_37
    869          			man_error_setting(MAN_ERROR_CTRL_CXD, ctrl_cxd5600_work.recv_write_p, ctrl_cxd5600_work.request3.id);
   \   0000051E   0x....             LDR      R3,??DataTable2_23  ;; 0x365
   \   00000520   0x....             LDR      R0,??DataTable2_24
   \   00000522   0x6802             LDR      R2,[R0, #+0]
   \   00000524   0x....             LDR      R0,??DataTable2_19
   \   00000526   0x6801             LDR      R1,[R0, #+0]
   \   00000528   0x200C             MOVS     R0,#+12
   \   0000052A   0x.... 0x....      BL       man_error_set
    870          			// 登録先にcallback1通知
    871          			if (ctrl_cxd5600_work.request3.callback1 != NULL) {
   \   0000052E   0x....             LDR      R0,??DataTable3
   \   00000530   0x6800             LDR      R0,[R0, #+0]
   \   00000532   0x2800             CMP      R0,#+0
   \   00000534   0xD018             BEQ      ??ctrl_CXD5600GF_get_char_37
    872          				ctrl_cxd5600_work.request3.callback1(&ctrl_cxd5600_work.save_info1.rcv_buff[0], 
    873          													ctrl_cxd5600_work.save_info1.write_p,
    874          													ctrl_cxd5600_work.request3.id,
    875          													CTRL_CXD5600_STATUS_TIMEOUT);
   \   00000536   0x2300             MOVS     R3,#+0
   \   00000538   0x43DB             MVNS     R3,R3            ;; #-1
   \   0000053A   0x....             LDR      R0,??DataTable2_24
   \   0000053C   0x6802             LDR      R2,[R0, #+0]
   \   0000053E   0x....             LDR      R0,??ctrl_CXD5600GF_main_0+0xC
   \   00000540   0x6801             LDR      R1,[R0, #+0]
   \   00000542   0x....             LDR      R0,??ctrl_CXD5600GF_main_0+0x10
   \   00000544   0x....             LDR      R4,??DataTable3
   \   00000546   0x6824             LDR      R4,[R4, #+0]
   \   00000548   0x47A0             BLX      R4
    876          				ctrl_cxd5600_work.request3.callback1 = NULL;
   \   0000054A   0x2000             MOVS     R0,#+0
   \   0000054C   0x....             LDR      R1,??DataTable3
   \   0000054E   0x6008             STR      R0,[R1, #+0]
    877          
    878          				// 保存領域1ポインタクリア
    879          				ctrl_cxd5600_work.save_info1.write_p = 0;
   \   00000550   0x2000             MOVS     R0,#+0
   \   00000552   0x....             LDR      R1,??ctrl_CXD5600GF_main_0+0xC
   \   00000554   0x6008             STR      R0,[R1, #+0]
    880          
    881          				// コマンド待ち状態に戻す
    882          				ctrl_cxd5600_work.status = CTRL_CXD5600_STS_READY;
   \   00000556   0x2000             MOVS     R0,#+0
   \   00000558   0x....             LDR      R1,??DataTable1_2
   \   0000055A   0x6008             STR      R0,[R1, #+0]
    883          				// CMD受信終了
    884          				ctrl_cxd5600_work.recv_flag &= ~CTRL_CXD5600_RECV_CMD;
   \   0000055C   0x....             LDR      R0,??DataTable1_2
   \   0000055E   0x6840             LDR      R0,[R0, #+4]
   \   00000560   0x2102             MOVS     R1,#+2
   \   00000562   0x4388             BICS     R0,R0,R1
   \   00000564   0x....             LDR      R1,??DataTable1_2
   \   00000566   0x6048             STR      R0,[R1, #+4]
    885          			}
    886          		}
    887          		break;
   \                     ??ctrl_CXD5600GF_get_char_37: (+1)
   \   00000568   0xE7FF             B        ??ctrl_CXD5600GF_get_char_34
    888          	default:
    889          		break;
    890          	}
    891          
    892          }
   \                     ??ctrl_CXD5600GF_get_char_33: (+1)
   \                     ??ctrl_CXD5600GF_get_char_34: (+1)
   \   0000056A   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    893          
    894          
    895          
    896          /********************************************************************/
    897          /*	extern関数                                                      */
    898          /********************************************************************/
    899          
    900          
    901          /********************************************************************/
    902          /*!
    903           * \name	ctrl_CXD5600GF_init
    904           * \brief	CXD5600GF初期化処理
    905           * \param	なし
    906           * \return  なし
    907           * \note	起動時に、呼ばれること
    908           */
    909          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    910          void ctrl_CXD5600GF_init(void)
    911          {
   \                     ctrl_CXD5600GF_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    912            // チップの電源ON
    913            ctrl_CXD5600GF_req_PowerOff();
   \   00000002   0x.... 0x....      BL       ctrl_CXD5600GF_req_PowerOff
    914            seSysSleepMS(200);
   \   00000006   0x20C8             MOVS     R0,#+200
   \   00000008   0x.... 0x....      BL       seSysSleepMS
    915            ctrl_CXD5600GF_req_PowerOn();
   \   0000000C   0x.... 0x....      BL       ctrl_CXD5600GF_req_PowerOn
    916          
    917            // UART2 CH1を初期化する
    918            drv_uart2_1_init();
   \   00000010   0x.... 0x....      BL       drv_uart2_1_init
    919          	
    920            // 内部変数を初期化する
    921            memset(&ctrl_cxd5600_work, 0, sizeof(ctrl_cxd5600_work_t));
   \   00000014   0x....             LDR      R1,??DataTable2_25  ;; 0x1178
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x....             LDR      R4,??DataTable5
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0x.... 0x....      BL       __aeabi_memset
    922          }
   \   00000020   0xBD10             POP      {R4,PC}          ;; return
    923          
    924          /********************************************************************/
    925          /*!
    926           * \name	ctrl_CXD5600GF_main
    927           * \brief	CXD5600GFからの応答を監視する
    928           * \param	なし
    929           * \return  なし
    930           * \note	毎回、呼ばれること
    931           */
    932          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
    933          void ctrl_CXD5600GF_main(void)
    934          {
   \                     ctrl_CXD5600GF_main: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
    935          	int32_t	ret;
    936          	int32_t	length;
    937          	
    938          	// 上位からの要求処理
    939          	// request1
    940          	if (ctrl_cxd5600_work.status == CTRL_CXD5600_STS_READY) {
   \   00000002   0x....             LDR      R0,??DataTable5
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD000             BEQ      .+4
   \   0000000A   0xE137             B        ??ctrl_CXD5600GF_main_2
    941          		if (ctrl_cxd5600_work.request1.req_flag == 1) {
   \   0000000C   0x....             LDR      R0,??DataTable5_1
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD12C             BNE      ??ctrl_CXD5600GF_main_3
    942          			ctrl_cxd5600_work.request1.req_flag = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR      R1,??DataTable5_1
   \   00000018   0x6008             STR      R0,[R1, #+0]
    943          			ret = drv_uart2_1_send(&ctrl_cxd5600_work.request1.cmd[0], ctrl_cxd5600_work.request1.length);
   \   0000001A   0x....             LDR      R0,??DataTable5_2
   \   0000001C   0x7801             LDRB     R1,[R0, #+0]
   \   0000001E   0x....             LDR      R0,??DataTable5_3
   \   00000020   0x.... 0x....      BL       drv_uart2_1_send
    944          			if (ret != -1) {
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x43C9             MVNS     R1,R1            ;; #-1
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xD007             BEQ      ??ctrl_CXD5600GF_main_4
    945          				ctrl_cxd5600_work.status = CTRL_CXD5600_STS_RESP;
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x....             LDR      R1,??DataTable5
   \   00000030   0x6008             STR      R0,[R1, #+0]
    946          				ctrl_cxd5600_work.request1.rcv_time = man_timer_get_1ms_count();
   \   00000032   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00000036   0x494D             LDR      R1,??ctrl_CXD5600GF_main_0
   \   00000038   0x6008             STR      R0,[R1, #+0]
   \   0000003A   0xE018             B        ??ctrl_CXD5600GF_main_3
    947          			}
    948          			else {
    949          				// 登録先にcallback1通知
    950          				if (ctrl_cxd5600_work.request1.callback1 != NULL) {
   \                     ??ctrl_CXD5600GF_main_4: (+1)
   \   0000003C   0x484D             LDR      R0,??ctrl_CXD5600GF_main_0+0x8
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD014             BEQ      ??ctrl_CXD5600GF_main_3
    951          					ctrl_cxd5600_work.request1.callback1(&ctrl_cxd5600_work.save_info1.rcv_buff[0], 
    952          														ctrl_cxd5600_work.save_info1.write_p,
    953          														ctrl_cxd5600_work.request1.id,
    954          														CTRL_CXD5600_STATUS_ERROR);
   \   00000044   0x2301             MOVS     R3,#+1
   \   00000046   0x43DB             MVNS     R3,R3            ;; #-2
   \   00000048   0x4849             LDR      R0,??ctrl_CXD5600GF_main_0+0x4
   \   0000004A   0x6802             LDR      R2,[R0, #+0]
   \   0000004C   0x484A             LDR      R0,??ctrl_CXD5600GF_main_0+0xC
   \   0000004E   0x6801             LDR      R1,[R0, #+0]
   \   00000050   0x484A             LDR      R0,??ctrl_CXD5600GF_main_0+0x10
   \   00000052   0x4C48             LDR      R4,??ctrl_CXD5600GF_main_0+0x8
   \   00000054   0x6824             LDR      R4,[R4, #+0]
   \   00000056   0x47A0             BLX      R4
    955          					ctrl_cxd5600_work.request1.callback1 = NULL;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x4946             LDR      R1,??ctrl_CXD5600GF_main_0+0x8
   \   0000005C   0x6008             STR      R0,[R1, #+0]
    956          					man_error_setting(MAN_ERROR_CTRL_CXD, ctrl_cxd5600_work.recv_write_p, 0);
   \   0000005E   0x23EF             MOVS     R3,#+239
   \   00000060   0x009B             LSLS     R3,R3,#+2        ;; #+956
   \   00000062   0x2200             MOVS     R2,#+0
   \   00000064   0x....             LDR      R0,??DataTable5_4
   \   00000066   0x6801             LDR      R1,[R0, #+0]
   \   00000068   0x200C             MOVS     R0,#+12
   \   0000006A   0x.... 0x....      BL       man_error_set
    957          				}
    958          			}
    959          		}
    960          
    961          		// request2
    962          		if (ctrl_cxd5600_work.request2.req_flag == 1) {
   \                     ??ctrl_CXD5600GF_main_3: (+1)
   \   0000006E   0x....             LDR      R0,??DataTable4
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x2801             CMP      R0,#+1
   \   00000074   0xD130             BNE      ??ctrl_CXD5600GF_main_5
    963          			ctrl_cxd5600_work.request2.req_flag = 0;
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x....             LDR      R1,??DataTable4
   \   0000007A   0x6008             STR      R0,[R1, #+0]
    964          			ret = drv_uart2_1_send(&ctrl_cxd5600_work.request2.cmd[0], ctrl_cxd5600_work.request2.length);
   \   0000007C   0x....             LDR      R0,??DataTable4_1
   \   0000007E   0x7801             LDRB     R1,[R0, #+0]
   \   00000080   0x....             LDR      R0,??DataTable4_2
   \   00000082   0x.... 0x....      BL       drv_uart2_1_send
    965          			if (ret != -1) {
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x43C9             MVNS     R1,R1            ;; #-1
   \   0000008A   0x4288             CMP      R0,R1
   \   0000008C   0xD007             BEQ      ??ctrl_CXD5600GF_main_6
    966          				ctrl_cxd5600_work.status = CTRL_CXD5600_STS_WRESP;
   \   0000008E   0x2002             MOVS     R0,#+2
   \   00000090   0x....             LDR      R1,??DataTable5
   \   00000092   0x6008             STR      R0,[R1, #+0]
    967          				ctrl_cxd5600_work.request2.rcv_time = man_timer_get_1ms_count();
   \   00000094   0x.... 0x....      BL       man_timer_get_1ms_count
   \   00000098   0x4952             LDR      R1,??ctrl_CXD5600GF_main_1
   \   0000009A   0x6008             STR      R0,[R1, #+0]
   \   0000009C   0xE01C             B        ??ctrl_CXD5600GF_main_5
    968          			}
    969          			else {
    970          				// 登録先にcallback2通知
    971          				if (ctrl_cxd5600_work.request2.callback2 != NULL) {
   \                     ??ctrl_CXD5600GF_main_6: (+1)
   \   0000009E   0x4852             LDR      R0,??ctrl_CXD5600GF_main_1+0x4
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x2800             CMP      R0,#+0
   \   000000A4   0xD018             BEQ      ??ctrl_CXD5600GF_main_5
    972          					ctrl_cxd5600_work.request2.callback2(  &ctrl_cxd5600_work.save_info1.rcv_buff[0],
    973          															ctrl_cxd5600_work.save_info1.write_p,
    974          															&ctrl_cxd5600_work.save_info2.rcv_buff[0],
    975          															ctrl_cxd5600_work.save_info2.write_p,
    976          															ctrl_cxd5600_work.request2.id,
    977          															CTRL_CXD5600_STATUS_ERROR);
   \   000000A6   0x2001             MOVS     R0,#+1
   \   000000A8   0x43C0             MVNS     R0,R0            ;; #-2
   \   000000AA   0x9001             STR      R0,[SP, #+4]
   \   000000AC   0x....             LDR      R0,??DataTable8
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x9000             STR      R0,[SP, #+0]
   \   000000B2   0x484E             LDR      R0,??ctrl_CXD5600GF_main_1+0x8
   \   000000B4   0x6803             LDR      R3,[R0, #+0]
   \   000000B6   0x....             LDR      R2,??DataTable8_1
   \   000000B8   0x482F             LDR      R0,??ctrl_CXD5600GF_main_0+0xC
   \   000000BA   0x6801             LDR      R1,[R0, #+0]
   \   000000BC   0x482F             LDR      R0,??ctrl_CXD5600GF_main_0+0x10
   \   000000BE   0x4C4A             LDR      R4,??ctrl_CXD5600GF_main_1+0x4
   \   000000C0   0x6824             LDR      R4,[R4, #+0]
   \   000000C2   0x47A0             BLX      R4
    978          					ctrl_cxd5600_work.request2.callback2 = NULL;
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x4948             LDR      R1,??ctrl_CXD5600GF_main_1+0x4
   \   000000C8   0x6008             STR      R0,[R1, #+0]
    979          					man_error_setting(MAN_ERROR_CTRL_CXD, ctrl_cxd5600_work.recv_write_p, 0);
   \   000000CA   0x....             LDR      R3,??DataTable5_5  ;; 0x3d3
   \   000000CC   0x2200             MOVS     R2,#+0
   \   000000CE   0x....             LDR      R0,??DataTable5_4
   \   000000D0   0x6801             LDR      R1,[R0, #+0]
   \   000000D2   0x200C             MOVS     R0,#+12
   \   000000D4   0x.... 0x....      BL       man_error_set
    980          				}
    981          			}
    982          		}
    983          
    984          		// request3
    985          		if (ctrl_cxd5600_work.request3.req_flag == 1) {
   \                     ??ctrl_CXD5600GF_main_5: (+1)
   \   000000D8   0x....             LDR      R0,??DataTable5_6
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0x2801             CMP      R0,#+1
   \   000000DE   0xD108             BNE      ??ctrl_CXD5600GF_main_7
    986          			ctrl_cxd5600_work.request3.req_flag = 0;
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x....             LDR      R1,??DataTable5_6
   \   000000E4   0x6008             STR      R0,[R1, #+0]
    987          
    988          			// 分割送信開始
    989          			ctrl_cxd5600_work.request3.snd_flag = 1;
   \   000000E6   0x2001             MOVS     R0,#+1
   \   000000E8   0x....             LDR      R1,??DataTable6
   \   000000EA   0x6008             STR      R0,[R1, #+0]
    990          			ctrl_cxd5600_work.request3.snd_cnt = 0;
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x....             LDR      R1,??DataTable6_1
   \   000000F0   0x6008             STR      R0,[R1, #+0]
    991          		}
    992          		
    993          		// CTRL_CXD5600_SND_DATA_MAX毎に分割して送信する
    994          		if (ctrl_cxd5600_work.request3.snd_flag == 1) {
   \                     ??ctrl_CXD5600GF_main_7: (+1)
   \   000000F2   0x....             LDR      R0,??DataTable6
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0x2801             CMP      R0,#+1
   \   000000F8   0xD157             BNE      ??ctrl_CXD5600GF_main_8
    995          			if ( (ctrl_cxd5600_work.request3.snd_cnt + CTRL_CXD5600_SND_DATA_MAX) <= ctrl_cxd5600_work.request3.length ) {
   \   000000FA   0x....             LDR      R0,??DataTable6_2
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x....             LDR      R1,??DataTable6_1
   \   00000100   0x6809             LDR      R1,[R1, #+0]
   \   00000102   0x2280             MOVS     R2,#+128
   \   00000104   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   00000106   0x1889             ADDS     R1,R1,R2
   \   00000108   0x4288             CMP      R0,R1
   \   0000010A   0xD302             BCC      ??ctrl_CXD5600GF_main_9
    996          				length = CTRL_CXD5600_SND_DATA_MAX;
   \   0000010C   0x2480             MOVS     R4,#+128
   \   0000010E   0x0064             LSLS     R4,R4,#+1        ;; #+256
   \   00000110   0xE004             B        ??ctrl_CXD5600GF_main_10
    997          			}
    998          			else {
    999          				length = ctrl_cxd5600_work.request3.length - ctrl_cxd5600_work.request3.snd_cnt;
   \                     ??ctrl_CXD5600GF_main_9: (+1)
   \   00000112   0x....             LDR      R0,??DataTable6_2
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0x....             LDR      R1,??DataTable6_1
   \   00000118   0x6809             LDR      R1,[R1, #+0]
   \   0000011A   0x1A44             SUBS     R4,R0,R1
   1000          			}
   1001          
   1002          			ret = drv_uart2_1_send(&ctrl_cxd5600_work.request3.data[ctrl_cxd5600_work.request3.snd_cnt], length);
   \                     ??ctrl_CXD5600GF_main_10: (+1)
   \   0000011C   0x0021             MOVS     R1,R4
   \   0000011E   0x....             LDR      R0,??DataTable6_3
   \   00000120   0x6800             LDR      R0,[R0, #+0]
   \   00000122   0x....             LDR      R2,??DataTable6_1
   \   00000124   0x6812             LDR      R2,[R2, #+0]
   \   00000126   0x1880             ADDS     R0,R0,R2
   \   00000128   0x.... 0x....      BL       drv_uart2_1_send
   1003          			// 送信失敗時は中止する
   1004          			if (ret < 0) {
   \   0000012C   0x2800             CMP      R0,#+0
   \   0000012E   0xD527             BPL      ??ctrl_CXD5600GF_main_11
   1005          				// 登録先にcallback1通知
   1006          				if (ctrl_cxd5600_work.request3.callback1 != NULL) {
   \   00000130   0x....             LDR      R0,??DataTable3
   \   00000132   0x6800             LDR      R0,[R0, #+0]
   \   00000134   0x2800             CMP      R0,#+0
   \   00000136   0xD038             BEQ      ??ctrl_CXD5600GF_main_8
   1007          					ctrl_cxd5600_work.request3.callback1(&ctrl_cxd5600_work.save_info1.rcv_buff[0], 
   1008          														ctrl_cxd5600_work.save_info1.write_p,
   1009          														ctrl_cxd5600_work.request1.id,
   1010          														CTRL_CXD5600_STATUS_ERROR);
   \   00000138   0x2301             MOVS     R3,#+1
   \   0000013A   0x43DB             MVNS     R3,R3            ;; #-2
   \   0000013C   0x480C             LDR      R0,??ctrl_CXD5600GF_main_0+0x4
   \   0000013E   0x6802             LDR      R2,[R0, #+0]
   \   00000140   0x480D             LDR      R0,??ctrl_CXD5600GF_main_0+0xC
   \   00000142   0x6801             LDR      R1,[R0, #+0]
   \   00000144   0x480D             LDR      R0,??ctrl_CXD5600GF_main_0+0x10
   \   00000146   0x....             LDR      R4,??DataTable3
   \   00000148   0x6824             LDR      R4,[R4, #+0]
   \   0000014A   0x47A0             BLX      R4
   1011          					ctrl_cxd5600_work.request3.callback1 = NULL;
   \   0000014C   0x2000             MOVS     R0,#+0
   \   0000014E   0x....             LDR      R1,??DataTable3
   \   00000150   0x6008             STR      R0,[R1, #+0]
   1012          					man_error_setting(MAN_ERROR_CTRL_CXD, ctrl_cxd5600_work.recv_write_p, 0);
   \   00000152   0x23FD             MOVS     R3,#+253
   \   00000154   0x009B             LSLS     R3,R3,#+2        ;; #+1012
   \   00000156   0x2200             MOVS     R2,#+0
   \   00000158   0x....             LDR      R0,??DataTable5_4
   \   0000015A   0x6801             LDR      R1,[R0, #+0]
   \   0000015C   0x200C             MOVS     R0,#+12
   \   0000015E   0x.... 0x....      BL       man_error_set
   1013          					ctrl_cxd5600_work.request3.snd_flag = 0;
   \   00000162   0x2000             MOVS     R0,#+0
   \   00000164   0x....             LDR      R1,??DataTable6
   \   00000166   0x6008             STR      R0,[R1, #+0]
   \   00000168   0xE01F             B        ??ctrl_CXD5600GF_main_8
   \   0000016A   0xBF00             Nop      
   \                     ??ctrl_CXD5600GF_main_0:
   \   0000016C   0x........         DC32     ctrl_cxd5600_work+0xA34
   \   00000170   0x........         DC32     ctrl_cxd5600_work+0xA28
   \   00000174   0x........         DC32     ctrl_cxd5600_work+0xA30
   \   00000178   0x........         DC32     ctrl_cxd5600_work+0x8C
   \   0000017C   0x........         DC32     ctrl_cxd5600_work+0xC
   1014          				}
   1015          			}
   1016          			// 送信成功時は次の準備を行う
   1017          			else {
   1018          				ctrl_cxd5600_work.request3.snd_cnt += length;
   \                     ??ctrl_CXD5600GF_main_11: (+1)
   \   00000180   0x....             LDR      R0,??DataTable6_1
   \   00000182   0x6800             LDR      R0,[R0, #+0]
   \   00000184   0x1900             ADDS     R0,R0,R4
   \   00000186   0x....             LDR      R1,??DataTable6_1
   \   00000188   0x6008             STR      R0,[R1, #+0]
   1019          				// 全送信完了
   1020          				if (ctrl_cxd5600_work.request3.snd_cnt >= ctrl_cxd5600_work.request3.length) {
   \   0000018A   0x....             LDR      R0,??DataTable6_1
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0x....             LDR      R1,??DataTable6_2
   \   00000190   0x6809             LDR      R1,[R1, #+0]
   \   00000192   0x4288             CMP      R0,R1
   \   00000194   0xD309             BCC      ??ctrl_CXD5600GF_main_8
   1021          					// 応答待ちへ遷移
   1022          					ctrl_cxd5600_work.status = CTRL_CXD5600_STS_DRESP;
   \   00000196   0x2003             MOVS     R0,#+3
   \   00000198   0x....             LDR      R1,??DataTable5
   \   0000019A   0x6008             STR      R0,[R1, #+0]
   1023          					ctrl_cxd5600_work.request3.rcv_time = man_timer_get_1ms_count();
   \   0000019C   0x.... 0x....      BL       man_timer_get_1ms_count
   \   000001A0   0x....             LDR      R1,??DataTable8_2
   \   000001A2   0x6008             STR      R0,[R1, #+0]
   1024          					ctrl_cxd5600_work.request3.snd_flag = 0;
   \   000001A4   0x2000             MOVS     R0,#+0
   \   000001A6   0x....             LDR      R1,??DataTable6
   \   000001A8   0x6008             STR      R0,[R1, #+0]
   1025          				}
   1026          			}
   1027          		}
   1028          
   1029          
   1030          		// request4
   1031          		if (ctrl_cxd5600_work.request4.req_flag == 1) {
   \                     ??ctrl_CXD5600GF_main_8: (+1)
   \   000001AA   0x....             LDR      R0,??DataTable8_3
   \   000001AC   0x6800             LDR      R0,[R0, #+0]
   \   000001AE   0x2801             CMP      R0,#+1
   \   000001B0   0xD108             BNE      ??ctrl_CXD5600GF_main_12
   1032          			ctrl_cxd5600_work.request4.req_flag = 0;
   \   000001B2   0x2000             MOVS     R0,#+0
   \   000001B4   0x....             LDR      R1,??DataTable8_3
   \   000001B6   0x6008             STR      R0,[R1, #+0]
   1033          
   1034          			// 分割送信開始
   1035          			ctrl_cxd5600_work.request4.snd_flag = 1;
   \   000001B8   0x2001             MOVS     R0,#+1
   \   000001BA   0x....             LDR      R1,??DataTable13
   \   000001BC   0x6008             STR      R0,[R1, #+0]
   1036          			ctrl_cxd5600_work.request4.snd_cnt = 0;
   \   000001BE   0x2000             MOVS     R0,#+0
   \   000001C0   0x....             LDR      R1,??DataTable8_4
   \   000001C2   0x6008             STR      R0,[R1, #+0]
   1037          		}
   1038          		
   1039          		// CTRL_CXD5600_SND_DATA_MAX毎に分割して送信する
   1040          		if (ctrl_cxd5600_work.request4.snd_flag == 1) {
   \                     ??ctrl_CXD5600GF_main_12: (+1)
   \   000001C4   0x....             LDR      R0,??DataTable13
   \   000001C6   0x6800             LDR      R0,[R0, #+0]
   \   000001C8   0x2801             CMP      R0,#+1
   \   000001CA   0xD157             BNE      ??ctrl_CXD5600GF_main_2
   1041          			if ( (ctrl_cxd5600_work.request4.snd_cnt + CTRL_CXD5600_SND_DATA_MAX) <= ctrl_cxd5600_work.request4.length ) {
   \   000001CC   0x....             LDR      R0,??DataTable10
   \   000001CE   0x6800             LDR      R0,[R0, #+0]
   \   000001D0   0x....             LDR      R1,??DataTable8_4
   \   000001D2   0x6809             LDR      R1,[R1, #+0]
   \   000001D4   0x2280             MOVS     R2,#+128
   \   000001D6   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   000001D8   0x1889             ADDS     R1,R1,R2
   \   000001DA   0x4288             CMP      R0,R1
   \   000001DC   0xD308             BCC      ??ctrl_CXD5600GF_main_13
   1042          				length = CTRL_CXD5600_SND_DATA_MAX;
   \   000001DE   0x2480             MOVS     R4,#+128
   \   000001E0   0x0064             LSLS     R4,R4,#+1        ;; #+256
   \   000001E2   0xE00A             B        ??ctrl_CXD5600GF_main_14
   \                     ??ctrl_CXD5600GF_main_1:
   \   000001E4   0x........         DC32     ctrl_cxd5600_work+0xAD0
   \   000001E8   0x........         DC32     ctrl_cxd5600_work+0xACC
   \   000001EC   0x........         DC32     ctrl_cxd5600_work+0x110
   1043          			}
   1044          			else {
   1045          				length = ctrl_cxd5600_work.request4.length - ctrl_cxd5600_work.request4.snd_cnt;
   \                     ??ctrl_CXD5600GF_main_13: (+1)
   \   000001F0   0x....             LDR      R0,??DataTable10
   \   000001F2   0x6800             LDR      R0,[R0, #+0]
   \   000001F4   0x....             LDR      R1,??DataTable8_4
   \   000001F6   0x6809             LDR      R1,[R1, #+0]
   \   000001F8   0x1A44             SUBS     R4,R0,R1
   1046          			}
   1047          
   1048          			ret = drv_uart2_1_send(&ctrl_cxd5600_work.request4.data[ctrl_cxd5600_work.request4.snd_cnt], length);
   \                     ??ctrl_CXD5600GF_main_14: (+1)
   \   000001FA   0x0021             MOVS     R1,R4
   \   000001FC   0x....             LDR      R0,??DataTable10_1
   \   000001FE   0x6800             LDR      R0,[R0, #+0]
   \   00000200   0x....             LDR      R2,??DataTable8_4
   \   00000202   0x6812             LDR      R2,[R2, #+0]
   \   00000204   0x1880             ADDS     R0,R0,R2
   \   00000206   0x.... 0x....      BL       drv_uart2_1_send
   1049          			// 送信失敗時は中止する
   1050          			if (ret < 0) {
   \   0000020A   0x2800             CMP      R0,#+0
   \   0000020C   0xD518             BPL      ??ctrl_CXD5600GF_main_15
   1051          				// 登録先にcallback4通知
   1052          				if (ctrl_cxd5600_work.request4.callback4 != NULL) {
   \   0000020E   0x....             LDR      R0,??DataTable10_2
   \   00000210   0x6800             LDR      R0,[R0, #+0]
   \   00000212   0x2800             CMP      R0,#+0
   \   00000214   0xD032             BEQ      ??ctrl_CXD5600GF_main_2
   1053          					ctrl_cxd5600_work.request4.callback4(ctrl_cxd5600_work.request4.id, CTRL_CXD5600_STATUS_ERROR);
   \   00000216   0x2101             MOVS     R1,#+1
   \   00000218   0x43C9             MVNS     R1,R1            ;; #-2
   \   0000021A   0x....             LDR      R0,??DataTable10_3
   \   0000021C   0x6800             LDR      R0,[R0, #+0]
   \   0000021E   0x....             LDR      R2,??DataTable10_2
   \   00000220   0x6812             LDR      R2,[R2, #+0]
   \   00000222   0x4790             BLX      R2
   1054          					ctrl_cxd5600_work.request4.callback4 = NULL;
   \   00000224   0x2000             MOVS     R0,#+0
   \   00000226   0x....             LDR      R1,??DataTable10_2
   \   00000228   0x6008             STR      R0,[R1, #+0]
   1055          					man_error_setting(MAN_ERROR_CTRL_CXD, ctrl_cxd5600_work.recv_write_p, 0);
   \   0000022A   0x....             LDR      R3,??DataTable10_4  ;; 0x41f
   \   0000022C   0x2200             MOVS     R2,#+0
   \   0000022E   0x....             LDR      R0,??DataTable5_4
   \   00000230   0x6801             LDR      R1,[R0, #+0]
   \   00000232   0x200C             MOVS     R0,#+12
   \   00000234   0x.... 0x....      BL       man_error_set
   1056          					ctrl_cxd5600_work.request4.snd_flag = 0;
   \   00000238   0x2000             MOVS     R0,#+0
   \   0000023A   0x....             LDR      R1,??DataTable13
   \   0000023C   0x6008             STR      R0,[R1, #+0]
   \   0000023E   0xE01D             B        ??ctrl_CXD5600GF_main_2
   1057          				}
   1058          			}
   1059          			// 送信成功時は次の準備を行う
   1060          			else {
   1061          				ctrl_cxd5600_work.request4.snd_cnt += length;
   \                     ??ctrl_CXD5600GF_main_15: (+1)
   \   00000240   0x....             LDR      R0,??DataTable8_4
   \   00000242   0x6800             LDR      R0,[R0, #+0]
   \   00000244   0x1900             ADDS     R0,R0,R4
   \   00000246   0x....             LDR      R1,??DataTable8_4
   \   00000248   0x6008             STR      R0,[R1, #+0]
   1062          				// 全送信完了
   1063          				if (ctrl_cxd5600_work.request4.snd_cnt >= ctrl_cxd5600_work.request4.length) {
   \   0000024A   0x....             LDR      R0,??DataTable8_4
   \   0000024C   0x6800             LDR      R0,[R0, #+0]
   \   0000024E   0x....             LDR      R1,??DataTable10
   \   00000250   0x6809             LDR      R1,[R1, #+0]
   \   00000252   0x4288             CMP      R0,R1
   \   00000254   0xD312             BCC      ??ctrl_CXD5600GF_main_2
   1064          
   1065          					// 登録先にcallback4通知
   1066          					if (ctrl_cxd5600_work.request4.callback4 != NULL) {
   \   00000256   0x....             LDR      R0,??DataTable10_2
   \   00000258   0x6800             LDR      R0,[R0, #+0]
   \   0000025A   0x2800             CMP      R0,#+0
   \   0000025C   0xD008             BEQ      ??ctrl_CXD5600GF_main_16
   1067          						ctrl_cxd5600_work.request4.callback4(ctrl_cxd5600_work.request4.id, CTRL_CXD5600_STATUS_OK);
   \   0000025E   0x2100             MOVS     R1,#+0
   \   00000260   0x....             LDR      R0,??DataTable10_3
   \   00000262   0x6800             LDR      R0,[R0, #+0]
   \   00000264   0x....             LDR      R2,??DataTable10_2
   \   00000266   0x6812             LDR      R2,[R2, #+0]
   \   00000268   0x4790             BLX      R2
   1068          						ctrl_cxd5600_work.request4.callback4 = NULL;
   \   0000026A   0x2000             MOVS     R0,#+0
   \   0000026C   0x....             LDR      R1,??DataTable10_2
   \   0000026E   0x6008             STR      R0,[R1, #+0]
   1069          					}
   1070          					// コマンド待ち状態に戻す
   1071          					ctrl_cxd5600_work.status = CTRL_CXD5600_STS_READY;
   \                     ??ctrl_CXD5600GF_main_16: (+1)
   \   00000270   0x2000             MOVS     R0,#+0
   \   00000272   0x....             LDR      R1,??DataTable5
   \   00000274   0x6008             STR      R0,[R1, #+0]
   1072          					ctrl_cxd5600_work.request4.snd_flag = 0;
   \   00000276   0x2000             MOVS     R0,#+0
   \   00000278   0x....             LDR      R1,??DataTable13
   \   0000027A   0x6008             STR      R0,[R1, #+0]
   1073          				}
   1074          			}
   1075          		}
   1076          	}
   1077          
   1078          
   1079          	// 応答コマンド取得処理
   1080          	ctrl_CXD5600GF_get_char();
   \                     ??ctrl_CXD5600GF_main_2: (+1)
   \   0000027C   0x.... 0x....      BL       ctrl_CXD5600GF_get_char
   1081          
   1082          }
   \   00000280   0xBD13             POP      {R0,R1,R4,PC}    ;; return
   1083          
   1084          
   1085          
   1086          /********************************************************************/
   1087          /*!
   1088           * \name	ctrl_CXD5600GF_nmea_start
   1089           * \brief	CXD5600GF NMEA受信開始処理
   1090           * \param	callback1 : NMEA受信時に通知するcallback関数
   1091           * \return   0: 成功
   1092           *          -1:失敗
   1093           * \note	
   1094           */
   1095          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1096          int32_t ctrl_CXD5600GF_nmea_start(int32_t id, func_cxd1 callback1)
   1097          {
   \                     ctrl_CXD5600GF_nmea_start: (+1)
   \   00000000   0xB500             PUSH     {LR}
   1098          	int32_t		ret=-1;
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x43D2             MVNS     R2,R2            ;; #-1
   1099          
   1100          	if (ctrl_cxd5600_work.req_nmea.callback1 == NULL) {
   \   00000006   0x....             LDR      R3,??DataTable12
   \   00000008   0x681B             LDR      R3,[R3, #+0]
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD104             BNE      ??ctrl_CXD5600GF_nmea_start_0
   1101          		ctrl_cxd5600_work.req_nmea.callback1 = callback1;
   \   0000000E   0x....             LDR      R2,??DataTable12
   \   00000010   0x6011             STR      R1,[R2, #+0]
   1102          		ctrl_cxd5600_work.req_nmea.id = id;
   \   00000012   0x....             LDR      R1,??DataTable14
   \   00000014   0x6008             STR      R0,[R1, #+0]
   1103          		ret=0;
   \   00000016   0x2200             MOVS     R2,#+0
   1104          	}
   1105           
   1106          	return ret;
   \                     ??ctrl_CXD5600GF_nmea_start_0: (+1)
   \   00000018   0x0010             MOVS     R0,R2
   \   0000001A   0xBD00             POP      {PC}             ;; return
   1107          }
   1108          
   1109          
   1110          /********************************************************************/
   1111          /*!
   1112           * \name	ctrl_CXD5600GF_nmea_stop
   1113           * \brief	CXD5600GF NMEA受信停止処理
   1114           * \param	
   1115           * \return   0: 成功
   1116           *          -1:失敗
   1117           * \note	
   1118           */
   1119          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1120          int32_t ctrl_CXD5600GF_nmea_stop( void )
   1121          {
   \                     ctrl_CXD5600GF_nmea_stop: (+1)
   \   00000000   0xB500             PUSH     {LR}
   1122          	int32_t		ret=-1;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x43C0             MVNS     R0,R0            ;; #-1
   1123          
   1124          	if (ctrl_cxd5600_work.req_nmea.callback1 != NULL) {
   \   00000006   0x....             LDR      R1,??DataTable12
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD006             BEQ      ??ctrl_CXD5600GF_nmea_stop_0
   1125          		ctrl_cxd5600_work.req_nmea.callback1 = NULL;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR      R1,??DataTable12
   \   00000012   0x6008             STR      R0,[R1, #+0]
   1126          		ctrl_cxd5600_work.req_nmea.id = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR      R1,??DataTable14
   \   00000018   0x6008             STR      R0,[R1, #+0]
   1127          		ret=0;
   \   0000001A   0x2000             MOVS     R0,#+0
   1128          	}
   1129           
   1130          	return ret;
   \                     ??ctrl_CXD5600GF_nmea_stop_0: (+1)
   \   0000001C   0xBD00             POP      {PC}             ;; return
   1131          }
   1132          
   1133          
   1134          
   1135          /********************************************************************/
   1136          /*!
   1137           * \name	ctrl_CXD5600GF_cmd
   1138           * \brief	CXD5600GF 通常コマンド送信処理
   1139           * \param	cmd       : 送信するコマンド
   1140           * 			cmd_len   : コマンド長
   1141           * 			id        : ユニークID
   1142           * 			timeout   : timeout時間
   1143           *			callback1 : レスポンス受信時に通知するcallback関数
   1144           * \return   0: 成功
   1145           *          -1:失敗
   1146           * \note	コマンド送信中に新たなコマンドは送信できません。
   1147           *          コマンド + 応答
   1148           */
   1149          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1150          int32_t ctrl_CXD5600GF_cmd(uint8_t *cmd, int32_t cmd_len, int32_t id, int32_t timeout, func_cxd1 callback1)
   1151          {
   \                     ctrl_CXD5600GF_cmd: (+1)
   \   00000000   0xB5F4             PUSH     {R2,R4-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x001C             MOVS     R4,R3
   1152          	int32_t	ret=-1;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x43C0             MVNS     R0,R0            ;; #-1
   1153          
   1154          	// パラメータチェック
   1155          	if ( (cmd != NULL) && (cmd_len > 0) && (cmd_len <= CTRL_CXD5600_CMD_BUFF_MAX) && (timeout != 0) && (callback1 != NULL) ) {
   \   0000000C   0x2E00             CMP      R6,#+0
   \   0000000E   0xD01C             BEQ      ??ctrl_CXD5600GF_cmd_0
   \   00000010   0x0039             MOVS     R1,R7
   \   00000012   0x1E49             SUBS     R1,R1,#+1
   \   00000014   0x2980             CMP      R1,#+128
   \   00000016   0xD218             BCS      ??ctrl_CXD5600GF_cmd_0
   \   00000018   0x2C00             CMP      R4,#+0
   \   0000001A   0xD016             BEQ      ??ctrl_CXD5600GF_cmd_0
   \   0000001C   0x9D06             LDR      R5,[SP, #+24]
   \   0000001E   0x0029             MOVS     R1,R5
   \   00000020   0x2900             CMP      R1,#+0
   \   00000022   0xD012             BEQ      ??ctrl_CXD5600GF_cmd_0
   1156          
   1157          		memcpy(&ctrl_cxd5600_work.request1.cmd[0], cmd, cmd_len);
   \   00000024   0x003A             MOVS     R2,R7
   \   00000026   0x0031             MOVS     R1,R6
   \   00000028   0x....             LDR      R6,??DataTable14_1
   \   0000002A   0x0030             MOVS     R0,R6
   \   0000002C   0x.... 0x....      BL       __aeabi_memcpy
   1158          		ctrl_cxd5600_work.request1.length = cmd_len;
   \   00000030   0x....             LDR      R0,??DataTable14_2
   \   00000032   0x7007             STRB     R7,[R0, #+0]
   1159          		ctrl_cxd5600_work.request1.callback1 = callback1;
   \   00000034   0x....             LDR      R0,??DataTable14_3
   \   00000036   0x6005             STR      R5,[R0, #+0]
   1160          		ctrl_cxd5600_work.request1.timeout = timeout;
   \   00000038   0x....             LDR      R0,??DataTable14_4
   \   0000003A   0x6004             STR      R4,[R0, #+0]
   1161          		ctrl_cxd5600_work.request1.id = id;
   \   0000003C   0x9800             LDR      R0,[SP, #+0]
   \   0000003E   0x....             LDR      R1,??DataTable14_5
   \   00000040   0x6008             STR      R0,[R1, #+0]
   1162          		ctrl_cxd5600_work.request1.req_flag = 1;
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0x....             LDR      R1,??DataTable14_6
   \   00000046   0x6008             STR      R0,[R1, #+0]
   1163          		ret = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   1164          	}
   1165          
   1166          	return ret;
   \                     ??ctrl_CXD5600GF_cmd_0: (+1)
   \   0000004A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   1167          }
   1168          
   1169          
   1170          /********************************************************************/
   1171          /*!
   1172           * \name	ctrl_CXD5600GF_cmd2
   1173           * \brief	CXD5600GF ２行応答コマンド送信処理
   1174           * \param	cmd       : 送信するコマンド
   1175           * 			cmd_len   : コマンド長
   1176           * 			id        : ユニークID
   1177           * 			timeout   : timeout時間
   1178           *			callback2 : レスポンス受信時に通知するcallback関数
   1179           * \return   0: 成功
   1180           *          -1:失敗
   1181           * \note	コマンド送信中に新たなコマンドは送信できません。
   1182           *          コマンド ＋ データ + 応答
   1183           */
   1184          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1185          int32_t ctrl_CXD5600GF_cmd2(uint8_t *cmd, int32_t cmd_len, int32_t id, int32_t timeout, func_cxd2 callback2)
   1186          {
   \                     ctrl_CXD5600GF_cmd2: (+1)
   \   00000000   0xB5F4             PUSH     {R2,R4-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x001C             MOVS     R4,R3
   1187          	int32_t	ret=-1;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x43C0             MVNS     R0,R0            ;; #-1
   1188          
   1189          	// パラメータチェック
   1190          	if ( (cmd != NULL) && (cmd_len > 0) && (cmd_len <= CTRL_CXD5600_CMD_BUFF_MAX) && (timeout != 0) && (callback2 != NULL) ) {
   \   0000000C   0x2E00             CMP      R6,#+0
   \   0000000E   0xD01C             BEQ      ??ctrl_CXD5600GF_cmd2_0
   \   00000010   0x0039             MOVS     R1,R7
   \   00000012   0x1E49             SUBS     R1,R1,#+1
   \   00000014   0x2980             CMP      R1,#+128
   \   00000016   0xD218             BCS      ??ctrl_CXD5600GF_cmd2_0
   \   00000018   0x2C00             CMP      R4,#+0
   \   0000001A   0xD016             BEQ      ??ctrl_CXD5600GF_cmd2_0
   \   0000001C   0x9D06             LDR      R5,[SP, #+24]
   \   0000001E   0x0029             MOVS     R1,R5
   \   00000020   0x2900             CMP      R1,#+0
   \   00000022   0xD012             BEQ      ??ctrl_CXD5600GF_cmd2_0
   1191          
   1192          		memcpy(&ctrl_cxd5600_work.request2.cmd[0], cmd, cmd_len);
   \   00000024   0x003A             MOVS     R2,R7
   \   00000026   0x0031             MOVS     R1,R6
   \   00000028   0x....             LDR      R6,??DataTable14_7
   \   0000002A   0x0030             MOVS     R0,R6
   \   0000002C   0x.... 0x....      BL       __aeabi_memcpy
   1193          		ctrl_cxd5600_work.request2.length = cmd_len;
   \   00000030   0x....             LDR      R0,??DataTable14_8
   \   00000032   0x7007             STRB     R7,[R0, #+0]
   1194          		ctrl_cxd5600_work.request2.callback2 = callback2;
   \   00000034   0x....             LDR      R0,??DataTable14_9
   \   00000036   0x6005             STR      R5,[R0, #+0]
   1195          		ctrl_cxd5600_work.request2.id = id;
   \   00000038   0x9800             LDR      R0,[SP, #+0]
   \   0000003A   0x....             LDR      R1,??DataTable8
   \   0000003C   0x6008             STR      R0,[R1, #+0]
   1196          		ctrl_cxd5600_work.request2.timeout = timeout;
   \   0000003E   0x....             LDR      R0,??DataTable14_10
   \   00000040   0x6004             STR      R4,[R0, #+0]
   1197          		ctrl_cxd5600_work.request2.req_flag = 1;
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0x....             LDR      R1,??DataTable14_11
   \   00000046   0x6008             STR      R0,[R1, #+0]
   1198          		ret = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   1199          	}
   1200          
   1201          	return ret;
   \                     ??ctrl_CXD5600GF_cmd2_0: (+1)
   \   0000004A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   1202          }
   1203          
   1204          
   1205          /********************************************************************/
   1206          /*!
   1207           * \name	ctrl_CXD5600GF_data
   1208           * \brief	CXD5600GF データ送信処理
   1209           * \param	data      : 送信するデータ
   1210           * 			data_len  : データ長
   1211           * 			id        : ユニークID
   1212           * 			timeout   : timeout時間
   1213           *			callback1 : レスポンス受信時に通知するcallback関数
   1214           * \return   0: 成功
   1215           *          -1:失敗
   1216           * \note	コマンド送信中に新たなコマンドは送信できません。
   1217           *          コマンド + 応答
   1218           */
   1219          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1220          int32_t ctrl_CXD5600GF_data(uint8_t *data, int32_t data_len, int32_t id, int32_t timeout, func_cxd1 callback1)
   1221          {
   \                     ctrl_CXD5600GF_data: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x000C             MOVS     R4,R1
   1222          	int32_t	ret=-1;
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x43C9             MVNS     R1,R1            ;; #-1
   1223          
   1224          	// パラメータチェック
   1225          	if ( (data != NULL) && (data_len > 0) && (timeout != 0) && (callback1 != NULL) ) {
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD015             BEQ      ??ctrl_CXD5600GF_data_0
   \   0000000C   0x2C01             CMP      R4,#+1
   \   0000000E   0xDB13             BLT      ??ctrl_CXD5600GF_data_0
   \   00000010   0x2B00             CMP      R3,#+0
   \   00000012   0xD011             BEQ      ??ctrl_CXD5600GF_data_0
   \   00000014   0x9D04             LDR      R5,[SP, #+16]
   \   00000016   0x002E             MOVS     R6,R5
   \   00000018   0x2E00             CMP      R6,#+0
   \   0000001A   0xD00D             BEQ      ??ctrl_CXD5600GF_data_0
   1226          
   1227          		ctrl_cxd5600_work.request3.data = data;
   \   0000001C   0x....             LDR      R1,??DataTable14_12
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   1228          		ctrl_cxd5600_work.request3.length = data_len;
   \   00000020   0x....             LDR      R0,??DataTable14_13
   \   00000022   0x6004             STR      R4,[R0, #+0]
   1229          		ctrl_cxd5600_work.request3.callback1 = callback1;
   \   00000024   0x....             LDR      R0,??DataTable14_14
   \   00000026   0x6005             STR      R5,[R0, #+0]
   1230          		ctrl_cxd5600_work.request3.timeout = timeout;
   \   00000028   0x....             LDR      R0,??DataTable14_15
   \   0000002A   0x6003             STR      R3,[R0, #+0]
   1231          		ctrl_cxd5600_work.request3.id = id;
   \   0000002C   0x....             LDR      R0,??DataTable14_16
   \   0000002E   0x6002             STR      R2,[R0, #+0]
   1232          		ctrl_cxd5600_work.request3.req_flag = 1;
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x....             LDR      R1,??DataTable14_17
   \   00000034   0x6008             STR      R0,[R1, #+0]
   1233          		ret = 0;
   \   00000036   0x2100             MOVS     R1,#+0
   1234          	}
   1235          
   1236          	return ret;
   \                     ??ctrl_CXD5600GF_data_0: (+1)
   \   00000038   0x0008             MOVS     R0,R1
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return
   1237          }
   1238          
   1239          
   1240          /********************************************************************/
   1241          /*!
   1242           * \name	ctrl_CXD5600GF_data_non_ack
   1243           * \brief	CXD5600GF データ送信処理(ACK待ちなし)
   1244           * \param	data      : 送信するデータ
   1245           * 			data_len  : データ長
   1246           * 			id        : ユニークID
   1247           *			callback4 : 送信終了時に通知するcallback関数
   1248           * \return   0: 成功
   1249           *          -1:失敗
   1250           * \note	コマンド送信中に新たなコマンドは送信できません。
   1251           *          コマンド
   1252           */
   1253          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1254          int32_t ctrl_CXD5600GF_data_non_ack(uint8_t *data, int32_t data_len, int32_t id, func_cxd4 callback4)
   1255          {
   \                     ctrl_CXD5600GF_data_non_ack: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1256          	int32_t	ret=-1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1257          
   1258          	// パラメータチェック
   1259          	if ( (data != NULL) && (data_len > 0) && (callback4 != NULL) ) {
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD010             BEQ      ??ctrl_CXD5600GF_data_non_ack_0
   \   0000000C   0x2901             CMP      R1,#+1
   \   0000000E   0xDB0E             BLT      ??ctrl_CXD5600GF_data_non_ack_0
   \   00000010   0x001D             MOVS     R5,R3
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xD00B             BEQ      ??ctrl_CXD5600GF_data_non_ack_0
   1260          
   1261          		ctrl_cxd5600_work.request4.data = data;
   \   00000016   0x....             LDR      R0,??DataTable10_1
   \   00000018   0x6004             STR      R4,[R0, #+0]
   1262          		ctrl_cxd5600_work.request4.length = data_len;
   \   0000001A   0x....             LDR      R0,??DataTable10
   \   0000001C   0x6001             STR      R1,[R0, #+0]
   1263          		ctrl_cxd5600_work.request4.callback4 = callback4;
   \   0000001E   0x....             LDR      R0,??DataTable10_2
   \   00000020   0x6003             STR      R3,[R0, #+0]
   1264          		ctrl_cxd5600_work.request4.id = id;
   \   00000022   0x....             LDR      R0,??DataTable10_3
   \   00000024   0x6002             STR      R2,[R0, #+0]
   1265          		ctrl_cxd5600_work.request4.req_flag = 1;
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x....             LDR      R1,??DataTable14_18
   \   0000002A   0x6008             STR      R0,[R1, #+0]
   1266          		ret = 0;
   \   0000002C   0x2000             MOVS     R0,#+0
   1267          	}
   1268          
   1269          	return ret;
   \                     ??ctrl_CXD5600GF_data_non_ack_0: (+1)
   \   0000002E   0xBD30             POP      {R4,R5,PC}       ;; return
   1270          }
   1271          
   1272          
   1273          /********************************************************************/
   1274          /*!
   1275           * \name	ctrl_CXD5600GF_nmea_result
   1276           * \brief	NMEA判定結果の取得処理
   1277           * \param	result    : NMEA判定結果
   1278           * \return  
   1279           * \note	
   1280           */
   1281          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1282          void ctrl_CXD5600GF_nmea_result(nmea_result_info_t *result)
   1283          {
   \                     ctrl_CXD5600GF_nmea_result: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1284          	*result = ctrl_cxd5600_work.nmea_result;
   \   00000002   0x....             LDR      R1,??DataTable14_19
   \   00000004   0x220E             MOVS     R2,#+14
   \   00000006   0x.... 0x....      BL       __aeabi_memcpy
   1285          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
   1286          
   1287          
   1288          /********************************************************************/
   1289          /*!
   1290           * \name	ctrl_CXD5600GF_clear_buffer
   1291           * \brief	受信バッファを初期化する処理
   1292           * \param	なし
   1293           * \return  なし
   1294           * \note	
   1295           */
   1296          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1297          void ctrl_CXD5600GF_clear_buffer( void )
   1298          {
   \                     ctrl_CXD5600GF_clear_buffer: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1299          	int32_t	i;
   1300          	int32_t		read_data;
   1301          
   1302          	for (i=0; i<CTRL_CXD5600_RECV_BUFF_MAX; i++) {
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE000             B        ??ctrl_CXD5600GF_clear_buffer_0
   \                     ??ctrl_CXD5600GF_clear_buffer_1: (+1)
   \   00000006   0x1C64             ADDS     R4,R4,#+1
   \                     ??ctrl_CXD5600GF_clear_buffer_0: (+1)
   \   00000008   0x2C80             CMP      R4,#+128
   \   0000000A   0xDA05             BGE      ??ctrl_CXD5600GF_clear_buffer_2
   1303          		read_data = UART2_1_GetChar();
   \   0000000C   0x.... 0x....      BL       UART2_1_GetChar
   1304          		if (read_data == -1) break;
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x43C9             MVNS     R1,R1            ;; #-1
   \   00000014   0x4288             CMP      R0,R1
   \   00000016   0xD1F6             BNE      ??ctrl_CXD5600GF_clear_buffer_1
   1305          	}
   1306          	
   1307          	ctrl_cxd5600_work.save_info1.write_p = 0;
   \                     ??ctrl_CXD5600GF_clear_buffer_2: (+1)
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x....             LDR      R1,??DataTable14_20
   \   0000001C   0x6008             STR      R0,[R1, #+0]
   1308          	ctrl_cxd5600_work.save_info2.write_p = 0;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x....             LDR      R1,??DataTable14_21
   \   00000022   0x6008             STR      R0,[R1, #+0]
   1309          	// NMEA領域を初期化する
   1310          	memset(&ctrl_cxd5600_work.nmea_info, 0, sizeof(ctrl_cxd5600_nmea_info_t));
   \   00000024   0x....             LDR      R1,??DataTable14_22  ;; 0x808
   \   00000026   0x2200             MOVS     R2,#+0
   \   00000028   0x....             LDR      R4,??DataTable14_23
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0x.... 0x....      BL       __aeabi_memset
   1311          	ctrl_cxd5600_work.recv_flag = 0;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR      R1,??DataTable14_24
   \   00000034   0x6048             STR      R0,[R1, #+4]
   1312          }
   \   00000036   0xBD10             POP      {R4,PC}          ;; return
   1313          
   1314          /********************************************************************/
   1315          /*!
   1316           * \name	ctrl_CXD5600GF_check_nmea_recv
   1317           * \brief	NMEA受信中の判定処理
   1318           * \param	なし
   1319           * \return  0 : 未受信
   1320           *          1 : 受信中
   1321           * \note	
   1322           */
   1323          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1324          int32_t ctrl_CXD5600GF_check_nmea_recv( void )
   1325          {
   \                     ctrl_CXD5600GF_check_nmea_recv: (+1)
   \   00000000   0xB500             PUSH     {LR}
   1326          	int32_t	ret = 0;
   \   00000002   0x2000             MOVS     R0,#+0
   1327          
   1328          	// 先頭が'$'時はNMEAセンテンス
   1329          	if ( (ctrl_cxd5600_work.recv_flag & CTRL_CXD5600_RECV_NMEA) != 0) {
   \   00000004   0x....             LDR      R1,??DataTable14_24
   \   00000006   0x7909             LDRB     R1,[R1, #+4]
   \   00000008   0x07C9             LSLS     R1,R1,#+31
   \   0000000A   0xD500             BPL      ??ctrl_CXD5600GF_check_nmea_recv_0
   1330          		ret = 1;
   \   0000000C   0x2001             MOVS     R0,#+1
   1331          	}
   1332          
   1333          	// 受信完了後100ms経過後に確定
   1334          	if (ctrl_cxd5600_work.req_nmea.rcv_flg == 1) {
   \                     ??ctrl_CXD5600GF_check_nmea_recv_0: (+1)
   \   0000000E   0x....             LDR      R1,??DataTable14_25
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0x2901             CMP      R1,#+1
   \   00000014   0xD100             BNE      ??ctrl_CXD5600GF_check_nmea_recv_1
   1335          		ret = 1;
   \   00000016   0x2001             MOVS     R0,#+1
   1336          	}
   1337          
   1338          	
   1339          	return ret;
   \                     ??ctrl_CXD5600GF_check_nmea_recv_1: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   1340          }
   1341          
   1342          
   1343          /********************************************************************/
   1344          /*!
   1345           * \name	ctrl_CXD5600GF_req_PowerOff
   1346           * \brief	CXD5600GFの電源をOFFする処理
   1347           * \param	なし
   1348           * \return  なし
   1349           * \note	
   1350           */
   1351          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1352          void ctrl_CXD5600GF_req_PowerOff( void )
   1353          {
   \                     ctrl_CXD5600GF_req_PowerOff: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1354          	man_gpio_gps_power(MAN_GPIO_CTRL_OFF);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       man_gpio_gps_power
   1355          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
   1356          
   1357          /********************************************************************/
   1358          /*!
   1359           * \name	ctrl_CXD5600GF_req_PowerOn
   1360           * \brief	CXD5600GFの電源をONする処理
   1361           * \param	なし
   1362           * \return  なし
   1363           * \note	
   1364           */
   1365          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1366          void ctrl_CXD5600GF_req_PowerOn( void )
   1367          {
   \                     ctrl_CXD5600GF_req_PowerOn: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1368          	man_gpio_gps_power(MAN_GPIO_CTRL_ON);
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       man_gpio_gps_power
   1369          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
   1370          
   1371          /********************************************************************/
   1372          /*!
   1373           * \name	ctrl_CXD5600GF_req_ResetOff
   1374           * \brief	CXD5600GFのリセットを解除する処理
   1375           * \param	なし
   1376           * \return  なし
   1377           * \note	
   1378           */
   1379          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1380          void ctrl_CXD5600GF_req_ResetOff( void )
   1381          {
   \                     ctrl_CXD5600GF_req_ResetOff: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1382          	man_gpio_gps_reset(MAN_GPIO_CTRL_OFF);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       man_gpio_gps_reset
   1383          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
   1384          
   1385          
   1386          /********************************************************************/
   1387          /*!
   1388           * \name	ctrl_CXD5600GF_req_ResetOn
   1389           * \brief	CXD5600GFのリセットを発生する処理
   1390           * \param	なし
   1391           * \return  なし
   1392           * \note	
   1393           */
   1394          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1395          void ctrl_CXD5600GF_req_ResetOn( void )
   1396          {
   \                     ctrl_CXD5600GF_req_ResetOn: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1397          	man_gpio_gps_reset(MAN_GPIO_CTRL_ON);
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       man_gpio_gps_reset
   1398          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
   1399          
   1400          /********************************************************************/
   1401          /*!
   1402           * \name	ctrl_CXD5600GF_set_noti
   1403           * \brief	CXD5600GF コマンド以外でのデータ受信時に通知する関数登録処理
   1404           * \param	id        : ユニークID
   1405           *			callback3 : 受信時に通知するcallback関数
   1406           * \return   0: 成功
   1407           *          -1:失敗
   1408           * \note	
   1409           */
   1410          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1411          int32_t ctrl_CXD5600GF_set_noti(int32_t id, func_cxd3 callback3)
   1412          {
   \                     ctrl_CXD5600GF_set_noti: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0x0002             MOVS     R2,R0
   1413          	int32_t	ret=-1;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x43C0             MVNS     R0,R0            ;; #-1
   1414          
   1415          	if (callback3 != NULL) {
   \   00000008   0x000B             MOVS     R3,R1
   \   0000000A   0x2B00             CMP      R3,#+0
   \   0000000C   0xD004             BEQ      ??ctrl_CXD5600GF_set_noti_0
   1416          		ctrl_cxd5600_work.recv_noti.id = id;
   \   0000000E   0x....             LDR      R0,??DataTable14_26
   \   00000010   0x6002             STR      R2,[R0, #+0]
   1417          		ctrl_cxd5600_work.recv_noti.callback3 = callback3;
   \   00000012   0x....             LDR      R0,??DataTable14_27
   \   00000014   0x6001             STR      R1,[R0, #+0]
   1418          		ret = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   1419          	}
   1420          	
   1421          	return ret;
   \                     ??ctrl_CXD5600GF_set_noti_0: (+1)
   \   00000018   0xBD00             POP      {PC}             ;; return
   1422          }
   1423          
   1424          
   1425          /********************************************************************/
   1426          /*!
   1427           * \name	ctrl_CXD5600GF_req_out_rcv
   1428           * \brief	rcv data USB出力要求
   1429           * \param	なし
   1430           * \return  なし
   1431           * \note	
   1432           */
   1433          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1434          void ctrl_CXD5600GF_req_out_rcv( void )
   1435          {
   \                     ctrl_CXD5600GF_req_out_rcv: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1436          	uint8_t		*usb_buff = man_memory_alloc();
   \   00000002   0x.... 0x....      BL       man_memory_alloc
   1437          	int32_t		in_cnt;
   1438          	int32_t		write_cnt;
   1439          	int32_t		loop;
   1440          
   1441          	in_cnt = ctrl_cxd5600_work.recv_write_p;
   \   00000006   0x....             LDR      R1,??DataTable14_28
   \   00000008   0x680A             LDR      R2,[R1, #+0]
   1442          	
   1443          	usb_buff[0] = ASCII_CR;
   \   0000000A   0x210D             MOVS     R1,#+13
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   1444          	usb_buff[1] = ASCII_LF;
   \   0000000E   0x210A             MOVS     R1,#+10
   \   00000010   0x7041             STRB     R1,[R0, #+1]
   1445          	write_cnt=2;
   \   00000012   0x2102             MOVS     R1,#+2
   1446          
   1447          	for (loop=0; loop<CTRL_CXD5600_RECV_DATA_MAX; loop++) {
   \   00000014   0x2300             MOVS     R3,#+0
   \   00000016   0xE023             B        ??ctrl_CXD5600GF_req_out_rcv_0
   1448          		if ( ( ( ' ' <= ctrl_cxd5600_work.recv_data[in_cnt] ) && ( ctrl_cxd5600_work.recv_data[in_cnt] <= 'z' ) )
   1449          			|| ( ctrl_cxd5600_work.recv_data[in_cnt] == ASCII_CR )
   1450          			|| ( ctrl_cxd5600_work.recv_data[in_cnt] == ASCII_LF ) ) {
   \                     ??ctrl_CXD5600GF_req_out_rcv_1: (+1)
   \   00000018   0x....             LDR      R4,??DataTable14_24
   \   0000001A   0x18A4             ADDS     R4,R4,R2
   \   0000001C   0x25BE             MOVS     R5,#+190
   \   0000001E   0x012D             LSLS     R5,R5,#+4        ;; #+3040
   \   00000020   0x5D64             LDRB     R4,[R4, R5]
   \   00000022   0x3C20             SUBS     R4,R4,#+32
   \   00000024   0x2C5B             CMP      R4,#+91
   \   00000026   0xD30D             BCC      ??ctrl_CXD5600GF_req_out_rcv_2
   \   00000028   0x....             LDR      R4,??DataTable14_24
   \   0000002A   0x18A4             ADDS     R4,R4,R2
   \   0000002C   0x25BE             MOVS     R5,#+190
   \   0000002E   0x012D             LSLS     R5,R5,#+4        ;; #+3040
   \   00000030   0x5D64             LDRB     R4,[R4, R5]
   \   00000032   0x2C0D             CMP      R4,#+13
   \   00000034   0xD006             BEQ      ??ctrl_CXD5600GF_req_out_rcv_2
   \   00000036   0x....             LDR      R4,??DataTable14_24
   \   00000038   0x18A4             ADDS     R4,R4,R2
   \   0000003A   0x25BE             MOVS     R5,#+190
   \   0000003C   0x012D             LSLS     R5,R5,#+4        ;; #+3040
   \   0000003E   0x5D64             LDRB     R4,[R4, R5]
   \   00000040   0x2C0A             CMP      R4,#+10
   \   00000042   0xD106             BNE      ??ctrl_CXD5600GF_req_out_rcv_3
   1451          			usb_buff[write_cnt] = ctrl_cxd5600_work.recv_data[in_cnt];
   \                     ??ctrl_CXD5600GF_req_out_rcv_2: (+1)
   \   00000044   0x....             LDR      R4,??DataTable14_24
   \   00000046   0x18A4             ADDS     R4,R4,R2
   \   00000048   0x25BE             MOVS     R5,#+190
   \   0000004A   0x012D             LSLS     R5,R5,#+4        ;; #+3040
   \   0000004C   0x5D64             LDRB     R4,[R4, R5]
   \   0000004E   0x5444             STRB     R4,[R0, R1]
   1452          			write_cnt++;
   \   00000050   0x1C49             ADDS     R1,R1,#+1
   1453          		}
   1454          		in_cnt++;
   \                     ??ctrl_CXD5600GF_req_out_rcv_3: (+1)
   \   00000052   0x1C52             ADDS     R2,R2,#+1
   1455          		if ( in_cnt >= CTRL_CXD5600_RECV_DATA_MAX ) {
   \   00000054   0x2480             MOVS     R4,#+128
   \   00000056   0x00E4             LSLS     R4,R4,#+3        ;; #+1024
   \   00000058   0x42A2             CMP      R2,R4
   \   0000005A   0xDB00             BLT      ??ctrl_CXD5600GF_req_out_rcv_4
   1456          			in_cnt = 0;
   \   0000005C   0x2200             MOVS     R2,#+0
   1457          		}
   1458          	}
   \                     ??ctrl_CXD5600GF_req_out_rcv_4: (+1)
   \   0000005E   0x1C5B             ADDS     R3,R3,#+1
   \                     ??ctrl_CXD5600GF_req_out_rcv_0: (+1)
   \   00000060   0x2480             MOVS     R4,#+128
   \   00000062   0x00E4             LSLS     R4,R4,#+3        ;; #+1024
   \   00000064   0x42A3             CMP      R3,R4
   \   00000066   0xDBD7             BLT      ??ctrl_CXD5600GF_req_out_rcv_1
   1459          
   1460          	// 最後にCR+LFを出力する
   1461          	usb_buff[write_cnt] = ASCII_CR;
   \   00000068   0x220D             MOVS     R2,#+13
   \   0000006A   0x5442             STRB     R2,[R0, R1]
   1462          	usb_buff[write_cnt+1] = ASCII_LF;
   \   0000006C   0x220A             MOVS     R2,#+10
   \   0000006E   0x1843             ADDS     R3,R0,R1
   \   00000070   0x705A             STRB     R2,[R3, #+1]
   1463          
   1464          	// USB出力
   1465          	man_usb_data_send(&usb_buff[0], write_cnt+2);
   \   00000072   0x1C89             ADDS     R1,R1,#+2
   \   00000074   0x.... 0x....      BL       man_usb_data_send
   1466          }
   \   00000078   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x5A 0x44          DC8      "ZDA"
   \              0x41 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBCF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x49 0x4D          DC8      "IMP"
   \              0x50 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_6:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_7:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBD0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_8:
   \   00000000   0x47 0x53          DC8      "GSA"
   \              0x41 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_9:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBCE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_10:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_11:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAC4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBB0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x998

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x1174

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x00000FE4         DC32     0xfe4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBB4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x194

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBBC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBB8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x114

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBD0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBCE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBCF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBA4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x198

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x00000808         DC32     0x808

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA2C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x00000335         DC32     0x335

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xFE0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAC8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAF8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAF0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x00000365         DC32     0x365

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAEC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x00001178         DC32     0x1178

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAF4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA3C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAC0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     ctrl_cxd5600_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x9A0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x9A4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xFE0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x000003D3         DC32     0x3d3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAD8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xADC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAE0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAE8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAE4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAC4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAF8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xB00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xB08

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xB10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xB0C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xB18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xB14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x0000041F         DC32     0x41f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xB04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBA4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x9A4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA2C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x9A0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAC0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_9:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xACC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_10:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAC8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_11:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xA3C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_12:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAE4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_13:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAE8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_14:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAF4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_15:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAF0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_16:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAEC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_17:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xAD8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_18:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xB00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_19:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBC0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_20:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x8C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_21:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_22:
   \   00000000   0x00000808         DC32     0x808

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_23:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0x198

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_24:
   \   00000000   0x........         DC32     ctrl_cxd5600_work

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_25:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBB4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_26:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBB8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_27:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xBBC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_28:
   \   00000000   0x........         DC32     ctrl_cxd5600_work+0xFE0

   \                                 In section .rodata, align 4
   \   00000000   0x5A 0x44          DC8 "ZDA"
   \              0x41 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x49 0x4D          DC8 "IMP"
   \              0x50 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x47 0x53          DC8 "GSA"
   \              0x41 0x00    
   1467          
   1468          
   1469          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   ctrl_CXD5600GF_check_nmea_recv
       8   ctrl_CXD5600GF_clear_buffer
         8   -> UART2_1_GetChar
         8   -> __aeabi_memset
      24   ctrl_CXD5600GF_cmd
        24   -> __aeabi_memcpy
      24   ctrl_CXD5600GF_cmd2
        24   -> __aeabi_memcpy
      16   ctrl_CXD5600GF_data
      12   ctrl_CXD5600GF_data_non_ack
      24   ctrl_CXD5600GF_get_char
        24   -- Indirect call
        24   -> UART2_1_GetChar
        24   -> __aeabi_memset
        24   -> ctrl_NMEA_data_check
        24   -> man_error_set
        24   -> man_timer_get_1ms_count
        24   -> man_timer_get_elapsed_time
       8   ctrl_CXD5600GF_init
         8   -> __aeabi_memset
         8   -> ctrl_CXD5600GF_req_PowerOff
         8   -> ctrl_CXD5600GF_req_PowerOn
         8   -> drv_uart2_1_init
         8   -> seSysSleepMS
      16   ctrl_CXD5600GF_main
        16   -- Indirect call
        16   -> ctrl_CXD5600GF_get_char
        16   -> drv_uart2_1_send
        16   -> man_error_set
        16   -> man_timer_get_1ms_count
       8   ctrl_CXD5600GF_nmea_result
         8   -> __aeabi_memcpy
       4   ctrl_CXD5600GF_nmea_start
       4   ctrl_CXD5600GF_nmea_stop
       8   ctrl_CXD5600GF_req_PowerOff
         8   -> man_gpio_gps_power
       8   ctrl_CXD5600GF_req_PowerOn
         8   -> man_gpio_gps_power
       8   ctrl_CXD5600GF_req_ResetOff
         8   -> man_gpio_gps_reset
       8   ctrl_CXD5600GF_req_ResetOn
         8   -> man_gpio_gps_reset
      16   ctrl_CXD5600GF_req_out_rcv
        16   -> man_memory_alloc
        16   -> man_usb_data_send
       4   ctrl_CXD5600GF_set_noti
      24   ctrl_NMEA_data_check
        24   -> __aeabi_memcpy
        24   -> ctrl_NMEA_get_GSA_sentence
        24   -> ctrl_NMEA_get_IMP_sentence
        24   -> ctrl_NMEA_get_ZDA_sentence
        24   -> memcmp
      28   ctrl_NMEA_get_GSA_sentence
      24   ctrl_NMEA_get_IMP_sentence
      32   ctrl_NMEA_get_ZDA_sentence
        32   -> bcd_to_num


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_10
       4  ??DataTable0_11
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable0_6
       4  ??DataTable0_7
       4  ??DataTable0_8
       4  ??DataTable0_9
       4  ??DataTable1
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable12
       4  ??DataTable13
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_10
       4  ??DataTable14_11
       4  ??DataTable14_12
       4  ??DataTable14_13
       4  ??DataTable14_14
       4  ??DataTable14_15
       4  ??DataTable14_16
       4  ??DataTable14_17
       4  ??DataTable14_18
       4  ??DataTable14_19
       4  ??DataTable14_2
       4  ??DataTable14_20
       4  ??DataTable14_21
       4  ??DataTable14_22
       4  ??DataTable14_23
       4  ??DataTable14_24
       4  ??DataTable14_25
       4  ??DataTable14_26
       4  ??DataTable14_27
       4  ??DataTable14_28
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
       4  ??DataTable14_9
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ??DataTable3
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ?_0
       4  ?_1
       4  ?_2
      26  ctrl_CXD5600GF_check_nmea_recv
      56  ctrl_CXD5600GF_clear_buffer
      76  ctrl_CXD5600GF_cmd
      76  ctrl_CXD5600GF_cmd2
      60  ctrl_CXD5600GF_data
      48  ctrl_CXD5600GF_data_non_ack
    1388  ctrl_CXD5600GF_get_char
      34  ctrl_CXD5600GF_init
     642  ctrl_CXD5600GF_main
      12  ctrl_CXD5600GF_nmea_result
      28  ctrl_CXD5600GF_nmea_start
      30  ctrl_CXD5600GF_nmea_stop
      10  ctrl_CXD5600GF_req_PowerOff
      10  ctrl_CXD5600GF_req_PowerOn
      10  ctrl_CXD5600GF_req_ResetOff
      10  ctrl_CXD5600GF_req_ResetOn
     122  ctrl_CXD5600GF_req_out_rcv
      26  ctrl_CXD5600GF_set_noti
     284  ctrl_NMEA_data_check
     218  ctrl_NMEA_get_GSA_sentence
     166  ctrl_NMEA_get_IMP_sentence
     482  ctrl_NMEA_get_ZDA_sentence
    4472  ctrl_cxd5600_work

 
 4 472 bytes in section .bss
    12 bytes in section .rodata
 4 210 bytes in section .text
 
 4 210 bytes of CODE  memory
    12 bytes of CONST memory
 4 472 bytes of DATA  memory

Errors: none
Warnings: none
